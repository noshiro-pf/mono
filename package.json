{
  "private": true,
  "description": "monorepo for TypeScript projects",
  "license": "MIT",
  "workspaces": [
    "packages/**"
  ],
  "scripts": {
    "build:globals": "yarn zz:cmd:wsrun-stages -p '@noshiro/global-*' -c build",
    "ci": "run-s fmt:all zz:cmd:check:no-diff type-check:root ws:build ws:gi zz:cmd:check:no-diff ci:lint-and-test zz:cmd:check:no-diff",
    "ci:clean-build-and-cache": "run-s clean:build-and-cache ci",
    "ci:clean-gitignored": "run-s clean:gitignored ci:install ci",
    "ci:clean-install": "run-s clean ci:install ci",
    "ci:install": "yarn",
    "ci:lint-and-test": "run-p ws:type-check ws:test ws:lint:fix fmt:all",
    "clean": "run-s clean:build-and-cache clean:node_modules",
    "clean:build": "run-p ws:clean:build",
    "clean:build-and-cache": "run-p clean:build clean:caches",
    "clean:caches": "run-p ws:clean:eslintcache ws:clean:wireit",
    "clean:gitignored": "git clean -xfd",
    "clean:node_modules": "find . -name 'node_modules' -type d -prune -exec rm -rf '{}' +",
    "create:preact-app:vite": "scripts/create_new_preact_app_vite.sh",
    "create:react-app:vite": "scripts/create_new_react_app_vite.sh",
    "create:slides": "scripts/create_new_slides.sh",
    "create:util": "scripts/create_new_util.sh",
    "fmt:all": "yarn zz:cmd:prettier:cache . > /dev/null",
    "fmt:all:no-cache": "yarn zz:cmd:prettier . > /dev/null",
    "fmt:all:print": "yarn zz:cmd:prettier:cache .",
    "gen-eslint-rules-type": "wireit",
    "lint:apps": "node scripts/lint-apps.mjs",
    "lint:cspell": "cspell \"**\" --gitignore --gitignore-root ./ --no-progress",
    "lint:utils": "node scripts/lint-utils.mjs",
    "pub:all": "scripts/publish.sh",
    "type-check:root": "yarn z:type-check:root:wireit",
    "ws:build": "yarn zz:cmd:wsrun-stages build",
    "ws:clean": "yarn zz:cmd:wsrun-parallel clean",
    "ws:clean:build": "yarn zz:cmd:wsrun-parallel clean:build",
    "ws:clean:eslintcache": "yarn zz:cmd:wsrun-parallel clean:eslintcache",
    "ws:clean:wireit": "yarn zz:cmd:wsrun-parallel clean:wireit",
    "ws:gi": "yarn zz:cmd:wsrun-parallel gi",
    "ws:lint": "yarn zz:cmd:wsrun-parallel lint",
    "ws:lint:fix": "yarn zz:cmd:wsrun-parallel lint:fix",
    "ws:test": "yarn zz:cmd:wsrun-parallel test",
    "ws:type-check": "yarn zz:cmd:wsrun-parallel z:type-check:wireit",
    "z:gen-eslint-rules-type:compile": "wireit",
    "z:type-check:root:impl": "run-p z:type-check:root:impl:*",
    "z:type-check:root:impl:configs": "tsc --project config/tsconfig.json",
    "z:type-check:root:impl:scripts": "tsc --project scripts/tsconfig.json",
    "z:type-check:root:wireit": "wireit",
    "zz:cmd:check:no-diff": "scripts/git_no_changes.sh",
    "zz:cmd:prettier": "prettier --ignore-unknown --no-error-on-unmatched-pattern --write",
    "zz:cmd:prettier:cache": "yarn zz:cmd:prettier --cache --cache-strategy content",
    "zz:cmd:wsrun": "wsrun --exclude-missing --fast-exit --prefix --ifDependency",
    "zz:cmd:wsrun-parallel": "yarn zz:cmd:wsrun --parallel --concurrency 5",
    "zz:cmd:wsrun-serial": "yarn zz:cmd:wsrun --serial",
    "zz:cmd:wsrun-stages": "yarn zz:cmd:wsrun --stages"
  },
  "dependencies": {
    "@testing-library/jest-dom": "^6.1.4",
    "@testing-library/react": "^14.1.0",
    "@testing-library/user-event": "^14.4.3",
    "npm-run-all": "^4.1.5"
  },
  "devDependencies": {
    "@babel/preset-react": "^7.22.15",
    "@preact/preset-vite": "^2.4.0",
    "@rollup/plugin-inject": "^5.0.3",
    "@solid/eslint-config-base": "^0.6.0",
    "@types/argparse": "^2.0.10",
    "@types/eslint": "^8.44.4",
    "@types/jest": "^29.5.6",
    "@types/node": "^20.7.2",
    "@types/nodemailer": "^6.4.4",
    "@types/react": "^18.2.34",
    "@types/react-dom": "^18.2.7",
    "@types/react-router": "^5.1.16",
    "@types/react-router-dom": "^5.1.8",
    "@types/styled-components": "^5.1.29",
    "@types/uuid": "^9.0.6",
    "@typescript-eslint/eslint-plugin": "^5.62.0",
    "@typescript-eslint/parser": "^5.61.0",
    "@typescript-eslint/utils": "^6.7.2",
    "@vitejs/plugin-legacy": "^4.1.1",
    "@vitejs/plugin-react-swc": "^3.4.0",
    "argparse": "^2.0.1",
    "command-line-args": "^5.2.1",
    "cross-env": "^7.0.3",
    "cspell": "^7.3.8",
    "css-loader": "^6.2.0",
    "cypress": "^12.17.3",
    "cypress-fail-on-console-error": "^4.0.2",
    "dotenv": "^16.0.3",
    "esbuild": "^0.17.12",
    "eslint": "^8.51.0",
    "eslint-gitignore": "^0.1.0",
    "eslint-import-resolver-typescript": "^3.6.1",
    "eslint-plugin-array-func": "^4.0.0",
    "eslint-plugin-cypress": "^2.12.1",
    "eslint-plugin-deprecation": "^2.0.0",
    "eslint-plugin-functional": "^6.0.0",
    "eslint-plugin-import": "^2.28.1",
    "eslint-plugin-jest": "^27.2.1",
    "eslint-plugin-prefer-arrow-functions": "^3.1.4",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.1",
    "eslint-plugin-security": "^1.7.1",
    "eslint-plugin-total-functions": "^7.0.7",
    "eslint-plugin-unicorn": "^48.0.1",
    "file-loader": "^6.2.0",
    "firebase-admin": "^11.10.1",
    "firebase-functions-test": "^3.1.0",
    "firebase-tools": "^12.9.1",
    "glob": "^10.2.6",
    "happy-dom": "^12.10.3",
    "http-server": "^14.1.1",
    "jest": "^29.5.0",
    "jest-environment-jsdom": "^29.5.0",
    "jest-fetch-mock": "^3.0.3",
    "json-schema": "^0.4.0",
    "json-schema-to-typescript": "^12.0.0",
    "prettier": "^3.0.3",
    "prettier-plugin-organize-imports": "^3.2.2",
    "prettier-plugin-packagejson": "^2.4.5",
    "react-codemod": "^5.4.3",
    "rimraf": "^5.0.5",
    "sort-package-json": "^2.6.0",
    "style-loader": "^3.3.3",
    "terser": "^5.21.0",
    "ts-jest": "^29.1.0",
    "ts-morph": "^17.0.1",
    "tslib": "^2.4.0",
    "typescript": "^5.0.4",
    "unplugin-auto-import": "^0.15.3",
    "vite": "^4.5.1",
    "vite-plugin-markdown": "^2.1.0",
    "vitest": "^0.32.0",
    "wireit": "^0.14.1",
    "wsrun": "^5.2.4",
    "zenn-cli": "^0.1.144"
  },
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "wireit": {
    "gen-eslint-rules-type": {
      "command": "node ./config/eslintrc/generate-rules-type/main.mjs",
      "files": [
        "config/eslintrc/generate-rules-type/.eslintrc.generate-rules-type.js",
        "config/eslintrc/generate-rules-type/generate-rules-type.js",
        "config/eslintrc/generate-rules-type/replace.mjs",
        "config/eslintrc/generate-rules-type/main.mjs"
      ],
      "dependencies": [
        "z:gen-eslint-rules-type:compile"
      ],
      "output": [
        "config/eslintrc/eslint-rules/rules-type/**/*.ts"
      ]
    },
    "z:gen-eslint-rules-type:compile": {
      "command": "tsc -p config/eslintrc/generate-rules-type/tsconfig.generate-rules-type.json",
      "files": [
        "packages/utils/stdlib/dist/lib.dom.d.ts",
        "packages/utils/stdlib/dist/lib.esnext.d.ts",
        "packages/utils/ts-type-utils/ts-type-utils.d.ts",
        "config/tsconfig/tsconfig.cjs.nolib.json",
        "config/eslintrc/generate-rules-type/tsconfig.generate-rules-type.json",
        "config/eslintrc/generate-rules-type/generate-rules-type.ts",
        "config/eslintrc/generate-rules-type/index.ts",
        "config/eslintrc/generate-rules-type/.eslintrc.generate-rules-type.js"
      ],
      "output": [
        "config/eslintrc/generate-rules-type/generate-rules-type.js"
      ]
    },
    "z:type-check:root:wireit": {
      "command": "yarn z:type-check:root:impl",
      "dependencies": [
        "./packages/utils/ts-type-utils:build"
      ]
    }
  }
}
