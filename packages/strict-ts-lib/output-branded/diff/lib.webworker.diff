@@ -1,19 +1,5 @@
-/*! *****************************************************************************
-Copyright (c) Microsoft Corporation. All rights reserved.
-Licensed under the Apache License, Version 2.0 (the "License"); you may not use
-this file except in compliance with the License. You may obtain a copy of the
-License at http://www.apache.org/licenses/LICENSE-2.0
-
-THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
-WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
-MERCHANTABLITY OR NON-INFRINGEMENT.
-
-See the Apache Version 2.0 License for specific language governing permissions
-and limitations under the License.
-***************************************************************************** */
-
 /// <reference no-default-lib="true"/>
+/// <reference types="@noshiro/ts-type-utils" />
 
 /////////////////////////////
 /// Worker APIs
@@ -78,7 +64,7 @@ interface AudioDataInit {
   numberOfFrames: number;
   sampleRate: number;
   timestamp: number;
-  transfer?: ArrayBuffer[];
+  transfer?: readonly ArrayBuffer[];
 }
 
 interface AudioDecoderConfig {
@@ -163,7 +149,7 @@ interface CryptoKeyPair {
   publicKey: CryptoKey;
 }
 
-interface CustomEventInit<T = any> extends EventInit {
+interface CustomEventInit<T = unknown> extends EventInit {
   detail?: T;
 }
 
@@ -237,7 +223,7 @@ interface EncodedAudioChunkInit {
   data: AllowSharedBufferSource;
   duration?: number;
   timestamp: number;
-  transfer?: ArrayBuffer[];
+  transfer?: readonly ArrayBuffer[];
   type: EncodedAudioChunkType;
 }
 
@@ -258,7 +244,7 @@ interface EncodedVideoChunkMetadata {
 
 interface ErrorEventInit extends EventInit {
   colno?: number;
-  error?: any;
+  error?: unknown;
   filename?: string;
   lineno?: number;
   message?: string;
@@ -281,17 +267,17 @@ interface EventSourceInit {
 interface ExtendableEventInit extends EventInit {}
 
 interface ExtendableMessageEventInit extends ExtendableEventInit {
-  data?: any;
+  data?: unknown;
   lastEventId?: string;
   origin?: string;
-  ports?: MessagePort[];
+  ports?: readonly MessagePort[];
   source?: Client | ServiceWorker | MessagePort | null;
 }
 
 interface FetchEventInit extends ExtendableEventInit {
   clientId?: string;
   handled?: Promise<undefined>;
-  preloadResponse?: Promise<any>;
+  preloadResponse?: Promise<unknown>;
   replacesClientId?: string;
   request: Request;
   resultingClientId?: string;
@@ -334,7 +320,7 @@ interface FontFaceDescriptors {
 }
 
 interface FontFaceSetLoadEventInit extends EventInit {
-  fontfaces?: FontFace[];
+  fontfaces?: readonly FontFace[];
 }
 
 interface GetNotificationOptions {
@@ -369,7 +355,7 @@ interface IDBIndexParameters {
 
 interface IDBObjectStoreParameters {
   autoIncrement?: boolean;
-  keyPath?: string | string[] | null;
+  keyPath?: string | readonly string[] | null;
 }
 
 interface IDBTransactionOptions {
@@ -412,10 +398,10 @@ interface JsonWebKey {
   e?: string;
   ext?: boolean;
   k?: string;
-  key_ops?: string[];
+  key_ops?: readonly string[];
   kty?: string;
   n?: string;
-  oth?: RsaOtherPrimesInfo[];
+  oth?: readonly RsaOtherPrimesInfo[];
   p?: string;
   q?: string;
   qi?: string;
@@ -435,8 +421,8 @@ interface LockInfo {
 }
 
 interface LockManagerSnapshot {
-  held?: LockInfo[];
-  pending?: LockInfo[];
+  held?: readonly LockInfo[];
+  pending?: readonly LockInfo[];
 }
 
 interface LockOptions {
@@ -477,11 +463,11 @@ interface MediaStreamTrackProcessorInit {
   maxBufferSize?: number;
 }
 
-interface MessageEventInit<T = any> extends EventInit {
+interface MessageEventInit<T = unknown> extends EventInit {
   data?: T;
   lastEventId?: string;
   origin?: string;
-  ports?: MessagePort[];
+  ports?: readonly MessagePort[];
   source?: MessageEventSource | null;
 }
 
@@ -502,7 +488,7 @@ interface NotificationEventInit extends ExtendableEventInit {
 interface NotificationOptions {
   badge?: string;
   body?: string;
-  data?: any;
+  data?: unknown;
   dir?: NotificationDirection;
   icon?: string;
   lang?: string;
@@ -527,12 +513,12 @@ interface Pbkdf2Params extends Algorithm {
 }
 
 interface PerformanceMarkOptions {
-  detail?: any;
+  detail?: unknown;
   startTime?: DOMHighResTimeStamp;
 }
 
 interface PerformanceMeasureOptions {
-  detail?: any;
+  detail?: unknown;
   duration?: DOMHighResTimeStamp;
   end?: string | DOMHighResTimeStamp;
   start?: string | DOMHighResTimeStamp;
@@ -540,7 +526,7 @@ interface PerformanceMeasureOptions {
 
 interface PerformanceObserverInit {
   buffered?: boolean;
-  entryTypes?: string[];
+  entryTypes?: readonly string[];
   type?: string;
 }
 
@@ -560,8 +546,8 @@ interface ProgressEventInit extends EventInit {
 }
 
 interface PromiseRejectionEventInit extends EventInit {
-  promise: Promise<any>;
-  reason?: any;
+  promise: Promise<unknown>;
+  reason?: unknown;
 }
 
 interface PushEventInit extends ExtendableEventInit {
@@ -579,7 +565,7 @@ interface PushSubscriptionOptionsInit {
   userVisibleOnly?: boolean;
 }
 
-interface QueuingStrategy<T = any> {
+interface QueuingStrategy<T = unknown> {
   highWaterMark?: number;
   size?: QueuingStrategySize<T>;
 }
@@ -597,15 +583,15 @@ interface QueuingStrategyInit {
 }
 
 interface RTCEncodedAudioFrameMetadata {
-  contributingSources?: number[];
+  contributingSources?: readonly number[];
   payloadType?: number;
   sequenceNumber?: number;
   synchronizationSource?: number;
 }
 
 interface RTCEncodedVideoFrameMetadata {
-  contributingSources?: number[];
-  dependencies?: number[];
+  contributingSources?: readonly number[];
+  dependencies?: readonly number[];
   frameId?: number;
   height?: number;
   payloadType?: number;
@@ -655,7 +641,7 @@ interface ReadableStreamReadValueResult<T> {
   value: T;
 }
 
-interface ReadableWritablePair<R = any, W = any> {
+interface ReadableWritablePair<R = unknown, W = unknown> {
   readable: ReadableStream<R>;
   /**
    * Provides a convenient, chainable way of piping this readable stream through
@@ -677,7 +663,7 @@ interface RegistrationOptions {
 
 interface ReportingObserverOptions {
   buffered?: boolean;
-  types?: string[];
+  types?: readonly string[];
 }
 
 interface RequestInit {
@@ -832,7 +818,7 @@ interface StreamPipeOptions {
 }
 
 interface StructuredSerializeOptions {
-  transfer?: Transferable[];
+  transfer?: readonly Transferable[];
 }
 
 interface TextDecodeOptions {
@@ -849,7 +835,7 @@ interface TextEncoderEncodeIntoResult {
   written: number;
 }
 
-interface Transformer<I = any, O = any> {
+interface Transformer<I = unknown, O = unknown> {
   flush?: TransformerFlushCallback<O>;
   readableType?: undefined;
   start?: TransformerStartCallback<O>;
@@ -861,20 +847,20 @@ interface UnderlyingByteSource {
   autoAllocateChunkSize?: number;
   cancel?: UnderlyingSourceCancelCallback;
   pull?: (controller: ReadableByteStreamController) => void | PromiseLike<void>;
-  start?: (controller: ReadableByteStreamController) => any;
+  start?: (controller: ReadableByteStreamController) => unknown;
   type: 'bytes';
 }
 
-interface UnderlyingDefaultSource<R = any> {
+interface UnderlyingDefaultSource<R = unknown> {
   cancel?: UnderlyingSourceCancelCallback;
   pull?: (
     controller: ReadableStreamDefaultController<R>,
   ) => void | PromiseLike<void>;
-  start?: (controller: ReadableStreamDefaultController<R>) => any;
+  start?: (controller: ReadableStreamDefaultController<R>) => unknown;
   type?: undefined;
 }
 
-interface UnderlyingSink<W = any> {
+interface UnderlyingSink<W = unknown> {
   abort?: UnderlyingSinkAbortCallback;
   close?: UnderlyingSinkCloseCallback;
   start?: UnderlyingSinkStartCallback;
@@ -882,7 +868,7 @@ interface UnderlyingSink<W = any> {
   write?: UnderlyingSinkWriteCallback<W>;
 }
 
-interface UnderlyingSource<R = any> {
+interface UnderlyingSource<R = unknown> {
   autoAllocateChunkSize?: number;
   cancel?: UnderlyingSourceCancelCallback;
   pull?: UnderlyingSourcePullCallback<R>;
@@ -976,7 +962,7 @@ interface VideoFrameBufferInit {
   displayWidth?: number;
   duration?: number;
   format: VideoPixelFormat;
-  layout?: PlaneLayout[];
+  layout?: readonly PlaneLayout[];
   timestamp: number;
   visibleRect?: DOMRectInit;
 }
@@ -984,7 +970,7 @@ interface VideoFrameBufferInit {
 interface VideoFrameCopyToOptions {
   colorSpace?: PredefinedColorSpace;
   format?: VideoPixelFormat;
-  layout?: PlaneLayout[];
+  layout?: readonly PlaneLayout[];
   rect?: DOMRectInit;
 }
 
@@ -1032,7 +1018,7 @@ interface WebTransportOptions {
   allowPooling?: boolean;
   congestionControl?: WebTransportCongestionControl;
   requireUnreliable?: boolean;
-  serverCertificateHashes?: WebTransportHash[];
+  serverCertificateHashes?: readonly WebTransportHash[];
 }
 
 interface WebTransportSendStreamOptions {
@@ -1111,10 +1097,10 @@ interface AbortController {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AbortController/abort)
    */
-  abort(reason?: any): void;
+  abort(reason?: unknown): void;
 }
 
-declare var AbortController: {
+declare const AbortController: {
   prototype: AbortController;
   new (): AbortController;
 };
@@ -1142,12 +1128,12 @@ interface AbortSignal extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_event)
    */
-  onabort: ((this: AbortSignal, ev: Event) => any) | null;
+  onabort: ((this: AbortSignal, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/reason)
    */
-  readonly reason: any;
+  readonly reason: unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/throwIfAborted)
@@ -1155,7 +1141,7 @@ interface AbortSignal extends EventTarget {
   throwIfAborted(): void;
   addEventListener<K extends keyof AbortSignalEventMap>(
     type: K,
-    listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any,
+    listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -1165,7 +1151,7 @@ interface AbortSignal extends EventTarget {
   ): void;
   removeEventListener<K extends keyof AbortSignalEventMap>(
     type: K,
-    listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any,
+    listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -1175,19 +1161,19 @@ interface AbortSignal extends EventTarget {
   ): void;
 }
 
-declare var AbortSignal: {
+declare const AbortSignal: {
   prototype: AbortSignal;
   new (): AbortSignal;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_static)
    */
-  abort(reason?: any): AbortSignal;
+  abort(reason?: unknown): AbortSignal;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/any_static)
    */
-  any(signals: AbortSignal[]): AbortSignal;
+  any(signals: readonly AbortSignal[]): AbortSignal;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/timeout_static)
@@ -1204,10 +1190,10 @@ interface AbstractWorker {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/error_event)
    */
-  onerror: ((this: AbstractWorker, ev: ErrorEvent) => any) | null;
+  onerror: ((this: AbstractWorker, ev: ErrorEvent) => unknown) | null;
   addEventListener<K extends keyof AbstractWorkerEventMap>(
     type: K,
-    listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any,
+    listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -1217,7 +1203,7 @@ interface AbstractWorker {
   ): void;
   removeEventListener<K extends keyof AbstractWorkerEventMap>(
     type: K,
-    listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any,
+    listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -1291,7 +1277,7 @@ interface AudioData {
   ): void;
 }
 
-declare var AudioData: {
+declare const AudioData: {
   prototype: AudioData;
   new (init: AudioDataInit): AudioData;
 };
@@ -1315,7 +1301,7 @@ interface AudioDecoder extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/dequeue_event)
    */
-  ondequeue: ((this: AudioDecoder, ev: Event) => any) | null;
+  ondequeue: ((this: AudioDecoder, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/state)
@@ -1348,7 +1334,7 @@ interface AudioDecoder extends EventTarget {
   reset(): void;
   addEventListener<K extends keyof AudioDecoderEventMap>(
     type: K,
-    listener: (this: AudioDecoder, ev: AudioDecoderEventMap[K]) => any,
+    listener: (this: AudioDecoder, ev: AudioDecoderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -1358,7 +1344,7 @@ interface AudioDecoder extends EventTarget {
   ): void;
   removeEventListener<K extends keyof AudioDecoderEventMap>(
     type: K,
-    listener: (this: AudioDecoder, ev: AudioDecoderEventMap[K]) => any,
+    listener: (this: AudioDecoder, ev: AudioDecoderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -1368,7 +1354,7 @@ interface AudioDecoder extends EventTarget {
   ): void;
 }
 
-declare var AudioDecoder: {
+declare const AudioDecoder: {
   prototype: AudioDecoder;
   new (init: AudioDecoderInit): AudioDecoder;
   /**
@@ -1397,7 +1383,7 @@ interface AudioEncoder extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/dequeue_event)
    */
-  ondequeue: ((this: AudioEncoder, ev: Event) => any) | null;
+  ondequeue: ((this: AudioEncoder, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/state)
@@ -1430,7 +1416,7 @@ interface AudioEncoder extends EventTarget {
   reset(): void;
   addEventListener<K extends keyof AudioEncoderEventMap>(
     type: K,
-    listener: (this: AudioEncoder, ev: AudioEncoderEventMap[K]) => any,
+    listener: (this: AudioEncoder, ev: AudioEncoderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -1440,7 +1426,7 @@ interface AudioEncoder extends EventTarget {
   ): void;
   removeEventListener<K extends keyof AudioEncoderEventMap>(
     type: K,
-    listener: (this: AudioEncoder, ev: AudioEncoderEventMap[K]) => any,
+    listener: (this: AudioEncoder, ev: AudioEncoderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -1450,7 +1436,7 @@ interface AudioEncoder extends EventTarget {
   ): void;
 }
 
-declare var AudioEncoder: {
+declare const AudioEncoder: {
   prototype: AudioEncoder;
   new (init: AudioEncoderInit): AudioEncoder;
   /**
@@ -1488,9 +1474,9 @@ interface Blob {
   text(): Promise<string>;
 }
 
-declare var Blob: {
+declare const Blob: {
   prototype: Blob;
-  new (blobParts?: BlobPart[], options?: BlobPropertyBag): Blob;
+  new (blobParts?: readonly BlobPart[], options?: BlobPropertyBag): Blob;
 };
 
 interface Body {
@@ -1516,7 +1502,7 @@ interface Body {
    */
   formData(): Promise<FormData>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/json) */
-  json(): Promise<any>;
+  json(): Promise<JsonValue>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/text) */
   text(): Promise<string>;
 }
@@ -1539,12 +1525,14 @@ interface BroadcastChannel extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/message_event)
    */
-  onmessage: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;
+  onmessage: ((this: BroadcastChannel, ev: MessageEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/messageerror_event)
    */
-  onmessageerror: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;
+  onmessageerror:
+    | ((this: BroadcastChannel, ev: MessageEvent) => unknown)
+    | null;
   /**
    * Closes the BroadcastChannel object, opening it up to garbage collection.
    *
@@ -1560,10 +1548,13 @@ interface BroadcastChannel extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/postMessage)
    */
-  postMessage(message: any): void;
+  postMessage(message: unknown): void;
   addEventListener<K extends keyof BroadcastChannelEventMap>(
     type: K,
-    listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any,
+    listener: (
+      this: BroadcastChannel,
+      ev: BroadcastChannelEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -1573,7 +1564,10 @@ interface BroadcastChannel extends EventTarget {
   ): void;
   removeEventListener<K extends keyof BroadcastChannelEventMap>(
     type: K,
-    listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any,
+    listener: (
+      this: BroadcastChannel,
+      ev: BroadcastChannelEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -1583,7 +1577,7 @@ interface BroadcastChannel extends EventTarget {
   ): void;
 }
 
-declare var BroadcastChannel: {
+declare const BroadcastChannel: {
   prototype: BroadcastChannel;
   new (name: string): BroadcastChannel;
 };
@@ -1608,7 +1602,7 @@ interface ByteLengthQueuingStrategy extends QueuingStrategy<ArrayBufferView> {
   readonly size: QueuingStrategySize<ArrayBufferView>;
 }
 
-declare var ByteLengthQueuingStrategy: {
+declare const ByteLengthQueuingStrategy: {
   prototype: ByteLengthQueuingStrategy;
   new (init: QueuingStrategyInit): ByteLengthQueuingStrategy;
 };
@@ -1616,7 +1610,7 @@ declare var ByteLengthQueuingStrategy: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSImageValue) */
 interface CSSImageValue extends CSSStyleValue {}
 
-declare var CSSImageValue: {
+declare const CSSImageValue: {
   prototype: CSSImageValue;
   new (): CSSImageValue;
 };
@@ -1630,7 +1624,7 @@ interface CSSKeywordValue extends CSSStyleValue {
   value: string;
 }
 
-declare var CSSKeywordValue: {
+declare const CSSKeywordValue: {
   prototype: CSSKeywordValue;
   new (value: string): CSSKeywordValue;
 };
@@ -1641,7 +1635,7 @@ interface CSSMathClamp extends CSSMathValue {
   readonly value: CSSNumericValue;
 }
 
-declare var CSSMathClamp: {
+declare const CSSMathClamp: {
   prototype: CSSMathClamp;
   new (
     lower: CSSNumberish,
@@ -1659,7 +1653,7 @@ interface CSSMathInvert extends CSSMathValue {
   readonly value: CSSNumericValue;
 }
 
-declare var CSSMathInvert: {
+declare const CSSMathInvert: {
   prototype: CSSMathInvert;
   new (arg: CSSNumberish): CSSMathInvert;
 };
@@ -1673,9 +1667,9 @@ interface CSSMathMax extends CSSMathValue {
   readonly values: CSSNumericArray;
 }
 
-declare var CSSMathMax: {
+declare const CSSMathMax: {
   prototype: CSSMathMax;
-  new (...args: CSSNumberish[]): CSSMathMax;
+  new (...args: readonly CSSNumberish[]): CSSMathMax;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathMin) */
@@ -1687,9 +1681,9 @@ interface CSSMathMin extends CSSMathValue {
   readonly values: CSSNumericArray;
 }
 
-declare var CSSMathMin: {
+declare const CSSMathMin: {
   prototype: CSSMathMin;
-  new (...args: CSSNumberish[]): CSSMathMin;
+  new (...args: readonly CSSNumberish[]): CSSMathMin;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathNegate) */
@@ -1701,7 +1695,7 @@ interface CSSMathNegate extends CSSMathValue {
   readonly value: CSSNumericValue;
 }
 
-declare var CSSMathNegate: {
+declare const CSSMathNegate: {
   prototype: CSSMathNegate;
   new (arg: CSSNumberish): CSSMathNegate;
 };
@@ -1715,9 +1709,9 @@ interface CSSMathProduct extends CSSMathValue {
   readonly values: CSSNumericArray;
 }
 
-declare var CSSMathProduct: {
+declare const CSSMathProduct: {
   prototype: CSSMathProduct;
-  new (...args: CSSNumberish[]): CSSMathProduct;
+  new (...args: readonly CSSNumberish[]): CSSMathProduct;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathSum) */
@@ -1729,9 +1723,9 @@ interface CSSMathSum extends CSSMathValue {
   readonly values: CSSNumericArray;
 }
 
-declare var CSSMathSum: {
+declare const CSSMathSum: {
   prototype: CSSMathSum;
-  new (...args: CSSNumberish[]): CSSMathSum;
+  new (...args: readonly CSSNumberish[]): CSSMathSum;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathValue) */
@@ -1743,7 +1737,7 @@ interface CSSMathValue extends CSSNumericValue {
   readonly operator: CSSMathOperator;
 }
 
-declare var CSSMathValue: {
+declare const CSSMathValue: {
   prototype: CSSMathValue;
   new (): CSSMathValue;
 };
@@ -1760,7 +1754,7 @@ interface CSSMatrixComponent extends CSSTransformComponent {
   matrix: DOMMatrix;
 }
 
-declare var CSSMatrixComponent: {
+declare const CSSMatrixComponent: {
   prototype: CSSMatrixComponent;
   new (
     matrix: DOMMatrixReadOnly,
@@ -1781,12 +1775,12 @@ interface CSSNumericArray {
       key: number,
       parent: CSSNumericArray,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: CSSNumericValue;
 }
 
-declare var CSSNumericArray: {
+declare const CSSNumericArray: {
   prototype: CSSNumericArray;
   new (): CSSNumericArray;
 };
@@ -1797,37 +1791,37 @@ interface CSSNumericValue extends CSSStyleValue {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/add)
    */
-  add(...values: CSSNumberish[]): CSSNumericValue;
+  add(...values: readonly CSSNumberish[]): CSSNumericValue;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/div)
    */
-  div(...values: CSSNumberish[]): CSSNumericValue;
+  div(...values: readonly CSSNumberish[]): CSSNumericValue;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/equals)
    */
-  equals(...value: CSSNumberish[]): boolean;
+  equals(...value: readonly CSSNumberish[]): boolean;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/max)
    */
-  max(...values: CSSNumberish[]): CSSNumericValue;
+  max(...values: readonly CSSNumberish[]): CSSNumericValue;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/min)
    */
-  min(...values: CSSNumberish[]): CSSNumericValue;
+  min(...values: readonly CSSNumberish[]): CSSNumericValue;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/mul)
    */
-  mul(...values: CSSNumberish[]): CSSNumericValue;
+  mul(...values: readonly CSSNumberish[]): CSSNumericValue;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/sub)
    */
-  sub(...values: CSSNumberish[]): CSSNumericValue;
+  sub(...values: readonly CSSNumberish[]): CSSNumericValue;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/to)
@@ -1837,7 +1831,7 @@ interface CSSNumericValue extends CSSStyleValue {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/toSum)
    */
-  toSum(...units: string[]): CSSMathSum;
+  toSum(...units: readonly string[]): CSSMathSum;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/type)
@@ -1845,7 +1839,7 @@ interface CSSNumericValue extends CSSStyleValue {
   type(): CSSNumericType;
 }
 
-declare var CSSNumericValue: {
+declare const CSSNumericValue: {
   prototype: CSSNumericValue;
   new (): CSSNumericValue;
 };
@@ -1859,7 +1853,7 @@ interface CSSPerspective extends CSSTransformComponent {
   length: CSSPerspectiveValue;
 }
 
-declare var CSSPerspective: {
+declare const CSSPerspective: {
   prototype: CSSPerspective;
   new (length: CSSPerspectiveValue): CSSPerspective;
 };
@@ -1876,7 +1870,7 @@ interface CSSRotate extends CSSTransformComponent {
   z: CSSNumberish;
 }
 
-declare var CSSRotate: {
+declare const CSSRotate: {
   prototype: CSSRotate;
   new (angle: CSSNumericValue): CSSRotate;
   new (
@@ -1897,7 +1891,7 @@ interface CSSScale extends CSSTransformComponent {
   z: CSSNumberish;
 }
 
-declare var CSSScale: {
+declare const CSSScale: {
   prototype: CSSScale;
   new (x: CSSNumberish, y: CSSNumberish, z?: CSSNumberish): CSSScale;
 };
@@ -1910,7 +1904,7 @@ interface CSSSkew extends CSSTransformComponent {
   ay: CSSNumericValue;
 }
 
-declare var CSSSkew: {
+declare const CSSSkew: {
   prototype: CSSSkew;
   new (ax: CSSNumericValue, ay: CSSNumericValue): CSSSkew;
 };
@@ -1921,7 +1915,7 @@ interface CSSSkewX extends CSSTransformComponent {
   ax: CSSNumericValue;
 }
 
-declare var CSSSkewX: {
+declare const CSSSkewX: {
   prototype: CSSSkewX;
   new (ax: CSSNumericValue): CSSSkewX;
 };
@@ -1932,7 +1926,7 @@ interface CSSSkewY extends CSSTransformComponent {
   ay: CSSNumericValue;
 }
 
-declare var CSSSkewY: {
+declare const CSSSkewY: {
   prototype: CSSSkewY;
   new (ay: CSSNumericValue): CSSSkewY;
 };
@@ -1942,7 +1936,7 @@ interface CSSStyleValue {
   toString(): string;
 }
 
-declare var CSSStyleValue: {
+declare const CSSStyleValue: {
   prototype: CSSStyleValue;
   new (): CSSStyleValue;
 };
@@ -1965,7 +1959,7 @@ interface CSSTransformComponent {
   toString(): string;
 }
 
-declare var CSSTransformComponent: {
+declare const CSSTransformComponent: {
   prototype: CSSTransformComponent;
   new (): CSSTransformComponent;
 };
@@ -1993,14 +1987,14 @@ interface CSSTransformValue extends CSSStyleValue {
       key: number,
       parent: CSSTransformValue,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: CSSTransformComponent;
 }
 
-declare var CSSTransformValue: {
+declare const CSSTransformValue: {
   prototype: CSSTransformValue;
-  new (transforms: CSSTransformComponent[]): CSSTransformValue;
+  new (transforms: readonly CSSTransformComponent[]): CSSTransformValue;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTranslate) */
@@ -2013,7 +2007,7 @@ interface CSSTranslate extends CSSTransformComponent {
   z: CSSNumericValue;
 }
 
-declare var CSSTranslate: {
+declare const CSSTranslate: {
   prototype: CSSTranslate;
   new (
     x: CSSNumericValue,
@@ -2036,7 +2030,7 @@ interface CSSUnitValue extends CSSNumericValue {
   value: number;
 }
 
-declare var CSSUnitValue: {
+declare const CSSUnitValue: {
   prototype: CSSUnitValue;
   new (value: number, unit: string): CSSUnitValue;
 };
@@ -2054,14 +2048,14 @@ interface CSSUnparsedValue extends CSSStyleValue {
       key: number,
       parent: CSSUnparsedValue,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: CSSUnparsedSegment;
 }
 
-declare var CSSUnparsedValue: {
+declare const CSSUnparsedValue: {
   prototype: CSSUnparsedValue;
-  new (members: CSSUnparsedSegment[]): CSSUnparsedValue;
+  new (members: readonly CSSUnparsedSegment[]): CSSUnparsedValue;
 };
 
 /**
@@ -2081,7 +2075,7 @@ interface CSSVariableReferenceValue {
   variable: string;
 }
 
-declare var CSSVariableReferenceValue: {
+declare const CSSVariableReferenceValue: {
   prototype: CSSVariableReferenceValue;
   new (
     variable: string,
@@ -2102,7 +2096,7 @@ interface Cache {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/add) */
   add(request: RequestInfo | URL): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/addAll) */
-  addAll(requests: RequestInfo[]): Promise<void>;
+  addAll(requests: readonly RequestInfo[]): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/delete) */
   delete(
     request: RequestInfo | URL,
@@ -2127,7 +2121,7 @@ interface Cache {
   put(request: RequestInfo | URL, response: Response): Promise<void>;
 }
 
-declare var Cache: {
+declare const Cache: {
   prototype: Cache;
   new (): Cache;
 };
@@ -2152,7 +2146,7 @@ interface CacheStorage {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/keys)
    */
-  keys(): Promise<string[]>;
+  keys(): Promise<readonly string[]>;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/match)
@@ -2168,7 +2162,7 @@ interface CacheStorage {
   open(cacheName: string): Promise<Cache>;
 }
 
-declare var CacheStorage: {
+declare const CacheStorage: {
   prototype: CacheStorage;
   new (): CacheStorage;
 };
@@ -2333,7 +2327,7 @@ interface CanvasGradient {
   addColorStop(offset: number, color: string): void;
 }
 
-declare var CanvasGradient: {
+declare const CanvasGradient: {
   prototype: CanvasGradient;
   new (): CanvasGradient;
 };
@@ -2501,12 +2495,12 @@ interface CanvasPathDrawingStyles {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/getLineDash)
    */
-  getLineDash(): number[];
+  getLineDash(): readonly number[];
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/setLineDash)
    */
-  setLineDash(segments: number[]): void;
+  setLineDash(segments: readonly number[]): void;
 }
 
 /**
@@ -2526,7 +2520,7 @@ interface CanvasPattern {
   setTransform(transform?: DOMMatrix2DInit): void;
 }
 
-declare var CanvasPattern: {
+declare const CanvasPattern: {
   prototype: CanvasPattern;
   new (): CanvasPattern;
 };
@@ -2743,11 +2737,11 @@ interface Client {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Client/postMessage)
    */
-  postMessage(message: any, transfer: Transferable[]): void;
-  postMessage(message: any, options?: StructuredSerializeOptions): void;
+  postMessage(message: unknown, transfer: readonly Transferable[]): void;
+  postMessage(message: unknown, options?: StructuredSerializeOptions): void;
 }
 
-declare var Client: {
+declare const Client: {
   prototype: Client;
   new (): Client;
 };
@@ -2777,7 +2771,7 @@ interface Clients {
   openWindow(url: string | URL): Promise<WindowClient | null>;
 }
 
-declare var Clients: {
+declare const Clients: {
   prototype: Clients;
   new (): Clients;
 };
@@ -2812,7 +2806,7 @@ interface CloseEvent extends Event {
   readonly wasClean: boolean;
 }
 
-declare var CloseEvent: {
+declare const CloseEvent: {
   prototype: CloseEvent;
   new (type: string, eventInitDict?: CloseEventInit): CloseEvent;
 };
@@ -2823,7 +2817,7 @@ interface CompressionStream extends GenericTransformStream {
   readonly writable: WritableStream<BufferSource>;
 }
 
-declare var CompressionStream: {
+declare const CompressionStream: {
   prototype: CompressionStream;
   new (format: CompressionFormat): CompressionStream;
 };
@@ -2848,7 +2842,7 @@ interface CountQueuingStrategy extends QueuingStrategy {
   readonly size: QueuingStrategySize;
 }
 
-declare var CountQueuingStrategy: {
+declare const CountQueuingStrategy: {
   prototype: CountQueuingStrategy;
   new (init: QueuingStrategyInit): CountQueuingStrategy;
 };
@@ -2881,7 +2875,7 @@ interface Crypto {
   randomUUID(): `${string}-${string}-${string}-${string}-${string}`;
 }
 
-declare var Crypto: {
+declare const Crypto: {
   prototype: Crypto;
   new (): Crypto;
 };
@@ -2909,16 +2903,16 @@ interface CryptoKey {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/usages)
    */
-  readonly usages: KeyUsage[];
+  readonly usages: readonly KeyUsage[];
 }
 
-declare var CryptoKey: {
+declare const CryptoKey: {
   prototype: CryptoKey;
   new (): CryptoKey;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomEvent) */
-interface CustomEvent<T = any> extends Event {
+interface CustomEvent<T = unknown> extends Event {
   /**
    * Returns any custom data event was created with. Typically used for
    * synthetic events.
@@ -2941,7 +2935,7 @@ interface CustomEvent<T = any> extends Event {
   ): void;
 }
 
-declare var CustomEvent: {
+declare const CustomEvent: {
   prototype: CustomEvent;
   new <T>(type: string, eventInitDict?: CustomEventInit<T>): CustomEvent<T>;
 };
@@ -2997,7 +2991,7 @@ interface DOMException extends Error {
   readonly DATA_CLONE_ERR: 25;
 }
 
-declare var DOMException: {
+declare const DOMException: {
   prototype: DOMException;
   new (message?: string, name?: string): DOMException;
   readonly INDEX_SIZE_ERR: 1;
@@ -3169,9 +3163,9 @@ interface DOMMatrix extends DOMMatrixReadOnly {
   translateSelf(tx?: number, ty?: number, tz?: number): DOMMatrix;
 }
 
-declare var DOMMatrix: {
+declare const DOMMatrix: {
   prototype: DOMMatrix;
-  new (init?: string | number[]): DOMMatrix;
+  new (init?: string | readonly number[]): DOMMatrix;
   fromFloat32Array(array32: Float32Array): DOMMatrix;
   fromFloat64Array(array64: Float64Array): DOMMatrix;
   fromMatrix(other?: DOMMatrixInit): DOMMatrix;
@@ -3331,7 +3325,7 @@ interface DOMMatrixReadOnly {
   skewY(sy?: number): DOMMatrix;
   toFloat32Array(): Float32Array;
   toFloat64Array(): Float64Array;
-  toJSON(): any;
+  toJSON(): unknown;
   transformPoint(point?: DOMPointInit): DOMPoint;
   /**
    * [MDN
@@ -3340,9 +3334,9 @@ interface DOMMatrixReadOnly {
   translate(tx?: number, ty?: number, tz?: number): DOMMatrix;
 }
 
-declare var DOMMatrixReadOnly: {
+declare const DOMMatrixReadOnly: {
   prototype: DOMMatrixReadOnly;
-  new (init?: string | number[]): DOMMatrixReadOnly;
+  new (init?: string | readonly number[]): DOMMatrixReadOnly;
   fromFloat32Array(array32: Float32Array): DOMMatrixReadOnly;
   fromFloat64Array(array64: Float64Array): DOMMatrixReadOnly;
   fromMatrix(other?: DOMMatrixInit): DOMMatrixReadOnly;
@@ -3360,7 +3354,7 @@ interface DOMPoint extends DOMPointReadOnly {
   z: number;
 }
 
-declare var DOMPoint: {
+declare const DOMPoint: {
   prototype: DOMPoint;
   new (x?: number, y?: number, z?: number, w?: number): DOMPoint;
   /**
@@ -3397,10 +3391,10 @@ interface DOMPointReadOnly {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var DOMPointReadOnly: {
+declare const DOMPointReadOnly: {
   prototype: DOMPointReadOnly;
   new (x?: number, y?: number, z?: number, w?: number): DOMPointReadOnly;
   /**
@@ -3417,10 +3411,10 @@ interface DOMQuad {
   readonly p3: DOMPoint;
   readonly p4: DOMPoint;
   getBounds(): DOMRect;
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var DOMQuad: {
+declare const DOMQuad: {
   prototype: DOMQuad;
   new (
     p1?: DOMPointInit,
@@ -3440,7 +3434,7 @@ interface DOMRect extends DOMRectReadOnly {
   y: number;
 }
 
-declare var DOMRect: {
+declare const DOMRect: {
   prototype: DOMRect;
   new (x?: number, y?: number, width?: number, height?: number): DOMRect;
   /**
@@ -3492,10 +3486,10 @@ interface DOMRectReadOnly {
    * Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/y)
    */
   readonly y: number;
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var DOMRectReadOnly: {
+declare const DOMRectReadOnly: {
   prototype: DOMRectReadOnly;
   new (
     x?: number,
@@ -3540,7 +3534,7 @@ interface DOMStringList {
   [index: number]: string;
 }
 
-declare var DOMStringList: {
+declare const DOMStringList: {
   prototype: DOMStringList;
   new (): DOMStringList;
 };
@@ -3554,7 +3548,7 @@ interface DecompressionStream extends GenericTransformStream {
   readonly writable: WritableStream<BufferSource>;
 }
 
-declare var DecompressionStream: {
+declare const DecompressionStream: {
   prototype: DecompressionStream;
   new (format: CompressionFormat): DecompressionStream;
 };
@@ -3591,21 +3585,21 @@ interface DedicatedWorkerGlobalScope
    * Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/message_event)
    */
   onmessage:
-    | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any)
+    | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/messageerror_event)
    */
   onmessageerror:
-    | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any)
+    | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/rtctransform_event)
    */
   onrtctransform:
-    | ((this: DedicatedWorkerGlobalScope, ev: RTCTransformEvent) => any)
+    | ((this: DedicatedWorkerGlobalScope, ev: RTCTransformEvent) => unknown)
     | null;
   /**
    * Aborts dedicatedWorkerGlobal.
@@ -3622,14 +3616,14 @@ interface DedicatedWorkerGlobalScope
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/postMessage)
    */
-  postMessage(message: any, transfer: Transferable[]): void;
-  postMessage(message: any, options?: StructuredSerializeOptions): void;
+  postMessage(message: unknown, transfer: readonly Transferable[]): void;
+  postMessage(message: unknown, options?: StructuredSerializeOptions): void;
   addEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(
     type: K,
     listener: (
       this: DedicatedWorkerGlobalScope,
       ev: DedicatedWorkerGlobalScopeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3642,7 +3636,7 @@ interface DedicatedWorkerGlobalScope
     listener: (
       this: DedicatedWorkerGlobalScope,
       ev: DedicatedWorkerGlobalScopeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3652,7 +3646,7 @@ interface DedicatedWorkerGlobalScope
   ): void;
 }
 
-declare var DedicatedWorkerGlobalScope: {
+declare const DedicatedWorkerGlobalScope: {
   prototype: DedicatedWorkerGlobalScope;
   new (): DedicatedWorkerGlobalScope;
 };
@@ -3783,7 +3777,7 @@ interface EncodedAudioChunk {
   copyTo(destination: AllowSharedBufferSource): void;
 }
 
-declare var EncodedAudioChunk: {
+declare const EncodedAudioChunk: {
   prototype: EncodedAudioChunk;
   new (init: EncodedAudioChunkInit): EncodedAudioChunk;
 };
@@ -3817,7 +3811,7 @@ interface EncodedVideoChunk {
   copyTo(destination: AllowSharedBufferSource): void;
 }
 
-declare var EncodedVideoChunk: {
+declare const EncodedVideoChunk: {
   prototype: EncodedVideoChunk;
   new (init: EncodedVideoChunkInit): EncodedVideoChunk;
 };
@@ -3829,13 +3823,13 @@ declare var EncodedVideoChunk: {
  */
 interface ErrorEvent extends Event {
   readonly colno: number;
-  readonly error: any;
+  readonly error: unknown;
   readonly filename: string;
   readonly lineno: number;
   readonly message: string;
 }
 
-declare var ErrorEvent: {
+declare const ErrorEvent: {
   prototype: ErrorEvent;
   new (type: string, eventInitDict?: ErrorEventInit): ErrorEvent;
 };
@@ -3952,7 +3946,7 @@ interface Event {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Event/composedPath)
    */
-  composedPath(): EventTarget[];
+  composedPath(): readonly EventTarget[];
   /**
    * @deprecated
    *
@@ -3991,7 +3985,7 @@ interface Event {
   readonly BUBBLING_PHASE: 3;
 }
 
-declare var Event: {
+declare const Event: {
   prototype: Event;
   new (type: string, eventInitDict?: EventInit): Event;
   readonly NONE: 0;
@@ -4020,17 +4014,17 @@ interface EventSource extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/EventSource/error_event)
    */
-  onerror: ((this: EventSource, ev: Event) => any) | null;
+  onerror: ((this: EventSource, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/EventSource/message_event)
    */
-  onmessage: ((this: EventSource, ev: MessageEvent) => any) | null;
+  onmessage: ((this: EventSource, ev: MessageEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/EventSource/open_event)
    */
-  onopen: ((this: EventSource, ev: Event) => any) | null;
+  onopen: ((this: EventSource, ev: Event) => unknown) | null;
   /**
    * Returns the state of this EventSource object's connection. It can have the
    * values described below.
@@ -4066,12 +4060,12 @@ interface EventSource extends EventTarget {
   readonly CLOSED: 2;
   addEventListener<K extends keyof EventSourceEventMap>(
     type: K,
-    listener: (this: EventSource, ev: EventSourceEventMap[K]) => any,
+    listener: (this: EventSource, ev: EventSourceEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
     type: string,
-    listener: (this: EventSource, event: MessageEvent) => any,
+    listener: (this: EventSource, event: MessageEvent) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -4081,12 +4075,12 @@ interface EventSource extends EventTarget {
   ): void;
   removeEventListener<K extends keyof EventSourceEventMap>(
     type: K,
-    listener: (this: EventSource, ev: EventSourceEventMap[K]) => any,
+    listener: (this: EventSource, ev: EventSourceEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
     type: string,
-    listener: (this: EventSource, event: MessageEvent) => any,
+    listener: (this: EventSource, event: MessageEvent) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -4096,7 +4090,7 @@ interface EventSource extends EventTarget {
   ): void;
 }
 
-declare var EventSource: {
+declare const EventSource: {
   prototype: EventSource;
   new (url: string | URL, eventSourceInitDict?: EventSourceInit): EventSource;
   readonly CONNECTING: 0;
@@ -4170,7 +4164,7 @@ interface EventTarget {
   ): void;
 }
 
-declare var EventTarget: {
+declare const EventTarget: {
   prototype: EventTarget;
   new (): EventTarget;
 };
@@ -4188,10 +4182,10 @@ interface ExtendableEvent extends Event {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ExtendableEvent/waitUntil)
    */
-  waitUntil(f: Promise<any>): void;
+  waitUntil(f: Promise<unknown>): void;
 }
 
-declare var ExtendableEvent: {
+declare const ExtendableEvent: {
   prototype: ExtendableEvent;
   new (type: string, eventInitDict?: ExtendableEventInit): ExtendableEvent;
 };
@@ -4210,7 +4204,7 @@ interface ExtendableMessageEvent extends ExtendableEvent {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ExtendableMessageEvent/data)
    */
-  readonly data: any;
+  readonly data: unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ExtendableMessageEvent/lastEventId)
@@ -4233,7 +4227,7 @@ interface ExtendableMessageEvent extends ExtendableEvent {
   readonly source: Client | ServiceWorker | MessagePort | null;
 }
 
-declare var ExtendableMessageEvent: {
+declare const ExtendableMessageEvent: {
   prototype: ExtendableMessageEvent;
   new (
     type: string,
@@ -4265,7 +4259,7 @@ interface FetchEvent extends ExtendableEvent {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FetchEvent/preloadResponse)
    */
-  readonly preloadResponse: Promise<any>;
+  readonly preloadResponse: Promise<unknown>;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FetchEvent/request)
@@ -4283,7 +4277,7 @@ interface FetchEvent extends ExtendableEvent {
   respondWith(r: Response | PromiseLike<Response>): void;
 }
 
-declare var FetchEvent: {
+declare const FetchEvent: {
   prototype: FetchEvent;
   new (type: string, eventInitDict: FetchEventInit): FetchEvent;
 };
@@ -4309,9 +4303,13 @@ interface File extends Blob {
   readonly webkitRelativePath: string;
 }
 
-declare var File: {
+declare const File: {
   prototype: File;
-  new (fileBits: BlobPart[], fileName: string, options?: FilePropertyBag): File;
+  new (
+    fileBits: readonly BlobPart[],
+    fileName: string,
+    options?: FilePropertyBag,
+  ): File;
 };
 
 /**
@@ -4331,7 +4329,7 @@ interface FileList {
   [index: number]: File;
 }
 
-declare var FileList: {
+declare const FileList: {
   prototype: FileList;
   new (): FileList;
 };
@@ -4362,34 +4360,42 @@ interface FileReader extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FileReader/abort_event)
    */
-  onabort: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onabort:
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FileReader/error_event)
    */
-  onerror: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onerror:
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FileReader/load_event)
    */
-  onload: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onload: ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FileReader/loadend_event)
    */
-  onloadend: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onloadend:
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FileReader/loadstart_event)
    */
   onloadstart:
-    | ((this: FileReader, ev: ProgressEvent<FileReader>) => any)
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FileReader/progress_event)
    */
-  onprogress: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onprogress:
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readyState)
@@ -4435,7 +4441,7 @@ interface FileReader extends EventTarget {
   readonly DONE: 2;
   addEventListener<K extends keyof FileReaderEventMap>(
     type: K,
-    listener: (this: FileReader, ev: FileReaderEventMap[K]) => any,
+    listener: (this: FileReader, ev: FileReaderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -4445,7 +4451,7 @@ interface FileReader extends EventTarget {
   ): void;
   removeEventListener<K extends keyof FileReaderEventMap>(
     type: K,
-    listener: (this: FileReader, ev: FileReaderEventMap[K]) => any,
+    listener: (this: FileReader, ev: FileReaderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -4455,7 +4461,7 @@ interface FileReader extends EventTarget {
   ): void;
 }
 
-declare var FileReader: {
+declare const FileReader: {
   prototype: FileReader;
   new (): FileReader;
   readonly EMPTY: 0;
@@ -4493,7 +4499,7 @@ interface FileReaderSync {
   readAsText(blob: Blob, encoding?: string): string;
 }
 
-declare var FileReaderSync: {
+declare const FileReaderSync: {
   prototype: FileReaderSync;
   new (): FileReaderSync;
 };
@@ -4531,10 +4537,12 @@ interface FileSystemDirectoryHandle extends FileSystemHandle {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryHandle/resolve)
    */
-  resolve(possibleDescendant: FileSystemHandle): Promise<string[] | null>;
+  resolve(
+    possibleDescendant: FileSystemHandle,
+  ): Promise<readonly string[] | null>;
 }
 
-declare var FileSystemDirectoryHandle: {
+declare const FileSystemDirectoryHandle: {
   prototype: FileSystemDirectoryHandle;
   new (): FileSystemDirectoryHandle;
 };
@@ -4566,7 +4574,7 @@ interface FileSystemFileHandle extends FileSystemHandle {
   getFile(): Promise<File>;
 }
 
-declare var FileSystemFileHandle: {
+declare const FileSystemFileHandle: {
   prototype: FileSystemFileHandle;
   new (): FileSystemFileHandle;
 };
@@ -4594,7 +4602,7 @@ interface FileSystemHandle {
   isSameEntry(other: FileSystemHandle): Promise<boolean>;
 }
 
-declare var FileSystemHandle: {
+declare const FileSystemHandle: {
   prototype: FileSystemHandle;
   new (): FileSystemHandle;
 };
@@ -4644,7 +4652,7 @@ interface FileSystemSyncAccessHandle {
   ): number;
 }
 
-declare var FileSystemSyncAccessHandle: {
+declare const FileSystemSyncAccessHandle: {
   prototype: FileSystemSyncAccessHandle;
   new (): FileSystemSyncAccessHandle;
 };
@@ -4673,7 +4681,7 @@ interface FileSystemWritableFileStream extends WritableStream {
   write(data: FileSystemWriteChunkType): Promise<void>;
 }
 
-declare var FileSystemWritableFileStream: {
+declare const FileSystemWritableFileStream: {
   prototype: FileSystemWritableFileStream;
   new (): FileSystemWritableFileStream;
 };
@@ -4729,7 +4737,7 @@ interface FontFace {
   load(): Promise<FontFace>;
 }
 
-declare var FontFace: {
+declare const FontFace: {
   prototype: FontFace;
   new (
     family: string,
@@ -4750,17 +4758,21 @@ interface FontFaceSet extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loading_event)
    */
-  onloading: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => any) | null;
+  onloading: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loadingdone_event)
    */
-  onloadingdone: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => any) | null;
+  onloadingdone:
+    | ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loadingerror_event)
    */
-  onloadingerror: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => any) | null;
+  onloadingerror:
+    | ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/ready)
@@ -4780,14 +4792,14 @@ interface FontFaceSet extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/load)
    */
-  load(font: string, text?: string): Promise<FontFace[]>;
+  load(font: string, text?: string): Promise<readonly FontFace[]>;
   forEach(
     callbackfn: (value: FontFace, key: FontFace, parent: FontFaceSet) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   addEventListener<K extends keyof FontFaceSetEventMap>(
     type: K,
-    listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any,
+    listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -4797,7 +4809,7 @@ interface FontFaceSet extends EventTarget {
   ): void;
   removeEventListener<K extends keyof FontFaceSetEventMap>(
     type: K,
-    listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any,
+    listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -4807,7 +4819,7 @@ interface FontFaceSet extends EventTarget {
   ): void;
 }
 
-declare var FontFaceSet: {
+declare const FontFaceSet: {
   prototype: FontFaceSet;
   new (): FontFaceSet;
 };
@@ -4824,7 +4836,7 @@ interface FontFaceSetLoadEvent extends Event {
   readonly fontfaces: ReadonlyArray<FontFace>;
 }
 
-declare var FontFaceSetLoadEvent: {
+declare const FontFaceSetLoadEvent: {
   prototype: FontFaceSetLoadEvent;
   new (
     type: string,
@@ -4855,7 +4867,7 @@ interface FormData {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/get) */
   get(name: string): FormDataEntryValue | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/getAll) */
-  getAll(name: string): FormDataEntryValue[];
+  getAll(name: string): readonly FormDataEntryValue[];
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/has) */
   has(name: string): boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/set) */
@@ -4868,11 +4880,11 @@ interface FormData {
       key: string,
       parent: FormData,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var FormData: {
+declare const FormData: {
   prototype: FormData;
   new (): FormData;
 };
@@ -4912,18 +4924,18 @@ interface Headers {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Headers/getSetCookie)
    */
-  getSetCookie(): string[];
+  getSetCookie(): readonly string[];
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/has) */
   has(name: string): boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/set) */
   set(name: string, value: string): void;
   forEach(
     callbackfn: (value: string, key: string, parent: Headers) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var Headers: {
+declare const Headers: {
   prototype: Headers;
   new (init?: HeadersInit): Headers;
 };
@@ -5013,10 +5025,10 @@ interface IDBCursor {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/update)
    */
-  update(value: any): IDBRequest<IDBValidKey>;
+  update(value: unknown): IDBRequest<IDBValidKey>;
 }
 
-declare var IDBCursor: {
+declare const IDBCursor: {
   prototype: IDBCursor;
   new (): IDBCursor;
 };
@@ -5036,10 +5048,10 @@ interface IDBCursorWithValue extends IDBCursor {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBCursorWithValue/value)
    */
-  readonly value: any;
+  readonly value: unknown;
 }
 
-declare var IDBCursorWithValue: {
+declare const IDBCursorWithValue: {
   prototype: IDBCursorWithValue;
   new (): IDBCursorWithValue;
 };
@@ -5074,19 +5086,19 @@ interface IDBDatabase extends EventTarget {
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/objectStoreNames)
    */
   readonly objectStoreNames: DOMStringList;
-  onabort: ((this: IDBDatabase, ev: Event) => any) | null;
+  onabort: ((this: IDBDatabase, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/close_event)
    */
-  onclose: ((this: IDBDatabase, ev: Event) => any) | null;
-  onerror: ((this: IDBDatabase, ev: Event) => any) | null;
+  onclose: ((this: IDBDatabase, ev: Event) => unknown) | null;
+  onerror: ((this: IDBDatabase, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/versionchange_event)
    */
   onversionchange:
-    | ((this: IDBDatabase, ev: IDBVersionChangeEvent) => any)
+    | ((this: IDBDatabase, ev: IDBVersionChangeEvent) => unknown)
     | null;
   /**
    * Returns the version of the database.
@@ -5134,13 +5146,13 @@ interface IDBDatabase extends EventTarget {
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/transaction)
    */
   transaction(
-    storeNames: string | string[],
+    storeNames: string | readonly string[],
     mode?: IDBTransactionMode,
     options?: IDBTransactionOptions,
   ): IDBTransaction;
   addEventListener<K extends keyof IDBDatabaseEventMap>(
     type: K,
-    listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any,
+    listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -5150,7 +5162,7 @@ interface IDBDatabase extends EventTarget {
   ): void;
   removeEventListener<K extends keyof IDBDatabaseEventMap>(
     type: K,
-    listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any,
+    listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -5160,7 +5172,7 @@ interface IDBDatabase extends EventTarget {
   ): void;
 }
 
-declare var IDBDatabase: {
+declare const IDBDatabase: {
   prototype: IDBDatabase;
   new (): IDBDatabase;
 };
@@ -5181,12 +5193,12 @@ interface IDBFactory {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/cmp)
    */
-  cmp(first: any, second: any): number;
+  cmp(first: unknown, second: unknown): number;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/databases)
    */
-  databases(): Promise<IDBDatabaseInfo[]>;
+  databases(): Promise<readonly IDBDatabaseInfo[]>;
   /**
    * Attempts to delete the named database. If the database already exists and
    * there are open connections that don't close in response to a versionchange
@@ -5207,7 +5219,7 @@ interface IDBFactory {
   open(name: string, version?: number): IDBOpenDBRequest;
 }
 
-declare var IDBFactory: {
+declare const IDBFactory: {
   prototype: IDBFactory;
   new (): IDBFactory;
 };
@@ -5225,7 +5237,7 @@ interface IDBIndex {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/keyPath)
    */
-  readonly keyPath: string | string[];
+  readonly keyPath: string | readonly string[];
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/multiEntry)
@@ -5264,7 +5276,7 @@ interface IDBIndex {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/get)
    */
-  get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;
+  get(query: IDBValidKey | IDBKeyRange): IDBRequest<unknown>;
   /**
    * Retrieves the values of the records matching the given key or key range in
    * query (up to count if given).
@@ -5276,7 +5288,7 @@ interface IDBIndex {
   getAll(
     query?: IDBValidKey | IDBKeyRange | null,
     count?: number,
-  ): IDBRequest<any[]>;
+  ): IDBRequest<readonly unknown[]>;
   /**
    * Retrieves the keys of records matching the given key or key range in query
    * (up to count if given).
@@ -5289,7 +5301,7 @@ interface IDBIndex {
   getAllKeys(
     query?: IDBValidKey | IDBKeyRange | null,
     count?: number,
-  ): IDBRequest<IDBValidKey[]>;
+  ): IDBRequest<readonly IDBValidKey[]>;
   /**
    * Retrieves the key of the first record matching the given key or key range
    * in query.
@@ -5330,7 +5342,7 @@ interface IDBIndex {
   ): IDBRequest<IDBCursor | null>;
 }
 
-declare var IDBIndex: {
+declare const IDBIndex: {
   prototype: IDBIndex;
   new (): IDBIndex;
 };
@@ -5352,7 +5364,7 @@ interface IDBKeyRange {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/lower)
    */
-  readonly lower: any;
+  readonly lower: unknown;
   /**
    * Returns true if the lower open flag is set, and false otherwise.
    *
@@ -5366,7 +5378,7 @@ interface IDBKeyRange {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/upper)
    */
-  readonly upper: any;
+  readonly upper: unknown;
   /**
    * Returns true if the upper open flag is set, and false otherwise.
    *
@@ -5380,10 +5392,10 @@ interface IDBKeyRange {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/includes)
    */
-  includes(key: any): boolean;
+  includes(key: unknown): boolean;
 }
 
-declare var IDBKeyRange: {
+declare const IDBKeyRange: {
   prototype: IDBKeyRange;
   new (): IDBKeyRange;
   /**
@@ -5395,8 +5407,8 @@ declare var IDBKeyRange: {
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/bound_static)
    */
   bound(
-    lower: any,
-    upper: any,
+    lower: unknown,
+    upper: unknown,
     lowerOpen?: boolean,
     upperOpen?: boolean,
   ): IDBKeyRange;
@@ -5407,14 +5419,14 @@ declare var IDBKeyRange: {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/lowerBound_static)
    */
-  lowerBound(lower: any, open?: boolean): IDBKeyRange;
+  lowerBound(lower: unknown, open?: boolean): IDBKeyRange;
   /**
    * Returns a new IDBKeyRange spanning only key.
    *
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/only_static)
    */
-  only(value: any): IDBKeyRange;
+  only(value: unknown): IDBKeyRange;
   /**
    * Returns a new IDBKeyRange with no lower bound and ending at key. If open is
    * true, key is not included in the range.
@@ -5422,7 +5434,7 @@ declare var IDBKeyRange: {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/upperBound_static)
    */
-  upperBound(upper: any, open?: boolean): IDBKeyRange;
+  upperBound(upper: unknown, open?: boolean): IDBKeyRange;
 };
 
 /**
@@ -5455,7 +5467,7 @@ interface IDBObjectStore {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/keyPath)
    */
-  readonly keyPath: string | string[];
+  readonly keyPath: string | readonly string[];
   /**
    * Returns the name of the store.
    *
@@ -5485,7 +5497,7 @@ interface IDBObjectStore {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/add)
    */
-  add(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;
+  add(value: unknown, key?: IDBValidKey): IDBRequest<IDBValidKey>;
   /**
    * Deletes all records in store.
    *
@@ -5519,7 +5531,7 @@ interface IDBObjectStore {
    */
   createIndex(
     name: string,
-    keyPath: string | string[],
+    keyPath: string | readonly string[],
     options?: IDBIndexParameters,
   ): IDBIndex;
   /**
@@ -5552,7 +5564,7 @@ interface IDBObjectStore {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/get)
    */
-  get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;
+  get(query: IDBValidKey | IDBKeyRange): IDBRequest<unknown>;
   /**
    * Retrieves the values of the records matching the given key or key range in
    * query (up to count if given).
@@ -5565,7 +5577,7 @@ interface IDBObjectStore {
   getAll(
     query?: IDBValidKey | IDBKeyRange | null,
     count?: number,
-  ): IDBRequest<any[]>;
+  ): IDBRequest<readonly unknown[]>;
   /**
    * Retrieves the keys of records matching the given key or key range in query
    * (up to count if given).
@@ -5578,7 +5590,7 @@ interface IDBObjectStore {
   getAllKeys(
     query?: IDBValidKey | IDBKeyRange | null,
     count?: number,
-  ): IDBRequest<IDBValidKey[]>;
+  ): IDBRequest<readonly IDBValidKey[]>;
   /**
    * Retrieves the key of the first record matching the given key or key range
    * in query.
@@ -5638,10 +5650,10 @@ interface IDBObjectStore {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/put)
    */
-  put(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;
+  put(value: unknown, key?: IDBValidKey): IDBRequest<IDBValidKey>;
 }
 
-declare var IDBObjectStore: {
+declare const IDBObjectStore: {
   prototype: IDBObjectStore;
   new (): IDBObjectStore;
 };
@@ -5662,18 +5674,21 @@ interface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBOpenDBRequest/blocked_event)
    */
   onblocked:
-    | ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any)
+    | ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBOpenDBRequest/upgradeneeded_event)
    */
   onupgradeneeded:
-    | ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any)
+    | ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => unknown)
     | null;
   addEventListener<K extends keyof IDBOpenDBRequestEventMap>(
     type: K,
-    listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any,
+    listener: (
+      this: IDBOpenDBRequest,
+      ev: IDBOpenDBRequestEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -5683,7 +5698,10 @@ interface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {
   ): void;
   removeEventListener<K extends keyof IDBOpenDBRequestEventMap>(
     type: K,
-    listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any,
+    listener: (
+      this: IDBOpenDBRequest,
+      ev: IDBOpenDBRequestEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -5693,7 +5711,7 @@ interface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {
   ): void;
 }
 
-declare var IDBOpenDBRequest: {
+declare const IDBOpenDBRequest: {
   prototype: IDBOpenDBRequest;
   new (): IDBOpenDBRequest;
 };
@@ -5711,7 +5729,7 @@ interface IDBRequestEventMap {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest)
  */
-interface IDBRequest<T = any> extends EventTarget {
+interface IDBRequest<T = unknown> extends EventTarget {
   /**
    * When a request is completed, returns the error (a DOMException), or null if
    * the request succeeded. Throws a "InvalidStateError" DOMException if the
@@ -5725,12 +5743,12 @@ interface IDBRequest<T = any> extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/error_event)
    */
-  onerror: ((this: IDBRequest<T>, ev: Event) => any) | null;
+  onerror: ((this: IDBRequest<T>, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/success_event)
    */
-  onsuccess: ((this: IDBRequest<T>, ev: Event) => any) | null;
+  onsuccess: ((this: IDBRequest<T>, ev: Event) => unknown) | null;
   /**
    * Returns "pending" until a request is complete, then returns "done".
    *
@@ -5766,7 +5784,7 @@ interface IDBRequest<T = any> extends EventTarget {
   readonly transaction: IDBTransaction | null;
   addEventListener<K extends keyof IDBRequestEventMap>(
     type: K,
-    listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any,
+    listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -5776,7 +5794,7 @@ interface IDBRequest<T = any> extends EventTarget {
   ): void;
   removeEventListener<K extends keyof IDBRequestEventMap>(
     type: K,
-    listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any,
+    listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -5786,7 +5804,7 @@ interface IDBRequest<T = any> extends EventTarget {
   ): void;
 }
 
-declare var IDBRequest: {
+declare const IDBRequest: {
   prototype: IDBRequest;
   new (): IDBRequest;
 };
@@ -5839,17 +5857,17 @@ interface IDBTransaction extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/abort_event)
    */
-  onabort: ((this: IDBTransaction, ev: Event) => any) | null;
+  onabort: ((this: IDBTransaction, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/complete_event)
    */
-  oncomplete: ((this: IDBTransaction, ev: Event) => any) | null;
+  oncomplete: ((this: IDBTransaction, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/error_event)
    */
-  onerror: ((this: IDBTransaction, ev: Event) => any) | null;
+  onerror: ((this: IDBTransaction, ev: Event) => unknown) | null;
   /**
    * Aborts the transaction. All pending requests will fail with a "AbortError"
    * DOMException and all changes made to the database will be reverted.
@@ -5872,7 +5890,7 @@ interface IDBTransaction extends EventTarget {
   objectStore(name: string): IDBObjectStore;
   addEventListener<K extends keyof IDBTransactionEventMap>(
     type: K,
-    listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any,
+    listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -5882,7 +5900,7 @@ interface IDBTransaction extends EventTarget {
   ): void;
   removeEventListener<K extends keyof IDBTransactionEventMap>(
     type: K,
-    listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any,
+    listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -5892,7 +5910,7 @@ interface IDBTransaction extends EventTarget {
   ): void;
 }
 
-declare var IDBTransaction: {
+declare const IDBTransaction: {
   prototype: IDBTransaction;
   new (): IDBTransaction;
 };
@@ -5918,7 +5936,7 @@ interface IDBVersionChangeEvent extends Event {
   readonly oldVersion: number;
 }
 
-declare var IDBVersionChangeEvent: {
+declare const IDBVersionChangeEvent: {
   prototype: IDBVersionChangeEvent;
   new (
     type: string,
@@ -5951,7 +5969,7 @@ interface ImageBitmap {
   close(): void;
 }
 
-declare var ImageBitmap: {
+declare const ImageBitmap: {
   prototype: ImageBitmap;
   new (): ImageBitmap;
 };
@@ -5972,7 +5990,7 @@ interface ImageBitmapRenderingContext {
   transferFromImageBitmap(bitmap: ImageBitmap | null): void;
 }
 
-declare var ImageBitmapRenderingContext: {
+declare const ImageBitmapRenderingContext: {
   prototype: ImageBitmapRenderingContext;
   new (): ImageBitmapRenderingContext;
 };
@@ -6016,7 +6034,7 @@ interface ImageData {
   readonly width: number;
 }
 
-declare var ImageData: {
+declare const ImageData: {
   prototype: ImageData;
   new (sw: number, sh: number, settings?: ImageDataSettings): ImageData;
   new (
@@ -6052,7 +6070,7 @@ interface Lock {
   readonly name: string;
 }
 
-declare var Lock: {
+declare const Lock: {
   prototype: Lock;
   new (): Lock;
 };
@@ -6072,15 +6090,15 @@ interface LockManager {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/LockManager/request)
    */
-  request(name: string, callback: LockGrantedCallback): Promise<any>;
+  request(name: string, callback: LockGrantedCallback): Promise<unknown>;
   request(
     name: string,
     options: LockOptions,
     callback: LockGrantedCallback,
-  ): Promise<any>;
+  ): Promise<unknown>;
 }
 
-declare var LockManager: {
+declare const LockManager: {
   prototype: LockManager;
   new (): LockManager;
 };
@@ -6103,7 +6121,7 @@ interface MediaCapabilities {
   ): Promise<MediaCapabilitiesEncodingInfo>;
 }
 
-declare var MediaCapabilities: {
+declare const MediaCapabilities: {
   prototype: MediaCapabilities;
   new (): MediaCapabilities;
 };
@@ -6111,7 +6129,7 @@ declare var MediaCapabilities: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSourceHandle) */
 interface MediaSourceHandle {}
 
-declare var MediaSourceHandle: {
+declare const MediaSourceHandle: {
   prototype: MediaSourceHandle;
   new (): MediaSourceHandle;
 };
@@ -6128,7 +6146,7 @@ interface MediaStreamTrackProcessor {
   readonly readable: ReadableStream;
 }
 
-declare var MediaStreamTrackProcessor: {
+declare const MediaStreamTrackProcessor: {
   prototype: MediaStreamTrackProcessor;
   new (init: MediaStreamTrackProcessorInit): MediaStreamTrackProcessor;
 };
@@ -6156,7 +6174,7 @@ interface MessageChannel {
   readonly port2: MessagePort;
 }
 
-declare var MessageChannel: {
+declare const MessageChannel: {
   prototype: MessageChannel;
   new (): MessageChannel;
 };
@@ -6166,7 +6184,7 @@ declare var MessageChannel: {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent)
  */
-interface MessageEvent<T = any> extends Event {
+interface MessageEvent<T = unknown> extends Event {
   /**
    * Returns the data of the message.
    *
@@ -6211,15 +6229,15 @@ interface MessageEvent<T = any> extends Event {
     type: string,
     bubbles?: boolean,
     cancelable?: boolean,
-    data?: any,
+    data?: unknown,
     origin?: string,
     lastEventId?: string,
     source?: MessageEventSource | null,
-    ports?: MessagePort[],
+    ports?: readonly MessagePort[],
   ): void;
 }
 
-declare var MessageEvent: {
+declare const MessageEvent: {
   prototype: MessageEvent;
   new <T>(type: string, eventInitDict?: MessageEventInit<T>): MessageEvent<T>;
 };
@@ -6241,12 +6259,12 @@ interface MessagePort extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/message_event)
    */
-  onmessage: ((this: MessagePort, ev: MessageEvent) => any) | null;
+  onmessage: ((this: MessagePort, ev: MessageEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/messageerror_event)
    */
-  onmessageerror: ((this: MessagePort, ev: MessageEvent) => any) | null;
+  onmessageerror: ((this: MessagePort, ev: MessageEvent) => unknown) | null;
   /**
    * Disconnects the port, so that it is no longer active.
    *
@@ -6265,8 +6283,8 @@ interface MessagePort extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/postMessage)
    */
-  postMessage(message: any, transfer: Transferable[]): void;
-  postMessage(message: any, options?: StructuredSerializeOptions): void;
+  postMessage(message: unknown, transfer: readonly Transferable[]): void;
+  postMessage(message: unknown, options?: StructuredSerializeOptions): void;
   /**
    * Begins dispatching messages received on the port.
    *
@@ -6276,7 +6294,7 @@ interface MessagePort extends EventTarget {
   start(): void;
   addEventListener<K extends keyof MessagePortEventMap>(
     type: K,
-    listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any,
+    listener: (this: MessagePort, ev: MessagePortEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -6286,7 +6304,7 @@ interface MessagePort extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MessagePortEventMap>(
     type: K,
-    listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any,
+    listener: (this: MessagePort, ev: MessagePortEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -6296,7 +6314,7 @@ interface MessagePort extends EventTarget {
   ): void;
 }
 
-declare var MessagePort: {
+declare const MessagePort: {
   prototype: MessagePort;
   new (): MessagePort;
 };
@@ -6330,7 +6348,7 @@ interface NavigationPreloadManager {
   setHeaderValue(value: string): Promise<void>;
 }
 
-declare var NavigationPreloadManager: {
+declare const NavigationPreloadManager: {
   prototype: NavigationPreloadManager;
   new (): NavigationPreloadManager;
 };
@@ -6464,7 +6482,7 @@ interface Notification extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Notification/data)
    */
-  readonly data: any;
+  readonly data: unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Notification/dir)
@@ -6484,22 +6502,22 @@ interface Notification extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Notification/click_event)
    */
-  onclick: ((this: Notification, ev: Event) => any) | null;
+  onclick: ((this: Notification, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Notification/close_event)
    */
-  onclose: ((this: Notification, ev: Event) => any) | null;
+  onclose: ((this: Notification, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Notification/error_event)
    */
-  onerror: ((this: Notification, ev: Event) => any) | null;
+  onerror: ((this: Notification, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Notification/show_event)
    */
-  onshow: ((this: Notification, ev: Event) => any) | null;
+  onshow: ((this: Notification, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Notification/requireInteraction)
@@ -6527,7 +6545,7 @@ interface Notification extends EventTarget {
   close(): void;
   addEventListener<K extends keyof NotificationEventMap>(
     type: K,
-    listener: (this: Notification, ev: NotificationEventMap[K]) => any,
+    listener: (this: Notification, ev: NotificationEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -6537,7 +6555,7 @@ interface Notification extends EventTarget {
   ): void;
   removeEventListener<K extends keyof NotificationEventMap>(
     type: K,
-    listener: (this: Notification, ev: NotificationEventMap[K]) => any,
+    listener: (this: Notification, ev: NotificationEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -6547,7 +6565,7 @@ interface Notification extends EventTarget {
   ): void;
 }
 
-declare var Notification: {
+declare const Notification: {
   prototype: Notification;
   new (title: string, options?: NotificationOptions): Notification;
   /**
@@ -6577,7 +6595,7 @@ interface NotificationEvent extends ExtendableEvent {
   readonly notification: Notification;
 }
 
-declare var NotificationEvent: {
+declare const NotificationEvent: {
   prototype: NotificationEvent;
   new (type: string, eventInitDict: NotificationEventInit): NotificationEvent;
 };
@@ -6774,12 +6792,12 @@ interface OffscreenCanvas extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/contextlost_event)
    */
-  oncontextlost: ((this: OffscreenCanvas, ev: Event) => any) | null;
+  oncontextlost: ((this: OffscreenCanvas, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/contextrestored_event)
    */
-  oncontextrestored: ((this: OffscreenCanvas, ev: Event) => any) | null;
+  oncontextrestored: ((this: OffscreenCanvas, ev: Event) => unknown) | null;
   /**
    * These attributes return the dimensions of the OffscreenCanvas object's
    * bitmap.
@@ -6825,17 +6843,23 @@ interface OffscreenCanvas extends EventTarget {
    */
   getContext(
     contextId: '2d',
-    options?: any,
+    options?: unknown,
   ): OffscreenCanvasRenderingContext2D | null;
   getContext(
     contextId: 'bitmaprenderer',
-    options?: any,
+    options?: unknown,
   ): ImageBitmapRenderingContext | null;
-  getContext(contextId: 'webgl', options?: any): WebGLRenderingContext | null;
-  getContext(contextId: 'webgl2', options?: any): WebGL2RenderingContext | null;
+  getContext(
+    contextId: 'webgl',
+    options?: unknown,
+  ): WebGLRenderingContext | null;
+  getContext(
+    contextId: 'webgl2',
+    options?: unknown,
+  ): WebGL2RenderingContext | null;
   getContext(
     contextId: OffscreenRenderingContextId,
-    options?: any,
+    options?: unknown,
   ): OffscreenRenderingContext | null;
   /**
    * Returns a newly created ImageBitmap object with the image in the
@@ -6848,7 +6872,10 @@ interface OffscreenCanvas extends EventTarget {
   transferToImageBitmap(): ImageBitmap;
   addEventListener<K extends keyof OffscreenCanvasEventMap>(
     type: K,
-    listener: (this: OffscreenCanvas, ev: OffscreenCanvasEventMap[K]) => any,
+    listener: (
+      this: OffscreenCanvas,
+      ev: OffscreenCanvasEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -6858,7 +6885,10 @@ interface OffscreenCanvas extends EventTarget {
   ): void;
   removeEventListener<K extends keyof OffscreenCanvasEventMap>(
     type: K,
-    listener: (this: OffscreenCanvas, ev: OffscreenCanvasEventMap[K]) => any,
+    listener: (
+      this: OffscreenCanvas,
+      ev: OffscreenCanvasEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -6868,7 +6898,7 @@ interface OffscreenCanvas extends EventTarget {
   ): void;
 }
 
-declare var OffscreenCanvas: {
+declare const OffscreenCanvas: {
   prototype: OffscreenCanvas;
   new (width: number, height: number): OffscreenCanvas;
 };
@@ -6900,7 +6930,7 @@ interface OffscreenCanvasRenderingContext2D
   readonly canvas: OffscreenCanvas;
 }
 
-declare var OffscreenCanvasRenderingContext2D: {
+declare const OffscreenCanvasRenderingContext2D: {
   prototype: OffscreenCanvasRenderingContext2D;
   new (): OffscreenCanvasRenderingContext2D;
 };
@@ -6923,7 +6953,7 @@ interface Path2D extends CanvasPath {
   addPath(path: Path2D, transform?: DOMMatrix2DInit): void;
 }
 
-declare var Path2D: {
+declare const Path2D: {
   prototype: Path2D;
   new (path?: Path2D | string): Path2D;
 };
@@ -6945,7 +6975,9 @@ interface Performance extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Performance/resourcetimingbufferfull_event)
    */
-  onresourcetimingbufferfull: ((this: Performance, ev: Event) => any) | null;
+  onresourcetimingbufferfull:
+    | ((this: Performance, ev: Event) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Performance/timeOrigin)
@@ -7006,10 +7038,10 @@ interface Performance extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Performance/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
   addEventListener<K extends keyof PerformanceEventMap>(
     type: K,
-    listener: (this: Performance, ev: PerformanceEventMap[K]) => any,
+    listener: (this: Performance, ev: PerformanceEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -7019,7 +7051,7 @@ interface Performance extends EventTarget {
   ): void;
   removeEventListener<K extends keyof PerformanceEventMap>(
     type: K,
-    listener: (this: Performance, ev: PerformanceEventMap[K]) => any,
+    listener: (this: Performance, ev: PerformanceEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -7029,7 +7061,7 @@ interface Performance extends EventTarget {
   ): void;
 }
 
-declare var Performance: {
+declare const Performance: {
   prototype: Performance;
   new (): Performance;
 };
@@ -7068,10 +7100,10 @@ interface PerformanceEntry {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var PerformanceEntry: {
+declare const PerformanceEntry: {
   prototype: PerformanceEntry;
   new (): PerformanceEntry;
 };
@@ -7089,10 +7121,10 @@ interface PerformanceMark extends PerformanceEntry {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMark/detail)
    */
-  readonly detail: any;
+  readonly detail: unknown;
 }
 
-declare var PerformanceMark: {
+declare const PerformanceMark: {
   prototype: PerformanceMark;
   new (markName: string, markOptions?: PerformanceMarkOptions): PerformanceMark;
 };
@@ -7111,10 +7143,10 @@ interface PerformanceMeasure extends PerformanceEntry {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMeasure/detail)
    */
-  readonly detail: any;
+  readonly detail: unknown;
 }
 
-declare var PerformanceMeasure: {
+declare const PerformanceMeasure: {
   prototype: PerformanceMeasure;
   new (): PerformanceMeasure;
 };
@@ -7141,7 +7173,7 @@ interface PerformanceObserver {
   takeRecords(): PerformanceEntryList;
 }
 
-declare var PerformanceObserver: {
+declare const PerformanceObserver: {
   prototype: PerformanceObserver;
   new (callback: PerformanceObserverCallback): PerformanceObserver;
   /**
@@ -7173,7 +7205,7 @@ interface PerformanceObserverEntryList {
   getEntriesByType(type: string): PerformanceEntryList;
 }
 
-declare var PerformanceObserverEntryList: {
+declare const PerformanceObserverEntryList: {
   prototype: PerformanceObserverEntryList;
   new (): PerformanceObserverEntryList;
 };
@@ -7287,10 +7319,10 @@ interface PerformanceResourceTiming extends PerformanceEntry {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var PerformanceResourceTiming: {
+declare const PerformanceResourceTiming: {
   prototype: PerformanceResourceTiming;
   new (): PerformanceResourceTiming;
 };
@@ -7319,10 +7351,10 @@ interface PerformanceServerTiming {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var PerformanceServerTiming: {
+declare const PerformanceServerTiming: {
   prototype: PerformanceServerTiming;
   new (): PerformanceServerTiming;
 };
@@ -7342,7 +7374,7 @@ interface PermissionStatus extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/change_event)
    */
-  onchange: ((this: PermissionStatus, ev: Event) => any) | null;
+  onchange: ((this: PermissionStatus, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/state)
@@ -7350,7 +7382,10 @@ interface PermissionStatus extends EventTarget {
   readonly state: PermissionState;
   addEventListener<K extends keyof PermissionStatusEventMap>(
     type: K,
-    listener: (this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any,
+    listener: (
+      this: PermissionStatus,
+      ev: PermissionStatusEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -7360,7 +7395,10 @@ interface PermissionStatus extends EventTarget {
   ): void;
   removeEventListener<K extends keyof PermissionStatusEventMap>(
     type: K,
-    listener: (this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any,
+    listener: (
+      this: PermissionStatus,
+      ev: PermissionStatusEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -7370,7 +7408,7 @@ interface PermissionStatus extends EventTarget {
   ): void;
 }
 
-declare var PermissionStatus: {
+declare const PermissionStatus: {
   prototype: PermissionStatus;
   new (): PermissionStatus;
 };
@@ -7384,7 +7422,7 @@ interface Permissions {
   query(permissionDesc: PermissionDescriptor): Promise<PermissionStatus>;
 }
 
-declare var Permissions: {
+declare const Permissions: {
   prototype: Permissions;
   new (): Permissions;
 };
@@ -7415,7 +7453,7 @@ interface ProgressEvent<T extends EventTarget = EventTarget> extends Event {
   readonly total: number;
 }
 
-declare var ProgressEvent: {
+declare const ProgressEvent: {
   prototype: ProgressEvent;
   new (type: string, eventInitDict?: ProgressEventInit): ProgressEvent;
 };
@@ -7429,15 +7467,15 @@ interface PromiseRejectionEvent extends Event {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent/promise)
    */
-  readonly promise: Promise<any>;
+  readonly promise: Promise<unknown>;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent/reason)
    */
-  readonly reason: any;
+  readonly reason: unknown;
 }
 
-declare var PromiseRejectionEvent: {
+declare const PromiseRejectionEvent: {
   prototype: PromiseRejectionEvent;
   new (
     type: string,
@@ -7458,7 +7496,7 @@ interface PushEvent extends ExtendableEvent {
   readonly data: PushMessageData | null;
 }
 
-declare var PushEvent: {
+declare const PushEvent: {
   prototype: PushEvent;
   new (type: string, eventInitDict?: PushEventInit): PushEvent;
 };
@@ -7490,7 +7528,7 @@ interface PushManager {
   subscribe(options?: PushSubscriptionOptionsInit): Promise<PushSubscription>;
 }
 
-declare var PushManager: {
+declare const PushManager: {
   prototype: PushManager;
   new (): PushManager;
   /**
@@ -7526,7 +7564,7 @@ interface PushMessageData {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PushMessageData/json)
    */
-  json(): any;
+  json(): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PushMessageData/text)
@@ -7534,7 +7572,7 @@ interface PushMessageData {
   text(): string;
 }
 
-declare var PushMessageData: {
+declare const PushMessageData: {
   prototype: PushMessageData;
   new (): PushMessageData;
 };
@@ -7578,7 +7616,7 @@ interface PushSubscription {
   unsubscribe(): Promise<boolean>;
 }
 
-declare var PushSubscription: {
+declare const PushSubscription: {
   prototype: PushSubscription;
   new (): PushSubscription;
 };
@@ -7602,7 +7640,7 @@ interface PushSubscriptionOptions {
   readonly userVisibleOnly: boolean;
 }
 
-declare var PushSubscriptionOptions: {
+declare const PushSubscriptionOptions: {
   prototype: PushSubscriptionOptions;
   new (): PushSubscriptionOptions;
 };
@@ -7629,7 +7667,7 @@ interface RTCEncodedAudioFrame {
   getMetadata(): RTCEncodedAudioFrameMetadata;
 }
 
-declare var RTCEncodedAudioFrame: {
+declare const RTCEncodedAudioFrame: {
   prototype: RTCEncodedAudioFrame;
   new (): RTCEncodedAudioFrame;
 };
@@ -7661,7 +7699,7 @@ interface RTCEncodedVideoFrame {
   getMetadata(): RTCEncodedVideoFrameMetadata;
 }
 
-declare var RTCEncodedVideoFrame: {
+declare const RTCEncodedVideoFrame: {
   prototype: RTCEncodedVideoFrame;
   new (): RTCEncodedVideoFrame;
 };
@@ -7675,7 +7713,7 @@ interface RTCRtpScriptTransformer extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpScriptTransformer/options)
    */
-  readonly options: any;
+  readonly options: unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpScriptTransformer/readable)
@@ -7698,7 +7736,7 @@ interface RTCRtpScriptTransformer extends EventTarget {
   sendKeyFrameRequest(): Promise<void>;
 }
 
-declare var RTCRtpScriptTransformer: {
+declare const RTCRtpScriptTransformer: {
   prototype: RTCRtpScriptTransformer;
   new (): RTCRtpScriptTransformer;
 };
@@ -7712,7 +7750,7 @@ interface RTCTransformEvent extends Event {
   readonly transformer: RTCRtpScriptTransformer;
 }
 
-declare var RTCTransformEvent: {
+declare const RTCTransformEvent: {
   prototype: RTCTransformEvent;
   new (): RTCTransformEvent;
 };
@@ -7746,10 +7784,10 @@ interface ReadableByteStreamController {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/error)
    */
-  error(e?: any): void;
+  error(e?: unknown): void;
 }
 
-declare var ReadableByteStreamController: {
+declare const ReadableByteStreamController: {
   prototype: ReadableByteStreamController;
   new (): ReadableByteStreamController;
 };
@@ -7761,7 +7799,7 @@ declare var ReadableByteStreamController: {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)
  */
-interface ReadableStream<R = any> {
+interface ReadableStream<R = unknown> {
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked)
@@ -7771,7 +7809,7 @@ interface ReadableStream<R = any> {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/cancel)
    */
-  cancel(reason?: any): Promise<void>;
+  cancel(reason?: unknown): Promise<void>;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/getReader)
@@ -7802,17 +7840,17 @@ interface ReadableStream<R = any> {
   tee(): [ReadableStream<R>, ReadableStream<R>];
 }
 
-declare var ReadableStream: {
+declare const ReadableStream: {
   prototype: ReadableStream;
   new (
     underlyingSource: UnderlyingByteSource,
     strategy?: { highWaterMark?: number },
   ): ReadableStream<Uint8Array>;
-  new <R = any>(
+  new <R = unknown>(
     underlyingSource: UnderlyingDefaultSource<R>,
     strategy?: QueuingStrategy<R>,
   ): ReadableStream<R>;
-  new <R = any>(
+  new <R = unknown>(
     underlyingSource?: UnderlyingSource<R>,
     strategy?: QueuingStrategy<R>,
   ): ReadableStream<R>;
@@ -7837,7 +7875,7 @@ interface ReadableStreamBYOBReader extends ReadableStreamGenericReader {
   releaseLock(): void;
 }
 
-declare var ReadableStreamBYOBReader: {
+declare const ReadableStreamBYOBReader: {
   prototype: ReadableStreamBYOBReader;
   new (stream: ReadableStream<Uint8Array>): ReadableStreamBYOBReader;
 };
@@ -7864,7 +7902,7 @@ interface ReadableStreamBYOBRequest {
   respondWithNewView(view: ArrayBufferView): void;
 }
 
-declare var ReadableStreamBYOBRequest: {
+declare const ReadableStreamBYOBRequest: {
   prototype: ReadableStreamBYOBRequest;
   new (): ReadableStreamBYOBRequest;
 };
@@ -7873,7 +7911,7 @@ declare var ReadableStreamBYOBRequest: {
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController)
  */
-interface ReadableStreamDefaultController<R = any> {
+interface ReadableStreamDefaultController<R = unknown> {
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/desiredSize)
@@ -7893,10 +7931,10 @@ interface ReadableStreamDefaultController<R = any> {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/error)
    */
-  error(e?: any): void;
+  error(e?: unknown): void;
 }
 
-declare var ReadableStreamDefaultController: {
+declare const ReadableStreamDefaultController: {
   prototype: ReadableStreamDefaultController;
   new (): ReadableStreamDefaultController;
 };
@@ -7905,7 +7943,7 @@ declare var ReadableStreamDefaultController: {
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultReader)
  */
-interface ReadableStreamDefaultReader<R = any>
+interface ReadableStreamDefaultReader<R = unknown>
   extends ReadableStreamGenericReader {
   /**
    * [MDN
@@ -7919,9 +7957,9 @@ interface ReadableStreamDefaultReader<R = any>
   releaseLock(): void;
 }
 
-declare var ReadableStreamDefaultReader: {
+declare const ReadableStreamDefaultReader: {
   prototype: ReadableStreamDefaultReader;
-  new <R = any>(stream: ReadableStream<R>): ReadableStreamDefaultReader<R>;
+  new <R = unknown>(stream: ReadableStream<R>): ReadableStreamDefaultReader<R>;
 };
 
 interface ReadableStreamGenericReader {
@@ -7934,7 +7972,7 @@ interface ReadableStreamGenericReader {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/cancel)
    */
-  cancel(reason?: any): Promise<void>;
+  cancel(reason?: unknown): Promise<void>;
 }
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Report) */
@@ -7945,10 +7983,10 @@ interface Report {
   readonly type: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Report/url) */
   readonly url: string;
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var Report: {
+declare const Report: {
   prototype: Report;
   new (): Report;
 };
@@ -7959,10 +7997,10 @@ interface ReportBody {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ReportBody/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var ReportBody: {
+declare const ReportBody: {
   prototype: ReportBody;
   new (): ReportBody;
 };
@@ -7986,7 +8024,7 @@ interface ReportingObserver {
   takeRecords(): ReportList;
 }
 
-declare var ReportingObserver: {
+declare const ReportingObserver: {
   prototype: ReportingObserver;
   new (
     callback: ReportingObserverCallback,
@@ -8052,7 +8090,7 @@ interface Request extends Body {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/method)
    */
-  readonly method: string;
+  readonly method: HTTPRequestMethod;
   /**
    * Returns the mode associated with request, which is a string indicating
    * whether the request will use CORS, or will be restricted to same-origin
@@ -8107,7 +8145,7 @@ interface Request extends Body {
   clone(): Request;
 }
 
-declare var Request: {
+declare const Request: {
   prototype: Request;
   new (input: RequestInfo | URL, init?: RequestInit): Request;
 };
@@ -8145,7 +8183,7 @@ interface Response extends Body {
   clone(): Response;
 }
 
-declare var Response: {
+declare const Response: {
   prototype: Response;
   new (body?: BodyInit | null, init?: ResponseInit): Response;
   /**
@@ -8157,7 +8195,7 @@ declare var Response: {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Response/json_static)
    */
-  json(data: any, init?: ResponseInit): Response;
+  json(data: unknown, init?: ResponseInit): Response;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Response/redirect_static)
@@ -8235,7 +8273,7 @@ interface SecurityPolicyViolationEvent extends Event {
   readonly violatedDirective: string;
 }
 
-declare var SecurityPolicyViolationEvent: {
+declare const SecurityPolicyViolationEvent: {
   prototype: SecurityPolicyViolationEvent;
   new (
     type: string,
@@ -8260,7 +8298,7 @@ interface ServiceWorker extends EventTarget, AbstractWorker {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/statechange_event)
    */
-  onstatechange: ((this: ServiceWorker, ev: Event) => any) | null;
+  onstatechange: ((this: ServiceWorker, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/scriptURL)
@@ -8275,11 +8313,11 @@ interface ServiceWorker extends EventTarget, AbstractWorker {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/postMessage)
    */
-  postMessage(message: any, transfer: Transferable[]): void;
-  postMessage(message: any, options?: StructuredSerializeOptions): void;
+  postMessage(message: unknown, transfer: readonly Transferable[]): void;
+  postMessage(message: unknown, options?: StructuredSerializeOptions): void;
   addEventListener<K extends keyof ServiceWorkerEventMap>(
     type: K,
-    listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any,
+    listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -8289,7 +8327,7 @@ interface ServiceWorker extends EventTarget, AbstractWorker {
   ): void;
   removeEventListener<K extends keyof ServiceWorkerEventMap>(
     type: K,
-    listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any,
+    listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -8299,7 +8337,7 @@ interface ServiceWorker extends EventTarget, AbstractWorker {
   ): void;
 }
 
-declare var ServiceWorker: {
+declare const ServiceWorker: {
   prototype: ServiceWorker;
   new (): ServiceWorker;
 };
@@ -8330,18 +8368,22 @@ interface ServiceWorkerContainer extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/controllerchange_event)
    */
-  oncontrollerchange: ((this: ServiceWorkerContainer, ev: Event) => any) | null;
+  oncontrollerchange:
+    | ((this: ServiceWorkerContainer, ev: Event) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/message_event)
    */
-  onmessage: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;
+  onmessage:
+    | ((this: ServiceWorkerContainer, ev: MessageEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/messageerror_event)
    */
   onmessageerror:
-    | ((this: ServiceWorkerContainer, ev: MessageEvent) => any)
+    | ((this: ServiceWorkerContainer, ev: MessageEvent) => unknown)
     | null;
   /**
    * [MDN
@@ -8378,7 +8420,7 @@ interface ServiceWorkerContainer extends EventTarget {
     listener: (
       this: ServiceWorkerContainer,
       ev: ServiceWorkerContainerEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -8391,7 +8433,7 @@ interface ServiceWorkerContainer extends EventTarget {
     listener: (
       this: ServiceWorkerContainer,
       ev: ServiceWorkerContainerEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -8401,7 +8443,7 @@ interface ServiceWorkerContainer extends EventTarget {
   ): void;
 }
 
-declare var ServiceWorkerContainer: {
+declare const ServiceWorkerContainer: {
   prototype: ServiceWorkerContainer;
   new (): ServiceWorkerContainer;
 };
@@ -8436,59 +8478,59 @@ interface ServiceWorkerGlobalScope extends WorkerGlobalScope {
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/activate_event)
    */
   onactivate:
-    | ((this: ServiceWorkerGlobalScope, ev: ExtendableEvent) => any)
+    | ((this: ServiceWorkerGlobalScope, ev: ExtendableEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/fetch_event)
    */
-  onfetch: ((this: ServiceWorkerGlobalScope, ev: FetchEvent) => any) | null;
+  onfetch: ((this: ServiceWorkerGlobalScope, ev: FetchEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/install_event)
    */
   oninstall:
-    | ((this: ServiceWorkerGlobalScope, ev: ExtendableEvent) => any)
+    | ((this: ServiceWorkerGlobalScope, ev: ExtendableEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/message_event)
    */
   onmessage:
-    | ((this: ServiceWorkerGlobalScope, ev: ExtendableMessageEvent) => any)
+    | ((this: ServiceWorkerGlobalScope, ev: ExtendableMessageEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/messageerror_event)
    */
   onmessageerror:
-    | ((this: ServiceWorkerGlobalScope, ev: MessageEvent) => any)
+    | ((this: ServiceWorkerGlobalScope, ev: MessageEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/notificationclick_event)
    */
   onnotificationclick:
-    | ((this: ServiceWorkerGlobalScope, ev: NotificationEvent) => any)
+    | ((this: ServiceWorkerGlobalScope, ev: NotificationEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/notificationclose_event)
    */
   onnotificationclose:
-    | ((this: ServiceWorkerGlobalScope, ev: NotificationEvent) => any)
+    | ((this: ServiceWorkerGlobalScope, ev: NotificationEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/push_event)
    */
-  onpush: ((this: ServiceWorkerGlobalScope, ev: PushEvent) => any) | null;
+  onpush: ((this: ServiceWorkerGlobalScope, ev: PushEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/pushsubscriptionchange_event)
    */
   onpushsubscriptionchange:
-    | ((this: ServiceWorkerGlobalScope, ev: Event) => any)
+    | ((this: ServiceWorkerGlobalScope, ev: Event) => unknown)
     | null;
   /**
    * [MDN
@@ -8510,7 +8552,7 @@ interface ServiceWorkerGlobalScope extends WorkerGlobalScope {
     listener: (
       this: ServiceWorkerGlobalScope,
       ev: ServiceWorkerGlobalScopeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -8523,7 +8565,7 @@ interface ServiceWorkerGlobalScope extends WorkerGlobalScope {
     listener: (
       this: ServiceWorkerGlobalScope,
       ev: ServiceWorkerGlobalScopeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -8533,7 +8575,7 @@ interface ServiceWorkerGlobalScope extends WorkerGlobalScope {
   ): void;
 }
 
-declare var ServiceWorkerGlobalScope: {
+declare const ServiceWorkerGlobalScope: {
   prototype: ServiceWorkerGlobalScope;
   new (): ServiceWorkerGlobalScope;
 };
@@ -8570,7 +8612,9 @@ interface ServiceWorkerRegistration extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/updatefound_event)
    */
-  onupdatefound: ((this: ServiceWorkerRegistration, ev: Event) => any) | null;
+  onupdatefound:
+    | ((this: ServiceWorkerRegistration, ev: Event) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/pushManager)
@@ -8595,7 +8639,9 @@ interface ServiceWorkerRegistration extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/getNotifications)
    */
-  getNotifications(filter?: GetNotificationOptions): Promise<Notification[]>;
+  getNotifications(
+    filter?: GetNotificationOptions,
+  ): Promise<readonly Notification[]>;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/showNotification)
@@ -8616,7 +8662,7 @@ interface ServiceWorkerRegistration extends EventTarget {
     listener: (
       this: ServiceWorkerRegistration,
       ev: ServiceWorkerRegistrationEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -8629,7 +8675,7 @@ interface ServiceWorkerRegistration extends EventTarget {
     listener: (
       this: ServiceWorkerRegistration,
       ev: ServiceWorkerRegistrationEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -8639,7 +8685,7 @@ interface ServiceWorkerRegistration extends EventTarget {
   ): void;
 }
 
-declare var ServiceWorkerRegistration: {
+declare const ServiceWorkerRegistration: {
   prototype: ServiceWorkerRegistration;
   new (): ServiceWorkerRegistration;
 };
@@ -8666,7 +8712,9 @@ interface SharedWorkerGlobalScope extends WorkerGlobalScope {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/SharedWorkerGlobalScope/connect_event)
    */
-  onconnect: ((this: SharedWorkerGlobalScope, ev: MessageEvent) => any) | null;
+  onconnect:
+    | ((this: SharedWorkerGlobalScope, ev: MessageEvent) => unknown)
+    | null;
   /**
    * Aborts sharedWorkerGlobal.
    *
@@ -8679,7 +8727,7 @@ interface SharedWorkerGlobalScope extends WorkerGlobalScope {
     listener: (
       this: SharedWorkerGlobalScope,
       ev: SharedWorkerGlobalScopeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -8692,7 +8740,7 @@ interface SharedWorkerGlobalScope extends WorkerGlobalScope {
     listener: (
       this: SharedWorkerGlobalScope,
       ev: SharedWorkerGlobalScopeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -8702,7 +8750,7 @@ interface SharedWorkerGlobalScope extends WorkerGlobalScope {
   ): void;
 }
 
-declare var SharedWorkerGlobalScope: {
+declare const SharedWorkerGlobalScope: {
   prototype: SharedWorkerGlobalScope;
   new (): SharedWorkerGlobalScope;
 };
@@ -8730,7 +8778,7 @@ interface StorageManager {
   persisted(): Promise<boolean>;
 }
 
-declare var StorageManager: {
+declare const StorageManager: {
   prototype: StorageManager;
   new (): StorageManager;
 };
@@ -8754,7 +8802,7 @@ interface StylePropertyMapReadOnly {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly/getAll)
    */
-  getAll(property: string): CSSStyleValue[];
+  getAll(property: string): readonly CSSStyleValue[];
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly/has)
@@ -8762,15 +8810,15 @@ interface StylePropertyMapReadOnly {
   has(property: string): boolean;
   forEach(
     callbackfn: (
-      value: CSSStyleValue[],
+      value: readonly CSSStyleValue[],
       key: string,
       parent: StylePropertyMapReadOnly,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var StylePropertyMapReadOnly: {
+declare const StylePropertyMapReadOnly: {
   prototype: StylePropertyMapReadOnly;
   new (): StylePropertyMapReadOnly;
 };
@@ -8828,7 +8876,7 @@ interface SubtleCrypto {
       | HkdfParams
       | Pbkdf2Params,
     extractable: boolean,
-    keyUsages: KeyUsage[],
+    keyUsages: readonly KeyUsage[],
   ): Promise<CryptoKey>;
   /**
    * [MDN
@@ -8887,7 +8935,7 @@ interface SubtleCrypto {
   generateKey(
     algorithm: AlgorithmIdentifier,
     extractable: boolean,
-    keyUsages: KeyUsage[],
+    keyUsages: readonly KeyUsage[],
   ): Promise<CryptoKeyPair | CryptoKey>;
   /**
    * [MDN
@@ -8915,7 +8963,7 @@ interface SubtleCrypto {
       | HmacImportParams
       | AesKeyAlgorithm,
     extractable: boolean,
-    keyUsages: KeyUsage[],
+    keyUsages: readonly KeyUsage[],
   ): Promise<CryptoKey>;
   /**
    * [MDN
@@ -8947,7 +8995,7 @@ interface SubtleCrypto {
       | HmacImportParams
       | AesKeyAlgorithm,
     extractable: boolean,
-    keyUsages: KeyUsage[],
+    keyUsages: readonly KeyUsage[],
   ): Promise<CryptoKey>;
   /**
    * [MDN
@@ -8976,7 +9024,7 @@ interface SubtleCrypto {
   ): Promise<ArrayBuffer>;
 }
 
-declare var SubtleCrypto: {
+declare const SubtleCrypto: {
   prototype: SubtleCrypto;
   new (): SubtleCrypto;
 };
@@ -8998,7 +9046,7 @@ interface TextDecoder extends TextDecoderCommon {
    * invocation without options's stream (or set to false) has no input, it's
    * clearest to omit both arguments.
    *
-   *     var string = '',
+   *     const string = '',
    *       decoder = new TextDecoder(encoding),
    *       buffer;
    *     while ((buffer = next_chunk())) {
@@ -9015,7 +9063,7 @@ interface TextDecoder extends TextDecoderCommon {
   decode(input?: AllowSharedBufferSource, options?: TextDecodeOptions): string;
 }
 
-declare var TextDecoder: {
+declare const TextDecoder: {
   prototype: TextDecoder;
   new (label?: string, options?: TextDecoderOptions): TextDecoder;
 };
@@ -9050,7 +9098,7 @@ interface TextDecoderStream extends GenericTransformStream, TextDecoderCommon {
   readonly writable: WritableStream<BufferSource>;
 }
 
-declare var TextDecoderStream: {
+declare const TextDecoderStream: {
   prototype: TextDecoderStream;
   new (label?: string, options?: TextDecoderOptions): TextDecoderStream;
 };
@@ -9085,7 +9133,7 @@ interface TextEncoder extends TextEncoderCommon {
   ): TextEncoderEncodeIntoResult;
 }
 
-declare var TextEncoder: {
+declare const TextEncoder: {
   prototype: TextEncoder;
   new (): TextEncoder;
 };
@@ -9106,7 +9154,7 @@ interface TextEncoderStream extends GenericTransformStream, TextEncoderCommon {
   readonly writable: WritableStream<string>;
 }
 
-declare var TextEncoderStream: {
+declare const TextEncoderStream: {
   prototype: TextEncoderStream;
   new (): TextEncoderStream;
 };
@@ -9204,13 +9252,13 @@ interface TextMetrics {
   readonly width: number;
 }
 
-declare var TextMetrics: {
+declare const TextMetrics: {
   prototype: TextMetrics;
   new (): TextMetrics;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStream) */
-interface TransformStream<I = any, O = any> {
+interface TransformStream<I = unknown, O = unknown> {
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/TransformStream/readable)
@@ -9223,9 +9271,9 @@ interface TransformStream<I = any, O = any> {
   readonly writable: WritableStream<I>;
 }
 
-declare var TransformStream: {
+declare const TransformStream: {
   prototype: TransformStream;
-  new <I = any, O = any>(
+  new <I = unknown, O = unknown>(
     transformer?: Transformer<I, O>,
     writableStrategy?: QueuingStrategy<I>,
     readableStrategy?: QueuingStrategy<O>,
@@ -9236,7 +9284,7 @@ declare var TransformStream: {
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController)
  */
-interface TransformStreamDefaultController<O = any> {
+interface TransformStreamDefaultController<O = unknown> {
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/desiredSize)
@@ -9251,7 +9299,7 @@ interface TransformStreamDefaultController<O = any> {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/error)
    */
-  error(reason?: any): void;
+  error(reason?: unknown): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/terminate)
@@ -9259,7 +9307,7 @@ interface TransformStreamDefaultController<O = any> {
   terminate(): void;
 }
 
-declare var TransformStreamDefaultController: {
+declare const TransformStreamDefaultController: {
   prototype: TransformStreamDefaultController;
   new (): TransformStreamDefaultController;
 };
@@ -9303,7 +9351,7 @@ interface URL {
   toJSON(): string;
 }
 
-declare var URL: {
+declare const URL: {
   prototype: URL;
   new (url: string | URL, base?: string | URL): URL;
   /**
@@ -9363,7 +9411,7 @@ interface URLSearchParams {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/getAll)
    */
-  getAll(name: string): string[];
+  getAll(name: string): readonly string[];
   /**
    * Returns a Boolean indicating if such a search parameter exists.
    *
@@ -9391,14 +9439,18 @@ interface URLSearchParams {
   toString(): string;
   forEach(
     callbackfn: (value: string, key: string, parent: URLSearchParams) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var URLSearchParams: {
+declare const URLSearchParams: {
   prototype: URLSearchParams;
   new (
-    init?: string[][] | Record<string, string> | string | URLSearchParams,
+    init?:
+      | readonly (readonly string[])[]
+      | Record<string, string>
+      | string
+      | URLSearchParams,
   ): URLSearchParams;
 };
 
@@ -9431,7 +9483,7 @@ interface VideoColorSpace {
   toJSON(): VideoColorSpaceInit;
 }
 
-declare var VideoColorSpace: {
+declare const VideoColorSpace: {
   prototype: VideoColorSpace;
   new (init?: VideoColorSpaceInit): VideoColorSpace;
 };
@@ -9455,7 +9507,7 @@ interface VideoDecoder extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/dequeue_event)
    */
-  ondequeue: ((this: VideoDecoder, ev: Event) => any) | null;
+  ondequeue: ((this: VideoDecoder, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/state)
@@ -9488,7 +9540,7 @@ interface VideoDecoder extends EventTarget {
   reset(): void;
   addEventListener<K extends keyof VideoDecoderEventMap>(
     type: K,
-    listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => any,
+    listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -9498,7 +9550,7 @@ interface VideoDecoder extends EventTarget {
   ): void;
   removeEventListener<K extends keyof VideoDecoderEventMap>(
     type: K,
-    listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => any,
+    listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -9508,7 +9560,7 @@ interface VideoDecoder extends EventTarget {
   ): void;
 }
 
-declare var VideoDecoder: {
+declare const VideoDecoder: {
   prototype: VideoDecoder;
   new (init: VideoDecoderInit): VideoDecoder;
   /**
@@ -9537,7 +9589,7 @@ interface VideoEncoder extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/dequeue_event)
    */
-  ondequeue: ((this: VideoEncoder, ev: Event) => any) | null;
+  ondequeue: ((this: VideoEncoder, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/state)
@@ -9570,7 +9622,7 @@ interface VideoEncoder extends EventTarget {
   reset(): void;
   addEventListener<K extends keyof VideoEncoderEventMap>(
     type: K,
-    listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => any,
+    listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -9580,7 +9632,7 @@ interface VideoEncoder extends EventTarget {
   ): void;
   removeEventListener<K extends keyof VideoEncoderEventMap>(
     type: K,
-    listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => any,
+    listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -9590,7 +9642,7 @@ interface VideoEncoder extends EventTarget {
   ): void;
 }
 
-declare var VideoEncoder: {
+declare const VideoEncoder: {
   prototype: VideoEncoder;
   new (init: VideoEncoderInit): VideoEncoder;
   /**
@@ -9674,10 +9726,10 @@ interface VideoFrame {
   copyTo(
     destination: AllowSharedBufferSource,
     options?: VideoFrameCopyToOptions,
-  ): Promise<PlaneLayout[]>;
+  ): Promise<readonly PlaneLayout[]>;
 }
 
-declare var VideoFrame: {
+declare const VideoFrame: {
   prototype: VideoFrame;
   new (image: CanvasImageSource, init?: VideoFrameInit): VideoFrame;
   new (data: AllowSharedBufferSource, init: VideoFrameBufferInit): VideoFrame;
@@ -9702,7 +9754,7 @@ interface WEBGL_compressed_texture_astc {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_astc/getSupportedProfiles)
    */
-  getSupportedProfiles(): string[];
+  getSupportedProfiles(): readonly string[];
   readonly COMPRESSED_RGBA_ASTC_4x4_KHR: 0x93b0;
   readonly COMPRESSED_RGBA_ASTC_5x4_KHR: 0x93b1;
   readonly COMPRESSED_RGBA_ASTC_5x5_KHR: 0x93b2;
@@ -9839,7 +9891,7 @@ interface WEBGL_draw_buffers {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_draw_buffers/drawBuffersWEBGL)
    */
-  drawBuffersWEBGL(buffers: GLenum[]): void;
+  drawBuffersWEBGL(buffers: readonly GLenum[]): void;
   readonly COLOR_ATTACHMENT0_WEBGL: 0x8ce0;
   readonly COLOR_ATTACHMENT1_WEBGL: 0x8ce1;
   readonly COLOR_ATTACHMENT2_WEBGL: 0x8ce2;
@@ -9901,11 +9953,11 @@ interface WEBGL_multi_draw {
    */
   multiDrawArraysInstancedWEBGL(
     mode: GLenum,
-    firstsList: Int32Array | GLint[],
+    firstsList: Int32Array | readonly GLint[],
     firstsOffset: number,
-    countsList: Int32Array | GLsizei[],
+    countsList: Int32Array | readonly GLsizei[],
     countsOffset: number,
-    instanceCountsList: Int32Array | GLsizei[],
+    instanceCountsList: Int32Array | readonly GLsizei[],
     instanceCountsOffset: number,
     drawcount: GLsizei,
   ): void;
@@ -9915,9 +9967,9 @@ interface WEBGL_multi_draw {
    */
   multiDrawArraysWEBGL(
     mode: GLenum,
-    firstsList: Int32Array | GLint[],
+    firstsList: Int32Array | readonly GLint[],
     firstsOffset: number,
-    countsList: Int32Array | GLsizei[],
+    countsList: Int32Array | readonly GLsizei[],
     countsOffset: number,
     drawcount: GLsizei,
   ): void;
@@ -9927,12 +9979,12 @@ interface WEBGL_multi_draw {
    */
   multiDrawElementsInstancedWEBGL(
     mode: GLenum,
-    countsList: Int32Array | GLsizei[],
+    countsList: Int32Array | readonly GLsizei[],
     countsOffset: number,
     type: GLenum,
-    offsetsList: Int32Array | GLsizei[],
+    offsetsList: Int32Array | readonly GLsizei[],
     offsetsOffset: number,
-    instanceCountsList: Int32Array | GLsizei[],
+    instanceCountsList: Int32Array | readonly GLsizei[],
     instanceCountsOffset: number,
     drawcount: GLsizei,
   ): void;
@@ -9942,10 +9994,10 @@ interface WEBGL_multi_draw {
    */
   multiDrawElementsWEBGL(
     mode: GLenum,
-    countsList: Int32Array | GLsizei[],
+    countsList: Int32Array | readonly GLsizei[],
     countsOffset: number,
     type: GLenum,
-    offsetsList: Int32Array | GLsizei[],
+    offsetsList: Int32Array | readonly GLsizei[],
     offsetsOffset: number,
     drawcount: GLsizei,
   ): void;
@@ -9960,7 +10012,7 @@ interface WebGL2RenderingContext
     WebGL2RenderingContextOverloads,
     WebGLRenderingContextBase {}
 
-declare var WebGL2RenderingContext: {
+declare const WebGL2RenderingContext: {
   prototype: WebGL2RenderingContext;
   new (): WebGL2RenderingContext;
   readonly READ_BUFFER: 0x0c02;
@@ -10777,7 +10829,7 @@ interface WebGL2RenderingContextBase {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawBuffers)
    */
-  drawBuffers(buffers: GLenum[]): void;
+  drawBuffers(buffers: readonly GLenum[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawElementsInstanced)
@@ -10843,16 +10895,16 @@ interface WebGL2RenderingContextBase {
     program: WebGLProgram,
     uniformBlockIndex: GLuint,
     pname: GLenum,
-  ): any;
+  ): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getActiveUniforms)
    */
   getActiveUniforms(
     program: WebGLProgram,
-    uniformIndices: GLuint[],
+    uniformIndices: readonly GLuint[],
     pname: GLenum,
-  ): any;
+  ): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getBufferSubData)
@@ -10873,7 +10925,7 @@ interface WebGL2RenderingContextBase {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getIndexedParameter)
    */
-  getIndexedParameter(target: GLenum, index: GLuint): any;
+  getIndexedParameter(target: GLenum, index: GLuint): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getInternalformatParameter)
@@ -10882,7 +10934,7 @@ interface WebGL2RenderingContextBase {
     target: GLenum,
     internalformat: GLenum,
     pname: GLenum,
-  ): any;
+  ): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getQuery)
@@ -10892,17 +10944,17 @@ interface WebGL2RenderingContextBase {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getQueryParameter)
    */
-  getQueryParameter(query: WebGLQuery, pname: GLenum): any;
+  getQueryParameter(query: WebGLQuery, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getSamplerParameter)
    */
-  getSamplerParameter(sampler: WebGLSampler, pname: GLenum): any;
+  getSamplerParameter(sampler: WebGLSampler, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getSyncParameter)
    */
-  getSyncParameter(sync: WebGLSync, pname: GLenum): any;
+  getSyncParameter(sync: WebGLSync, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getTransformFeedbackVarying)
@@ -10922,20 +10974,20 @@ interface WebGL2RenderingContextBase {
    */
   getUniformIndices(
     program: WebGLProgram,
-    uniformNames: string[],
-  ): GLuint[] | null;
+    uniformNames: readonly string[],
+  ): readonly GLuint[] | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateFramebuffer)
    */
-  invalidateFramebuffer(target: GLenum, attachments: GLenum[]): void;
+  invalidateFramebuffer(target: GLenum, attachments: readonly GLenum[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateSubFramebuffer)
    */
   invalidateSubFramebuffer(
     target: GLenum,
-    attachments: GLenum[],
+    attachments: readonly GLenum[],
     x: GLint,
     y: GLint,
     width: GLsizei,
@@ -11128,7 +11180,7 @@ interface WebGL2RenderingContextBase {
    */
   transformFeedbackVaryings(
     program: WebGLProgram,
-    varyings: string[],
+    varyings: readonly string[],
     bufferMode: GLenum,
   ): void;
   /**
@@ -11965,7 +12017,7 @@ interface WebGLActiveInfo {
   readonly type: GLenum;
 }
 
-declare var WebGLActiveInfo: {
+declare const WebGLActiveInfo: {
   prototype: WebGLActiveInfo;
   new (): WebGLActiveInfo;
 };
@@ -11978,7 +12030,7 @@ declare var WebGLActiveInfo: {
  */
 interface WebGLBuffer {}
 
-declare var WebGLBuffer: {
+declare const WebGLBuffer: {
   prototype: WebGLBuffer;
   new (): WebGLBuffer;
 };
@@ -11998,7 +12050,7 @@ interface WebGLContextEvent extends Event {
   readonly statusMessage: string;
 }
 
-declare var WebGLContextEvent: {
+declare const WebGLContextEvent: {
   prototype: WebGLContextEvent;
   new (type: string, eventInit?: WebGLContextEventInit): WebGLContextEvent;
 };
@@ -12011,7 +12063,7 @@ declare var WebGLContextEvent: {
  */
 interface WebGLFramebuffer {}
 
-declare var WebGLFramebuffer: {
+declare const WebGLFramebuffer: {
   prototype: WebGLFramebuffer;
   new (): WebGLFramebuffer;
 };
@@ -12025,7 +12077,7 @@ declare var WebGLFramebuffer: {
  */
 interface WebGLProgram {}
 
-declare var WebGLProgram: {
+declare const WebGLProgram: {
   prototype: WebGLProgram;
   new (): WebGLProgram;
 };
@@ -12033,7 +12085,7 @@ declare var WebGLProgram: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLQuery) */
 interface WebGLQuery {}
 
-declare var WebGLQuery: {
+declare const WebGLQuery: {
   prototype: WebGLQuery;
   new (): WebGLQuery;
 };
@@ -12046,7 +12098,7 @@ declare var WebGLQuery: {
  */
 interface WebGLRenderbuffer {}
 
-declare var WebGLRenderbuffer: {
+declare const WebGLRenderbuffer: {
   prototype: WebGLRenderbuffer;
   new (): WebGLRenderbuffer;
 };
@@ -12062,7 +12114,7 @@ interface WebGLRenderingContext
   extends WebGLRenderingContextBase,
     WebGLRenderingContextOverloads {}
 
-declare var WebGLRenderingContext: {
+declare const WebGLRenderingContext: {
   prototype: WebGLRenderingContext;
   new (): WebGLRenderingContext;
   readonly DEPTH_BUFFER_BIT: 0x00000100;
@@ -12704,7 +12756,7 @@ interface WebGLRenderingContextBase {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getAttachedShaders)
    */
-  getAttachedShaders(program: WebGLProgram): WebGLShader[] | null;
+  getAttachedShaders(program: WebGLProgram): readonly WebGLShader[] | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getAttribLocation)
@@ -12714,7 +12766,7 @@ interface WebGLRenderingContextBase {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getBufferParameter)
    */
-  getBufferParameter(target: GLenum, pname: GLenum): any;
+  getBufferParameter(target: GLenum, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getContextAttributes)
@@ -12813,7 +12865,7 @@ interface WebGLRenderingContextBase {
   getExtension(extensionName: 'WEBGL_draw_buffers'): WEBGL_draw_buffers | null;
   getExtension(extensionName: 'WEBGL_lose_context'): WEBGL_lose_context | null;
   getExtension(extensionName: 'WEBGL_multi_draw'): WEBGL_multi_draw | null;
-  getExtension(name: string): any;
+  getExtension(name: string): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getFramebufferAttachmentParameter)
@@ -12822,12 +12874,12 @@ interface WebGLRenderingContextBase {
     target: GLenum,
     attachment: GLenum,
     pname: GLenum,
-  ): any;
+  ): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getParameter)
    */
-  getParameter(pname: GLenum): any;
+  getParameter(pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getProgramInfoLog)
@@ -12837,12 +12889,12 @@ interface WebGLRenderingContextBase {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getProgramParameter)
    */
-  getProgramParameter(program: WebGLProgram, pname: GLenum): any;
+  getProgramParameter(program: WebGLProgram, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getRenderbufferParameter)
    */
-  getRenderbufferParameter(target: GLenum, pname: GLenum): any;
+  getRenderbufferParameter(target: GLenum, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderInfoLog)
@@ -12852,7 +12904,7 @@ interface WebGLRenderingContextBase {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderParameter)
    */
-  getShaderParameter(shader: WebGLShader, pname: GLenum): any;
+  getShaderParameter(shader: WebGLShader, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderPrecisionFormat)
@@ -12870,17 +12922,17 @@ interface WebGLRenderingContextBase {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getSupportedExtensions)
    */
-  getSupportedExtensions(): string[] | null;
+  getSupportedExtensions(): readonly string[] | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getTexParameter)
    */
-  getTexParameter(target: GLenum, pname: GLenum): any;
+  getTexParameter(target: GLenum, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getUniform)
    */
-  getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;
+  getUniform(program: WebGLProgram, location: WebGLUniformLocation): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getUniformLocation)
@@ -12893,7 +12945,7 @@ interface WebGLRenderingContextBase {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getVertexAttrib)
    */
-  getVertexAttrib(index: GLuint, pname: GLenum): any;
+  getVertexAttrib(index: GLuint, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getVertexAttribOffset)
@@ -13652,7 +13704,7 @@ interface WebGLRenderingContextOverloads {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLSampler) */
 interface WebGLSampler {}
 
-declare var WebGLSampler: {
+declare const WebGLSampler: {
   prototype: WebGLSampler;
   new (): WebGLSampler;
 };
@@ -13665,7 +13717,7 @@ declare var WebGLSampler: {
  */
 interface WebGLShader {}
 
-declare var WebGLShader: {
+declare const WebGLShader: {
   prototype: WebGLShader;
   new (): WebGLShader;
 };
@@ -13695,7 +13747,7 @@ interface WebGLShaderPrecisionFormat {
   readonly rangeMin: GLint;
 }
 
-declare var WebGLShaderPrecisionFormat: {
+declare const WebGLShaderPrecisionFormat: {
   prototype: WebGLShaderPrecisionFormat;
   new (): WebGLShaderPrecisionFormat;
 };
@@ -13703,7 +13755,7 @@ declare var WebGLShaderPrecisionFormat: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLSync) */
 interface WebGLSync {}
 
-declare var WebGLSync: {
+declare const WebGLSync: {
   prototype: WebGLSync;
   new (): WebGLSync;
 };
@@ -13716,7 +13768,7 @@ declare var WebGLSync: {
  */
 interface WebGLTexture {}
 
-declare var WebGLTexture: {
+declare const WebGLTexture: {
   prototype: WebGLTexture;
   new (): WebGLTexture;
 };
@@ -13727,7 +13779,7 @@ declare var WebGLTexture: {
  */
 interface WebGLTransformFeedback {}
 
-declare var WebGLTransformFeedback: {
+declare const WebGLTransformFeedback: {
   prototype: WebGLTransformFeedback;
   new (): WebGLTransformFeedback;
 };
@@ -13741,7 +13793,7 @@ declare var WebGLTransformFeedback: {
  */
 interface WebGLUniformLocation {}
 
-declare var WebGLUniformLocation: {
+declare const WebGLUniformLocation: {
   prototype: WebGLUniformLocation;
   new (): WebGLUniformLocation;
 };
@@ -13752,7 +13804,7 @@ declare var WebGLUniformLocation: {
  */
 interface WebGLVertexArrayObject {}
 
-declare var WebGLVertexArrayObject: {
+declare const WebGLVertexArrayObject: {
   prototype: WebGLVertexArrayObject;
   new (): WebGLVertexArrayObject;
 };
@@ -13811,22 +13863,22 @@ interface WebSocket extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/close_event)
    */
-  onclose: ((this: WebSocket, ev: CloseEvent) => any) | null;
+  onclose: ((this: WebSocket, ev: CloseEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/error_event)
    */
-  onerror: ((this: WebSocket, ev: Event) => any) | null;
+  onerror: ((this: WebSocket, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/message_event)
    */
-  onmessage: ((this: WebSocket, ev: MessageEvent) => any) | null;
+  onmessage: ((this: WebSocket, ev: MessageEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/open_event)
    */
-  onopen: ((this: WebSocket, ev: Event) => any) | null;
+  onopen: ((this: WebSocket, ev: Event) => unknown) | null;
   /**
    * Returns the subprotocol selected by the server, if any. It can be used in
    * conjunction with the array form of the constructor's second argument to
@@ -13871,7 +13923,7 @@ interface WebSocket extends EventTarget {
   readonly CLOSED: 3;
   addEventListener<K extends keyof WebSocketEventMap>(
     type: K,
-    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any,
+    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13881,7 +13933,7 @@ interface WebSocket extends EventTarget {
   ): void;
   removeEventListener<K extends keyof WebSocketEventMap>(
     type: K,
-    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any,
+    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13891,9 +13943,9 @@ interface WebSocket extends EventTarget {
   ): void;
 }
 
-declare var WebSocket: {
+declare const WebSocket: {
   prototype: WebSocket;
-  new (url: string | URL, protocols?: string | string[]): WebSocket;
+  new (url: string | URL, protocols?: string | readonly string[]): WebSocket;
   readonly CONNECTING: 0;
   readonly OPEN: 1;
   readonly CLOSING: 2;
@@ -13952,7 +14004,7 @@ interface WebTransport {
   ): Promise<WritableStream>;
 }
 
-declare var WebTransport: {
+declare const WebTransport: {
   prototype: WebTransport;
   new (url: string | URL, options?: WebTransportOptions): WebTransport;
 };
@@ -13976,7 +14028,7 @@ interface WebTransportBidirectionalStream {
   readonly writable: WritableStream;
 }
 
-declare var WebTransportBidirectionalStream: {
+declare const WebTransportBidirectionalStream: {
   prototype: WebTransportBidirectionalStream;
   new (): WebTransportBidirectionalStream;
 };
@@ -14025,7 +14077,7 @@ interface WebTransportDatagramDuplexStream {
   readonly writable: WritableStream;
 }
 
-declare var WebTransportDatagramDuplexStream: {
+declare const WebTransportDatagramDuplexStream: {
   prototype: WebTransportDatagramDuplexStream;
   new (): WebTransportDatagramDuplexStream;
 };
@@ -14048,7 +14100,7 @@ interface WebTransportError extends DOMException {
   readonly streamErrorCode: number | null;
 }
 
-declare var WebTransportError: {
+declare const WebTransportError: {
   prototype: WebTransportError;
   new (message?: string, options?: WebTransportErrorOptions): WebTransportError;
 };
@@ -14084,7 +14136,7 @@ interface WindowClient extends Client {
   navigate(url: string | URL): Promise<WindowClient | null>;
 }
 
-declare var WindowClient: {
+declare const WindowClient: {
   prototype: WindowClient;
   new (): WindowClient;
 };
@@ -14149,21 +14201,24 @@ interface WindowOrWorkerGlobalScope {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/queueMicrotask) */
   queueMicrotask(callback: VoidFunction): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/reportError) */
-  reportError(e: any): void;
+  reportError(e: unknown): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/setInterval) */
   setInterval(
     handler: TimerHandler,
     timeout?: number,
-    ...arguments: any[]
+    ...arguments: readonly unknown[]
   ): number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/setTimeout) */
   setTimeout(
     handler: TimerHandler,
     timeout?: number,
-    ...arguments: any[]
+    ...arguments: readonly unknown[]
   ): number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/structuredClone) */
-  structuredClone<T = any>(value: T, options?: StructuredSerializeOptions): T;
+  structuredClone<T = unknown>(
+    value: T,
+    options?: StructuredSerializeOptions,
+  ): T;
 }
 
 interface WorkerEventMap extends AbstractWorkerEventMap {
@@ -14184,12 +14239,12 @@ interface Worker extends EventTarget, AbstractWorker {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Worker/message_event)
    */
-  onmessage: ((this: Worker, ev: MessageEvent) => any) | null;
+  onmessage: ((this: Worker, ev: MessageEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Worker/messageerror_event)
    */
-  onmessageerror: ((this: Worker, ev: MessageEvent) => any) | null;
+  onmessageerror: ((this: Worker, ev: MessageEvent) => unknown) | null;
   /**
    * Clones message and transmits it to worker's global environment. transfer
    * can be passed as a list of objects that are to be transferred rather than
@@ -14198,8 +14253,8 @@ interface Worker extends EventTarget, AbstractWorker {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Worker/postMessage)
    */
-  postMessage(message: any, transfer: Transferable[]): void;
-  postMessage(message: any, options?: StructuredSerializeOptions): void;
+  postMessage(message: unknown, transfer: readonly Transferable[]): void;
+  postMessage(message: unknown, options?: StructuredSerializeOptions): void;
   /**
    * Aborts worker's associated global environment.
    *
@@ -14209,7 +14264,7 @@ interface Worker extends EventTarget, AbstractWorker {
   terminate(): void;
   addEventListener<K extends keyof WorkerEventMap>(
     type: K,
-    listener: (this: Worker, ev: WorkerEventMap[K]) => any,
+    listener: (this: Worker, ev: WorkerEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14219,7 +14274,7 @@ interface Worker extends EventTarget, AbstractWorker {
   ): void;
   removeEventListener<K extends keyof WorkerEventMap>(
     type: K,
-    listener: (this: Worker, ev: WorkerEventMap[K]) => any,
+    listener: (this: Worker, ev: WorkerEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14229,7 +14284,7 @@ interface Worker extends EventTarget, AbstractWorker {
   ): void;
 }
 
-declare var Worker: {
+declare const Worker: {
   prototype: Worker;
   new (scriptURL: string | URL, options?: WorkerOptions): Worker;
 };
@@ -14274,35 +14329,35 @@ interface WorkerGlobalScope
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/error_event)
    */
-  onerror: ((this: WorkerGlobalScope, ev: ErrorEvent) => any) | null;
+  onerror: ((this: WorkerGlobalScope, ev: ErrorEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/languagechange_event)
    */
-  onlanguagechange: ((this: WorkerGlobalScope, ev: Event) => any) | null;
+  onlanguagechange: ((this: WorkerGlobalScope, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/offline_event)
    */
-  onoffline: ((this: WorkerGlobalScope, ev: Event) => any) | null;
+  onoffline: ((this: WorkerGlobalScope, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/online_event)
    */
-  ononline: ((this: WorkerGlobalScope, ev: Event) => any) | null;
+  ononline: ((this: WorkerGlobalScope, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/rejectionhandled_event)
    */
   onrejectionhandled:
-    | ((this: WorkerGlobalScope, ev: PromiseRejectionEvent) => any)
+    | ((this: WorkerGlobalScope, ev: PromiseRejectionEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/unhandledrejection_event)
    */
   onunhandledrejection:
-    | ((this: WorkerGlobalScope, ev: PromiseRejectionEvent) => any)
+    | ((this: WorkerGlobalScope, ev: PromiseRejectionEvent) => unknown)
     | null;
   /**
    * Returns workerGlobal.
@@ -14324,7 +14379,7 @@ interface WorkerGlobalScope
     listener: (
       this: WorkerGlobalScope,
       ev: WorkerGlobalScopeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14337,7 +14392,7 @@ interface WorkerGlobalScope
     listener: (
       this: WorkerGlobalScope,
       ev: WorkerGlobalScopeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14347,7 +14402,7 @@ interface WorkerGlobalScope
   ): void;
 }
 
-declare var WorkerGlobalScope: {
+declare const WorkerGlobalScope: {
   prototype: WorkerGlobalScope;
   new (): WorkerGlobalScope;
 };
@@ -14408,7 +14463,7 @@ interface WorkerLocation {
   readonly search: string;
 }
 
-declare var WorkerLocation: {
+declare const WorkerLocation: {
   prototype: WorkerLocation;
   new (): WorkerLocation;
 };
@@ -14441,7 +14496,7 @@ interface WorkerNavigator
   readonly permissions: Permissions;
 }
 
-declare var WorkerNavigator: {
+declare const WorkerNavigator: {
   prototype: WorkerNavigator;
   new (): WorkerNavigator;
 };
@@ -14453,7 +14508,7 @@ declare var WorkerNavigator: {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream)
  */
-interface WritableStream<W = any> {
+interface WritableStream<W = unknown> {
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/locked)
@@ -14463,7 +14518,7 @@ interface WritableStream<W = any> {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/abort)
    */
-  abort(reason?: any): Promise<void>;
+  abort(reason?: unknown): Promise<void>;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/close)
@@ -14476,9 +14531,9 @@ interface WritableStream<W = any> {
   getWriter(): WritableStreamDefaultWriter<W>;
 }
 
-declare var WritableStream: {
+declare const WritableStream: {
   prototype: WritableStream;
-  new <W = any>(
+  new <W = unknown>(
     underlyingSink?: UnderlyingSink<W>,
     strategy?: QueuingStrategy<W>,
   ): WritableStream<W>;
@@ -14503,10 +14558,10 @@ interface WritableStreamDefaultController {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultController/error)
    */
-  error(e?: any): void;
+  error(e?: unknown): void;
 }
 
-declare var WritableStreamDefaultController: {
+declare const WritableStreamDefaultController: {
   prototype: WritableStreamDefaultController;
   new (): WritableStreamDefaultController;
 };
@@ -14520,7 +14575,7 @@ declare var WritableStreamDefaultController: {
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter)
  */
-interface WritableStreamDefaultWriter<W = any> {
+interface WritableStreamDefaultWriter<W = unknown> {
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/closed)
@@ -14540,7 +14595,7 @@ interface WritableStreamDefaultWriter<W = any> {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/abort)
    */
-  abort(reason?: any): Promise<void>;
+  abort(reason?: unknown): Promise<void>;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/close)
@@ -14558,9 +14613,9 @@ interface WritableStreamDefaultWriter<W = any> {
   write(chunk?: W): Promise<void>;
 }
 
-declare var WritableStreamDefaultWriter: {
+declare const WritableStreamDefaultWriter: {
   prototype: WritableStreamDefaultWriter;
-  new <W = any>(stream: WritableStream<W>): WritableStreamDefaultWriter<W>;
+  new <W = unknown>(stream: WritableStream<W>): WritableStreamDefaultWriter<W>;
 };
 
 interface XMLHttpRequestEventMap extends XMLHttpRequestEventTargetEventMap {
@@ -14580,7 +14635,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/readystatechange_event)
    */
-  onreadystatechange: ((this: XMLHttpRequest, ev: Event) => any) | null;
+  onreadystatechange: ((this: XMLHttpRequest, ev: Event) => unknown) | null;
   /**
    * Returns client's state.
    *
@@ -14594,7 +14649,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/response)
    */
-  readonly response: any;
+  readonly response: unknown;
   /**
    * Returns response as text.
    *
@@ -14706,9 +14761,9 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/open)
    */
-  open(method: string, url: string | URL): void;
+  open(method: 'post' | 'get' | 'dialog', url: string | URL): void;
   open(
-    method: string,
+    method: 'post' | 'get' | 'dialog',
     url: string | URL,
     async: boolean,
     username?: string | null,
@@ -14755,7 +14810,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
   readonly DONE: 4;
   addEventListener<K extends keyof XMLHttpRequestEventMap>(
     type: K,
-    listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any,
+    listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14765,7 +14820,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
   ): void;
   removeEventListener<K extends keyof XMLHttpRequestEventMap>(
     type: K,
-    listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any,
+    listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14775,7 +14830,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
   ): void;
 }
 
-declare var XMLHttpRequest: {
+declare const XMLHttpRequest: {
   prototype: XMLHttpRequest;
   new (): XMLHttpRequest;
   readonly UNSENT: 0;
@@ -14800,19 +14855,19 @@ interface XMLHttpRequestEventTargetEventMap {
  * Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequestEventTarget)
  */
 interface XMLHttpRequestEventTarget extends EventTarget {
-  onabort: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onerror: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onload: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onloadstart: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
+  onabort: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onerror: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onload: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onloadstart: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
   addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(
     type: K,
     listener: (
       this: XMLHttpRequestEventTarget,
       ev: XMLHttpRequestEventTargetEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14825,7 +14880,7 @@ interface XMLHttpRequestEventTarget extends EventTarget {
     listener: (
       this: XMLHttpRequestEventTarget,
       ev: XMLHttpRequestEventTargetEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14835,7 +14890,7 @@ interface XMLHttpRequestEventTarget extends EventTarget {
   ): void;
 }
 
-declare var XMLHttpRequestEventTarget: {
+declare const XMLHttpRequestEventTarget: {
   prototype: XMLHttpRequestEventTarget;
   new (): XMLHttpRequestEventTarget;
 };
@@ -14850,7 +14905,7 @@ interface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {
     listener: (
       this: XMLHttpRequestUpload,
       ev: XMLHttpRequestEventTargetEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14863,7 +14918,7 @@ interface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {
     listener: (
       this: XMLHttpRequestUpload,
       ev: XMLHttpRequestEventTargetEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14873,7 +14928,7 @@ interface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {
   ): void;
 }
 
-declare var XMLHttpRequestUpload: {
+declare const XMLHttpRequestUpload: {
   prototype: XMLHttpRequestUpload;
   new (): XMLHttpRequestUpload;
 };
@@ -14884,7 +14939,7 @@ interface Console {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/assert_static)
    */
-  assert(condition?: boolean, ...data: any[]): void;
+  assert(condition?: boolean, ...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/clear_static)
@@ -14904,32 +14959,32 @@ interface Console {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/debug_static)
    */
-  debug(...data: any[]): void;
+  debug(...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/dir_static)
    */
-  dir(item?: any, options?: any): void;
+  dir(item?: unknown, options?: unknown): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/dirxml_static)
    */
-  dirxml(...data: any[]): void;
+  dirxml(...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/error_static)
    */
-  error(...data: any[]): void;
+  error(...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/group_static)
    */
-  group(...data: any[]): void;
+  group(...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/groupCollapsed_static)
    */
-  groupCollapsed(...data: any[]): void;
+  groupCollapsed(...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/groupEnd_static)
@@ -14939,17 +14994,17 @@ interface Console {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/info_static)
    */
-  info(...data: any[]): void;
+  info(...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/log_static)
    */
-  log(...data: any[]): void;
+  log(...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/table_static)
    */
-  table(tabularData?: any, properties?: string[]): void;
+  table(tabularData?: unknown, properties?: readonly string[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/time_static)
@@ -14964,26 +15019,26 @@ interface Console {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/timeLog_static)
    */
-  timeLog(label?: string, ...data: any[]): void;
+  timeLog(label?: string, ...data: readonly unknown[]): void;
   timeStamp(label?: string): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/trace_static)
    */
-  trace(...data: any[]): void;
+  trace(...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/warn_static)
    */
-  warn(...data: any[]): void;
+  warn(...data: readonly unknown[]): void;
 }
 
-declare var console: Console;
+declare const console: Console;
 
 declare namespace WebAssembly {
   interface CompileError extends Error {}
 
-  var CompileError: {
+  const CompileError: {
     prototype: CompileError;
     new (message?: string): CompileError;
     (message?: string): CompileError;
@@ -14998,7 +15053,7 @@ declare namespace WebAssembly {
     valueOf(): ValueTypeMap[T];
   }
 
-  var Global: {
+  const Global: {
     prototype: Global;
     new <T extends ValueType = ValueType>(
       descriptor: GlobalDescriptor<T>,
@@ -15018,14 +15073,14 @@ declare namespace WebAssembly {
     readonly exports: Exports;
   }
 
-  var Instance: {
+  const Instance: {
     prototype: Instance;
     new (module: Module, importObject?: Imports): Instance;
   };
 
   interface LinkError extends Error {}
 
-  var LinkError: {
+  const LinkError: {
     prototype: LinkError;
     new (message?: string): LinkError;
     (message?: string): LinkError;
@@ -15048,7 +15103,7 @@ declare namespace WebAssembly {
     grow(delta: number): number;
   }
 
-  var Memory: {
+  const Memory: {
     prototype: Memory;
     new (descriptor: MemoryDescriptor): Memory;
   };
@@ -15059,29 +15114,32 @@ declare namespace WebAssembly {
    */
   interface Module {}
 
-  var Module: {
+  const Module: {
     prototype: Module;
     new (bytes: BufferSource): Module;
     /**
      * [MDN
      * Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module/customSections_static)
      */
-    customSections(moduleObject: Module, sectionName: string): ArrayBuffer[];
+    customSections(
+      moduleObject: Module,
+      sectionName: string,
+    ): readonly ArrayBuffer[];
     /**
      * [MDN
      * Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module/exports_static)
      */
-    exports(moduleObject: Module): ModuleExportDescriptor[];
+    exports(moduleObject: Module): readonly ModuleExportDescriptor[];
     /**
      * [MDN
      * Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module/imports_static)
      */
-    imports(moduleObject: Module): ModuleImportDescriptor[];
+    imports(moduleObject: Module): readonly ModuleImportDescriptor[];
   };
 
   interface RuntimeError extends Error {}
 
-  var RuntimeError: {
+  const RuntimeError: {
     prototype: RuntimeError;
     new (message?: string): RuntimeError;
     (message?: string): RuntimeError;
@@ -15101,22 +15159,22 @@ declare namespace WebAssembly {
      * [MDN
      * Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/get)
      */
-    get(index: number): any;
+    get(index: number): unknown;
     /**
      * [MDN
      * Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/grow)
      */
-    grow(delta: number, value?: any): number;
+    grow(delta: number, value?: unknown): number;
     /**
      * [MDN
      * Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/set)
      */
-    set(index: number, value?: any): void;
+    set(index: number, value?: unknown): void;
   }
 
-  var Table: {
+  const Table: {
     prototype: Table;
-    new (descriptor: TableDescriptor, value?: any): Table;
+    new (descriptor: TableDescriptor, value?: unknown): Table;
   };
 
   interface GlobalDescriptor<T extends ValueType = ValueType> {
@@ -15149,7 +15207,7 @@ declare namespace WebAssembly {
 
   interface ValueTypeMap {
     anyfunc: Function;
-    externref: any;
+    externref: unknown;
     f32: number;
     f64: number;
     i32: number;
@@ -15226,7 +15284,7 @@ interface FrameRequestCallback {
 }
 
 interface LockGrantedCallback {
-  (lock: Lock | null): any;
+  (lock: Lock | null): unknown;
 }
 
 interface OnErrorEventHandlerNonNull {
@@ -15236,19 +15294,19 @@ interface OnErrorEventHandlerNonNull {
     lineno?: number,
     colno?: number,
     error?: Error,
-  ): any;
+  ): unknown;
 }
 
 interface PerformanceObserverCallback {
   (entries: PerformanceObserverEntryList, observer: PerformanceObserver): void;
 }
 
-interface QueuingStrategySize<T = any> {
+interface QueuingStrategySize<T = unknown> {
   (chunk: T): number;
 }
 
 interface ReportingObserverCallback {
-  (reports: Report[], observer: ReportingObserver): void;
+  (reports: readonly Report[], observer: ReportingObserver): void;
 }
 
 interface TransformerFlushCallback<O> {
@@ -15256,7 +15314,7 @@ interface TransformerFlushCallback<O> {
 }
 
 interface TransformerStartCallback<O> {
-  (controller: TransformStreamDefaultController<O>): any;
+  (controller: TransformStreamDefaultController<O>): unknown;
 }
 
 interface TransformerTransformCallback<I, O> {
@@ -15267,7 +15325,7 @@ interface TransformerTransformCallback<I, O> {
 }
 
 interface UnderlyingSinkAbortCallback {
-  (reason?: any): void | PromiseLike<void>;
+  (reason?: unknown): void | PromiseLike<void>;
 }
 
 interface UnderlyingSinkCloseCallback {
@@ -15275,7 +15333,7 @@ interface UnderlyingSinkCloseCallback {
 }
 
 interface UnderlyingSinkStartCallback {
-  (controller: WritableStreamDefaultController): any;
+  (controller: WritableStreamDefaultController): unknown;
 }
 
 interface UnderlyingSinkWriteCallback<W> {
@@ -15286,7 +15344,7 @@ interface UnderlyingSinkWriteCallback<W> {
 }
 
 interface UnderlyingSourceCancelCallback {
-  (reason?: any): void | PromiseLike<void>;
+  (reason?: unknown): void | PromiseLike<void>;
 }
 
 interface UnderlyingSourcePullCallback<R> {
@@ -15294,7 +15352,7 @@ interface UnderlyingSourcePullCallback<R> {
 }
 
 interface UnderlyingSourceStartCallback<R> {
-  (controller: ReadableStreamController<R>): any;
+  (controller: ReadableStreamController<R>): unknown;
 }
 
 interface VideoFrameOutputCallback {
@@ -15316,27 +15374,27 @@ interface WebCodecsErrorCallback {
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/name)
  */
-declare var name: string;
+declare const name: string;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/message_event)
  */
-declare var onmessage:
-  | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any)
+declare const onmessage:
+  | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/messageerror_event)
  */
-declare var onmessageerror:
-  | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any)
+declare const onmessageerror:
+  | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/rtctransform_event)
  */
-declare var onrtctransform:
-  | ((this: DedicatedWorkerGlobalScope, ev: RTCTransformEvent) => any)
+declare const onrtctransform:
+  | ((this: DedicatedWorkerGlobalScope, ev: RTCTransformEvent) => unknown)
   | null;
 /**
  * Aborts dedicatedWorkerGlobal.
@@ -15353,9 +15411,12 @@ declare function close(): void;
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/postMessage)
  */
-declare function postMessage(message: any, transfer: Transferable[]): void;
 declare function postMessage(
-  message: any,
+  message: unknown,
+  transfer: readonly Transferable[],
+): void;
+declare function postMessage(
+  message: unknown,
   options?: StructuredSerializeOptions,
 ): void;
 /**
@@ -15373,55 +15434,55 @@ declare function dispatchEvent(event: Event): boolean;
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/location)
  */
-declare var location: WorkerLocation;
+declare const location: WorkerLocation;
 /**
  * Returns workerGlobal's WorkerNavigator object.
  *
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/navigator)
  */
-declare var navigator: WorkerNavigator;
+declare const navigator: WorkerNavigator;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/error_event)
  */
-declare var onerror:
-  | ((this: DedicatedWorkerGlobalScope, ev: ErrorEvent) => any)
+declare const onerror:
+  | ((this: DedicatedWorkerGlobalScope, ev: ErrorEvent) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/languagechange_event)
  */
-declare var onlanguagechange:
-  | ((this: DedicatedWorkerGlobalScope, ev: Event) => any)
+declare const onlanguagechange:
+  | ((this: DedicatedWorkerGlobalScope, ev: Event) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/offline_event)
  */
-declare var onoffline:
-  | ((this: DedicatedWorkerGlobalScope, ev: Event) => any)
+declare const onoffline:
+  | ((this: DedicatedWorkerGlobalScope, ev: Event) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/online_event)
  */
-declare var ononline:
-  | ((this: DedicatedWorkerGlobalScope, ev: Event) => any)
+declare const ononline:
+  | ((this: DedicatedWorkerGlobalScope, ev: Event) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/rejectionhandled_event)
  */
-declare var onrejectionhandled:
-  | ((this: DedicatedWorkerGlobalScope, ev: PromiseRejectionEvent) => any)
+declare const onrejectionhandled:
+  | ((this: DedicatedWorkerGlobalScope, ev: PromiseRejectionEvent) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/unhandledrejection_event)
  */
-declare var onunhandledrejection:
-  | ((this: DedicatedWorkerGlobalScope, ev: PromiseRejectionEvent) => any)
+declare const onunhandledrejection:
+  | ((this: DedicatedWorkerGlobalScope, ev: PromiseRejectionEvent) => unknown)
   | null;
 /**
  * Returns workerGlobal.
@@ -15429,7 +15490,7 @@ declare var onunhandledrejection:
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/self)
  */
-declare var self: WorkerGlobalScope & typeof globalThis;
+declare const self: WorkerGlobalScope & typeof globalThis;
 /**
  * Fetches each URL in urls, executes them one-by-one in the order they are
  * passed, and then returns (or throws if something went amiss).
@@ -15448,34 +15509,34 @@ declare function importScripts(...urls: (string | URL)[]): void;
  */
 declare function dispatchEvent(event: Event): boolean;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fonts) */
-declare var fonts: FontFaceSet;
+declare const fonts: FontFaceSet;
 /**
  * Available only in secure contexts.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/caches)
  */
-declare var caches: CacheStorage;
+declare const caches: CacheStorage;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/crossOriginIsolated)
  */
-declare var crossOriginIsolated: boolean;
+declare const crossOriginIsolated: boolean;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/crypto) */
-declare var crypto: Crypto;
+declare const crypto: Crypto;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/indexedDB) */
-declare var indexedDB: IDBFactory;
+declare const indexedDB: IDBFactory;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/isSecureContext)
  */
-declare var isSecureContext: boolean;
+declare const isSecureContext: boolean;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/origin) */
-declare var origin: string;
+declare const origin: string;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/performance)
  */
-declare var performance: Performance;
+declare const performance: Performance;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/atob) */
 declare function atob(data: string): string;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/btoa) */
@@ -15505,21 +15566,21 @@ declare function fetch(
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/queueMicrotask) */
 declare function queueMicrotask(callback: VoidFunction): void;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/reportError) */
-declare function reportError(e: any): void;
+declare function reportError(e: unknown): void;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/setInterval) */
 declare function setInterval(
   handler: TimerHandler,
   timeout?: number,
-  ...arguments: any[]
+  ...arguments: readonly unknown[]
 ): number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/setTimeout) */
 declare function setTimeout(
   handler: TimerHandler,
   timeout?: number,
-  ...arguments: any[]
+  ...arguments: readonly unknown[]
 ): number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/structuredClone) */
-declare function structuredClone<T = any>(
+declare function structuredClone<T = unknown>(
   value: T,
   options?: StructuredSerializeOptions,
 ): T;
@@ -15540,7 +15601,7 @@ declare function addEventListener<
   listener: (
     this: DedicatedWorkerGlobalScope,
     ev: DedicatedWorkerGlobalScopeEventMap[K],
-  ) => any,
+  ) => unknown,
   options?: boolean | AddEventListenerOptions,
 ): void;
 declare function addEventListener(
@@ -15555,7 +15616,7 @@ declare function removeEventListener<
   listener: (
     this: DedicatedWorkerGlobalScope,
     ev: DedicatedWorkerGlobalScopeEventMap[K],
-  ) => any,
+  ) => unknown,
   options?: boolean | EventListenerOptions,
 ): void;
 declare function removeEventListener(
@@ -15578,7 +15639,7 @@ type DOMHighResTimeStamp = number;
 type EpochTimeStamp = number;
 type EventListenerOrEventListenerObject = EventListener | EventListenerObject;
 type FileSystemWriteChunkType = BufferSource | Blob | string | WriteParams;
-type Float32List = Float32Array | GLfloat[];
+type Float32List = Float32Array | readonly GLfloat[];
 type FormDataEntryValue = File | string;
 type GLbitfield = number;
 type GLboolean = boolean;
@@ -15593,10 +15654,18 @@ type GLsizeiptr = number;
 type GLuint = number;
 type GLuint64 = number;
 type HashAlgorithmIdentifier = AlgorithmIdentifier;
-type HeadersInit = [string, string][] | Record<string, string> | Headers;
-type IDBValidKey = number | string | Date | BufferSource | IDBValidKey[];
+type HeadersInit =
+  | readonly (readonly [string, string])[]
+  | Record<string, string>
+  | Headers;
+type IDBValidKey =
+  | number
+  | string
+  | Date
+  | BufferSource
+  | readonly IDBValidKey[];
 type ImageBitmapSource = CanvasImageSource | Blob | ImageData;
-type Int32List = Int32Array | GLint[];
+type Int32List = Int32Array | readonly GLint[];
 type MessageEventSource = MessagePort | ServiceWorker;
 type NamedCurve = string;
 type OffscreenRenderingContext =
@@ -15605,7 +15674,7 @@ type OffscreenRenderingContext =
   | WebGLRenderingContext
   | WebGL2RenderingContext;
 type OnErrorEventHandler = OnErrorEventHandlerNonNull | null;
-type PerformanceEntryList = PerformanceEntry[];
+type PerformanceEntryList = readonly PerformanceEntry[];
 type PushMessageDataInit = BufferSource | string;
 type ReadableStreamController<T> =
   | ReadableStreamDefaultController<T>
@@ -15616,7 +15685,7 @@ type ReadableStreamReadResult<T> =
 type ReadableStreamReader<T> =
   | ReadableStreamDefaultReader<T>
   | ReadableStreamBYOBReader;
-type ReportList = Report[];
+type ReportList = readonly Report[];
 type RequestInfo = Request | string;
 type TexImageSource = ImageBitmap | ImageData | OffscreenCanvas | VideoFrame;
 type TimerHandler = string | Function;
@@ -15631,7 +15700,7 @@ type Transferable =
   | AudioData
   | VideoFrame
   | ArrayBuffer;
-type Uint32List = Uint32Array | GLuint[];
+type Uint32List = Uint32Array | readonly GLuint[];
 type XMLHttpRequestBodyInit =
   | Blob
   | BufferSource
