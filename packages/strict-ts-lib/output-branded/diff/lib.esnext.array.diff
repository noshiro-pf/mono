@@ -1,19 +1,5 @@
-/*! *****************************************************************************
-Copyright (c) Microsoft Corporation. All rights reserved.
-Licensed under the Apache License, Version 2.0 (the "License"); you may not use
-this file except in compliance with the License. You may obtain a copy of the
-License at http://www.apache.org/licenses/LICENSE-2.0
-
-THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
-WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
-MERCHANTABLITY OR NON-INFRINGEMENT.
-
-See the Apache Version 2.0 License for specific language governing permissions
-and limitations under the License.
-***************************************************************************** */
-
 /// <reference no-default-lib="true"/>
+/// <reference types="@noshiro/ts-type-utils" />
 
 interface ArrayConstructor {
   /**
@@ -27,7 +13,7 @@ interface ArrayConstructor {
       | AsyncIterable<T>
       | Iterable<T | PromiseLike<T>>
       | ArrayLike<T | PromiseLike<T>>,
-  ): Promise<T[]>;
+  ): Promise<readonly T[]>;
 
   /**
    * Creates an array from an async iterator or iterable object.
@@ -42,6 +28,6 @@ interface ArrayConstructor {
   fromAsync<T, U>(
     iterableOrArrayLike: AsyncIterable<T> | Iterable<T> | ArrayLike<T>,
     mapFn: (value: Awaited<T>) => U,
-    thisArg?: any,
-  ): Promise<Awaited<U>[]>;
+    thisArg?: unknown,
+  ): Promise<readonly Awaited<U>[]>;
 }
