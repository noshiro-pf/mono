@@ -1,34 +1,24 @@
-/*! *****************************************************************************
-Copyright (c) Microsoft Corporation. All rights reserved.
-Licensed under the Apache License, Version 2.0 (the "License"); you may not use
-this file except in compliance with the License. You may obtain a copy of the
-License at http://www.apache.org/licenses/LICENSE-2.0
-
-THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
-WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
-MERCHANTABLITY OR NON-INFRINGEMENT.
-
-See the Apache Version 2.0 License for specific language governing permissions
-and limitations under the License.
-***************************************************************************** */
-
 /// <reference no-default-lib="true"/>
+/// <reference types="@noshiro/ts-type-utils" />
 
 declare namespace Intl {
   interface NumberFormatOptionsUseGroupingRegistry {
-    min2: never;
-    auto: never;
-    always: never;
+    readonly min2: never;
+    readonly auto: never;
+    readonly always: never;
   }
 
   interface NumberFormatOptionsSignDisplayRegistry {
-    negative: never;
+    readonly negative: never;
   }
 
   interface NumberFormatOptions {
-    roundingPriority?: 'auto' | 'morePrecision' | 'lessPrecision' | undefined;
-    roundingIncrement?:
+    readonly roundingPriority?:
+      | 'auto'
+      | 'morePrecision'
+      | 'lessPrecision'
+      | undefined;
+    readonly roundingIncrement?:
       | 1
       | 2
       | 5
@@ -45,7 +35,7 @@ declare namespace Intl {
       | 2500
       | 5000
       | undefined;
-    roundingMode?:
+    readonly roundingMode?:
       | 'ceil'
       | 'floor'
       | 'expand'
@@ -56,12 +46,12 @@ declare namespace Intl {
       | 'halfTrunc'
       | 'halfEven'
       | undefined;
-    trailingZeroDisplay?: 'auto' | 'stripIfInteger' | undefined;
+    readonly trailingZeroDisplay?: 'auto' | 'stripIfInteger' | undefined;
   }
 
   interface ResolvedNumberFormatOptions {
-    roundingPriority: 'auto' | 'morePrecision' | 'lessPrecision';
-    roundingMode:
+    readonly roundingPriority: 'auto' | 'morePrecision' | 'lessPrecision';
+    readonly roundingMode:
       | 'ceil'
       | 'floor'
       | 'expand'
@@ -71,7 +61,7 @@ declare namespace Intl {
       | 'halfExpand'
       | 'halfTrunc'
       | 'halfEven';
-    roundingIncrement:
+    readonly roundingIncrement:
       | 1
       | 2
       | 5
@@ -87,11 +77,11 @@ declare namespace Intl {
       | 2000
       | 2500
       | 5000;
-    trailingZeroDisplay: 'auto' | 'stripIfInteger';
+    readonly trailingZeroDisplay: 'auto' | 'stripIfInteger';
   }
 
   interface NumberRangeFormatPart extends NumberFormatPart {
-    source: 'startRange' | 'endRange' | 'shared';
+    readonly source: 'startRange' | 'endRange' | 'shared';
   }
 
   type StringNumericLiteral =
@@ -104,7 +94,7 @@ declare namespace Intl {
     format(value: number | bigint | StringNumericLiteral): string;
     formatToParts(
       value: number | bigint | StringNumericLiteral,
-    ): NumberFormatPart[];
+    ): readonly NumberFormatPart[];
     formatRange(
       start: number | bigint | StringNumericLiteral,
       end: number | bigint | StringNumericLiteral,
@@ -112,6 +102,6 @@ declare namespace Intl {
     formatRangeToParts(
       start: number | bigint | StringNumericLiteral,
       end: number | bigint | StringNumericLiteral,
-    ): NumberRangeFormatPart[];
+    ): readonly NumberRangeFormatPart[];
   }
 }
