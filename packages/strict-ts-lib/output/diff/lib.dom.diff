@@ -1,19 +1,5 @@
-/*! *****************************************************************************
-Copyright (c) Microsoft Corporation. All rights reserved.
-Licensed under the Apache License, Version 2.0 (the "License"); you may not use
-this file except in compliance with the License. You may obtain a copy of the
-License at http://www.apache.org/licenses/LICENSE-2.0
-
-THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
-WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
-MERCHANTABLITY OR NON-INFRINGEMENT.
-
-See the Apache Version 2.0 License for specific language governing permissions
-and limitations under the License.
-***************************************************************************** */
-
 /// <reference no-default-lib="true"/>
+/// <reference types="@noshiro/ts-type-utils" />
 
 /////////////////////////////
 /// Window APIs
@@ -126,9 +112,9 @@ interface AudioTimestamp {
 interface AudioWorkletNodeOptions extends AudioNodeOptions {
   numberOfInputs?: number;
   numberOfOutputs?: number;
-  outputChannelCount?: number[];
+  outputChannelCount?: readonly number[];
   parameterData?: Record<string, number>;
-  processorOptions?: any;
+  processorOptions?: unknown;
 }
 
 interface AuthenticationExtensionsClientInputs {
@@ -273,8 +259,8 @@ interface ConstrainBooleanParameters {
 }
 
 interface ConstrainDOMStringParameters {
-  exact?: string | string[];
-  ideal?: string | string[];
+  exact?: string | readonly string[];
+  ideal?: string | readonly string[];
 }
 
 interface ConstrainDoubleRange extends DoubleRange {
@@ -316,7 +302,7 @@ interface CryptoKeyPair {
   publicKey: CryptoKey;
 }
 
-interface CustomEventInit<T = any> extends EventInit {
+interface CustomEventInit<T = unknown> extends EventInit {
   detail?: T;
 }
 
@@ -480,7 +466,7 @@ interface EncodedVideoChunkMetadata {
 
 interface ErrorEventInit extends EventInit {
   colno?: number;
-  error?: any;
+  error?: unknown;
   filename?: string;
   lineno?: number;
   message?: string;
@@ -563,7 +549,7 @@ interface FontFaceDescriptors {
 }
 
 interface FontFaceSetLoadEventInit extends EventInit {
-  fontfaces?: FontFace[];
+  fontfaces?: readonly FontFace[];
 }
 
 interface FormDataEventInit extends EventInit {
@@ -597,7 +583,7 @@ interface GetAnimationsOptions {
 
 interface GetHTMLOptions {
   serializableShadowRoots?: boolean;
-  shadowRoots?: ShadowRoot[];
+  shadowRoots?: readonly ShadowRoot[];
 }
 
 interface GetNotificationOptions {
@@ -646,7 +632,7 @@ interface IDBIndexParameters {
 
 interface IDBObjectStoreParameters {
   autoIncrement?: boolean;
-  keyPath?: string | string[] | null;
+  keyPath?: string | readonly string[] | null;
 }
 
 interface IDBTransactionOptions {
@@ -659,8 +645,8 @@ interface IDBVersionChangeEventInit extends EventInit {
 }
 
 interface IIRFilterOptions extends AudioNodeOptions {
-  feedback: number[];
-  feedforward: number[];
+  feedback: readonly number[];
+  feedforward: readonly number[];
 }
 
 interface IdleRequestOptions {
@@ -694,7 +680,7 @@ interface InputEventInit extends UIEventInit {
   dataTransfer?: DataTransfer | null;
   inputType?: string;
   isComposing?: boolean;
-  targetRanges?: StaticRange[];
+  targetRanges?: readonly StaticRange[];
 }
 
 interface IntersectionObserverEntryInit {
@@ -710,7 +696,7 @@ interface IntersectionObserverEntryInit {
 interface IntersectionObserverInit {
   root?: Element | Document | null;
   rootMargin?: string;
-  threshold?: number | number[];
+  threshold?: number | readonly number[];
 }
 
 interface JsonWebKey {
@@ -722,10 +708,10 @@ interface JsonWebKey {
   e?: string;
   ext?: boolean;
   k?: string;
-  key_ops?: string[];
+  key_ops?: readonly string[];
   kty?: string;
   n?: string;
-  oth?: RsaOtherPrimesInfo[];
+  oth?: readonly RsaOtherPrimesInfo[];
   p?: string;
   q?: string;
   qi?: string;
@@ -775,8 +761,8 @@ interface LockInfo {
 }
 
 interface LockManagerSnapshot {
-  held?: LockInfo[];
-  pending?: LockInfo[];
+  held?: readonly LockInfo[];
+  pending?: readonly LockInfo[];
 }
 
 interface LockOptions {
@@ -847,13 +833,13 @@ interface MediaKeyMessageEventInit extends EventInit {
 }
 
 interface MediaKeySystemConfiguration {
-  audioCapabilities?: MediaKeySystemMediaCapability[];
+  audioCapabilities?: readonly MediaKeySystemMediaCapability[];
   distinctiveIdentifier?: MediaKeysRequirement;
-  initDataTypes?: string[];
+  initDataTypes?: readonly string[];
   label?: string;
   persistentState?: MediaKeysRequirement;
-  sessionTypes?: string[];
-  videoCapabilities?: MediaKeySystemMediaCapability[];
+  sessionTypes?: readonly string[];
+  videoCapabilities?: readonly MediaKeySystemMediaCapability[];
 }
 
 interface MediaKeySystemMediaCapability {
@@ -869,7 +855,7 @@ interface MediaKeysPolicy {
 interface MediaMetadataInit {
   album?: string;
   artist?: string;
-  artwork?: MediaImage[];
+  artwork?: readonly MediaImage[];
   title?: string;
 }
 
@@ -915,16 +901,16 @@ interface MediaStreamTrackEventInit extends EventInit {
 
 interface MediaTrackCapabilities {
   aspectRatio?: DoubleRange;
-  autoGainControl?: boolean[];
+  autoGainControl?: readonly boolean[];
   channelCount?: ULongRange;
   deviceId?: string;
   displaySurface?: string;
-  echoCancellation?: boolean[];
-  facingMode?: string[];
+  echoCancellation?: readonly boolean[];
+  facingMode?: readonly string[];
   frameRate?: DoubleRange;
   groupId?: string;
   height?: ULongRange;
-  noiseSuppression?: boolean[];
+  noiseSuppression?: readonly boolean[];
   sampleRate?: ULongRange;
   sampleSize?: ULongRange;
   width?: ULongRange;
@@ -948,7 +934,7 @@ interface MediaTrackConstraintSet {
 }
 
 interface MediaTrackConstraints extends MediaTrackConstraintSet {
-  advanced?: MediaTrackConstraintSet[];
+  advanced?: readonly MediaTrackConstraintSet[];
 }
 
 interface MediaTrackSettings {
@@ -985,11 +971,11 @@ interface MediaTrackSupportedConstraints {
   width?: boolean;
 }
 
-interface MessageEventInit<T = any> extends EventInit {
+interface MessageEventInit<T = unknown> extends EventInit {
   data?: T;
   lastEventId?: string;
   origin?: string;
-  ports?: MessagePort[];
+  ports?: readonly MessagePort[];
   source?: MessageEventSource | null;
 }
 
@@ -1014,7 +1000,7 @@ interface MutationObserverInit {
    * Set to a list of attribute local names (without namespace) if not all
    * attribute mutations need to be observed and attributes is true or omitted.
    */
-  attributeFilter?: string[];
+  attributeFilter?: readonly string[];
   /**
    * Set to true if attributes is true or omitted and target's attribute value
    * before the mutation needs to be recorded.
@@ -1052,7 +1038,7 @@ interface NavigationPreloadState {
 interface NotificationOptions {
   badge?: string;
   body?: string;
-  data?: any;
+  data?: unknown;
   dir?: NotificationDirection;
   icon?: string;
   lang?: string;
@@ -1117,8 +1103,8 @@ interface PaymentCurrencyAmount {
 }
 
 interface PaymentDetailsBase {
-  displayItems?: PaymentItem[];
-  modifiers?: PaymentDetailsModifier[];
+  displayItems?: readonly PaymentItem[];
+  modifiers?: readonly PaymentDetailsModifier[];
 }
 
 interface PaymentDetailsInit extends PaymentDetailsBase {
@@ -1127,14 +1113,14 @@ interface PaymentDetailsInit extends PaymentDetailsBase {
 }
 
 interface PaymentDetailsModifier {
-  additionalDisplayItems?: PaymentItem[];
-  data?: any;
+  additionalDisplayItems?: readonly PaymentItem[];
+  data?: unknown;
   supportedMethods: string;
   total?: PaymentItem;
 }
 
 interface PaymentDetailsUpdate extends PaymentDetailsBase {
-  paymentMethodErrors?: any;
+  paymentMethodErrors?: unknown;
   total?: PaymentItem;
 }
 
@@ -1145,12 +1131,12 @@ interface PaymentItem {
 }
 
 interface PaymentMethodChangeEventInit extends PaymentRequestUpdateEventInit {
-  methodDetails?: any;
+  methodDetails?: unknown;
   methodName?: string;
 }
 
 interface PaymentMethodData {
-  data?: any;
+  data?: unknown;
   supportedMethods: string;
 }
 
@@ -1158,7 +1144,7 @@ interface PaymentRequestUpdateEventInit extends EventInit {}
 
 interface PaymentValidationErrors {
   error?: string;
-  paymentMethod?: any;
+  paymentMethod?: unknown;
 }
 
 interface Pbkdf2Params extends Algorithm {
@@ -1168,12 +1154,12 @@ interface Pbkdf2Params extends Algorithm {
 }
 
 interface PerformanceMarkOptions {
-  detail?: any;
+  detail?: unknown;
   startTime?: DOMHighResTimeStamp;
 }
 
 interface PerformanceMeasureOptions {
-  detail?: any;
+  detail?: unknown;
   duration?: DOMHighResTimeStamp;
   end?: string | DOMHighResTimeStamp;
   start?: string | DOMHighResTimeStamp;
@@ -1181,7 +1167,7 @@ interface PerformanceMeasureOptions {
 
 interface PerformanceObserverInit {
   buffered?: boolean;
-  entryTypes?: string[];
+  entryTypes?: readonly string[];
   type?: string;
 }
 
@@ -1190,8 +1176,8 @@ interface PeriodicWaveConstraints {
 }
 
 interface PeriodicWaveOptions extends PeriodicWaveConstraints {
-  imag?: number[] | Float32Array;
-  real?: number[] | Float32Array;
+  imag?: readonly number[] | Float32Array;
+  real?: readonly number[] | Float32Array;
 }
 
 interface PermissionDescriptor {
@@ -1208,12 +1194,12 @@ interface PlaneLayout {
 }
 
 interface PointerEventInit extends MouseEventInit {
-  coalescedEvents?: PointerEvent[];
+  coalescedEvents?: readonly PointerEvent[];
   height?: number;
   isPrimary?: boolean;
   pointerId?: number;
   pointerType?: string;
-  predictedEvents?: PointerEvent[];
+  predictedEvents?: readonly PointerEvent[];
   pressure?: number;
   tangentialPressure?: number;
   tiltX?: number;
@@ -1227,7 +1213,7 @@ interface PointerLockOptions {
 }
 
 interface PopStateEventInit extends EventInit {
-  state?: any;
+  state?: unknown;
 }
 
 interface PositionOptions {
@@ -1243,8 +1229,8 @@ interface ProgressEventInit extends EventInit {
 }
 
 interface PromiseRejectionEventInit extends EventInit {
-  promise: Promise<any>;
-  reason?: any;
+  promise: Promise<unknown>;
+  reason?: unknown;
 }
 
 interface PropertyDefinition {
@@ -1255,12 +1241,12 @@ interface PropertyDefinition {
 }
 
 interface PropertyIndexedKeyframes {
-  composite?: CompositeOperationOrAuto | CompositeOperationOrAuto[];
-  easing?: string | string[];
+  composite?: CompositeOperationOrAuto | readonly CompositeOperationOrAuto[];
+  easing?: string | readonly string[];
   offset?: number | (number | null)[];
   [property: string]:
     | string
-    | string[]
+    | readonly string[]
     | number
     | null
     | (number | null)[]
@@ -1271,9 +1257,9 @@ interface PublicKeyCredentialCreationOptions {
   attestation?: AttestationConveyancePreference;
   authenticatorSelection?: AuthenticatorSelectionCriteria;
   challenge: BufferSource;
-  excludeCredentials?: PublicKeyCredentialDescriptor[];
+  excludeCredentials?: readonly PublicKeyCredentialDescriptor[];
   extensions?: AuthenticationExtensionsClientInputs;
-  pubKeyCredParams: PublicKeyCredentialParameters[];
+  pubKeyCredParams: readonly PublicKeyCredentialParameters[];
   rp: PublicKeyCredentialRpEntity;
   timeout?: number;
   user: PublicKeyCredentialUserEntity;
@@ -1281,7 +1267,7 @@ interface PublicKeyCredentialCreationOptions {
 
 interface PublicKeyCredentialDescriptor {
   id: BufferSource;
-  transports?: AuthenticatorTransport[];
+  transports?: readonly AuthenticatorTransport[];
   type: PublicKeyCredentialType;
 }
 
@@ -1295,7 +1281,7 @@ interface PublicKeyCredentialParameters {
 }
 
 interface PublicKeyCredentialRequestOptions {
-  allowCredentials?: PublicKeyCredentialDescriptor[];
+  allowCredentials?: readonly PublicKeyCredentialDescriptor[];
   challenge: BufferSource;
   extensions?: AuthenticationExtensionsClientInputs;
   rpId?: string;
@@ -1323,7 +1309,7 @@ interface PushSubscriptionOptionsInit {
   userVisibleOnly?: boolean;
 }
 
-interface QueuingStrategy<T = any> {
+interface QueuingStrategy<T = unknown> {
   highWaterMark?: number;
   size?: QueuingStrategySize<T>;
 }
@@ -1348,9 +1334,9 @@ interface RTCCertificateExpiration {
 
 interface RTCConfiguration {
   bundlePolicy?: RTCBundlePolicy;
-  certificates?: RTCCertificate[];
+  certificates?: readonly RTCCertificate[];
   iceCandidatePoolSize?: number;
-  iceServers?: RTCIceServer[];
+  iceServers?: readonly RTCIceServer[];
   iceTransportPolicy?: RTCIceTransportPolicy;
   rtcpMuxPolicy?: RTCRtcpMuxPolicy;
 }
@@ -1378,15 +1364,15 @@ interface RTCDtlsFingerprint {
 }
 
 interface RTCEncodedAudioFrameMetadata {
-  contributingSources?: number[];
+  contributingSources?: readonly number[];
   payloadType?: number;
   sequenceNumber?: number;
   synchronizationSource?: number;
 }
 
 interface RTCEncodedVideoFrameMetadata {
-  contributingSources?: number[];
-  dependencies?: number[];
+  contributingSources?: readonly number[];
+  dependencies?: readonly number[];
   frameId?: number;
   height?: number;
   payloadType?: number;
@@ -1439,7 +1425,7 @@ interface RTCIceCandidatePairStats extends RTCStats {
 
 interface RTCIceServer {
   credential?: string;
-  urls: string | string[];
+  urls: string | readonly string[];
   username?: string;
 }
 
@@ -1547,8 +1533,8 @@ interface RTCRtcpParameters {
 }
 
 interface RTCRtpCapabilities {
-  codecs: RTCRtpCodec[];
-  headerExtensions: RTCRtpHeaderExtensionCapability[];
+  codecs: readonly RTCRtpCodec[];
+  headerExtensions: readonly RTCRtpHeaderExtensionCapability[];
 }
 
 interface RTCRtpCodec {
@@ -1593,8 +1579,8 @@ interface RTCRtpHeaderExtensionParameters {
 }
 
 interface RTCRtpParameters {
-  codecs: RTCRtpCodecParameters[];
-  headerExtensions: RTCRtpHeaderExtensionParameters[];
+  codecs: readonly RTCRtpCodecParameters[];
+  headerExtensions: readonly RTCRtpHeaderExtensionParameters[];
   rtcp: RTCRtcpParameters;
 }
 
@@ -1602,7 +1588,7 @@ interface RTCRtpReceiveParameters extends RTCRtpParameters {}
 
 interface RTCRtpSendParameters extends RTCRtpParameters {
   degradationPreference?: RTCDegradationPreference;
-  encodings: RTCRtpEncodingParameters[];
+  encodings: readonly RTCRtpEncodingParameters[];
   transactionId: string;
 }
 
@@ -1617,8 +1603,8 @@ interface RTCRtpSynchronizationSource extends RTCRtpContributingSource {}
 
 interface RTCRtpTransceiverInit {
   direction?: RTCRtpTransceiverDirection;
-  sendEncodings?: RTCRtpEncodingParameters[];
-  streams?: MediaStream[];
+  sendEncodings?: readonly RTCRtpEncodingParameters[];
+  streams?: readonly MediaStream[];
 }
 
 interface RTCSentRtpStreamStats extends RTCRtpStreamStats {
@@ -1641,7 +1627,7 @@ interface RTCStats {
 
 interface RTCTrackEventInit extends EventInit {
   receiver: RTCRtpReceiver;
-  streams?: MediaStream[];
+  streams?: readonly MediaStream[];
   track: MediaStreamTrack;
   transceiver: RTCRtpTransceiver;
 }
@@ -1697,7 +1683,7 @@ interface ReadableStreamReadValueResult<T> {
   value: T;
 }
 
-interface ReadableWritablePair<R = any, W = any> {
+interface ReadableWritablePair<R = unknown, W = unknown> {
   readable: ReadableStream<R>;
   /**
    * Provides a convenient, chainable way of piping this readable stream through
@@ -1719,7 +1705,7 @@ interface RegistrationOptions {
 
 interface ReportingObserverOptions {
   buffered?: boolean;
-  types?: string[];
+  types?: readonly string[];
 }
 
 interface RequestInit {
@@ -1865,7 +1851,7 @@ interface ShadowRootInit {
 }
 
 interface ShareData {
-  files?: File[];
+  files?: readonly File[];
   text?: string;
   title?: string;
   url?: string;
@@ -1953,7 +1939,7 @@ interface StreamPipeOptions {
 }
 
 interface StructuredSerializeOptions {
-  transfer?: Transferable[];
+  transfer?: readonly Transferable[];
 }
 
 interface SubmitEventInit extends EventInit {
@@ -1980,9 +1966,9 @@ interface ToggleEventInit extends EventInit {
 }
 
 interface TouchEventInit extends EventModifierInit {
-  changedTouches?: Touch[];
-  targetTouches?: Touch[];
-  touches?: Touch[];
+  changedTouches?: readonly Touch[];
+  targetTouches?: readonly Touch[];
+  touches?: readonly Touch[];
 }
 
 interface TouchInit {
@@ -2007,7 +1993,7 @@ interface TrackEventInit extends EventInit {
   track?: TextTrack | null;
 }
 
-interface Transformer<I = any, O = any> {
+interface Transformer<I = unknown, O = unknown> {
   flush?: TransformerFlushCallback<O>;
   readableType?: undefined;
   start?: TransformerStartCallback<O>;
@@ -2037,20 +2023,20 @@ interface UnderlyingByteSource {
   autoAllocateChunkSize?: number;
   cancel?: UnderlyingSourceCancelCallback;
   pull?: (controller: ReadableByteStreamController) => void | PromiseLike<void>;
-  start?: (controller: ReadableByteStreamController) => any;
+  start?: (controller: ReadableByteStreamController) => unknown;
   type: 'bytes';
 }
 
-interface UnderlyingDefaultSource<R = any> {
+interface UnderlyingDefaultSource<R = unknown> {
   cancel?: UnderlyingSourceCancelCallback;
   pull?: (
     controller: ReadableStreamDefaultController<R>,
   ) => void | PromiseLike<void>;
-  start?: (controller: ReadableStreamDefaultController<R>) => any;
+  start?: (controller: ReadableStreamDefaultController<R>) => unknown;
   type?: undefined;
 }
 
-interface UnderlyingSink<W = any> {
+interface UnderlyingSink<W = unknown> {
   abort?: UnderlyingSinkAbortCallback;
   close?: UnderlyingSinkCloseCallback;
   start?: UnderlyingSinkStartCallback;
@@ -2058,7 +2044,7 @@ interface UnderlyingSink<W = any> {
   write?: UnderlyingSinkWriteCallback<W>;
 }
 
-interface UnderlyingSource<R = any> {
+interface UnderlyingSource<R = unknown> {
   autoAllocateChunkSize?: number;
   cancel?: UnderlyingSourceCancelCallback;
   pull?: UnderlyingSourcePullCallback<R>;
@@ -2158,7 +2144,7 @@ interface VideoFrameBufferInit {
   displayWidth?: number;
   duration?: number;
   format: VideoPixelFormat;
-  layout?: PlaneLayout[];
+  layout?: readonly PlaneLayout[];
   timestamp: number;
   visibleRect?: DOMRectInit;
 }
@@ -2177,7 +2163,7 @@ interface VideoFrameCallbackMetadata {
 }
 
 interface VideoFrameCopyToOptions {
-  layout?: PlaneLayout[];
+  layout?: readonly PlaneLayout[];
   rect?: DOMRectInit;
 }
 
@@ -2191,7 +2177,7 @@ interface VideoFrameInit {
 }
 
 interface WaveShaperOptions extends AudioNodeOptions {
-  curve?: number[] | Float32Array;
+  curve?: readonly number[] | Float32Array;
   oversample?: OverSampleType;
 }
 
@@ -2230,7 +2216,7 @@ interface WebTransportOptions {
   allowPooling?: boolean;
   congestionControl?: WebTransportCongestionControl;
   requireUnreliable?: boolean;
-  serverCertificateHashes?: WebTransportHash[];
+  serverCertificateHashes?: readonly WebTransportHash[];
 }
 
 interface WebTransportSendStreamOptions {
@@ -2267,7 +2253,7 @@ interface WriteParams {
 
 type NodeFilter = ((node: Node) => number) | { acceptNode(node: Node): number };
 
-declare var NodeFilter: {
+declare const NodeFilter: {
   readonly FILTER_ACCEPT: 1;
   readonly FILTER_REJECT: 2;
   readonly FILTER_SKIP: 3;
@@ -2549,10 +2535,10 @@ interface AbortController {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AbortController/abort)
    */
-  abort(reason?: any): void;
+  abort(reason?: unknown): void;
 }
 
-declare var AbortController: {
+declare const AbortController: {
   prototype: AbortController;
   new (): AbortController;
 };
@@ -2580,12 +2566,12 @@ interface AbortSignal extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_event)
    */
-  onabort: ((this: AbortSignal, ev: Event) => any) | null;
+  onabort: ((this: AbortSignal, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/reason)
    */
-  readonly reason: any;
+  readonly reason: unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/throwIfAborted)
@@ -2593,7 +2579,7 @@ interface AbortSignal extends EventTarget {
   throwIfAborted(): void;
   addEventListener<K extends keyof AbortSignalEventMap>(
     type: K,
-    listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any,
+    listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -2603,7 +2589,7 @@ interface AbortSignal extends EventTarget {
   ): void;
   removeEventListener<K extends keyof AbortSignalEventMap>(
     type: K,
-    listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any,
+    listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -2613,19 +2599,19 @@ interface AbortSignal extends EventTarget {
   ): void;
 }
 
-declare var AbortSignal: {
+declare const AbortSignal: {
   prototype: AbortSignal;
   new (): AbortSignal;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_static)
    */
-  abort(reason?: any): AbortSignal;
+  abort(reason?: unknown): AbortSignal;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/any_static)
    */
-  any(signals: AbortSignal[]): AbortSignal;
+  any(signals: readonly AbortSignal[]): AbortSignal;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/timeout_static)
@@ -2672,7 +2658,7 @@ interface AbstractRange {
   readonly startOffset: number;
 }
 
-declare var AbstractRange: {
+declare const AbstractRange: {
   prototype: AbstractRange;
   new (): AbstractRange;
 };
@@ -2686,10 +2672,10 @@ interface AbstractWorker {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/error_event)
    */
-  onerror: ((this: AbstractWorker, ev: ErrorEvent) => any) | null;
+  onerror: ((this: AbstractWorker, ev: ErrorEvent) => unknown) | null;
   addEventListener<K extends keyof AbstractWorkerEventMap>(
     type: K,
-    listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any,
+    listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -2699,7 +2685,7 @@ interface AbstractWorker {
   ): void;
   removeEventListener<K extends keyof AbstractWorkerEventMap>(
     type: K,
-    listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any,
+    listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -2765,7 +2751,7 @@ interface AnalyserNode extends AudioNode {
   getFloatTimeDomainData(array: Float32Array): void;
 }
 
-declare var AnalyserNode: {
+declare const AnalyserNode: {
   prototype: AnalyserNode;
   new (context: BaseAudioContext, options?: AnalyserOptions): AnalyserNode;
 };
@@ -2773,7 +2759,7 @@ declare var AnalyserNode: {
 interface Animatable {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animate) */
   animate(
-    keyframes: Keyframe[] | PropertyIndexedKeyframes | null,
+    keyframes: readonly Keyframe[] | PropertyIndexedKeyframes | null,
     options?: number | KeyframeAnimationOptions,
   ): Animation;
   /**
@@ -2812,17 +2798,17 @@ interface Animation extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Animation/cancel_event)
    */
-  oncancel: ((this: Animation, ev: AnimationPlaybackEvent) => any) | null;
+  oncancel: ((this: Animation, ev: AnimationPlaybackEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Animation/finish_event)
    */
-  onfinish: ((this: Animation, ev: AnimationPlaybackEvent) => any) | null;
+  onfinish: ((this: Animation, ev: AnimationPlaybackEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Animation/remove_event)
    */
-  onremove: ((this: Animation, ev: Event) => any) | null;
+  onremove: ((this: Animation, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Animation/pending)
@@ -2891,7 +2877,7 @@ interface Animation extends EventTarget {
   updatePlaybackRate(playbackRate: number): void;
   addEventListener<K extends keyof AnimationEventMap>(
     type: K,
-    listener: (this: Animation, ev: AnimationEventMap[K]) => any,
+    listener: (this: Animation, ev: AnimationEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -2901,7 +2887,7 @@ interface Animation extends EventTarget {
   ): void;
   removeEventListener<K extends keyof AnimationEventMap>(
     type: K,
-    listener: (this: Animation, ev: AnimationEventMap[K]) => any,
+    listener: (this: Animation, ev: AnimationEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -2911,7 +2897,7 @@ interface Animation extends EventTarget {
   ): void;
 }
 
-declare var Animation: {
+declare const Animation: {
   prototype: Animation;
   new (
     effect?: AnimationEffect | null,
@@ -2938,7 +2924,7 @@ interface AnimationEffect {
   updateTiming(timing?: OptionalEffectTiming): void;
 }
 
-declare var AnimationEffect: {
+declare const AnimationEffect: {
   prototype: AnimationEffect;
   new (): AnimationEffect;
 };
@@ -2966,7 +2952,7 @@ interface AnimationEvent extends Event {
   readonly pseudoElement: string;
 }
 
-declare var AnimationEvent: {
+declare const AnimationEvent: {
   prototype: AnimationEvent;
   new (
     type: string,
@@ -3004,7 +2990,7 @@ interface AnimationPlaybackEvent extends Event {
   readonly timelineTime: CSSNumberish | null;
 }
 
-declare var AnimationPlaybackEvent: {
+declare const AnimationPlaybackEvent: {
   prototype: AnimationPlaybackEvent;
   new (
     type: string,
@@ -3021,7 +3007,7 @@ interface AnimationTimeline {
   readonly currentTime: CSSNumberish | null;
 }
 
-declare var AnimationTimeline: {
+declare const AnimationTimeline: {
   prototype: AnimationTimeline;
   new (): AnimationTimeline;
 };
@@ -3062,7 +3048,7 @@ interface Attr extends Node {
   value: string;
 }
 
-declare var Attr: {
+declare const Attr: {
   prototype: Attr;
   new (): Attr;
 };
@@ -3121,7 +3107,7 @@ interface AudioBuffer {
   getChannelData(channel: number): Float32Array;
 }
 
-declare var AudioBuffer: {
+declare const AudioBuffer: {
   prototype: AudioBuffer;
   new (options: AudioBufferOptions): AudioBuffer;
 };
@@ -3177,7 +3163,7 @@ interface AudioBufferSourceNode extends AudioScheduledSourceNode {
     listener: (
       this: AudioBufferSourceNode,
       ev: AudioScheduledSourceNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3190,7 +3176,7 @@ interface AudioBufferSourceNode extends AudioScheduledSourceNode {
     listener: (
       this: AudioBufferSourceNode,
       ev: AudioScheduledSourceNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3200,7 +3186,7 @@ interface AudioBufferSourceNode extends AudioScheduledSourceNode {
   ): void;
 }
 
-declare var AudioBufferSourceNode: {
+declare const AudioBufferSourceNode: {
   prototype: AudioBufferSourceNode;
   new (
     context: BaseAudioContext,
@@ -3264,7 +3250,7 @@ interface AudioContext extends BaseAudioContext {
   suspend(): Promise<void>;
   addEventListener<K extends keyof BaseAudioContextEventMap>(
     type: K,
-    listener: (this: AudioContext, ev: BaseAudioContextEventMap[K]) => any,
+    listener: (this: AudioContext, ev: BaseAudioContextEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3274,7 +3260,7 @@ interface AudioContext extends BaseAudioContext {
   ): void;
   removeEventListener<K extends keyof BaseAudioContextEventMap>(
     type: K,
-    listener: (this: AudioContext, ev: BaseAudioContextEventMap[K]) => any,
+    listener: (this: AudioContext, ev: BaseAudioContextEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3284,7 +3270,7 @@ interface AudioContext extends BaseAudioContext {
   ): void;
 }
 
-declare var AudioContext: {
+declare const AudioContext: {
   prototype: AudioContext;
   new (contextOptions?: AudioContextOptions): AudioContext;
 };
@@ -3306,7 +3292,7 @@ interface AudioDestinationNode extends AudioNode {
   readonly maxChannelCount: number;
 }
 
-declare var AudioDestinationNode: {
+declare const AudioDestinationNode: {
   prototype: AudioDestinationNode;
   new (): AudioDestinationNode;
 };
@@ -3388,7 +3374,7 @@ interface AudioListener {
   setPosition(x: number, y: number, z: number): void;
 }
 
-declare var AudioListener: {
+declare const AudioListener: {
   prototype: AudioListener;
   new (): AudioListener;
 };
@@ -3453,7 +3439,7 @@ interface AudioNode extends EventTarget {
   disconnect(destinationParam: AudioParam, output: number): void;
 }
 
-declare var AudioNode: {
+declare const AudioNode: {
   prototype: AudioNode;
   new (): AudioNode;
 };
@@ -3525,13 +3511,13 @@ interface AudioParam {
    * Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/setValueCurveAtTime)
    */
   setValueCurveAtTime(
-    values: number[] | Float32Array,
+    values: readonly number[] | Float32Array,
     startTime: number,
     duration: number,
   ): AudioParam;
 }
 
-declare var AudioParam: {
+declare const AudioParam: {
   prototype: AudioParam;
   new (): AudioParam;
 };
@@ -3540,11 +3526,11 @@ declare var AudioParam: {
 interface AudioParamMap {
   forEach(
     callbackfn: (value: AudioParam, key: string, parent: AudioParamMap) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var AudioParamMap: {
+declare const AudioParamMap: {
   prototype: AudioParamMap;
   new (): AudioParamMap;
 };
@@ -3585,7 +3571,7 @@ interface AudioProcessingEvent extends Event {
 }
 
 /** @deprecated */
-declare var AudioProcessingEvent: {
+declare const AudioProcessingEvent: {
   prototype: AudioProcessingEvent;
   new (
     type: string,
@@ -3606,7 +3592,7 @@ interface AudioScheduledSourceNode extends AudioNode {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AudioScheduledSourceNode/ended_event)
    */
-  onended: ((this: AudioScheduledSourceNode, ev: Event) => any) | null;
+  onended: ((this: AudioScheduledSourceNode, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AudioScheduledSourceNode/start)
@@ -3622,7 +3608,7 @@ interface AudioScheduledSourceNode extends AudioNode {
     listener: (
       this: AudioScheduledSourceNode,
       ev: AudioScheduledSourceNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3635,7 +3621,7 @@ interface AudioScheduledSourceNode extends AudioNode {
     listener: (
       this: AudioScheduledSourceNode,
       ev: AudioScheduledSourceNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3645,7 +3631,7 @@ interface AudioScheduledSourceNode extends AudioNode {
   ): void;
 }
 
-declare var AudioScheduledSourceNode: {
+declare const AudioScheduledSourceNode: {
   prototype: AudioScheduledSourceNode;
   new (): AudioScheduledSourceNode;
 };
@@ -3657,7 +3643,7 @@ declare var AudioScheduledSourceNode: {
  */
 interface AudioWorklet extends Worklet {}
 
-declare var AudioWorklet: {
+declare const AudioWorklet: {
   prototype: AudioWorklet;
   new (): AudioWorklet;
 };
@@ -3676,7 +3662,7 @@ interface AudioWorkletNode extends AudioNode {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AudioWorkletNode/processorerror_event)
    */
-  onprocessorerror: ((this: AudioWorkletNode, ev: Event) => any) | null;
+  onprocessorerror: ((this: AudioWorkletNode, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/AudioWorkletNode/parameters)
@@ -3689,7 +3675,10 @@ interface AudioWorkletNode extends AudioNode {
   readonly port: MessagePort;
   addEventListener<K extends keyof AudioWorkletNodeEventMap>(
     type: K,
-    listener: (this: AudioWorkletNode, ev: AudioWorkletNodeEventMap[K]) => any,
+    listener: (
+      this: AudioWorkletNode,
+      ev: AudioWorkletNodeEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3699,7 +3688,10 @@ interface AudioWorkletNode extends AudioNode {
   ): void;
   removeEventListener<K extends keyof AudioWorkletNodeEventMap>(
     type: K,
-    listener: (this: AudioWorkletNode, ev: AudioWorkletNodeEventMap[K]) => any,
+    listener: (
+      this: AudioWorkletNode,
+      ev: AudioWorkletNodeEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3709,7 +3701,7 @@ interface AudioWorkletNode extends AudioNode {
   ): void;
 }
 
-declare var AudioWorkletNode: {
+declare const AudioWorkletNode: {
   prototype: AudioWorkletNode;
   new (
     context: BaseAudioContext,
@@ -3742,7 +3734,7 @@ interface AuthenticatorAssertionResponse extends AuthenticatorResponse {
   readonly userHandle: ArrayBuffer | null;
 }
 
-declare var AuthenticatorAssertionResponse: {
+declare const AuthenticatorAssertionResponse: {
   prototype: AuthenticatorAssertionResponse;
   new (): AuthenticatorAssertionResponse;
 };
@@ -3781,7 +3773,7 @@ interface AuthenticatorAttestationResponse extends AuthenticatorResponse {
   getTransports(): string[];
 }
 
-declare var AuthenticatorAttestationResponse: {
+declare const AuthenticatorAttestationResponse: {
   prototype: AuthenticatorAttestationResponse;
   new (): AuthenticatorAttestationResponse;
 };
@@ -3800,7 +3792,7 @@ interface AuthenticatorResponse {
   readonly clientDataJSON: ArrayBuffer;
 }
 
-declare var AuthenticatorResponse: {
+declare const AuthenticatorResponse: {
   prototype: AuthenticatorResponse;
   new (): AuthenticatorResponse;
 };
@@ -3811,7 +3803,7 @@ interface BarProp {
   readonly visible: boolean;
 }
 
-declare var BarProp: {
+declare const BarProp: {
   prototype: BarProp;
   new (): BarProp;
 };
@@ -3848,7 +3840,7 @@ interface BaseAudioContext extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/statechange_event)
    */
-  onstatechange: ((this: BaseAudioContext, ev: Event) => any) | null;
+  onstatechange: ((this: BaseAudioContext, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/sampleRate)
@@ -3922,7 +3914,10 @@ interface BaseAudioContext extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createIIRFilter)
    */
-  createIIRFilter(feedforward: number[], feedback: number[]): IIRFilterNode;
+  createIIRFilter(
+    feedforward: readonly number[],
+    feedback: readonly number[],
+  ): IIRFilterNode;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createOscillator)
@@ -3938,8 +3933,8 @@ interface BaseAudioContext extends EventTarget {
    * Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createPeriodicWave)
    */
   createPeriodicWave(
-    real: number[] | Float32Array,
-    imag: number[] | Float32Array,
+    real: readonly number[] | Float32Array,
+    imag: readonly number[] | Float32Array,
     constraints?: PeriodicWaveConstraints,
   ): PeriodicWave;
   /**
@@ -3974,7 +3969,10 @@ interface BaseAudioContext extends EventTarget {
   ): Promise<AudioBuffer>;
   addEventListener<K extends keyof BaseAudioContextEventMap>(
     type: K,
-    listener: (this: BaseAudioContext, ev: BaseAudioContextEventMap[K]) => any,
+    listener: (
+      this: BaseAudioContext,
+      ev: BaseAudioContextEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3984,7 +3982,10 @@ interface BaseAudioContext extends EventTarget {
   ): void;
   removeEventListener<K extends keyof BaseAudioContextEventMap>(
     type: K,
-    listener: (this: BaseAudioContext, ev: BaseAudioContextEventMap[K]) => any,
+    listener: (
+      this: BaseAudioContext,
+      ev: BaseAudioContextEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3994,7 +3995,7 @@ interface BaseAudioContext extends EventTarget {
   ): void;
 }
 
-declare var BaseAudioContext: {
+declare const BaseAudioContext: {
   prototype: BaseAudioContext;
   new (): BaseAudioContext;
 };
@@ -4005,17 +4006,17 @@ declare var BaseAudioContext: {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/BeforeUnloadEvent)
  */
-interface BeforeUnloadEvent extends Event {
+interface BeforeUnloadEvent extends Omit<Event, 'returnValue'> {
   /**
    * @deprecated
    *
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/BeforeUnloadEvent/returnValue)
    */
-  returnValue: any;
+  returnValue: unknown;
 }
 
-declare var BeforeUnloadEvent: {
+declare const BeforeUnloadEvent: {
   prototype: BeforeUnloadEvent;
   new (): BeforeUnloadEvent;
 };
@@ -4065,7 +4066,7 @@ interface BiquadFilterNode extends AudioNode {
   ): void;
 }
 
-declare var BiquadFilterNode: {
+declare const BiquadFilterNode: {
   prototype: BiquadFilterNode;
   new (
     context: BaseAudioContext,
@@ -4099,9 +4100,9 @@ interface Blob {
   text(): Promise<string>;
 }
 
-declare var Blob: {
+declare const Blob: {
   prototype: Blob;
-  new (blobParts?: BlobPart[], options?: BlobPropertyBag): Blob;
+  new (blobParts?: readonly BlobPart[], options?: BlobPropertyBag): Blob;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BlobEvent) */
@@ -4115,7 +4116,7 @@ interface BlobEvent extends Event {
   readonly timecode: DOMHighResTimeStamp;
 }
 
-declare var BlobEvent: {
+declare const BlobEvent: {
   prototype: BlobEvent;
   new (type: string, eventInitDict: BlobEventInit): BlobEvent;
 };
@@ -4141,7 +4142,7 @@ interface Body {
    */
   formData(): Promise<FormData>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/json) */
-  json(): Promise<any>;
+  json(): Promise<MutableJsonValue>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/text) */
   text(): Promise<string>;
 }
@@ -4164,12 +4165,14 @@ interface BroadcastChannel extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/message_event)
    */
-  onmessage: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;
+  onmessage: ((this: BroadcastChannel, ev: MessageEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/messageerror_event)
    */
-  onmessageerror: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;
+  onmessageerror:
+    | ((this: BroadcastChannel, ev: MessageEvent) => unknown)
+    | null;
   /**
    * Closes the BroadcastChannel object, opening it up to garbage collection.
    *
@@ -4185,10 +4188,13 @@ interface BroadcastChannel extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/postMessage)
    */
-  postMessage(message: any): void;
+  postMessage(message: unknown): void;
   addEventListener<K extends keyof BroadcastChannelEventMap>(
     type: K,
-    listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any,
+    listener: (
+      this: BroadcastChannel,
+      ev: BroadcastChannelEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -4198,7 +4204,10 @@ interface BroadcastChannel extends EventTarget {
   ): void;
   removeEventListener<K extends keyof BroadcastChannelEventMap>(
     type: K,
-    listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any,
+    listener: (
+      this: BroadcastChannel,
+      ev: BroadcastChannelEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -4208,7 +4217,7 @@ interface BroadcastChannel extends EventTarget {
   ): void;
 }
 
-declare var BroadcastChannel: {
+declare const BroadcastChannel: {
   prototype: BroadcastChannel;
   new (name: string): BroadcastChannel;
 };
@@ -4233,7 +4242,7 @@ interface ByteLengthQueuingStrategy extends QueuingStrategy<ArrayBufferView> {
   readonly size: QueuingStrategySize<ArrayBufferView>;
 }
 
-declare var ByteLengthQueuingStrategy: {
+declare const ByteLengthQueuingStrategy: {
   prototype: ByteLengthQueuingStrategy;
   new (init: QueuingStrategyInit): ByteLengthQueuingStrategy;
 };
@@ -4247,7 +4256,7 @@ declare var ByteLengthQueuingStrategy: {
  */
 interface CDATASection extends Text {}
 
-declare var CDATASection: {
+declare const CDATASection: {
   prototype: CDATASection;
   new (): CDATASection;
 };
@@ -4261,7 +4270,7 @@ interface CSSAnimation extends Animation {
   readonly animationName: string;
   addEventListener<K extends keyof AnimationEventMap>(
     type: K,
-    listener: (this: CSSAnimation, ev: AnimationEventMap[K]) => any,
+    listener: (this: CSSAnimation, ev: AnimationEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -4271,7 +4280,7 @@ interface CSSAnimation extends Animation {
   ): void;
   removeEventListener<K extends keyof AnimationEventMap>(
     type: K,
-    listener: (this: CSSAnimation, ev: AnimationEventMap[K]) => any,
+    listener: (this: CSSAnimation, ev: AnimationEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -4281,7 +4290,7 @@ interface CSSAnimation extends Animation {
   ): void;
 }
 
-declare var CSSAnimation: {
+declare const CSSAnimation: {
   prototype: CSSAnimation;
   new (): CSSAnimation;
 };
@@ -4300,7 +4309,7 @@ interface CSSConditionRule extends CSSGroupingRule {
   readonly conditionText: string;
 }
 
-declare var CSSConditionRule: {
+declare const CSSConditionRule: {
   prototype: CSSConditionRule;
   new (): CSSConditionRule;
 };
@@ -4319,7 +4328,7 @@ interface CSSContainerRule extends CSSConditionRule {
   readonly containerQuery: string;
 }
 
-declare var CSSContainerRule: {
+declare const CSSContainerRule: {
   prototype: CSSContainerRule;
   new (): CSSContainerRule;
 };
@@ -4386,7 +4395,7 @@ interface CSSCounterStyleRule extends CSSRule {
   system: string;
 }
 
-declare var CSSCounterStyleRule: {
+declare const CSSCounterStyleRule: {
   prototype: CSSCounterStyleRule;
   new (): CSSCounterStyleRule;
 };
@@ -4400,7 +4409,7 @@ interface CSSFontFaceRule extends CSSRule {
   readonly style: CSSStyleDeclaration;
 }
 
-declare var CSSFontFaceRule: {
+declare const CSSFontFaceRule: {
   prototype: CSSFontFaceRule;
   new (): CSSFontFaceRule;
 };
@@ -4417,7 +4426,7 @@ interface CSSFontFeatureValuesRule extends CSSRule {
   fontFamily: string;
 }
 
-declare var CSSFontFeatureValuesRule: {
+declare const CSSFontFeatureValuesRule: {
   prototype: CSSFontFeatureValuesRule;
   new (): CSSFontFeatureValuesRule;
 };
@@ -4449,7 +4458,7 @@ interface CSSFontPaletteValuesRule extends CSSRule {
   readonly overrideColors: string;
 }
 
-declare var CSSFontPaletteValuesRule: {
+declare const CSSFontPaletteValuesRule: {
   prototype: CSSFontPaletteValuesRule;
   new (): CSSFontPaletteValuesRule;
 };
@@ -4477,7 +4486,7 @@ interface CSSGroupingRule extends CSSRule {
   insertRule(rule: string, index?: number): number;
 }
 
-declare var CSSGroupingRule: {
+declare const CSSGroupingRule: {
   prototype: CSSGroupingRule;
   new (): CSSGroupingRule;
 };
@@ -4485,7 +4494,7 @@ declare var CSSGroupingRule: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSImageValue) */
 interface CSSImageValue extends CSSStyleValue {}
 
-declare var CSSImageValue: {
+declare const CSSImageValue: {
   prototype: CSSImageValue;
   new (): CSSImageValue;
 };
@@ -4519,7 +4528,7 @@ interface CSSImportRule extends CSSRule {
   readonly supportsText: string | null;
 }
 
-declare var CSSImportRule: {
+declare const CSSImportRule: {
   prototype: CSSImportRule;
   new (): CSSImportRule;
 };
@@ -4544,7 +4553,7 @@ interface CSSKeyframeRule extends CSSRule {
   readonly style: CSSStyleDeclaration;
 }
 
-declare var CSSKeyframeRule: {
+declare const CSSKeyframeRule: {
   prototype: CSSKeyframeRule;
   new (): CSSKeyframeRule;
 };
@@ -4586,7 +4595,7 @@ interface CSSKeyframesRule extends CSSRule {
   [index: number]: CSSKeyframeRule;
 }
 
-declare var CSSKeyframesRule: {
+declare const CSSKeyframesRule: {
   prototype: CSSKeyframesRule;
   new (): CSSKeyframesRule;
 };
@@ -4600,7 +4609,7 @@ interface CSSKeywordValue extends CSSStyleValue {
   value: string;
 }
 
-declare var CSSKeywordValue: {
+declare const CSSKeywordValue: {
   prototype: CSSKeywordValue;
   new (value: string): CSSKeywordValue;
 };
@@ -4614,7 +4623,7 @@ interface CSSLayerBlockRule extends CSSGroupingRule {
   readonly name: string;
 }
 
-declare var CSSLayerBlockRule: {
+declare const CSSLayerBlockRule: {
   prototype: CSSLayerBlockRule;
   new (): CSSLayerBlockRule;
 };
@@ -4631,7 +4640,7 @@ interface CSSLayerStatementRule extends CSSRule {
   readonly nameList: ReadonlyArray<string>;
 }
 
-declare var CSSLayerStatementRule: {
+declare const CSSLayerStatementRule: {
   prototype: CSSLayerStatementRule;
   new (): CSSLayerStatementRule;
 };
@@ -4642,7 +4651,7 @@ interface CSSMathClamp extends CSSMathValue {
   readonly value: CSSNumericValue;
 }
 
-declare var CSSMathClamp: {
+declare const CSSMathClamp: {
   prototype: CSSMathClamp;
   new (
     lower: CSSNumberish,
@@ -4660,7 +4669,7 @@ interface CSSMathInvert extends CSSMathValue {
   readonly value: CSSNumericValue;
 }
 
-declare var CSSMathInvert: {
+declare const CSSMathInvert: {
   prototype: CSSMathInvert;
   new (arg: CSSNumberish): CSSMathInvert;
 };
@@ -4674,9 +4683,9 @@ interface CSSMathMax extends CSSMathValue {
   readonly values: CSSNumericArray;
 }
 
-declare var CSSMathMax: {
+declare const CSSMathMax: {
   prototype: CSSMathMax;
-  new (...args: CSSNumberish[]): CSSMathMax;
+  new (...args: readonly CSSNumberish[]): CSSMathMax;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathMin) */
@@ -4688,9 +4697,9 @@ interface CSSMathMin extends CSSMathValue {
   readonly values: CSSNumericArray;
 }
 
-declare var CSSMathMin: {
+declare const CSSMathMin: {
   prototype: CSSMathMin;
-  new (...args: CSSNumberish[]): CSSMathMin;
+  new (...args: readonly CSSNumberish[]): CSSMathMin;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathNegate) */
@@ -4702,7 +4711,7 @@ interface CSSMathNegate extends CSSMathValue {
   readonly value: CSSNumericValue;
 }
 
-declare var CSSMathNegate: {
+declare const CSSMathNegate: {
   prototype: CSSMathNegate;
   new (arg: CSSNumberish): CSSMathNegate;
 };
@@ -4716,9 +4725,9 @@ interface CSSMathProduct extends CSSMathValue {
   readonly values: CSSNumericArray;
 }
 
-declare var CSSMathProduct: {
+declare const CSSMathProduct: {
   prototype: CSSMathProduct;
-  new (...args: CSSNumberish[]): CSSMathProduct;
+  new (...args: readonly CSSNumberish[]): CSSMathProduct;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathSum) */
@@ -4730,9 +4739,9 @@ interface CSSMathSum extends CSSMathValue {
   readonly values: CSSNumericArray;
 }
 
-declare var CSSMathSum: {
+declare const CSSMathSum: {
   prototype: CSSMathSum;
-  new (...args: CSSNumberish[]): CSSMathSum;
+  new (...args: readonly CSSNumberish[]): CSSMathSum;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathValue) */
@@ -4744,7 +4753,7 @@ interface CSSMathValue extends CSSNumericValue {
   readonly operator: CSSMathOperator;
 }
 
-declare var CSSMathValue: {
+declare const CSSMathValue: {
   prototype: CSSMathValue;
   new (): CSSMathValue;
 };
@@ -4761,7 +4770,7 @@ interface CSSMatrixComponent extends CSSTransformComponent {
   matrix: DOMMatrix;
 }
 
-declare var CSSMatrixComponent: {
+declare const CSSMatrixComponent: {
   prototype: CSSMatrixComponent;
   new (
     matrix: DOMMatrixReadOnly,
@@ -4784,7 +4793,7 @@ interface CSSMediaRule extends CSSConditionRule {
   readonly media: MediaList;
 }
 
-declare var CSSMediaRule: {
+declare const CSSMediaRule: {
   prototype: CSSMediaRule;
   new (): CSSMediaRule;
 };
@@ -4808,7 +4817,7 @@ interface CSSNamespaceRule extends CSSRule {
   readonly prefix: string;
 }
 
-declare var CSSNamespaceRule: {
+declare const CSSNamespaceRule: {
   prototype: CSSNamespaceRule;
   new (): CSSNamespaceRule;
 };
@@ -4826,12 +4835,12 @@ interface CSSNumericArray {
       key: number,
       parent: CSSNumericArray,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: CSSNumericValue;
 }
 
-declare var CSSNumericArray: {
+declare const CSSNumericArray: {
   prototype: CSSNumericArray;
   new (): CSSNumericArray;
 };
@@ -4842,37 +4851,37 @@ interface CSSNumericValue extends CSSStyleValue {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/add)
    */
-  add(...values: CSSNumberish[]): CSSNumericValue;
+  add(...values: readonly CSSNumberish[]): CSSNumericValue;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/div)
    */
-  div(...values: CSSNumberish[]): CSSNumericValue;
+  div(...values: readonly CSSNumberish[]): CSSNumericValue;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/equals)
    */
-  equals(...value: CSSNumberish[]): boolean;
+  equals(...value: readonly CSSNumberish[]): boolean;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/max)
    */
-  max(...values: CSSNumberish[]): CSSNumericValue;
+  max(...values: readonly CSSNumberish[]): CSSNumericValue;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/min)
    */
-  min(...values: CSSNumberish[]): CSSNumericValue;
+  min(...values: readonly CSSNumberish[]): CSSNumericValue;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/mul)
    */
-  mul(...values: CSSNumberish[]): CSSNumericValue;
+  mul(...values: readonly CSSNumberish[]): CSSNumericValue;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/sub)
    */
-  sub(...values: CSSNumberish[]): CSSNumericValue;
+  sub(...values: readonly CSSNumberish[]): CSSNumericValue;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/to)
@@ -4882,7 +4891,7 @@ interface CSSNumericValue extends CSSStyleValue {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/toSum)
    */
-  toSum(...units: string[]): CSSMathSum;
+  toSum(...units: readonly string[]): CSSMathSum;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/type)
@@ -4890,7 +4899,7 @@ interface CSSNumericValue extends CSSStyleValue {
   type(): CSSNumericType;
 }
 
-declare var CSSNumericValue: {
+declare const CSSNumericValue: {
   prototype: CSSNumericValue;
   new (): CSSNumericValue;
   /**
@@ -4919,7 +4928,7 @@ interface CSSPageRule extends CSSGroupingRule {
   readonly style: CSSStyleDeclaration;
 }
 
-declare var CSSPageRule: {
+declare const CSSPageRule: {
   prototype: CSSPageRule;
   new (): CSSPageRule;
 };
@@ -4933,7 +4942,7 @@ interface CSSPerspective extends CSSTransformComponent {
   length: CSSPerspectiveValue;
 }
 
-declare var CSSPerspective: {
+declare const CSSPerspective: {
   prototype: CSSPerspective;
   new (length: CSSPerspectiveValue): CSSPerspective;
 };
@@ -4962,7 +4971,7 @@ interface CSSPropertyRule extends CSSRule {
   readonly syntax: string;
 }
 
-declare var CSSPropertyRule: {
+declare const CSSPropertyRule: {
   prototype: CSSPropertyRule;
   new (): CSSPropertyRule;
 };
@@ -4979,7 +4988,7 @@ interface CSSRotate extends CSSTransformComponent {
   z: CSSNumberish;
 }
 
-declare var CSSRotate: {
+declare const CSSRotate: {
   prototype: CSSRotate;
   new (angle: CSSNumericValue): CSSRotate;
   new (
@@ -5029,7 +5038,7 @@ interface CSSRule {
   readonly FONT_FEATURE_VALUES_RULE: 14;
 }
 
-declare var CSSRule: {
+declare const CSSRule: {
   prototype: CSSRule;
   new (): CSSRule;
   readonly STYLE_RULE: 1;
@@ -5066,7 +5075,7 @@ interface CSSRuleList {
   [index: number]: CSSRule;
 }
 
-declare var CSSRuleList: {
+declare const CSSRuleList: {
   prototype: CSSRuleList;
   new (): CSSRuleList;
 };
@@ -5081,7 +5090,7 @@ interface CSSScale extends CSSTransformComponent {
   z: CSSNumberish;
 }
 
-declare var CSSScale: {
+declare const CSSScale: {
   prototype: CSSScale;
   new (x: CSSNumberish, y: CSSNumberish, z?: CSSNumberish): CSSScale;
 };
@@ -5100,7 +5109,7 @@ interface CSSScopeRule extends CSSGroupingRule {
   readonly start: string | null;
 }
 
-declare var CSSScopeRule: {
+declare const CSSScopeRule: {
   prototype: CSSScopeRule;
   new (): CSSScopeRule;
 };
@@ -5113,7 +5122,7 @@ interface CSSSkew extends CSSTransformComponent {
   ay: CSSNumericValue;
 }
 
-declare var CSSSkew: {
+declare const CSSSkew: {
   prototype: CSSSkew;
   new (ax: CSSNumericValue, ay: CSSNumericValue): CSSSkew;
 };
@@ -5124,7 +5133,7 @@ interface CSSSkewX extends CSSTransformComponent {
   ax: CSSNumericValue;
 }
 
-declare var CSSSkewX: {
+declare const CSSSkewX: {
   prototype: CSSSkewX;
   new (ax: CSSNumericValue): CSSSkewX;
 };
@@ -5135,7 +5144,7 @@ interface CSSSkewY extends CSSTransformComponent {
   ay: CSSNumericValue;
 }
 
-declare var CSSSkewY: {
+declare const CSSSkewY: {
   prototype: CSSSkewY;
   new (ay: CSSNumericValue): CSSSkewY;
 };
@@ -5146,7 +5155,7 @@ declare var CSSSkewY: {
  */
 interface CSSStartingStyleRule extends CSSGroupingRule {}
 
-declare var CSSStartingStyleRule: {
+declare const CSSStartingStyleRule: {
   prototype: CSSStartingStyleRule;
   new (): CSSStartingStyleRule;
 };
@@ -6957,7 +6966,7 @@ interface CSSStyleDeclaration {
   [index: number]: string;
 }
 
-declare var CSSStyleDeclaration: {
+declare const CSSStyleDeclaration: {
   prototype: CSSStyleDeclaration;
   new (): CSSStyleDeclaration;
 };
@@ -6986,7 +6995,7 @@ interface CSSStyleRule extends CSSGroupingRule {
   readonly styleMap: StylePropertyMap;
 }
 
-declare var CSSStyleRule: {
+declare const CSSStyleRule: {
   prototype: CSSStyleRule;
   new (): CSSStyleRule;
 };
@@ -7051,7 +7060,7 @@ interface CSSStyleSheet extends StyleSheet {
   replaceSync(text: string): void;
 }
 
-declare var CSSStyleSheet: {
+declare const CSSStyleSheet: {
   prototype: CSSStyleSheet;
   new (options?: CSSStyleSheetInit): CSSStyleSheet;
 };
@@ -7061,7 +7070,7 @@ interface CSSStyleValue {
   toString(): string;
 }
 
-declare var CSSStyleValue: {
+declare const CSSStyleValue: {
   prototype: CSSStyleValue;
   new (): CSSStyleValue;
   /**
@@ -7085,7 +7094,7 @@ declare var CSSStyleValue: {
  */
 interface CSSSupportsRule extends CSSConditionRule {}
 
-declare var CSSSupportsRule: {
+declare const CSSSupportsRule: {
   prototype: CSSSupportsRule;
   new (): CSSSupportsRule;
 };
@@ -7108,7 +7117,7 @@ interface CSSTransformComponent {
   toString(): string;
 }
 
-declare var CSSTransformComponent: {
+declare const CSSTransformComponent: {
   prototype: CSSTransformComponent;
   new (): CSSTransformComponent;
 };
@@ -7136,14 +7145,14 @@ interface CSSTransformValue extends CSSStyleValue {
       key: number,
       parent: CSSTransformValue,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: CSSTransformComponent;
 }
 
-declare var CSSTransformValue: {
+declare const CSSTransformValue: {
   prototype: CSSTransformValue;
-  new (transforms: CSSTransformComponent[]): CSSTransformValue;
+  new (transforms: readonly CSSTransformComponent[]): CSSTransformValue;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransition) */
@@ -7155,7 +7164,7 @@ interface CSSTransition extends Animation {
   readonly transitionProperty: string;
   addEventListener<K extends keyof AnimationEventMap>(
     type: K,
-    listener: (this: CSSTransition, ev: AnimationEventMap[K]) => any,
+    listener: (this: CSSTransition, ev: AnimationEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -7165,7 +7174,7 @@ interface CSSTransition extends Animation {
   ): void;
   removeEventListener<K extends keyof AnimationEventMap>(
     type: K,
-    listener: (this: CSSTransition, ev: AnimationEventMap[K]) => any,
+    listener: (this: CSSTransition, ev: AnimationEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -7175,7 +7184,7 @@ interface CSSTransition extends Animation {
   ): void;
 }
 
-declare var CSSTransition: {
+declare const CSSTransition: {
   prototype: CSSTransition;
   new (): CSSTransition;
 };
@@ -7190,7 +7199,7 @@ interface CSSTranslate extends CSSTransformComponent {
   z: CSSNumericValue;
 }
 
-declare var CSSTranslate: {
+declare const CSSTranslate: {
   prototype: CSSTranslate;
   new (
     x: CSSNumericValue,
@@ -7213,7 +7222,7 @@ interface CSSUnitValue extends CSSNumericValue {
   value: number;
 }
 
-declare var CSSUnitValue: {
+declare const CSSUnitValue: {
   prototype: CSSUnitValue;
   new (value: number, unit: string): CSSUnitValue;
 };
@@ -7231,14 +7240,14 @@ interface CSSUnparsedValue extends CSSStyleValue {
       key: number,
       parent: CSSUnparsedValue,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: CSSUnparsedSegment;
 }
 
-declare var CSSUnparsedValue: {
+declare const CSSUnparsedValue: {
   prototype: CSSUnparsedValue;
-  new (members: CSSUnparsedSegment[]): CSSUnparsedValue;
+  new (members: readonly CSSUnparsedSegment[]): CSSUnparsedValue;
 };
 
 /**
@@ -7258,7 +7267,7 @@ interface CSSVariableReferenceValue {
   variable: string;
 }
 
-declare var CSSVariableReferenceValue: {
+declare const CSSVariableReferenceValue: {
   prototype: CSSVariableReferenceValue;
   new (
     variable: string,
@@ -7279,7 +7288,7 @@ interface Cache {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/add) */
   add(request: RequestInfo | URL): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/addAll) */
-  addAll(requests: RequestInfo[]): Promise<void>;
+  addAll(requests: readonly RequestInfo[]): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/delete) */
   delete(
     request: RequestInfo | URL,
@@ -7304,7 +7313,7 @@ interface Cache {
   put(request: RequestInfo | URL, response: Response): Promise<void>;
 }
 
-declare var Cache: {
+declare const Cache: {
   prototype: Cache;
   new (): Cache;
 };
@@ -7345,7 +7354,7 @@ interface CacheStorage {
   open(cacheName: string): Promise<Cache>;
 }
 
-declare var CacheStorage: {
+declare const CacheStorage: {
   prototype: CacheStorage;
   new (): CacheStorage;
 };
@@ -7370,7 +7379,7 @@ interface CanvasCaptureMediaStreamTrack extends MediaStreamTrack {
     listener: (
       this: CanvasCaptureMediaStreamTrack,
       ev: MediaStreamTrackEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -7383,7 +7392,7 @@ interface CanvasCaptureMediaStreamTrack extends MediaStreamTrack {
     listener: (
       this: CanvasCaptureMediaStreamTrack,
       ev: MediaStreamTrackEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -7393,7 +7402,7 @@ interface CanvasCaptureMediaStreamTrack extends MediaStreamTrack {
   ): void;
 }
 
-declare var CanvasCaptureMediaStreamTrack: {
+declare const CanvasCaptureMediaStreamTrack: {
   prototype: CanvasCaptureMediaStreamTrack;
   new (): CanvasCaptureMediaStreamTrack;
 };
@@ -7558,7 +7567,7 @@ interface CanvasGradient {
   addColorStop(offset: number, color: string): void;
 }
 
-declare var CanvasGradient: {
+declare const CanvasGradient: {
   prototype: CanvasGradient;
   new (): CanvasGradient;
 };
@@ -7731,7 +7740,7 @@ interface CanvasPathDrawingStyles {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/setLineDash)
    */
-  setLineDash(segments: number[]): void;
+  setLineDash(segments: readonly number[]): void;
 }
 
 /**
@@ -7751,7 +7760,7 @@ interface CanvasPattern {
   setTransform(transform?: DOMMatrix2DInit): void;
 }
 
-declare var CanvasPattern: {
+declare const CanvasPattern: {
   prototype: CanvasPattern;
   new (): CanvasPattern;
 };
@@ -7811,7 +7820,7 @@ interface CanvasRenderingContext2D
   getContextAttributes(): CanvasRenderingContext2DSettings;
 }
 
-declare var CanvasRenderingContext2D: {
+declare const CanvasRenderingContext2D: {
   prototype: CanvasRenderingContext2D;
   new (): CanvasRenderingContext2D;
 };
@@ -8006,7 +8015,7 @@ interface CanvasUserInterface {
  */
 interface ChannelMergerNode extends AudioNode {}
 
-declare var ChannelMergerNode: {
+declare const ChannelMergerNode: {
   prototype: ChannelMergerNode;
   new (
     context: BaseAudioContext,
@@ -8026,7 +8035,7 @@ declare var ChannelMergerNode: {
  */
 interface ChannelSplitterNode extends AudioNode {}
 
-declare var ChannelSplitterNode: {
+declare const ChannelSplitterNode: {
   prototype: ChannelSplitterNode;
   new (
     context: BaseAudioContext,
@@ -8081,7 +8090,7 @@ interface CharacterData extends Node, ChildNode, NonDocumentTypeChildNode {
   substringData(offset: number, count: number): string;
 }
 
-declare var CharacterData: {
+declare const CharacterData: {
   prototype: CharacterData;
   new (): CharacterData;
 };
@@ -8154,7 +8163,7 @@ interface Clipboard extends EventTarget {
   writeText(data: string): Promise<void>;
 }
 
-declare var Clipboard: {
+declare const Clipboard: {
   prototype: Clipboard;
   new (): Clipboard;
 };
@@ -8173,7 +8182,7 @@ interface ClipboardEvent extends Event {
   readonly clipboardData: DataTransfer | null;
 }
 
-declare var ClipboardEvent: {
+declare const ClipboardEvent: {
   prototype: ClipboardEvent;
   new (type: string, eventInitDict?: ClipboardEventInit): ClipboardEvent;
 };
@@ -8201,7 +8210,7 @@ interface ClipboardItem {
   getType(type: string): Promise<Blob>;
 }
 
-declare var ClipboardItem: {
+declare const ClipboardItem: {
   prototype: ClipboardItem;
   new (
     items: Record<string, string | Blob | PromiseLike<string | Blob>>,
@@ -8244,7 +8253,7 @@ interface CloseEvent extends Event {
   readonly wasClean: boolean;
 }
 
-declare var CloseEvent: {
+declare const CloseEvent: {
   prototype: CloseEvent;
   new (type: string, eventInitDict?: CloseEventInit): CloseEvent;
 };
@@ -8257,7 +8266,7 @@ declare var CloseEvent: {
  */
 interface Comment extends CharacterData {}
 
-declare var Comment: {
+declare const Comment: {
   prototype: Comment;
   new (data?: string): Comment;
 };
@@ -8289,7 +8298,7 @@ interface CompositionEvent extends UIEvent {
   ): void;
 }
 
-declare var CompositionEvent: {
+declare const CompositionEvent: {
   prototype: CompositionEvent;
   new (type: string, eventInitDict?: CompositionEventInit): CompositionEvent;
 };
@@ -8297,7 +8306,7 @@ declare var CompositionEvent: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CompressionStream) */
 interface CompressionStream extends GenericTransformStream {}
 
-declare var CompressionStream: {
+declare const CompressionStream: {
   prototype: CompressionStream;
   new (format: CompressionFormat): CompressionStream;
 };
@@ -8317,7 +8326,7 @@ interface ConstantSourceNode extends AudioScheduledSourceNode {
     listener: (
       this: ConstantSourceNode,
       ev: AudioScheduledSourceNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -8330,7 +8339,7 @@ interface ConstantSourceNode extends AudioScheduledSourceNode {
     listener: (
       this: ConstantSourceNode,
       ev: AudioScheduledSourceNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -8340,7 +8349,7 @@ interface ConstantSourceNode extends AudioScheduledSourceNode {
   ): void;
 }
 
-declare var ConstantSourceNode: {
+declare const ConstantSourceNode: {
   prototype: ConstantSourceNode;
   new (
     context: BaseAudioContext,
@@ -8360,7 +8369,7 @@ interface ContentVisibilityAutoStateChangeEvent extends Event {
   readonly skipped: boolean;
 }
 
-declare var ContentVisibilityAutoStateChangeEvent: {
+declare const ContentVisibilityAutoStateChangeEvent: {
   prototype: ContentVisibilityAutoStateChangeEvent;
   new (
     type: string,
@@ -8388,7 +8397,7 @@ interface ConvolverNode extends AudioNode {
   normalize: boolean;
 }
 
-declare var ConvolverNode: {
+declare const ConvolverNode: {
   prototype: ConvolverNode;
   new (context: BaseAudioContext, options?: ConvolverOptions): ConvolverNode;
 };
@@ -8413,7 +8422,7 @@ interface CountQueuingStrategy extends QueuingStrategy {
   readonly size: QueuingStrategySize;
 }
 
-declare var CountQueuingStrategy: {
+declare const CountQueuingStrategy: {
   prototype: CountQueuingStrategy;
   new (init: QueuingStrategyInit): CountQueuingStrategy;
 };
@@ -8430,7 +8439,7 @@ interface Credential {
   readonly type: string;
 }
 
-declare var Credential: {
+declare const Credential: {
   prototype: Credential;
   new (): Credential;
 };
@@ -8464,7 +8473,7 @@ interface CredentialsContainer {
   store(credential: Credential): Promise<void>;
 }
 
-declare var CredentialsContainer: {
+declare const CredentialsContainer: {
   prototype: CredentialsContainer;
   new (): CredentialsContainer;
 };
@@ -8497,7 +8506,7 @@ interface Crypto {
   randomUUID(): `${string}-${string}-${string}-${string}-${string}`;
 }
 
-declare var Crypto: {
+declare const Crypto: {
   prototype: Crypto;
   new (): Crypto;
 };
@@ -8525,10 +8534,10 @@ interface CryptoKey {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/usages)
    */
-  readonly usages: KeyUsage[];
+  readonly usages: readonly KeyUsage[];
 }
 
-declare var CryptoKey: {
+declare const CryptoKey: {
   prototype: CryptoKey;
   new (): CryptoKey;
 };
@@ -8569,13 +8578,13 @@ interface CustomElementRegistry {
   whenDefined(name: string): Promise<CustomElementConstructor>;
 }
 
-declare var CustomElementRegistry: {
+declare const CustomElementRegistry: {
   prototype: CustomElementRegistry;
   new (): CustomElementRegistry;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomEvent) */
-interface CustomEvent<T = any> extends Event {
+interface CustomEvent<T = unknown> extends Event {
   /**
    * Returns any custom data event was created with. Typically used for
    * synthetic events.
@@ -8598,7 +8607,7 @@ interface CustomEvent<T = any> extends Event {
   ): void;
 }
 
-declare var CustomEvent: {
+declare const CustomEvent: {
   prototype: CustomEvent;
   new <T>(type: string, eventInitDict?: CustomEventInit<T>): CustomEvent<T>;
 };
@@ -8607,11 +8616,11 @@ declare var CustomEvent: {
 interface CustomStateSet {
   forEach(
     callbackfn: (value: string, key: string, parent: CustomStateSet) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var CustomStateSet: {
+declare const CustomStateSet: {
   prototype: CustomStateSet;
   new (): CustomStateSet;
 };
@@ -8667,7 +8676,7 @@ interface DOMException extends Error {
   readonly DATA_CLONE_ERR: 25;
 }
 
-declare var DOMException: {
+declare const DOMException: {
   prototype: DOMException;
   new (message?: string, name?: string): DOMException;
   readonly INDEX_SIZE_ERR: 1;
@@ -8734,10 +8743,10 @@ interface DOMImplementation {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/DOMImplementation/hasFeature)
    */
-  hasFeature(...args: any[]): true;
+  hasFeature(...args: readonly unknown[]): true;
 }
 
-declare var DOMImplementation: {
+declare const DOMImplementation: {
   prototype: DOMImplementation;
   new (): DOMImplementation;
 };
@@ -8797,19 +8806,19 @@ interface DOMMatrix extends DOMMatrixReadOnly {
   translateSelf(tx?: number, ty?: number, tz?: number): DOMMatrix;
 }
 
-declare var DOMMatrix: {
+declare const DOMMatrix: {
   prototype: DOMMatrix;
-  new (init?: string | number[]): DOMMatrix;
+  new (init?: string | readonly number[]): DOMMatrix;
   fromFloat32Array(array32: Float32Array): DOMMatrix;
   fromFloat64Array(array64: Float64Array): DOMMatrix;
   fromMatrix(other?: DOMMatrixInit): DOMMatrix;
 };
 
 type SVGMatrix = DOMMatrix;
-declare var SVGMatrix: typeof DOMMatrix;
+declare const SVGMatrix: typeof DOMMatrix;
 
 type WebKitCSSMatrix = DOMMatrix;
-declare var WebKitCSSMatrix: typeof DOMMatrix;
+declare const WebKitCSSMatrix: typeof DOMMatrix;
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly) */
 interface DOMMatrixReadOnly {
@@ -8877,7 +8886,7 @@ interface DOMMatrixReadOnly {
   skewY(sy?: number): DOMMatrix;
   toFloat32Array(): Float32Array;
   toFloat64Array(): Float64Array;
-  toJSON(): any;
+  toJSON(): unknown;
   transformPoint(point?: DOMPointInit): DOMPoint;
   /**
    * [MDN
@@ -8887,9 +8896,9 @@ interface DOMMatrixReadOnly {
   toString(): string;
 }
 
-declare var DOMMatrixReadOnly: {
+declare const DOMMatrixReadOnly: {
   prototype: DOMMatrixReadOnly;
-  new (init?: string | number[]): DOMMatrixReadOnly;
+  new (init?: string | readonly number[]): DOMMatrixReadOnly;
   fromFloat32Array(array32: Float32Array): DOMMatrixReadOnly;
   fromFloat64Array(array64: Float64Array): DOMMatrixReadOnly;
   fromMatrix(other?: DOMMatrixInit): DOMMatrixReadOnly;
@@ -8924,7 +8933,7 @@ interface DOMParser {
   parseFromString(string: string, type: DOMParserSupportedType): Document;
 }
 
-declare var DOMParser: {
+declare const DOMParser: {
   prototype: DOMParser;
   new (): DOMParser;
 };
@@ -8941,7 +8950,7 @@ interface DOMPoint extends DOMPointReadOnly {
   z: number;
 }
 
-declare var DOMPoint: {
+declare const DOMPoint: {
   prototype: DOMPoint;
   new (x?: number, y?: number, z?: number, w?: number): DOMPoint;
   /**
@@ -8952,7 +8961,7 @@ declare var DOMPoint: {
 };
 
 type SVGPoint = DOMPoint;
-declare var SVGPoint: typeof DOMPoint;
+declare const SVGPoint: typeof DOMPoint;
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly) */
 interface DOMPointReadOnly {
@@ -8981,10 +8990,10 @@ interface DOMPointReadOnly {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var DOMPointReadOnly: {
+declare const DOMPointReadOnly: {
   prototype: DOMPointReadOnly;
   new (x?: number, y?: number, z?: number, w?: number): DOMPointReadOnly;
   /**
@@ -9001,10 +9010,10 @@ interface DOMQuad {
   readonly p3: DOMPoint;
   readonly p4: DOMPoint;
   getBounds(): DOMRect;
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var DOMQuad: {
+declare const DOMQuad: {
   prototype: DOMQuad;
   new (
     p1?: DOMPointInit,
@@ -9024,7 +9033,7 @@ interface DOMRect extends DOMRectReadOnly {
   y: number;
 }
 
-declare var DOMRect: {
+declare const DOMRect: {
   prototype: DOMRect;
   new (x?: number, y?: number, width?: number, height?: number): DOMRect;
   /**
@@ -9035,7 +9044,7 @@ declare var DOMRect: {
 };
 
 type SVGRect = DOMRect;
-declare var SVGRect: typeof DOMRect;
+declare const SVGRect: typeof DOMRect;
 
 interface DOMRectList {
   readonly length: number;
@@ -9043,7 +9052,7 @@ interface DOMRectList {
   [index: number]: DOMRect;
 }
 
-declare var DOMRectList: {
+declare const DOMRectList: {
   prototype: DOMRectList;
   new (): DOMRectList;
 };
@@ -9090,10 +9099,10 @@ interface DOMRectReadOnly {
    * Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/y)
    */
   readonly y: number;
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var DOMRectReadOnly: {
+declare const DOMRectReadOnly: {
   prototype: DOMRectReadOnly;
   new (
     x?: number,
@@ -9138,7 +9147,7 @@ interface DOMStringList {
   [index: number]: string;
 }
 
-declare var DOMStringList: {
+declare const DOMStringList: {
   prototype: DOMStringList;
   new (): DOMStringList;
 };
@@ -9153,7 +9162,7 @@ interface DOMStringMap {
   [name: string]: string | undefined;
 }
 
-declare var DOMStringMap: {
+declare const DOMStringMap: {
   prototype: DOMStringMap;
   new (): DOMStringMap;
 };
@@ -9197,7 +9206,7 @@ interface DOMTokenList {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/add)
    */
-  add(...tokens: string[]): void;
+  add(...tokens: readonly string[]): void;
   /**
    * Returns true if token is present, and false otherwise.
    *
@@ -9224,7 +9233,7 @@ interface DOMTokenList {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/remove)
    */
-  remove(...tokens: string[]): void;
+  remove(...tokens: readonly string[]): void;
   /**
    * Replaces token with newToken.
    *
@@ -9269,12 +9278,12 @@ interface DOMTokenList {
   toggle(token: string, force?: boolean): boolean;
   forEach(
     callbackfn: (value: string, key: number, parent: DOMTokenList) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: string;
 }
 
-declare var DOMTokenList: {
+declare const DOMTokenList: {
   prototype: DOMTokenList;
   new (): DOMTokenList;
 };
@@ -9377,7 +9386,7 @@ interface DataTransfer {
   setDragImage(image: Element, x: number, y: number): void;
 }
 
-declare var DataTransfer: {
+declare const DataTransfer: {
   prototype: DataTransfer;
   new (): DataTransfer;
 };
@@ -9426,7 +9435,7 @@ interface DataTransferItem {
   webkitGetAsEntry(): FileSystemEntry | null;
 }
 
-declare var DataTransferItem: {
+declare const DataTransferItem: {
   prototype: DataTransferItem;
   new (): DataTransferItem;
 };
@@ -9473,7 +9482,7 @@ interface DataTransferItemList {
   [index: number]: DataTransferItem;
 }
 
-declare var DataTransferItemList: {
+declare const DataTransferItemList: {
   prototype: DataTransferItemList;
   new (): DataTransferItemList;
 };
@@ -9484,7 +9493,7 @@ declare var DataTransferItemList: {
  */
 interface DecompressionStream extends GenericTransformStream {}
 
-declare var DecompressionStream: {
+declare const DecompressionStream: {
   prototype: DecompressionStream;
   new (format: CompressionFormat): DecompressionStream;
 };
@@ -9503,7 +9512,7 @@ interface DelayNode extends AudioNode {
   readonly delayTime: AudioParam;
 }
 
-declare var DelayNode: {
+declare const DelayNode: {
   prototype: DelayNode;
   new (context: BaseAudioContext, options?: DelayOptions): DelayNode;
 };
@@ -9538,7 +9547,7 @@ interface DeviceMotionEvent extends Event {
   readonly rotationRate: DeviceMotionEventRotationRate | null;
 }
 
-declare var DeviceMotionEvent: {
+declare const DeviceMotionEvent: {
   prototype: DeviceMotionEvent;
   new (type: string, eventInitDict?: DeviceMotionEventInit): DeviceMotionEvent;
 };
@@ -9622,7 +9631,7 @@ interface DeviceOrientationEvent extends Event {
   readonly gamma: number | null;
 }
 
-declare var DeviceOrientationEvent: {
+declare const DeviceOrientationEvent: {
   prototype: DeviceOrientationEvent;
   new (
     type: string,
@@ -9925,22 +9934,22 @@ interface Document
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Document/fullscreenchange_event)
    */
-  onfullscreenchange: ((this: Document, ev: Event) => any) | null;
+  onfullscreenchange: ((this: Document, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Document/fullscreenerror_event)
    */
-  onfullscreenerror: ((this: Document, ev: Event) => any) | null;
+  onfullscreenerror: ((this: Document, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Document/pointerlockchange_event)
    */
-  onpointerlockchange: ((this: Document, ev: Event) => any) | null;
+  onpointerlockchange: ((this: Document, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Document/pointerlockerror_event)
    */
-  onpointerlockerror: ((this: Document, ev: Event) => any) | null;
+  onpointerlockerror: ((this: Document, ev: Event) => unknown) | null;
   /**
    * Fires when the state of the object has changed.
    *
@@ -9949,12 +9958,12 @@ interface Document
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Document/readystatechange_event)
    */
-  onreadystatechange: ((this: Document, ev: Event) => any) | null;
+  onreadystatechange: ((this: Document, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Document/visibilitychange_event)
    */
-  onvisibilitychange: ((this: Document, ev: Event) => any) | null;
+  onvisibilitychange: ((this: Document, ev: Event) => unknown) | null;
   readonly ownerDocument: null;
   /**
    * [MDN
@@ -10541,7 +10550,7 @@ interface Document
    *
    *   [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/write)
    */
-  write(...text: string[]): void;
+  write(...text: readonly string[]): void;
   /**
    * Writes one or more HTML expressions, followed by a carriage return, to a
    * document in the specified window.
@@ -10551,10 +10560,10 @@ interface Document
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Document/writeln)
    */
-  writeln(...text: string[]): void;
+  writeln(...text: readonly string[]): void;
   addEventListener<K extends keyof DocumentEventMap>(
     type: K,
-    listener: (this: Document, ev: DocumentEventMap[K]) => any,
+    listener: (this: Document, ev: DocumentEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -10564,7 +10573,7 @@ interface Document
   ): void;
   removeEventListener<K extends keyof DocumentEventMap>(
     type: K,
-    listener: (this: Document, ev: DocumentEventMap[K]) => any,
+    listener: (this: Document, ev: DocumentEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -10574,7 +10583,7 @@ interface Document
   ): void;
 }
 
-declare var Document: {
+declare const Document: {
   prototype: Document;
   new (): Document;
   /**
@@ -10599,7 +10608,7 @@ interface DocumentFragment extends Node, NonElementParentNode, ParentNode {
   getElementById(elementId: string): HTMLElement | null;
 }
 
-declare var DocumentFragment: {
+declare const DocumentFragment: {
   prototype: DocumentFragment;
   new (): DocumentFragment;
 };
@@ -10629,7 +10638,7 @@ interface DocumentOrShadowRoot {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Document/adoptedStyleSheets)
    */
-  adoptedStyleSheets: CSSStyleSheet[];
+  adoptedStyleSheets: readonly CSSStyleSheet[];
   /**
    * Returns document's fullscreen element.
    *
@@ -10675,7 +10684,7 @@ interface DocumentOrShadowRoot {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DocumentTimeline) */
 interface DocumentTimeline extends AnimationTimeline {}
 
-declare var DocumentTimeline: {
+declare const DocumentTimeline: {
   prototype: DocumentTimeline;
   new (options?: DocumentTimelineOptions): DocumentTimeline;
 };
@@ -10704,7 +10713,7 @@ interface DocumentType extends Node, ChildNode {
   readonly systemId: string;
 }
 
-declare var DocumentType: {
+declare const DocumentType: {
   prototype: DocumentType;
   new (): DocumentType;
 };
@@ -10728,7 +10737,7 @@ interface DragEvent extends MouseEvent {
   readonly dataTransfer: DataTransfer | null;
 }
 
-declare var DragEvent: {
+declare const DragEvent: {
   prototype: DragEvent;
   new (type: string, eventInitDict?: DragEventInit): DragEvent;
 };
@@ -10772,7 +10781,7 @@ interface DynamicsCompressorNode extends AudioNode {
   readonly threshold: AudioParam;
 }
 
-declare var DynamicsCompressorNode: {
+declare const DynamicsCompressorNode: {
   prototype: DynamicsCompressorNode;
   new (
     context: BaseAudioContext,
@@ -10968,12 +10977,12 @@ interface Element
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/fullscreenchange_event)
    */
-  onfullscreenchange: ((this: Element, ev: Event) => any) | null;
+  onfullscreenchange: ((this: Element, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/fullscreenerror_event)
    */
-  onfullscreenerror: ((this: Element, ev: Event) => any) | null;
+  onfullscreenerror: ((this: Element, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/outerHTML)
@@ -11332,7 +11341,7 @@ interface Element
   webkitMatchesSelector(selectors: string): boolean;
   addEventListener<K extends keyof ElementEventMap>(
     type: K,
-    listener: (this: Element, ev: ElementEventMap[K]) => any,
+    listener: (this: Element, ev: ElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11342,7 +11351,7 @@ interface Element
   ): void;
   removeEventListener<K extends keyof ElementEventMap>(
     type: K,
-    listener: (this: Element, ev: ElementEventMap[K]) => any,
+    listener: (this: Element, ev: ElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11352,7 +11361,7 @@ interface Element
   ): void;
 }
 
-declare var Element: {
+declare const Element: {
   prototype: Element;
   new (): Element;
 };
@@ -11493,7 +11502,7 @@ interface ElementInternals extends ARIAMixin {
   ): void;
 }
 
-declare var ElementInternals: {
+declare const ElementInternals: {
   prototype: ElementInternals;
   new (): ElementInternals;
 };
@@ -11527,7 +11536,7 @@ interface EncodedVideoChunk {
   copyTo(destination: AllowSharedBufferSource): void;
 }
 
-declare var EncodedVideoChunk: {
+declare const EncodedVideoChunk: {
   prototype: EncodedVideoChunk;
   new (init: EncodedVideoChunkInit): EncodedVideoChunk;
 };
@@ -11539,13 +11548,13 @@ declare var EncodedVideoChunk: {
  */
 interface ErrorEvent extends Event {
   readonly colno: number;
-  readonly error: any;
+  readonly error: unknown;
   readonly filename: string;
   readonly lineno: number;
   readonly message: string;
 }
 
-declare var ErrorEvent: {
+declare const ErrorEvent: {
   prototype: ErrorEvent;
   new (type: string, eventInitDict?: ErrorEventInit): ErrorEvent;
 };
@@ -11701,7 +11710,7 @@ interface Event {
   readonly BUBBLING_PHASE: 3;
 }
 
-declare var Event: {
+declare const Event: {
   prototype: Event;
   new (type: string, eventInitDict?: EventInit): Event;
   readonly NONE: 0;
@@ -11714,11 +11723,11 @@ declare var Event: {
 interface EventCounts {
   forEach(
     callbackfn: (value: number, key: string, parent: EventCounts) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var EventCounts: {
+declare const EventCounts: {
   prototype: EventCounts;
   new (): EventCounts;
 };
@@ -11743,17 +11752,17 @@ interface EventSource extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/EventSource/error_event)
    */
-  onerror: ((this: EventSource, ev: Event) => any) | null;
+  onerror: ((this: EventSource, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/EventSource/message_event)
    */
-  onmessage: ((this: EventSource, ev: MessageEvent) => any) | null;
+  onmessage: ((this: EventSource, ev: MessageEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/EventSource/open_event)
    */
-  onopen: ((this: EventSource, ev: Event) => any) | null;
+  onopen: ((this: EventSource, ev: Event) => unknown) | null;
   /**
    * Returns the state of this EventSource object's connection. It can have the
    * values described below.
@@ -11789,12 +11798,12 @@ interface EventSource extends EventTarget {
   readonly CLOSED: 2;
   addEventListener<K extends keyof EventSourceEventMap>(
     type: K,
-    listener: (this: EventSource, ev: EventSourceEventMap[K]) => any,
+    listener: (this: EventSource, ev: EventSourceEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
     type: string,
-    listener: (this: EventSource, event: MessageEvent) => any,
+    listener: (this: EventSource, event: MessageEvent) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11804,12 +11813,12 @@ interface EventSource extends EventTarget {
   ): void;
   removeEventListener<K extends keyof EventSourceEventMap>(
     type: K,
-    listener: (this: EventSource, ev: EventSourceEventMap[K]) => any,
+    listener: (this: EventSource, ev: EventSourceEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
     type: string,
-    listener: (this: EventSource, event: MessageEvent) => any,
+    listener: (this: EventSource, event: MessageEvent) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11819,7 +11828,7 @@ interface EventSource extends EventTarget {
   ): void;
 }
 
-declare var EventSource: {
+declare const EventSource: {
   prototype: EventSource;
   new (url: string | URL, eventSourceInitDict?: EventSourceInit): EventSource;
   readonly CONNECTING: 0;
@@ -11893,7 +11902,7 @@ interface EventTarget {
   ): void;
 }
 
-declare var EventTarget: {
+declare const EventTarget: {
   prototype: EventTarget;
   new (): EventTarget;
 };
@@ -11907,7 +11916,7 @@ interface External {
 }
 
 /** @deprecated */
-declare var External: {
+declare const External: {
   prototype: External;
   new (): External;
 };
@@ -11933,9 +11942,13 @@ interface File extends Blob {
   readonly webkitRelativePath: string;
 }
 
-declare var File: {
+declare const File: {
   prototype: File;
-  new (fileBits: BlobPart[], fileName: string, options?: FilePropertyBag): File;
+  new (
+    fileBits: readonly BlobPart[],
+    fileName: string,
+    options?: FilePropertyBag,
+  ): File;
 };
 
 /**
@@ -11955,7 +11968,7 @@ interface FileList {
   [index: number]: File;
 }
 
-declare var FileList: {
+declare const FileList: {
   prototype: FileList;
   new (): FileList;
 };
@@ -11986,34 +11999,42 @@ interface FileReader extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FileReader/abort_event)
    */
-  onabort: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onabort:
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FileReader/error_event)
    */
-  onerror: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onerror:
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FileReader/load_event)
    */
-  onload: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onload: ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FileReader/loadend_event)
    */
-  onloadend: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onloadend:
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FileReader/loadstart_event)
    */
   onloadstart:
-    | ((this: FileReader, ev: ProgressEvent<FileReader>) => any)
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FileReader/progress_event)
    */
-  onprogress: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onprogress:
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readyState)
@@ -12059,7 +12080,7 @@ interface FileReader extends EventTarget {
   readonly DONE: 2;
   addEventListener<K extends keyof FileReaderEventMap>(
     type: K,
-    listener: (this: FileReader, ev: FileReaderEventMap[K]) => any,
+    listener: (this: FileReader, ev: FileReaderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -12069,7 +12090,7 @@ interface FileReader extends EventTarget {
   ): void;
   removeEventListener<K extends keyof FileReaderEventMap>(
     type: K,
-    listener: (this: FileReader, ev: FileReaderEventMap[K]) => any,
+    listener: (this: FileReader, ev: FileReaderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -12079,7 +12100,7 @@ interface FileReader extends EventTarget {
   ): void;
 }
 
-declare var FileReader: {
+declare const FileReader: {
   prototype: FileReader;
   new (): FileReader;
   readonly EMPTY: 0;
@@ -12095,7 +12116,7 @@ interface FileSystem {
   readonly root: FileSystemDirectoryEntry;
 }
 
-declare var FileSystem: {
+declare const FileSystem: {
   prototype: FileSystem;
   new (): FileSystem;
 };
@@ -12132,7 +12153,7 @@ interface FileSystemDirectoryEntry extends FileSystemEntry {
   ): void;
 }
 
-declare var FileSystemDirectoryEntry: {
+declare const FileSystemDirectoryEntry: {
   prototype: FileSystemDirectoryEntry;
   new (): FileSystemDirectoryEntry;
 };
@@ -12173,7 +12194,7 @@ interface FileSystemDirectoryHandle extends FileSystemHandle {
   resolve(possibleDescendant: FileSystemHandle): Promise<string[] | null>;
 }
 
-declare var FileSystemDirectoryHandle: {
+declare const FileSystemDirectoryHandle: {
   prototype: FileSystemDirectoryHandle;
   new (): FileSystemDirectoryHandle;
 };
@@ -12193,7 +12214,7 @@ interface FileSystemDirectoryReader {
   ): void;
 }
 
-declare var FileSystemDirectoryReader: {
+declare const FileSystemDirectoryReader: {
   prototype: FileSystemDirectoryReader;
   new (): FileSystemDirectoryReader;
 };
@@ -12235,7 +12256,7 @@ interface FileSystemEntry {
   ): void;
 }
 
-declare var FileSystemEntry: {
+declare const FileSystemEntry: {
   prototype: FileSystemEntry;
   new (): FileSystemEntry;
 };
@@ -12252,7 +12273,7 @@ interface FileSystemFileEntry extends FileSystemEntry {
   file(successCallback: FileCallback, errorCallback?: ErrorCallback): void;
 }
 
-declare var FileSystemFileEntry: {
+declare const FileSystemFileEntry: {
   prototype: FileSystemFileEntry;
   new (): FileSystemFileEntry;
 };
@@ -12279,7 +12300,7 @@ interface FileSystemFileHandle extends FileSystemHandle {
   getFile(): Promise<File>;
 }
 
-declare var FileSystemFileHandle: {
+declare const FileSystemFileHandle: {
   prototype: FileSystemFileHandle;
   new (): FileSystemFileHandle;
 };
@@ -12307,7 +12328,7 @@ interface FileSystemHandle {
   isSameEntry(other: FileSystemHandle): Promise<boolean>;
 }
 
-declare var FileSystemHandle: {
+declare const FileSystemHandle: {
   prototype: FileSystemHandle;
   new (): FileSystemHandle;
 };
@@ -12336,7 +12357,7 @@ interface FileSystemWritableFileStream extends WritableStream {
   write(data: FileSystemWriteChunkType): Promise<void>;
 }
 
-declare var FileSystemWritableFileStream: {
+declare const FileSystemWritableFileStream: {
   prototype: FileSystemWritableFileStream;
   new (): FileSystemWritableFileStream;
 };
@@ -12354,7 +12375,7 @@ interface FocusEvent extends UIEvent {
   readonly relatedTarget: EventTarget | null;
 }
 
-declare var FocusEvent: {
+declare const FocusEvent: {
   prototype: FocusEvent;
   new (type: string, eventInitDict?: FocusEventInit): FocusEvent;
 };
@@ -12410,7 +12431,7 @@ interface FontFace {
   load(): Promise<FontFace>;
 }
 
-declare var FontFace: {
+declare const FontFace: {
   prototype: FontFace;
   new (
     family: string,
@@ -12431,17 +12452,17 @@ interface FontFaceSet extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loading_event)
    */
-  onloading: ((this: FontFaceSet, ev: Event) => any) | null;
+  onloading: ((this: FontFaceSet, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loadingdone_event)
    */
-  onloadingdone: ((this: FontFaceSet, ev: Event) => any) | null;
+  onloadingdone: ((this: FontFaceSet, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loadingerror_event)
    */
-  onloadingerror: ((this: FontFaceSet, ev: Event) => any) | null;
+  onloadingerror: ((this: FontFaceSet, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/ready)
@@ -12464,11 +12485,11 @@ interface FontFaceSet extends EventTarget {
   load(font: string, text?: string): Promise<FontFace[]>;
   forEach(
     callbackfn: (value: FontFace, key: FontFace, parent: FontFaceSet) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   addEventListener<K extends keyof FontFaceSetEventMap>(
     type: K,
-    listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any,
+    listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -12478,7 +12499,7 @@ interface FontFaceSet extends EventTarget {
   ): void;
   removeEventListener<K extends keyof FontFaceSetEventMap>(
     type: K,
-    listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any,
+    listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -12488,9 +12509,9 @@ interface FontFaceSet extends EventTarget {
   ): void;
 }
 
-declare var FontFaceSet: {
+declare const FontFaceSet: {
   prototype: FontFaceSet;
-  new (initialFaces: FontFace[]): FontFaceSet;
+  new (initialFaces: readonly FontFace[]): FontFaceSet;
 };
 
 /**
@@ -12505,7 +12526,7 @@ interface FontFaceSetLoadEvent extends Event {
   readonly fontfaces: ReadonlyArray<FontFace>;
 }
 
-declare var FontFaceSetLoadEvent: {
+declare const FontFaceSetLoadEvent: {
   prototype: FontFaceSetLoadEvent;
   new (
     type: string,
@@ -12549,11 +12570,11 @@ interface FormData {
       key: string,
       parent: FormData,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var FormData: {
+declare const FormData: {
   prototype: FormData;
   new (form?: HTMLFormElement, submitter?: HTMLElement | null): FormData;
 };
@@ -12571,7 +12592,7 @@ interface FormDataEvent extends Event {
   readonly formData: FormData;
 }
 
-declare var FormDataEvent: {
+declare const FormDataEvent: {
   prototype: FormDataEvent;
   new (type: string, eventInitDict: FormDataEventInit): FormDataEvent;
 };
@@ -12589,7 +12610,7 @@ interface GainNode extends AudioNode {
   readonly gain: AudioParam;
 }
 
-declare var GainNode: {
+declare const GainNode: {
   prototype: GainNode;
   new (context: BaseAudioContext, options?: GainOptions): GainNode;
 };
@@ -12629,7 +12650,7 @@ interface Gamepad {
   readonly vibrationActuator: GamepadHapticActuator;
 }
 
-declare var Gamepad: {
+declare const Gamepad: {
   prototype: Gamepad;
   new (): Gamepad;
 };
@@ -12658,7 +12679,7 @@ interface GamepadButton {
   readonly value: number;
 }
 
-declare var GamepadButton: {
+declare const GamepadButton: {
   prototype: GamepadButton;
   new (): GamepadButton;
 };
@@ -12678,7 +12699,7 @@ interface GamepadEvent extends Event {
   readonly gamepad: Gamepad;
 }
 
-declare var GamepadEvent: {
+declare const GamepadEvent: {
   prototype: GamepadEvent;
   new (type: string, eventInitDict: GamepadEventInit): GamepadEvent;
 };
@@ -12703,7 +12724,7 @@ interface GamepadHapticActuator {
   reset(): Promise<GamepadHapticsResult>;
 }
 
-declare var GamepadHapticActuator: {
+declare const GamepadHapticActuator: {
   prototype: GamepadHapticActuator;
   new (): GamepadHapticActuator;
 };
@@ -12754,7 +12775,7 @@ interface Geolocation {
   ): number;
 }
 
-declare var Geolocation: {
+declare const Geolocation: {
   prototype: Geolocation;
   new (): Geolocation;
 };
@@ -12805,10 +12826,10 @@ interface GeolocationCoordinates {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var GeolocationCoordinates: {
+declare const GeolocationCoordinates: {
   prototype: GeolocationCoordinates;
   new (): GeolocationCoordinates;
 };
@@ -12834,10 +12855,10 @@ interface GeolocationPosition {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/GeolocationPosition/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var GeolocationPosition: {
+declare const GeolocationPosition: {
   prototype: GeolocationPosition;
   new (): GeolocationPosition;
 };
@@ -12862,7 +12883,7 @@ interface GeolocationPositionError {
   readonly TIMEOUT: 3;
 }
 
-declare var GeolocationPositionError: {
+declare const GeolocationPositionError: {
   prototype: GeolocationPositionError;
   new (): GeolocationPositionError;
   readonly PERMISSION_DENIED: 1;
@@ -12985,50 +13006,52 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/abort_event)
    */
-  onabort: ((this: GlobalEventHandlers, ev: UIEvent) => any) | null;
+  onabort: ((this: GlobalEventHandlers, ev: UIEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/animationcancel_event)
    */
   onanimationcancel:
-    | ((this: GlobalEventHandlers, ev: AnimationEvent) => any)
+    | ((this: GlobalEventHandlers, ev: AnimationEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event)
    */
   onanimationend:
-    | ((this: GlobalEventHandlers, ev: AnimationEvent) => any)
+    | ((this: GlobalEventHandlers, ev: AnimationEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event)
    */
   onanimationiteration:
-    | ((this: GlobalEventHandlers, ev: AnimationEvent) => any)
+    | ((this: GlobalEventHandlers, ev: AnimationEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event)
    */
   onanimationstart:
-    | ((this: GlobalEventHandlers, ev: AnimationEvent) => any)
+    | ((this: GlobalEventHandlers, ev: AnimationEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/auxclick_event)
    */
-  onauxclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onauxclick: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/beforeinput_event)
    */
-  onbeforeinput: ((this: GlobalEventHandlers, ev: InputEvent) => any) | null;
+  onbeforeinput:
+    | ((this: GlobalEventHandlers, ev: InputEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/beforetoggle_event)
    */
-  onbeforetoggle: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onbeforetoggle: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Fires when the object loses the input focus.
    *
@@ -13037,12 +13060,12 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Element/blur_event)
    */
-  onblur: ((this: GlobalEventHandlers, ev: FocusEvent) => any) | null;
+  onblur: ((this: GlobalEventHandlers, ev: FocusEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/cancel_event)
    */
-  oncancel: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  oncancel: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when playback is possible, but would require further buffering.
    *
@@ -13051,12 +13074,12 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplay_event)
    */
-  oncanplay: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  oncanplay: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplaythrough_event)
    */
-  oncanplaythrough: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  oncanplaythrough: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Fires when the contents of the object or selection have changed.
    *
@@ -13065,7 +13088,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/change_event)
    */
-  onchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onchange: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Fires when the user clicks the left mouse button on the object
    *
@@ -13074,17 +13097,17 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Element/click_event)
    */
-  onclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onclick: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/close_event)
    */
-  onclose: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onclose: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/webglcontextlost_event)
    */
-  oncontextlost: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  oncontextlost: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Fires when the user clicks the right mouse button in the client area,
    * opening the context menu.
@@ -13094,27 +13117,29 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Element/contextmenu_event)
    */
-  oncontextmenu: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  oncontextmenu:
+    | ((this: GlobalEventHandlers, ev: MouseEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextrestored_event)
    */
-  oncontextrestored: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  oncontextrestored: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/copy_event)
    */
-  oncopy: ((this: GlobalEventHandlers, ev: ClipboardEvent) => any) | null;
+  oncopy: ((this: GlobalEventHandlers, ev: ClipboardEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/cuechange_event)
    */
-  oncuechange: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  oncuechange: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/cut_event)
    */
-  oncut: ((this: GlobalEventHandlers, ev: ClipboardEvent) => any) | null;
+  oncut: ((this: GlobalEventHandlers, ev: ClipboardEvent) => unknown) | null;
   /**
    * Fires when the user double-clicks the object.
    *
@@ -13123,7 +13148,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Element/dblclick_event)
    */
-  ondblclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  ondblclick: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /**
    * Fires on the source object continuously during a drag operation.
    *
@@ -13132,7 +13157,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drag_event)
    */
-  ondrag: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;
+  ondrag: ((this: GlobalEventHandlers, ev: DragEvent) => unknown) | null;
   /**
    * Fires on the source object when the user releases the mouse at the close of
    * a drag operation.
@@ -13142,7 +13167,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragend_event)
    */
-  ondragend: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;
+  ondragend: ((this: GlobalEventHandlers, ev: DragEvent) => unknown) | null;
   /**
    * Fires on the target element when the user drags the object to a valid drop
    * target.
@@ -13152,7 +13177,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragenter_event)
    */
-  ondragenter: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;
+  ondragenter: ((this: GlobalEventHandlers, ev: DragEvent) => unknown) | null;
   /**
    * Fires on the target object when the user moves the mouse out of a valid
    * drop target during a drag operation.
@@ -13162,7 +13187,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragleave_event)
    */
-  ondragleave: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;
+  ondragleave: ((this: GlobalEventHandlers, ev: DragEvent) => unknown) | null;
   /**
    * Fires on the target element continuously while the user drags the object
    * over a valid drop target.
@@ -13172,7 +13197,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragover_event)
    */
-  ondragover: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;
+  ondragover: ((this: GlobalEventHandlers, ev: DragEvent) => unknown) | null;
   /**
    * Fires on the source object when the user starts to drag a text selection or
    * selected object.
@@ -13182,12 +13207,12 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragstart_event)
    */
-  ondragstart: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;
+  ondragstart: ((this: GlobalEventHandlers, ev: DragEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drop_event)
    */
-  ondrop: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;
+  ondrop: ((this: GlobalEventHandlers, ev: DragEvent) => unknown) | null;
   /**
    * Occurs when the duration attribute is updated.
    *
@@ -13196,7 +13221,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/durationchange_event)
    */
-  ondurationchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  ondurationchange: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when the media element is reset to its initial state.
    *
@@ -13205,7 +13230,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/emptied_event)
    */
-  onemptied: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onemptied: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when the end of playback is reached.
    *
@@ -13214,7 +13239,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ended_event)
    */
-  onended: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onended: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Fires when an error occurs during object loading.
    *
@@ -13232,29 +13257,31 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Element/focus_event)
    */
-  onfocus: ((this: GlobalEventHandlers, ev: FocusEvent) => any) | null;
+  onfocus: ((this: GlobalEventHandlers, ev: FocusEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/formdata_event)
    */
-  onformdata: ((this: GlobalEventHandlers, ev: FormDataEvent) => any) | null;
+  onformdata:
+    | ((this: GlobalEventHandlers, ev: FormDataEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/gotpointercapture_event)
    */
   ongotpointercapture:
-    | ((this: GlobalEventHandlers, ev: PointerEvent) => any)
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/input_event)
    */
-  oninput: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  oninput: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/invalid_event)
    */
-  oninvalid: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  oninvalid: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Fires when the user presses a key.
    *
@@ -13263,7 +13290,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Element/keydown_event)
    */
-  onkeydown: ((this: GlobalEventHandlers, ev: KeyboardEvent) => any) | null;
+  onkeydown: ((this: GlobalEventHandlers, ev: KeyboardEvent) => unknown) | null;
   /**
    * Fires when the user presses an alphanumeric key.
    *
@@ -13273,7 +13300,9 @@ interface GlobalEventHandlers {
    *   Reference](https://developer.mozilla.org/docs/Web/API/Element/keypress_event)
    * @param ev The event.
    */
-  onkeypress: ((this: GlobalEventHandlers, ev: KeyboardEvent) => any) | null;
+  onkeypress:
+    | ((this: GlobalEventHandlers, ev: KeyboardEvent) => unknown)
+    | null;
   /**
    * Fires when the user releases a key.
    *
@@ -13282,7 +13311,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Element/keyup_event)
    */
-  onkeyup: ((this: GlobalEventHandlers, ev: KeyboardEvent) => any) | null;
+  onkeyup: ((this: GlobalEventHandlers, ev: KeyboardEvent) => unknown) | null;
   /**
    * Fires immediately after the browser loads the object.
    *
@@ -13291,7 +13320,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/SVGElement/load_event)
    */
-  onload: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onload: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when media data is loaded at the current playback position.
    *
@@ -13300,7 +13329,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadeddata_event)
    */
-  onloadeddata: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onloadeddata: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when the duration and dimensions of the media have been determined.
    *
@@ -13309,7 +13338,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadedmetadata_event)
    */
-  onloadedmetadata: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onloadedmetadata: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when Internet Explorer begins looking for media data.
    *
@@ -13318,13 +13347,13 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadstart_event)
    */
-  onloadstart: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onloadstart: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/lostpointercapture_event)
    */
   onlostpointercapture:
-    | ((this: GlobalEventHandlers, ev: PointerEvent) => any)
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
     | null;
   /**
    * Fires when the user clicks the object with either mouse button.
@@ -13334,17 +13363,17 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Element/mousedown_event)
    */
-  onmousedown: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onmousedown: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseenter_event)
    */
-  onmouseenter: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onmouseenter: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseleave_event)
    */
-  onmouseleave: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onmouseleave: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /**
    * Fires when the user moves the mouse over the object.
    *
@@ -13353,7 +13382,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Element/mousemove_event)
    */
-  onmousemove: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onmousemove: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /**
    * Fires when the user moves the mouse pointer outside the boundaries of the
    * object.
@@ -13363,7 +13392,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseout_event)
    */
-  onmouseout: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onmouseout: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /**
    * Fires when the user moves the mouse pointer into the object.
    *
@@ -13372,7 +13401,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseover_event)
    */
-  onmouseover: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onmouseover: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /**
    * Fires when the user releases a mouse button while the mouse is over the
    * object.
@@ -13382,12 +13411,12 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseup_event)
    */
-  onmouseup: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onmouseup: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/paste_event)
    */
-  onpaste: ((this: GlobalEventHandlers, ev: ClipboardEvent) => any) | null;
+  onpaste: ((this: GlobalEventHandlers, ev: ClipboardEvent) => unknown) | null;
   /**
    * Occurs when playback is paused.
    *
@@ -13396,7 +13425,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/pause_event)
    */
-  onpause: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onpause: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when the play method is requested.
    *
@@ -13405,7 +13434,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/play_event)
    */
-  onplay: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onplay: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when the audio or video has started playing.
    *
@@ -13414,49 +13443,63 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/playing_event)
    */
-  onplaying: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onplaying: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/pointercancel_event)
    */
   onpointercancel:
-    | ((this: GlobalEventHandlers, ev: PointerEvent) => any)
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerdown_event)
    */
-  onpointerdown: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
+  onpointerdown:
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerenter_event)
    */
-  onpointerenter: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
+  onpointerenter:
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerleave_event)
    */
-  onpointerleave: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
+  onpointerleave:
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/pointermove_event)
    */
-  onpointermove: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
+  onpointermove:
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerout_event)
    */
-  onpointerout: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
+  onpointerout:
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerover_event)
    */
-  onpointerover: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
+  onpointerover:
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerup_event)
    */
-  onpointerup: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
+  onpointerup:
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
+    | null;
   /**
    * Occurs to indicate progress while downloading media data.
    *
@@ -13465,7 +13508,9 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/progress_event)
    */
-  onprogress: ((this: GlobalEventHandlers, ev: ProgressEvent) => any) | null;
+  onprogress:
+    | ((this: GlobalEventHandlers, ev: ProgressEvent) => unknown)
+    | null;
   /**
    * Occurs when the playback rate is increased or decreased.
    *
@@ -13474,7 +13519,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ratechange_event)
    */
-  onratechange: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onratechange: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Fires when the user resets a form.
    *
@@ -13483,12 +13528,12 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/reset_event)
    */
-  onreset: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onreset: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/resize_event)
    */
-  onresize: ((this: GlobalEventHandlers, ev: UIEvent) => any) | null;
+  onresize: ((this: GlobalEventHandlers, ev: UIEvent) => unknown) | null;
   /**
    * Fires when the user repositions the scroll box in the scroll bar on the
    * object.
@@ -13498,18 +13543,18 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Document/scroll_event)
    */
-  onscroll: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onscroll: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Document/scrollend_event)
    */
-  onscrollend: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onscrollend: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Document/securitypolicyviolation_event)
    */
   onsecuritypolicyviolation:
-    | ((this: GlobalEventHandlers, ev: SecurityPolicyViolationEvent) => any)
+    | ((this: GlobalEventHandlers, ev: SecurityPolicyViolationEvent) => unknown)
     | null;
   /**
    * Occurs when the seek operation ends.
@@ -13519,7 +13564,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeked_event)
    */
-  onseeked: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onseeked: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when the current playback position is moved.
    *
@@ -13528,7 +13573,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeking_event)
    */
-  onseeking: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onseeking: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Fires when the current selection changes.
    *
@@ -13537,22 +13582,22 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/select_event)
    */
-  onselect: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onselect: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Document/selectionchange_event)
    */
-  onselectionchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onselectionchange: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Node/selectstart_event)
    */
-  onselectstart: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onselectstart: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/slotchange_event)
    */
-  onslotchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onslotchange: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when the download has stopped.
    *
@@ -13561,12 +13606,12 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/stalled_event)
    */
-  onstalled: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onstalled: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/submit_event)
    */
-  onsubmit: ((this: GlobalEventHandlers, ev: SubmitEvent) => any) | null;
+  onsubmit: ((this: GlobalEventHandlers, ev: SubmitEvent) => unknown) | null;
   /**
    * Occurs if the load operation has been intentionally halted.
    *
@@ -13575,7 +13620,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/suspend_event)
    */
-  onsuspend: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onsuspend: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs to indicate the current playback position.
    *
@@ -13584,18 +13629,18 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/timeupdate_event)
    */
-  ontimeupdate: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  ontimeupdate: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLDetailsElement/toggle_event)
    */
-  ontoggle: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  ontoggle: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/touchcancel_event)
    */
   ontouchcancel?:
-    | ((this: GlobalEventHandlers, ev: TouchEvent) => any)
+    | ((this: GlobalEventHandlers, ev: TouchEvent) => unknown)
     | null
     | undefined;
   /**
@@ -13603,7 +13648,7 @@ interface GlobalEventHandlers {
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/touchend_event)
    */
   ontouchend?:
-    | ((this: GlobalEventHandlers, ev: TouchEvent) => any)
+    | ((this: GlobalEventHandlers, ev: TouchEvent) => unknown)
     | null
     | undefined;
   /**
@@ -13611,7 +13656,7 @@ interface GlobalEventHandlers {
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/touchmove_event)
    */
   ontouchmove?:
-    | ((this: GlobalEventHandlers, ev: TouchEvent) => any)
+    | ((this: GlobalEventHandlers, ev: TouchEvent) => unknown)
     | null
     | undefined;
   /**
@@ -13619,7 +13664,7 @@ interface GlobalEventHandlers {
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/touchstart_event)
    */
   ontouchstart?:
-    | ((this: GlobalEventHandlers, ev: TouchEvent) => any)
+    | ((this: GlobalEventHandlers, ev: TouchEvent) => unknown)
     | null
     | undefined;
   /**
@@ -13627,28 +13672,28 @@ interface GlobalEventHandlers {
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/transitioncancel_event)
    */
   ontransitioncancel:
-    | ((this: GlobalEventHandlers, ev: TransitionEvent) => any)
+    | ((this: GlobalEventHandlers, ev: TransitionEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)
    */
   ontransitionend:
-    | ((this: GlobalEventHandlers, ev: TransitionEvent) => any)
+    | ((this: GlobalEventHandlers, ev: TransitionEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionrun_event)
    */
   ontransitionrun:
-    | ((this: GlobalEventHandlers, ev: TransitionEvent) => any)
+    | ((this: GlobalEventHandlers, ev: TransitionEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionstart_event)
    */
   ontransitionstart:
-    | ((this: GlobalEventHandlers, ev: TransitionEvent) => any)
+    | ((this: GlobalEventHandlers, ev: TransitionEvent) => unknown)
     | null;
   /**
    * Occurs when the volume is changed, or playback is muted or unmuted.
@@ -13658,7 +13703,7 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/volumechange_event)
    */
-  onvolumechange: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onvolumechange: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when playback stops because the next frame of a video resource is
    * not available.
@@ -13668,14 +13713,16 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/waiting_event)
    */
-  onwaiting: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onwaiting: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * @deprecated This is a legacy alias of `onanimationend`.
    *
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event)
    */
-  onwebkitanimationend: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onwebkitanimationend:
+    | ((this: GlobalEventHandlers, ev: Event) => unknown)
+    | null;
   /**
    * @deprecated This is a legacy alias of `onanimationiteration`.
    *
@@ -13683,7 +13730,7 @@ interface GlobalEventHandlers {
    *   Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event)
    */
   onwebkitanimationiteration:
-    | ((this: GlobalEventHandlers, ev: Event) => any)
+    | ((this: GlobalEventHandlers, ev: Event) => unknown)
     | null;
   /**
    * @deprecated This is a legacy alias of `onanimationstart`.
@@ -13692,7 +13739,7 @@ interface GlobalEventHandlers {
    *   Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event)
    */
   onwebkitanimationstart:
-    | ((this: GlobalEventHandlers, ev: Event) => any)
+    | ((this: GlobalEventHandlers, ev: Event) => unknown)
     | null;
   /**
    * @deprecated This is a legacy alias of `ontransitionend`.
@@ -13700,18 +13747,20 @@ interface GlobalEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)
    */
-  onwebkittransitionend: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onwebkittransitionend:
+    | ((this: GlobalEventHandlers, ev: Event) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Element/wheel_event)
    */
-  onwheel: ((this: GlobalEventHandlers, ev: WheelEvent) => any) | null;
+  onwheel: ((this: GlobalEventHandlers, ev: WheelEvent) => unknown) | null;
   addEventListener<K extends keyof GlobalEventHandlersEventMap>(
     type: K,
     listener: (
       this: GlobalEventHandlers,
       ev: GlobalEventHandlersEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13724,7 +13773,7 @@ interface GlobalEventHandlers {
     listener: (
       this: GlobalEventHandlers,
       ev: GlobalEventHandlersEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13768,7 +13817,7 @@ interface HTMLAllCollection {
   [index: number]: Element;
 }
 
-declare var HTMLAllCollection: {
+declare const HTMLAllCollection: {
   prototype: HTMLAllCollection;
   new (): HTMLAllCollection;
 };
@@ -13868,7 +13917,7 @@ interface HTMLAnchorElement extends HTMLElement, HTMLHyperlinkElementUtils {
   type: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13878,7 +13927,7 @@ interface HTMLAnchorElement extends HTMLElement, HTMLHyperlinkElementUtils {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13888,7 +13937,7 @@ interface HTMLAnchorElement extends HTMLElement, HTMLHyperlinkElementUtils {
   ): void;
 }
 
-declare var HTMLAnchorElement: {
+declare const HTMLAnchorElement: {
   prototype: HTMLAnchorElement;
   new (): HTMLAnchorElement;
 };
@@ -13943,7 +13992,7 @@ interface HTMLAreaElement extends HTMLElement, HTMLHyperlinkElementUtils {
   target: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13953,7 +14002,7 @@ interface HTMLAreaElement extends HTMLElement, HTMLHyperlinkElementUtils {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13963,7 +14012,7 @@ interface HTMLAreaElement extends HTMLElement, HTMLHyperlinkElementUtils {
   ): void;
 }
 
-declare var HTMLAreaElement: {
+declare const HTMLAreaElement: {
   prototype: HTMLAreaElement;
   new (): HTMLAreaElement;
 };
@@ -13977,7 +14026,10 @@ declare var HTMLAreaElement: {
 interface HTMLAudioElement extends HTMLMediaElement {
   addEventListener<K extends keyof HTMLMediaElementEventMap>(
     type: K,
-    listener: (this: HTMLAudioElement, ev: HTMLMediaElementEventMap[K]) => any,
+    listener: (
+      this: HTMLAudioElement,
+      ev: HTMLMediaElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13987,7 +14039,10 @@ interface HTMLAudioElement extends HTMLMediaElement {
   ): void;
   removeEventListener<K extends keyof HTMLMediaElementEventMap>(
     type: K,
-    listener: (this: HTMLAudioElement, ev: HTMLMediaElementEventMap[K]) => any,
+    listener: (
+      this: HTMLAudioElement,
+      ev: HTMLMediaElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13997,7 +14052,7 @@ interface HTMLAudioElement extends HTMLMediaElement {
   ): void;
 }
 
-declare var HTMLAudioElement: {
+declare const HTMLAudioElement: {
   prototype: HTMLAudioElement;
   new (): HTMLAudioElement;
 };
@@ -14017,7 +14072,7 @@ interface HTMLBRElement extends HTMLElement {
   clear: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14027,7 +14082,7 @@ interface HTMLBRElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14037,7 +14092,7 @@ interface HTMLBRElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLBRElement: {
+declare const HTMLBRElement: {
   prototype: HTMLBRElement;
   new (): HTMLBRElement;
 };
@@ -14060,7 +14115,7 @@ interface HTMLBaseElement extends HTMLElement {
   target: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14070,7 +14125,7 @@ interface HTMLBaseElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14080,7 +14135,7 @@ interface HTMLBaseElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLBaseElement: {
+declare const HTMLBaseElement: {
   prototype: HTMLBaseElement;
   new (): HTMLBaseElement;
 };
@@ -14110,7 +14165,10 @@ interface HTMLBodyElement extends HTMLElement, WindowEventHandlers {
   vLink: string;
   addEventListener<K extends keyof HTMLBodyElementEventMap>(
     type: K,
-    listener: (this: HTMLBodyElement, ev: HTMLBodyElementEventMap[K]) => any,
+    listener: (
+      this: HTMLBodyElement,
+      ev: HTMLBodyElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14120,7 +14178,10 @@ interface HTMLBodyElement extends HTMLElement, WindowEventHandlers {
   ): void;
   removeEventListener<K extends keyof HTMLBodyElementEventMap>(
     type: K,
-    listener: (this: HTMLBodyElement, ev: HTMLBodyElementEventMap[K]) => any,
+    listener: (
+      this: HTMLBodyElement,
+      ev: HTMLBodyElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14130,7 +14191,7 @@ interface HTMLBodyElement extends HTMLElement, WindowEventHandlers {
   ): void;
 }
 
-declare var HTMLBodyElement: {
+declare const HTMLBodyElement: {
   prototype: HTMLBodyElement;
   new (): HTMLBodyElement;
 };
@@ -14220,7 +14281,7 @@ interface HTMLButtonElement extends HTMLElement, PopoverInvokerElement {
   setCustomValidity(error: string): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14230,7 +14291,7 @@ interface HTMLButtonElement extends HTMLElement, PopoverInvokerElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14240,7 +14301,7 @@ interface HTMLButtonElement extends HTMLElement, PopoverInvokerElement {
   ): void;
 }
 
-declare var HTMLButtonElement: {
+declare const HTMLButtonElement: {
   prototype: HTMLButtonElement;
   new (): HTMLButtonElement;
 };
@@ -14302,12 +14363,12 @@ interface HTMLCanvasElement extends HTMLElement {
     contextId: 'webgl2',
     options?: WebGLContextAttributes,
   ): WebGL2RenderingContext | null;
-  getContext(contextId: string, options?: any): RenderingContext | null;
+  getContext(contextId: string, options?: unknown): RenderingContext | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/toBlob)
    */
-  toBlob(callback: BlobCallback, type?: string, quality?: any): void;
+  toBlob(callback: BlobCallback, type?: string, quality?: unknown): void;
   /**
    * Returns the content of the current canvas as an image that you can use as a
    * source for another canvas or an HTML element.
@@ -14318,7 +14379,7 @@ interface HTMLCanvasElement extends HTMLElement {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/toDataURL)
    */
-  toDataURL(type?: string, quality?: any): string;
+  toDataURL(type?: string, quality?: unknown): string;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/transferControlToOffscreen)
@@ -14326,7 +14387,7 @@ interface HTMLCanvasElement extends HTMLElement {
   transferControlToOffscreen(): OffscreenCanvas;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14336,7 +14397,7 @@ interface HTMLCanvasElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14346,7 +14407,7 @@ interface HTMLCanvasElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLCanvasElement: {
+declare const HTMLCanvasElement: {
   prototype: HTMLCanvasElement;
   new (): HTMLCanvasElement;
 };
@@ -14386,7 +14447,7 @@ interface HTMLCollection extends HTMLCollectionBase {
   namedItem(name: string): Element | null;
 }
 
-declare var HTMLCollection: {
+declare const HTMLCollection: {
   prototype: HTMLCollection;
   new (): HTMLCollection;
 };
@@ -14409,7 +14470,7 @@ interface HTMLDListElement extends HTMLElement {
   compact: boolean;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14419,7 +14480,7 @@ interface HTMLDListElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14429,7 +14490,7 @@ interface HTMLDListElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLDListElement: {
+declare const HTMLDListElement: {
   prototype: HTMLDListElement;
   new (): HTMLDListElement;
 };
@@ -14448,7 +14509,7 @@ interface HTMLDataElement extends HTMLElement {
   value: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14458,7 +14519,7 @@ interface HTMLDataElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14468,7 +14529,7 @@ interface HTMLDataElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLDataElement: {
+declare const HTMLDataElement: {
   prototype: HTMLDataElement;
   new (): HTMLDataElement;
 };
@@ -14486,7 +14547,10 @@ interface HTMLDataListElement extends HTMLElement {
   readonly options: HTMLCollectionOf<HTMLOptionElement>;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDataListElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLDataListElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14496,7 +14560,10 @@ interface HTMLDataListElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDataListElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLDataListElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14506,7 +14573,7 @@ interface HTMLDataListElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLDataListElement: {
+declare const HTMLDataListElement: {
   prototype: HTMLDataListElement;
   new (): HTMLDataListElement;
 };
@@ -14524,7 +14591,7 @@ interface HTMLDetailsElement extends HTMLElement {
   open: boolean;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14534,7 +14601,7 @@ interface HTMLDetailsElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14544,7 +14611,7 @@ interface HTMLDetailsElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLDetailsElement: {
+declare const HTMLDetailsElement: {
   prototype: HTMLDetailsElement;
   new (): HTMLDetailsElement;
 };
@@ -14584,7 +14651,7 @@ interface HTMLDialogElement extends HTMLElement {
   showModal(): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14594,7 +14661,7 @@ interface HTMLDialogElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14604,7 +14671,7 @@ interface HTMLDialogElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLDialogElement: {
+declare const HTMLDialogElement: {
   prototype: HTMLDialogElement;
   new (): HTMLDialogElement;
 };
@@ -14615,7 +14682,10 @@ interface HTMLDirectoryElement extends HTMLElement {
   compact: boolean;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDirectoryElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLDirectoryElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14625,7 +14695,10 @@ interface HTMLDirectoryElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDirectoryElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLDirectoryElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14636,7 +14709,7 @@ interface HTMLDirectoryElement extends HTMLElement {
 }
 
 /** @deprecated */
-declare var HTMLDirectoryElement: {
+declare const HTMLDirectoryElement: {
   prototype: HTMLDirectoryElement;
   new (): HTMLDirectoryElement;
 };
@@ -14656,7 +14729,7 @@ interface HTMLDivElement extends HTMLElement {
   align: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14666,7 +14739,7 @@ interface HTMLDivElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14676,7 +14749,7 @@ interface HTMLDivElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLDivElement: {
+declare const HTMLDivElement: {
   prototype: HTMLDivElement;
   new (): HTMLDivElement;
 };
@@ -14685,7 +14758,7 @@ declare var HTMLDivElement: {
 interface HTMLDocument extends Document {
   addEventListener<K extends keyof DocumentEventMap>(
     type: K,
-    listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => any,
+    listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14695,7 +14768,7 @@ interface HTMLDocument extends Document {
   ): void;
   removeEventListener<K extends keyof DocumentEventMap>(
     type: K,
-    listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => any,
+    listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14706,7 +14779,7 @@ interface HTMLDocument extends Document {
 }
 
 /** @deprecated */
-declare var HTMLDocument: {
+declare const HTMLDocument: {
   prototype: HTMLDocument;
   new (): HTMLDocument;
 };
@@ -14846,7 +14919,7 @@ interface HTMLElement
   togglePopover(force?: boolean): boolean;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14856,7 +14929,7 @@ interface HTMLElement
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14866,7 +14939,7 @@ interface HTMLElement
   ): void;
 }
 
-declare var HTMLElement: {
+declare const HTMLElement: {
   prototype: HTMLElement;
   new (): HTMLElement;
 };
@@ -14911,7 +14984,7 @@ interface HTMLEmbedElement extends HTMLElement {
   getSVGDocument(): Document | null;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14921,7 +14994,7 @@ interface HTMLEmbedElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14931,7 +15004,7 @@ interface HTMLEmbedElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLEmbedElement: {
+declare const HTMLEmbedElement: {
   prototype: HTMLEmbedElement;
   new (): HTMLEmbedElement;
 };
@@ -14985,7 +15058,10 @@ interface HTMLFieldSetElement extends HTMLElement {
   setCustomValidity(error: string): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLFieldSetElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLFieldSetElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14995,7 +15071,10 @@ interface HTMLFieldSetElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLFieldSetElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLFieldSetElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15005,7 +15084,7 @@ interface HTMLFieldSetElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLFieldSetElement: {
+declare const HTMLFieldSetElement: {
   prototype: HTMLFieldSetElement;
   new (): HTMLFieldSetElement;
 };
@@ -15045,7 +15124,7 @@ interface HTMLFontElement extends HTMLElement {
   size: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15055,7 +15134,7 @@ interface HTMLFontElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15066,7 +15145,7 @@ interface HTMLFontElement extends HTMLElement {
 }
 
 /** @deprecated */
-declare var HTMLFontElement: {
+declare const HTMLFontElement: {
   prototype: HTMLFontElement;
   new (): HTMLFontElement;
 };
@@ -15090,7 +15169,7 @@ interface HTMLFormControlsCollection extends HTMLCollectionBase {
   namedItem(name: string): RadioNodeList | Element | null;
 }
 
-declare var HTMLFormControlsCollection: {
+declare const HTMLFormControlsCollection: {
   prototype: HTMLFormControlsCollection;
   new (): HTMLFormControlsCollection;
 };
@@ -15204,7 +15283,7 @@ interface HTMLFormElement extends HTMLElement {
   submit(): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15214,7 +15293,7 @@ interface HTMLFormElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15223,10 +15302,10 @@ interface HTMLFormElement extends HTMLElement {
     options?: boolean | EventListenerOptions,
   ): void;
   [index: number]: Element;
-  [name: string]: any;
+  [name: string]: unknown;
 }
 
-declare var HTMLFormElement: {
+declare const HTMLFormElement: {
   prototype: HTMLFormElement;
   new (): HTMLFormElement;
 };
@@ -15297,7 +15376,7 @@ interface HTMLFrameElement extends HTMLElement {
   src: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLFrameElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLFrameElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15307,7 +15386,7 @@ interface HTMLFrameElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLFrameElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLFrameElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15318,7 +15397,7 @@ interface HTMLFrameElement extends HTMLElement {
 }
 
 /** @deprecated */
-declare var HTMLFrameElement: {
+declare const HTMLFrameElement: {
   prototype: HTMLFrameElement;
   new (): HTMLFrameElement;
 };
@@ -15354,7 +15433,7 @@ interface HTMLFrameSetElement extends HTMLElement, WindowEventHandlers {
     listener: (
       this: HTMLFrameSetElement,
       ev: HTMLFrameSetElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15367,7 +15446,7 @@ interface HTMLFrameSetElement extends HTMLElement, WindowEventHandlers {
     listener: (
       this: HTMLFrameSetElement,
       ev: HTMLFrameSetElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15378,7 +15457,7 @@ interface HTMLFrameSetElement extends HTMLElement, WindowEventHandlers {
 }
 
 /** @deprecated */
-declare var HTMLFrameSetElement: {
+declare const HTMLFrameSetElement: {
   prototype: HTMLFrameSetElement;
   new (): HTMLFrameSetElement;
 };
@@ -15414,7 +15493,7 @@ interface HTMLHRElement extends HTMLElement {
   width: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15424,7 +15503,7 @@ interface HTMLHRElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15434,7 +15513,7 @@ interface HTMLHRElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLHRElement: {
+declare const HTMLHRElement: {
   prototype: HTMLHRElement;
   new (): HTMLHRElement;
 };
@@ -15449,7 +15528,7 @@ declare var HTMLHRElement: {
 interface HTMLHeadElement extends HTMLElement {
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15459,7 +15538,7 @@ interface HTMLHeadElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15469,7 +15548,7 @@ interface HTMLHeadElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLHeadElement: {
+declare const HTMLHeadElement: {
   prototype: HTMLHeadElement;
   new (): HTMLHeadElement;
 };
@@ -15490,7 +15569,7 @@ interface HTMLHeadingElement extends HTMLElement {
   align: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15500,7 +15579,7 @@ interface HTMLHeadingElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15510,7 +15589,7 @@ interface HTMLHeadingElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLHeadingElement: {
+declare const HTMLHeadingElement: {
   prototype: HTMLHeadingElement;
   new (): HTMLHeadingElement;
 };
@@ -15533,7 +15612,7 @@ interface HTMLHtmlElement extends HTMLElement {
   version: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15543,7 +15622,7 @@ interface HTMLHtmlElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15553,7 +15632,7 @@ interface HTMLHtmlElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLHtmlElement: {
+declare const HTMLHtmlElement: {
   prototype: HTMLHtmlElement;
   new (): HTMLHtmlElement;
 };
@@ -15783,7 +15862,7 @@ interface HTMLIFrameElement extends HTMLElement {
   getSVGDocument(): Document | null;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLIFrameElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLIFrameElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15793,7 +15872,7 @@ interface HTMLIFrameElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLIFrameElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLIFrameElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15803,7 +15882,7 @@ interface HTMLIFrameElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLIFrameElement: {
+declare const HTMLIFrameElement: {
   prototype: HTMLIFrameElement;
   new (): HTMLIFrameElement;
 };
@@ -15995,7 +16074,7 @@ interface HTMLImageElement extends HTMLElement {
   decode(): Promise<void>;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -16005,7 +16084,7 @@ interface HTMLImageElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -16015,7 +16094,7 @@ interface HTMLImageElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLImageElement: {
+declare const HTMLImageElement: {
   prototype: HTMLImageElement;
   new (): HTMLImageElement;
 };
@@ -16309,7 +16388,7 @@ interface HTMLInputElement extends HTMLElement, PopoverInvokerElement {
   stepUp(n?: number): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -16319,7 +16398,7 @@ interface HTMLInputElement extends HTMLElement, PopoverInvokerElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -16329,7 +16408,7 @@ interface HTMLInputElement extends HTMLElement, PopoverInvokerElement {
   ): void;
 }
 
-declare var HTMLInputElement: {
+declare const HTMLInputElement: {
   prototype: HTMLInputElement;
   new (): HTMLInputElement;
 };
@@ -16348,7 +16427,7 @@ interface HTMLLIElement extends HTMLElement {
   value: number;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -16358,7 +16437,7 @@ interface HTMLLIElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -16368,7 +16447,7 @@ interface HTMLLIElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLLIElement: {
+declare const HTMLLIElement: {
   prototype: HTMLLIElement;
   new (): HTMLLIElement;
 };
@@ -16403,7 +16482,7 @@ interface HTMLLabelElement extends HTMLElement {
   htmlFor: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -16413,7 +16492,7 @@ interface HTMLLabelElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -16423,7 +16502,7 @@ interface HTMLLabelElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLLabelElement: {
+declare const HTMLLabelElement: {
   prototype: HTMLLabelElement;
   new (): HTMLLabelElement;
 };
@@ -16441,7 +16520,7 @@ interface HTMLLegendElement extends HTMLElement {
   readonly form: HTMLFormElement | null;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -16451,7 +16530,7 @@ interface HTMLLegendElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -16461,7 +16540,7 @@ interface HTMLLegendElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLLegendElement: {
+declare const HTMLLegendElement: {
   prototype: HTMLLegendElement;
   new (): HTMLLegendElement;
 };
@@ -16559,7 +16638,7 @@ interface HTMLLinkElement extends HTMLElement, LinkStyle {
   type: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -16569,7 +16648,7 @@ interface HTMLLinkElement extends HTMLElement, LinkStyle {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -16579,7 +16658,7 @@ interface HTMLLinkElement extends HTMLElement, LinkStyle {
   ): void;
 }
 
-declare var HTMLLinkElement: {
+declare const HTMLLinkElement: {
   prototype: HTMLLinkElement;
   new (): HTMLLinkElement;
 };
@@ -16606,7 +16685,7 @@ interface HTMLMapElement extends HTMLElement {
   name: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -16616,7 +16695,7 @@ interface HTMLMapElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -16626,7 +16705,7 @@ interface HTMLMapElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLMapElement: {
+declare const HTMLMapElement: {
   prototype: HTMLMapElement;
   new (): HTMLMapElement;
 };
@@ -16668,7 +16747,7 @@ interface HTMLMarqueeElement extends HTMLElement {
   stop(): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMarqueeElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMarqueeElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -16678,7 +16757,7 @@ interface HTMLMarqueeElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMarqueeElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMarqueeElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -16689,7 +16768,7 @@ interface HTMLMarqueeElement extends HTMLElement {
 }
 
 /** @deprecated */
-declare var HTMLMarqueeElement: {
+declare const HTMLMarqueeElement: {
   prototype: HTMLMarqueeElement;
   new (): HTMLMarqueeElement;
 };
@@ -16827,9 +16906,9 @@ interface HTMLMediaElement extends HTMLElement {
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/encrypted_event)
    */
   onencrypted:
-    | ((this: HTMLMediaElement, ev: MediaEncryptedEvent) => any)
+    | ((this: HTMLMediaElement, ev: MediaEncryptedEvent) => unknown)
     | null;
-  onwaitingforkey: ((this: HTMLMediaElement, ev: Event) => any) | null;
+  onwaitingforkey: ((this: HTMLMediaElement, ev: Event) => unknown) | null;
   /**
    * Gets a flag that specifies whether playback is paused.
    *
@@ -16978,7 +17057,10 @@ interface HTMLMediaElement extends HTMLElement {
   readonly HAVE_ENOUGH_DATA: 4;
   addEventListener<K extends keyof HTMLMediaElementEventMap>(
     type: K,
-    listener: (this: HTMLMediaElement, ev: HTMLMediaElementEventMap[K]) => any,
+    listener: (
+      this: HTMLMediaElement,
+      ev: HTMLMediaElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -16988,7 +17070,10 @@ interface HTMLMediaElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLMediaElementEventMap>(
     type: K,
-    listener: (this: HTMLMediaElement, ev: HTMLMediaElementEventMap[K]) => any,
+    listener: (
+      this: HTMLMediaElement,
+      ev: HTMLMediaElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -16998,7 +17083,7 @@ interface HTMLMediaElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLMediaElement: {
+declare const HTMLMediaElement: {
   prototype: HTMLMediaElement;
   new (): HTMLMediaElement;
   readonly NETWORK_EMPTY: 0;
@@ -17018,7 +17103,7 @@ interface HTMLMenuElement extends HTMLElement {
   compact: boolean;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17028,7 +17113,7 @@ interface HTMLMenuElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17038,7 +17123,7 @@ interface HTMLMenuElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLMenuElement: {
+declare const HTMLMenuElement: {
   prototype: HTMLMenuElement;
   new (): HTMLMenuElement;
 };
@@ -17090,7 +17175,7 @@ interface HTMLMetaElement extends HTMLElement {
   scheme: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17100,7 +17185,7 @@ interface HTMLMetaElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17110,7 +17195,7 @@ interface HTMLMetaElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLMetaElement: {
+declare const HTMLMetaElement: {
   prototype: HTMLMetaElement;
   new (): HTMLMetaElement;
 };
@@ -17137,7 +17222,7 @@ interface HTMLMeterElement extends HTMLElement {
   value: number;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17147,7 +17232,7 @@ interface HTMLMeterElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17157,7 +17242,7 @@ interface HTMLMeterElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLMeterElement: {
+declare const HTMLMeterElement: {
   prototype: HTMLMeterElement;
   new (): HTMLMeterElement;
 };
@@ -17177,7 +17262,7 @@ interface HTMLModElement extends HTMLElement {
   dateTime: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17187,7 +17272,7 @@ interface HTMLModElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17197,7 +17282,7 @@ interface HTMLModElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLModElement: {
+declare const HTMLModElement: {
   prototype: HTMLModElement;
   new (): HTMLModElement;
 };
@@ -17231,7 +17316,7 @@ interface HTMLOListElement extends HTMLElement {
   type: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17241,7 +17326,7 @@ interface HTMLOListElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17251,7 +17336,7 @@ interface HTMLOListElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLOListElement: {
+declare const HTMLOListElement: {
   prototype: HTMLOListElement;
   new (): HTMLOListElement;
 };
@@ -17419,7 +17504,7 @@ interface HTMLObjectElement extends HTMLElement {
   setCustomValidity(error: string): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17429,7 +17514,7 @@ interface HTMLObjectElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17439,7 +17524,7 @@ interface HTMLObjectElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLObjectElement: {
+declare const HTMLObjectElement: {
   prototype: HTMLObjectElement;
   new (): HTMLObjectElement;
 };
@@ -17461,7 +17546,10 @@ interface HTMLOptGroupElement extends HTMLElement {
   label: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLOptGroupElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLOptGroupElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17471,7 +17559,10 @@ interface HTMLOptGroupElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLOptGroupElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLOptGroupElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17481,7 +17572,7 @@ interface HTMLOptGroupElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLOptGroupElement: {
+declare const HTMLOptGroupElement: {
   prototype: HTMLOptGroupElement;
   new (): HTMLOptGroupElement;
 };
@@ -17515,7 +17606,7 @@ interface HTMLOptionElement extends HTMLElement {
   value: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17525,7 +17616,7 @@ interface HTMLOptionElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17535,7 +17626,7 @@ interface HTMLOptionElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLOptionElement: {
+declare const HTMLOptionElement: {
   prototype: HTMLOptionElement;
   new (): HTMLOptionElement;
 };
@@ -17588,7 +17679,7 @@ interface HTMLOptionsCollection extends HTMLCollectionOf<HTMLOptionElement> {
   remove(index: number): void;
 }
 
-declare var HTMLOptionsCollection: {
+declare const HTMLOptionsCollection: {
   prototype: HTMLOptionsCollection;
   new (): HTMLOptionsCollection;
 };
@@ -17658,7 +17749,7 @@ interface HTMLOutputElement extends HTMLElement {
   setCustomValidity(error: string): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17668,7 +17759,7 @@ interface HTMLOutputElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17678,7 +17769,7 @@ interface HTMLOutputElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLOutputElement: {
+declare const HTMLOutputElement: {
   prototype: HTMLOutputElement;
   new (): HTMLOutputElement;
 };
@@ -17699,7 +17790,10 @@ interface HTMLParagraphElement extends HTMLElement {
   align: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLParagraphElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLParagraphElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17709,7 +17803,10 @@ interface HTMLParagraphElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLParagraphElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLParagraphElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17719,7 +17816,7 @@ interface HTMLParagraphElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLParagraphElement: {
+declare const HTMLParagraphElement: {
   prototype: HTMLParagraphElement;
   new (): HTMLParagraphElement;
 };
@@ -17761,7 +17858,7 @@ interface HTMLParamElement extends HTMLElement {
   valueType: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17771,7 +17868,7 @@ interface HTMLParamElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17782,7 +17879,7 @@ interface HTMLParamElement extends HTMLElement {
 }
 
 /** @deprecated */
-declare var HTMLParamElement: {
+declare const HTMLParamElement: {
   prototype: HTMLParamElement;
   new (): HTMLParamElement;
 };
@@ -17797,7 +17894,7 @@ declare var HTMLParamElement: {
 interface HTMLPictureElement extends HTMLElement {
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17807,7 +17904,7 @@ interface HTMLPictureElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17817,7 +17914,7 @@ interface HTMLPictureElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLPictureElement: {
+declare const HTMLPictureElement: {
   prototype: HTMLPictureElement;
   new (): HTMLPictureElement;
 };
@@ -17839,7 +17936,7 @@ interface HTMLPreElement extends HTMLElement {
   width: number;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17849,7 +17946,7 @@ interface HTMLPreElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17859,7 +17956,7 @@ interface HTMLPreElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLPreElement: {
+declare const HTMLPreElement: {
   prototype: HTMLPreElement;
   new (): HTMLPreElement;
 };
@@ -17904,7 +18001,10 @@ interface HTMLProgressElement extends HTMLElement {
   value: number;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLProgressElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLProgressElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17914,7 +18014,10 @@ interface HTMLProgressElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLProgressElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLProgressElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17924,7 +18027,7 @@ interface HTMLProgressElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLProgressElement: {
+declare const HTMLProgressElement: {
   prototype: HTMLProgressElement;
   new (): HTMLProgressElement;
 };
@@ -17941,7 +18044,7 @@ interface HTMLQuoteElement extends HTMLElement {
   cite: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17951,7 +18054,7 @@ interface HTMLQuoteElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17961,7 +18064,7 @@ interface HTMLQuoteElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLQuoteElement: {
+declare const HTMLQuoteElement: {
   prototype: HTMLQuoteElement;
   new (): HTMLQuoteElement;
 };
@@ -18053,7 +18156,7 @@ interface HTMLScriptElement extends HTMLElement {
   type: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18063,7 +18166,7 @@ interface HTMLScriptElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18073,7 +18176,7 @@ interface HTMLScriptElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLScriptElement: {
+declare const HTMLScriptElement: {
   prototype: HTMLScriptElement;
   new (): HTMLScriptElement;
   /**
@@ -18252,7 +18355,7 @@ interface HTMLSelectElement extends HTMLElement {
   showPicker(): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18262,7 +18365,7 @@ interface HTMLSelectElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18273,7 +18376,7 @@ interface HTMLSelectElement extends HTMLElement {
   [name: number]: HTMLOptionElement | HTMLOptGroupElement;
 }
 
-declare var HTMLSelectElement: {
+declare const HTMLSelectElement: {
   prototype: HTMLSelectElement;
   new (): HTMLSelectElement;
 };
@@ -18302,7 +18405,7 @@ interface HTMLSlotElement extends HTMLElement {
   assignedNodes(options?: AssignedNodesOptions): Node[];
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18312,7 +18415,7 @@ interface HTMLSlotElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18322,7 +18425,7 @@ interface HTMLSlotElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLSlotElement: {
+declare const HTMLSlotElement: {
   prototype: HTMLSlotElement;
   new (): HTMLSlotElement;
 };
@@ -18355,7 +18458,7 @@ interface HTMLSourceElement extends HTMLElement {
   width: number;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18365,7 +18468,7 @@ interface HTMLSourceElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18375,7 +18478,7 @@ interface HTMLSourceElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLSourceElement: {
+declare const HTMLSourceElement: {
   prototype: HTMLSourceElement;
   new (): HTMLSourceElement;
 };
@@ -18389,7 +18492,7 @@ declare var HTMLSourceElement: {
 interface HTMLSpanElement extends HTMLElement {
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18399,7 +18502,7 @@ interface HTMLSpanElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18409,7 +18512,7 @@ interface HTMLSpanElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLSpanElement: {
+declare const HTMLSpanElement: {
   prototype: HTMLSpanElement;
   new (): HTMLSpanElement;
 };
@@ -18446,7 +18549,7 @@ interface HTMLStyleElement extends HTMLElement, LinkStyle {
   type: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18456,7 +18559,7 @@ interface HTMLStyleElement extends HTMLElement, LinkStyle {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18466,7 +18569,7 @@ interface HTMLStyleElement extends HTMLElement, LinkStyle {
   ): void;
 }
 
-declare var HTMLStyleElement: {
+declare const HTMLStyleElement: {
   prototype: HTMLStyleElement;
   new (): HTMLStyleElement;
 };
@@ -18490,7 +18593,7 @@ interface HTMLTableCaptionElement extends HTMLElement {
     listener: (
       this: HTMLTableCaptionElement,
       ev: HTMLElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18503,7 +18606,7 @@ interface HTMLTableCaptionElement extends HTMLElement {
     listener: (
       this: HTMLTableCaptionElement,
       ev: HTMLElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18513,7 +18616,7 @@ interface HTMLTableCaptionElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLTableCaptionElement: {
+declare const HTMLTableCaptionElement: {
   prototype: HTMLTableCaptionElement;
   new (): HTMLTableCaptionElement;
 };
@@ -18640,7 +18743,10 @@ interface HTMLTableCellElement extends HTMLElement {
   width: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTableCellElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTableCellElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18650,7 +18756,10 @@ interface HTMLTableCellElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTableCellElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTableCellElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18660,7 +18769,7 @@ interface HTMLTableCellElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLTableCellElement: {
+declare const HTMLTableCellElement: {
   prototype: HTMLTableCellElement;
   new (): HTMLTableCellElement;
 };
@@ -18720,7 +18829,10 @@ interface HTMLTableColElement extends HTMLElement {
   width: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTableColElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTableColElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18730,7 +18842,10 @@ interface HTMLTableColElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTableColElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTableColElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18740,7 +18855,7 @@ interface HTMLTableColElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLTableColElement: {
+declare const HTMLTableColElement: {
   prototype: HTMLTableColElement;
   new (): HTMLTableColElement;
 };
@@ -18752,7 +18867,7 @@ interface HTMLTableDataCellElement extends HTMLTableCellElement {
     listener: (
       this: HTMLTableDataCellElement,
       ev: HTMLElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18765,7 +18880,7 @@ interface HTMLTableDataCellElement extends HTMLTableCellElement {
     listener: (
       this: HTMLTableDataCellElement,
       ev: HTMLElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18973,7 +19088,7 @@ interface HTMLTableElement extends HTMLElement {
   insertRow(index?: number): HTMLTableRowElement;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18983,7 +19098,7 @@ interface HTMLTableElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18993,7 +19108,7 @@ interface HTMLTableElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLTableElement: {
+declare const HTMLTableElement: {
   prototype: HTMLTableElement;
   new (): HTMLTableElement;
 };
@@ -19005,7 +19120,7 @@ interface HTMLTableHeaderCellElement extends HTMLTableCellElement {
     listener: (
       this: HTMLTableHeaderCellElement,
       ev: HTMLElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -19018,7 +19133,7 @@ interface HTMLTableHeaderCellElement extends HTMLTableCellElement {
     listener: (
       this: HTMLTableHeaderCellElement,
       ev: HTMLElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -19113,7 +19228,10 @@ interface HTMLTableRowElement extends HTMLElement {
   insertCell(index?: number): HTMLTableCellElement;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTableRowElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTableRowElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -19123,7 +19241,10 @@ interface HTMLTableRowElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTableRowElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTableRowElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -19133,7 +19254,7 @@ interface HTMLTableRowElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLTableRowElement: {
+declare const HTMLTableRowElement: {
   prototype: HTMLTableRowElement;
   new (): HTMLTableRowElement;
 };
@@ -19205,7 +19326,7 @@ interface HTMLTableSectionElement extends HTMLElement {
     listener: (
       this: HTMLTableSectionElement,
       ev: HTMLElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -19218,7 +19339,7 @@ interface HTMLTableSectionElement extends HTMLElement {
     listener: (
       this: HTMLTableSectionElement,
       ev: HTMLElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -19228,7 +19349,7 @@ interface HTMLTableSectionElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLTableSectionElement: {
+declare const HTMLTableSectionElement: {
   prototype: HTMLTableSectionElement;
   new (): HTMLTableSectionElement;
 };
@@ -19269,7 +19390,10 @@ interface HTMLTemplateElement extends HTMLElement {
   shadowRootSerializable: boolean;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTemplateElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTemplateElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -19279,7 +19403,10 @@ interface HTMLTemplateElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTemplateElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTemplateElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -19289,7 +19416,7 @@ interface HTMLTemplateElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLTemplateElement: {
+declare const HTMLTemplateElement: {
   prototype: HTMLTemplateElement;
   new (): HTMLTemplateElement;
 };
@@ -19409,7 +19536,10 @@ interface HTMLTextAreaElement extends HTMLElement {
   ): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTextAreaElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTextAreaElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -19419,7 +19549,10 @@ interface HTMLTextAreaElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTextAreaElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTextAreaElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -19429,7 +19562,7 @@ interface HTMLTextAreaElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLTextAreaElement: {
+declare const HTMLTextAreaElement: {
   prototype: HTMLTextAreaElement;
   new (): HTMLTextAreaElement;
 };
@@ -19448,7 +19581,7 @@ interface HTMLTimeElement extends HTMLElement {
   dateTime: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -19458,7 +19591,7 @@ interface HTMLTimeElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -19468,7 +19601,7 @@ interface HTMLTimeElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLTimeElement: {
+declare const HTMLTimeElement: {
   prototype: HTMLTimeElement;
   new (): HTMLTimeElement;
 };
@@ -19489,7 +19622,7 @@ interface HTMLTitleElement extends HTMLElement {
   text: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -19499,7 +19632,7 @@ interface HTMLTitleElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -19509,7 +19642,7 @@ interface HTMLTitleElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLTitleElement: {
+declare const HTMLTitleElement: {
   prototype: HTMLTitleElement;
   new (): HTMLTitleElement;
 };
@@ -19541,7 +19674,7 @@ interface HTMLTrackElement extends HTMLElement {
   readonly ERROR: 3;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -19551,7 +19684,7 @@ interface HTMLTrackElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -19561,7 +19694,7 @@ interface HTMLTrackElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLTrackElement: {
+declare const HTMLTrackElement: {
   prototype: HTMLTrackElement;
   new (): HTMLTrackElement;
   readonly NONE: 0;
@@ -19584,7 +19717,7 @@ interface HTMLUListElement extends HTMLElement {
   type: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -19594,7 +19727,7 @@ interface HTMLUListElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -19604,7 +19737,7 @@ interface HTMLUListElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLUListElement: {
+declare const HTMLUListElement: {
   prototype: HTMLUListElement;
   new (): HTMLUListElement;
 };
@@ -19619,7 +19752,7 @@ declare var HTMLUListElement: {
 interface HTMLUnknownElement extends HTMLElement {
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -19629,7 +19762,7 @@ interface HTMLUnknownElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -19639,7 +19772,7 @@ interface HTMLUnknownElement extends HTMLElement {
   ): void;
 }
 
-declare var HTMLUnknownElement: {
+declare const HTMLUnknownElement: {
   prototype: HTMLUnknownElement;
   new (): HTMLUnknownElement;
 };
@@ -19672,12 +19805,16 @@ interface HTMLVideoElement extends HTMLMediaElement {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/enterpictureinpicture_event)
    */
-  onenterpictureinpicture: ((this: HTMLVideoElement, ev: Event) => any) | null;
+  onenterpictureinpicture:
+    | ((this: HTMLVideoElement, ev: Event) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/leavepictureinpicture_event)
    */
-  onleavepictureinpicture: ((this: HTMLVideoElement, ev: Event) => any) | null;
+  onleavepictureinpicture:
+    | ((this: HTMLVideoElement, ev: Event) => unknown)
+    | null;
   /**
    * Gets or sets the playsinline of the video element. for example, On iPhone,
    * video elements will now be allowed to play inline, and will not
@@ -19738,7 +19875,10 @@ interface HTMLVideoElement extends HTMLMediaElement {
   requestVideoFrameCallback(callback: VideoFrameRequestCallback): number;
   addEventListener<K extends keyof HTMLVideoElementEventMap>(
     type: K,
-    listener: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any,
+    listener: (
+      this: HTMLVideoElement,
+      ev: HTMLVideoElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -19748,7 +19888,10 @@ interface HTMLVideoElement extends HTMLMediaElement {
   ): void;
   removeEventListener<K extends keyof HTMLVideoElementEventMap>(
     type: K,
-    listener: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any,
+    listener: (
+      this: HTMLVideoElement,
+      ev: HTMLVideoElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -19758,7 +19901,7 @@ interface HTMLVideoElement extends HTMLMediaElement {
   ): void;
 }
 
-declare var HTMLVideoElement: {
+declare const HTMLVideoElement: {
   prototype: HTMLVideoElement;
   new (): HTMLVideoElement;
 };
@@ -19785,7 +19928,7 @@ interface HashChangeEvent extends Event {
   readonly oldURL: string;
 }
 
-declare var HashChangeEvent: {
+declare const HashChangeEvent: {
   prototype: HashChangeEvent;
   new (type: string, eventInitDict?: HashChangeEventInit): HashChangeEvent;
 };
@@ -19819,11 +19962,11 @@ interface Headers {
   set(name: string, value: string): void;
   forEach(
     callbackfn: (value: string, key: string, parent: Headers) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var Headers: {
+declare const Headers: {
   prototype: Headers;
   new (init?: HeadersInit): Headers;
 };
@@ -19843,13 +19986,13 @@ interface Highlight {
       key: AbstractRange,
       parent: Highlight,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var Highlight: {
+declare const Highlight: {
   prototype: Highlight;
-  new (...initialRanges: AbstractRange[]): Highlight;
+  new (...initialRanges: readonly AbstractRange[]): Highlight;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HighlightRegistry) */
@@ -19860,11 +20003,11 @@ interface HighlightRegistry {
       key: string,
       parent: HighlightRegistry,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var HighlightRegistry: {
+declare const HighlightRegistry: {
   prototype: HighlightRegistry;
   new (): HighlightRegistry;
 };
@@ -19884,7 +20027,7 @@ interface History {
    */
   scrollRestoration: ScrollRestoration;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/state) */
-  readonly state: any;
+  readonly state: unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/back) */
   back(): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/forward) */
@@ -19895,15 +20038,15 @@ interface History {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/History/pushState)
    */
-  pushState(data: any, unused: string, url?: string | URL | null): void;
+  pushState(data: unknown, unused: string, url?: string | URL | null): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/History/replaceState)
    */
-  replaceState(data: any, unused: string, url?: string | URL | null): void;
+  replaceState(data: unknown, unused: string, url?: string | URL | null): void;
 }
 
-declare var History: {
+declare const History: {
   prototype: History;
   new (): History;
 };
@@ -19993,10 +20136,10 @@ interface IDBCursor {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/update)
    */
-  update(value: any): IDBRequest<IDBValidKey>;
+  update(value: unknown): IDBRequest<IDBValidKey>;
 }
 
-declare var IDBCursor: {
+declare const IDBCursor: {
   prototype: IDBCursor;
   new (): IDBCursor;
 };
@@ -20016,10 +20159,10 @@ interface IDBCursorWithValue extends IDBCursor {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBCursorWithValue/value)
    */
-  readonly value: any;
+  readonly value: unknown;
 }
 
-declare var IDBCursorWithValue: {
+declare const IDBCursorWithValue: {
   prototype: IDBCursorWithValue;
   new (): IDBCursorWithValue;
 };
@@ -20054,19 +20197,19 @@ interface IDBDatabase extends EventTarget {
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/objectStoreNames)
    */
   readonly objectStoreNames: DOMStringList;
-  onabort: ((this: IDBDatabase, ev: Event) => any) | null;
+  onabort: ((this: IDBDatabase, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/close_event)
    */
-  onclose: ((this: IDBDatabase, ev: Event) => any) | null;
-  onerror: ((this: IDBDatabase, ev: Event) => any) | null;
+  onclose: ((this: IDBDatabase, ev: Event) => unknown) | null;
+  onerror: ((this: IDBDatabase, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/versionchange_event)
    */
   onversionchange:
-    | ((this: IDBDatabase, ev: IDBVersionChangeEvent) => any)
+    | ((this: IDBDatabase, ev: IDBVersionChangeEvent) => unknown)
     | null;
   /**
    * Returns the version of the database.
@@ -20114,13 +20257,13 @@ interface IDBDatabase extends EventTarget {
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/transaction)
    */
   transaction(
-    storeNames: string | string[],
+    storeNames: string | readonly string[],
     mode?: IDBTransactionMode,
     options?: IDBTransactionOptions,
   ): IDBTransaction;
   addEventListener<K extends keyof IDBDatabaseEventMap>(
     type: K,
-    listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any,
+    listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -20130,7 +20273,7 @@ interface IDBDatabase extends EventTarget {
   ): void;
   removeEventListener<K extends keyof IDBDatabaseEventMap>(
     type: K,
-    listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any,
+    listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -20140,7 +20283,7 @@ interface IDBDatabase extends EventTarget {
   ): void;
 }
 
-declare var IDBDatabase: {
+declare const IDBDatabase: {
   prototype: IDBDatabase;
   new (): IDBDatabase;
 };
@@ -20161,7 +20304,7 @@ interface IDBFactory {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/cmp)
    */
-  cmp(first: any, second: any): number;
+  cmp(first: unknown, second: unknown): number;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/databases)
@@ -20187,7 +20330,7 @@ interface IDBFactory {
   open(name: string, version?: number): IDBOpenDBRequest;
 }
 
-declare var IDBFactory: {
+declare const IDBFactory: {
   prototype: IDBFactory;
   new (): IDBFactory;
 };
@@ -20205,7 +20348,7 @@ interface IDBIndex {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/keyPath)
    */
-  readonly keyPath: string | string[];
+  readonly keyPath: string | readonly string[];
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/multiEntry)
@@ -20244,7 +20387,7 @@ interface IDBIndex {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/get)
    */
-  get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;
+  get(query: IDBValidKey | IDBKeyRange): IDBRequest<unknown>;
   /**
    * Retrieves the values of the records matching the given key or key range in
    * query (up to count if given).
@@ -20256,7 +20399,7 @@ interface IDBIndex {
   getAll(
     query?: IDBValidKey | IDBKeyRange | null,
     count?: number,
-  ): IDBRequest<any[]>;
+  ): IDBRequest<unknown[]>;
   /**
    * Retrieves the keys of records matching the given key or key range in query
    * (up to count if given).
@@ -20310,7 +20453,7 @@ interface IDBIndex {
   ): IDBRequest<IDBCursor | null>;
 }
 
-declare var IDBIndex: {
+declare const IDBIndex: {
   prototype: IDBIndex;
   new (): IDBIndex;
 };
@@ -20332,7 +20475,7 @@ interface IDBKeyRange {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/lower)
    */
-  readonly lower: any;
+  readonly lower: unknown;
   /**
    * Returns true if the lower open flag is set, and false otherwise.
    *
@@ -20346,7 +20489,7 @@ interface IDBKeyRange {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/upper)
    */
-  readonly upper: any;
+  readonly upper: unknown;
   /**
    * Returns true if the upper open flag is set, and false otherwise.
    *
@@ -20360,10 +20503,10 @@ interface IDBKeyRange {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/includes)
    */
-  includes(key: any): boolean;
+  includes(key: unknown): boolean;
 }
 
-declare var IDBKeyRange: {
+declare const IDBKeyRange: {
   prototype: IDBKeyRange;
   new (): IDBKeyRange;
   /**
@@ -20375,8 +20518,8 @@ declare var IDBKeyRange: {
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/bound_static)
    */
   bound(
-    lower: any,
-    upper: any,
+    lower: unknown,
+    upper: unknown,
     lowerOpen?: boolean,
     upperOpen?: boolean,
   ): IDBKeyRange;
@@ -20387,14 +20530,14 @@ declare var IDBKeyRange: {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/lowerBound_static)
    */
-  lowerBound(lower: any, open?: boolean): IDBKeyRange;
+  lowerBound(lower: unknown, open?: boolean): IDBKeyRange;
   /**
    * Returns a new IDBKeyRange spanning only key.
    *
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/only_static)
    */
-  only(value: any): IDBKeyRange;
+  only(value: unknown): IDBKeyRange;
   /**
    * Returns a new IDBKeyRange with no lower bound and ending at key. If open is
    * true, key is not included in the range.
@@ -20402,7 +20545,7 @@ declare var IDBKeyRange: {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/upperBound_static)
    */
-  upperBound(upper: any, open?: boolean): IDBKeyRange;
+  upperBound(upper: unknown, open?: boolean): IDBKeyRange;
 };
 
 /**
@@ -20435,7 +20578,7 @@ interface IDBObjectStore {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/keyPath)
    */
-  readonly keyPath: string | string[];
+  readonly keyPath: string | readonly string[];
   /**
    * Returns the name of the store.
    *
@@ -20465,7 +20608,7 @@ interface IDBObjectStore {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/add)
    */
-  add(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;
+  add(value: unknown, key?: IDBValidKey): IDBRequest<IDBValidKey>;
   /**
    * Deletes all records in store.
    *
@@ -20499,7 +20642,7 @@ interface IDBObjectStore {
    */
   createIndex(
     name: string,
-    keyPath: string | string[],
+    keyPath: string | readonly string[],
     options?: IDBIndexParameters,
   ): IDBIndex;
   /**
@@ -20532,7 +20675,7 @@ interface IDBObjectStore {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/get)
    */
-  get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;
+  get(query: IDBValidKey | IDBKeyRange): IDBRequest<unknown>;
   /**
    * Retrieves the values of the records matching the given key or key range in
    * query (up to count if given).
@@ -20545,7 +20688,7 @@ interface IDBObjectStore {
   getAll(
     query?: IDBValidKey | IDBKeyRange | null,
     count?: number,
-  ): IDBRequest<any[]>;
+  ): IDBRequest<unknown[]>;
   /**
    * Retrieves the keys of records matching the given key or key range in query
    * (up to count if given).
@@ -20618,10 +20761,10 @@ interface IDBObjectStore {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/put)
    */
-  put(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;
+  put(value: unknown, key?: IDBValidKey): IDBRequest<IDBValidKey>;
 }
 
-declare var IDBObjectStore: {
+declare const IDBObjectStore: {
   prototype: IDBObjectStore;
   new (): IDBObjectStore;
 };
@@ -20642,18 +20785,21 @@ interface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBOpenDBRequest/blocked_event)
    */
   onblocked:
-    | ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any)
+    | ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBOpenDBRequest/upgradeneeded_event)
    */
   onupgradeneeded:
-    | ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any)
+    | ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => unknown)
     | null;
   addEventListener<K extends keyof IDBOpenDBRequestEventMap>(
     type: K,
-    listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any,
+    listener: (
+      this: IDBOpenDBRequest,
+      ev: IDBOpenDBRequestEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -20663,7 +20809,10 @@ interface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {
   ): void;
   removeEventListener<K extends keyof IDBOpenDBRequestEventMap>(
     type: K,
-    listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any,
+    listener: (
+      this: IDBOpenDBRequest,
+      ev: IDBOpenDBRequestEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -20673,7 +20822,7 @@ interface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {
   ): void;
 }
 
-declare var IDBOpenDBRequest: {
+declare const IDBOpenDBRequest: {
   prototype: IDBOpenDBRequest;
   new (): IDBOpenDBRequest;
 };
@@ -20691,7 +20840,7 @@ interface IDBRequestEventMap {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest)
  */
-interface IDBRequest<T = any> extends EventTarget {
+interface IDBRequest<T = unknown> extends EventTarget {
   /**
    * When a request is completed, returns the error (a DOMException), or null if
    * the request succeeded. Throws a "InvalidStateError" DOMException if the
@@ -20705,12 +20854,12 @@ interface IDBRequest<T = any> extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/error_event)
    */
-  onerror: ((this: IDBRequest<T>, ev: Event) => any) | null;
+  onerror: ((this: IDBRequest<T>, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/success_event)
    */
-  onsuccess: ((this: IDBRequest<T>, ev: Event) => any) | null;
+  onsuccess: ((this: IDBRequest<T>, ev: Event) => unknown) | null;
   /**
    * Returns "pending" until a request is complete, then returns "done".
    *
@@ -20746,7 +20895,7 @@ interface IDBRequest<T = any> extends EventTarget {
   readonly transaction: IDBTransaction | null;
   addEventListener<K extends keyof IDBRequestEventMap>(
     type: K,
-    listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any,
+    listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -20756,7 +20905,7 @@ interface IDBRequest<T = any> extends EventTarget {
   ): void;
   removeEventListener<K extends keyof IDBRequestEventMap>(
     type: K,
-    listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any,
+    listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -20766,7 +20915,7 @@ interface IDBRequest<T = any> extends EventTarget {
   ): void;
 }
 
-declare var IDBRequest: {
+declare const IDBRequest: {
   prototype: IDBRequest;
   new (): IDBRequest;
 };
@@ -20819,17 +20968,17 @@ interface IDBTransaction extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/abort_event)
    */
-  onabort: ((this: IDBTransaction, ev: Event) => any) | null;
+  onabort: ((this: IDBTransaction, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/complete_event)
    */
-  oncomplete: ((this: IDBTransaction, ev: Event) => any) | null;
+  oncomplete: ((this: IDBTransaction, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/error_event)
    */
-  onerror: ((this: IDBTransaction, ev: Event) => any) | null;
+  onerror: ((this: IDBTransaction, ev: Event) => unknown) | null;
   /**
    * Aborts the transaction. All pending requests will fail with a "AbortError"
    * DOMException and all changes made to the database will be reverted.
@@ -20852,7 +21001,7 @@ interface IDBTransaction extends EventTarget {
   objectStore(name: string): IDBObjectStore;
   addEventListener<K extends keyof IDBTransactionEventMap>(
     type: K,
-    listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any,
+    listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -20862,7 +21011,7 @@ interface IDBTransaction extends EventTarget {
   ): void;
   removeEventListener<K extends keyof IDBTransactionEventMap>(
     type: K,
-    listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any,
+    listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -20872,7 +21021,7 @@ interface IDBTransaction extends EventTarget {
   ): void;
 }
 
-declare var IDBTransaction: {
+declare const IDBTransaction: {
   prototype: IDBTransaction;
   new (): IDBTransaction;
 };
@@ -20898,7 +21047,7 @@ interface IDBVersionChangeEvent extends Event {
   readonly oldVersion: number;
 }
 
-declare var IDBVersionChangeEvent: {
+declare const IDBVersionChangeEvent: {
   prototype: IDBVersionChangeEvent;
   new (
     type: string,
@@ -20927,7 +21076,7 @@ interface IIRFilterNode extends AudioNode {
   ): void;
 }
 
-declare var IIRFilterNode: {
+declare const IIRFilterNode: {
   prototype: IIRFilterNode;
   new (context: BaseAudioContext, options: IIRFilterOptions): IIRFilterNode;
 };
@@ -20946,7 +21095,7 @@ interface IdleDeadline {
   timeRemaining(): DOMHighResTimeStamp;
 }
 
-declare var IdleDeadline: {
+declare const IdleDeadline: {
   prototype: IdleDeadline;
   new (): IdleDeadline;
 };
@@ -20976,7 +21125,7 @@ interface ImageBitmap {
   close(): void;
 }
 
-declare var ImageBitmap: {
+declare const ImageBitmap: {
   prototype: ImageBitmap;
   new (): ImageBitmap;
 };
@@ -20999,7 +21148,7 @@ interface ImageBitmapRenderingContext {
   transferFromImageBitmap(bitmap: ImageBitmap | null): void;
 }
 
-declare var ImageBitmapRenderingContext: {
+declare const ImageBitmapRenderingContext: {
   prototype: ImageBitmapRenderingContext;
   new (): ImageBitmapRenderingContext;
 };
@@ -21043,7 +21192,7 @@ interface ImageData {
   readonly width: number;
 }
 
-declare var ImageData: {
+declare const ImageData: {
   prototype: ImageData;
   new (sw: number, sh: number, settings?: ImageDataSettings): ImageData;
   new (
@@ -21072,7 +21221,7 @@ interface InputDeviceInfo extends MediaDeviceInfo {
   getCapabilities(): MediaTrackCapabilities;
 }
 
-declare var InputDeviceInfo: {
+declare const InputDeviceInfo: {
   prototype: InputDeviceInfo;
   new (): InputDeviceInfo;
 };
@@ -21103,7 +21252,7 @@ interface InputEvent extends UIEvent {
   getTargetRanges(): StaticRange[];
 }
 
-declare var InputEvent: {
+declare const InputEvent: {
   prototype: InputEvent;
   new (type: string, eventInitDict?: InputEventInit): InputEvent;
 };
@@ -21154,7 +21303,7 @@ interface IntersectionObserver {
   unobserve(target: Element): void;
 }
 
-declare var IntersectionObserver: {
+declare const IntersectionObserver: {
   prototype: IntersectionObserver;
   new (
     callback: IntersectionObserverCallback,
@@ -21208,7 +21357,7 @@ interface IntersectionObserverEntry {
   readonly time: DOMHighResTimeStamp;
 }
 
-declare var IntersectionObserverEntry: {
+declare const IntersectionObserverEntry: {
   prototype: IntersectionObserverEntry;
   new (
     intersectionObserverEntryInit: IntersectionObserverEntryInit,
@@ -21319,7 +21468,7 @@ interface KeyboardEvent extends UIEvent {
   readonly DOM_KEY_LOCATION_NUMPAD: 0x03;
 }
 
-declare var KeyboardEvent: {
+declare const KeyboardEvent: {
   prototype: KeyboardEvent;
   new (type: string, eventInitDict?: KeyboardEventInit): KeyboardEvent;
   readonly DOM_KEY_LOCATION_STANDARD: 0x00;
@@ -21359,14 +21508,16 @@ interface KeyframeEffect extends AnimationEffect {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/KeyframeEffect/setKeyframes)
    */
-  setKeyframes(keyframes: Keyframe[] | PropertyIndexedKeyframes | null): void;
+  setKeyframes(
+    keyframes: readonly Keyframe[] | PropertyIndexedKeyframes | null,
+  ): void;
 }
 
-declare var KeyframeEffect: {
+declare const KeyframeEffect: {
   prototype: KeyframeEffect;
   new (
     target: Element | null,
-    keyframes: Keyframe[] | PropertyIndexedKeyframes | null,
+    keyframes: readonly Keyframe[] | PropertyIndexedKeyframes | null,
     options?: number | KeyframeEffectOptions,
   ): KeyframeEffect;
   new (source: KeyframeEffect): KeyframeEffect;
@@ -21411,10 +21562,10 @@ interface LargestContentfulPaint extends PerformanceEntry {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var LargestContentfulPaint: {
+declare const LargestContentfulPaint: {
   prototype: LargestContentfulPaint;
   new (): LargestContentfulPaint;
 };
@@ -21546,7 +21697,7 @@ interface Location {
   replace(url: string | URL): void;
 }
 
-declare var Location: {
+declare const Location: {
   prototype: Location;
   new (): Location;
 };
@@ -21563,7 +21714,7 @@ interface Lock {
   readonly name: string;
 }
 
-declare var Lock: {
+declare const Lock: {
   prototype: Lock;
   new (): Lock;
 };
@@ -21583,15 +21734,15 @@ interface LockManager {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/LockManager/request)
    */
-  request(name: string, callback: LockGrantedCallback): Promise<any>;
+  request(name: string, callback: LockGrantedCallback): Promise<unknown>;
   request(
     name: string,
     options: LockOptions,
     callback: LockGrantedCallback,
-  ): Promise<any>;
+  ): Promise<unknown>;
 }
 
-declare var LockManager: {
+declare const LockManager: {
   prototype: LockManager;
   new (): LockManager;
 };
@@ -21615,7 +21766,7 @@ interface MIDIAccess extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MIDIAccess/statechange_event)
    */
-  onstatechange: ((this: MIDIAccess, ev: Event) => any) | null;
+  onstatechange: ((this: MIDIAccess, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MIDIAccess/outputs)
@@ -21628,7 +21779,7 @@ interface MIDIAccess extends EventTarget {
   readonly sysexEnabled: boolean;
   addEventListener<K extends keyof MIDIAccessEventMap>(
     type: K,
-    listener: (this: MIDIAccess, ev: MIDIAccessEventMap[K]) => any,
+    listener: (this: MIDIAccess, ev: MIDIAccessEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -21638,7 +21789,7 @@ interface MIDIAccess extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MIDIAccessEventMap>(
     type: K,
-    listener: (this: MIDIAccess, ev: MIDIAccessEventMap[K]) => any,
+    listener: (this: MIDIAccess, ev: MIDIAccessEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -21648,7 +21799,7 @@ interface MIDIAccess extends EventTarget {
   ): void;
 }
 
-declare var MIDIAccess: {
+declare const MIDIAccess: {
   prototype: MIDIAccess;
   new (): MIDIAccess;
 };
@@ -21667,7 +21818,7 @@ interface MIDIConnectionEvent extends Event {
   readonly port: MIDIPort | null;
 }
 
-declare var MIDIConnectionEvent: {
+declare const MIDIConnectionEvent: {
   prototype: MIDIConnectionEvent;
   new (
     type: string,
@@ -21689,10 +21840,10 @@ interface MIDIInput extends MIDIPort {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MIDIInput/midimessage_event)
    */
-  onmidimessage: ((this: MIDIInput, ev: MIDIMessageEvent) => any) | null;
+  onmidimessage: ((this: MIDIInput, ev: MIDIMessageEvent) => unknown) | null;
   addEventListener<K extends keyof MIDIInputEventMap>(
     type: K,
-    listener: (this: MIDIInput, ev: MIDIInputEventMap[K]) => any,
+    listener: (this: MIDIInput, ev: MIDIInputEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -21702,7 +21853,7 @@ interface MIDIInput extends MIDIPort {
   ): void;
   removeEventListener<K extends keyof MIDIInputEventMap>(
     type: K,
-    listener: (this: MIDIInput, ev: MIDIInputEventMap[K]) => any,
+    listener: (this: MIDIInput, ev: MIDIInputEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -21712,7 +21863,7 @@ interface MIDIInput extends MIDIPort {
   ): void;
 }
 
-declare var MIDIInput: {
+declare const MIDIInput: {
   prototype: MIDIInput;
   new (): MIDIInput;
 };
@@ -21725,11 +21876,11 @@ declare var MIDIInput: {
 interface MIDIInputMap {
   forEach(
     callbackfn: (value: MIDIInput, key: string, parent: MIDIInputMap) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var MIDIInputMap: {
+declare const MIDIInputMap: {
   prototype: MIDIInputMap;
   new (): MIDIInputMap;
 };
@@ -21747,7 +21898,7 @@ interface MIDIMessageEvent extends Event {
   readonly data: Uint8Array | null;
 }
 
-declare var MIDIMessageEvent: {
+declare const MIDIMessageEvent: {
   prototype: MIDIMessageEvent;
   new (type: string, eventInitDict?: MIDIMessageEventInit): MIDIMessageEvent;
 };
@@ -21759,10 +21910,10 @@ declare var MIDIMessageEvent: {
  */
 interface MIDIOutput extends MIDIPort {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIOutput/send) */
-  send(data: number[], timestamp?: DOMHighResTimeStamp): void;
+  send(data: readonly number[], timestamp?: DOMHighResTimeStamp): void;
   addEventListener<K extends keyof MIDIPortEventMap>(
     type: K,
-    listener: (this: MIDIOutput, ev: MIDIPortEventMap[K]) => any,
+    listener: (this: MIDIOutput, ev: MIDIPortEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -21772,7 +21923,7 @@ interface MIDIOutput extends MIDIPort {
   ): void;
   removeEventListener<K extends keyof MIDIPortEventMap>(
     type: K,
-    listener: (this: MIDIOutput, ev: MIDIPortEventMap[K]) => any,
+    listener: (this: MIDIOutput, ev: MIDIPortEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -21782,7 +21933,7 @@ interface MIDIOutput extends MIDIPort {
   ): void;
 }
 
-declare var MIDIOutput: {
+declare const MIDIOutput: {
   prototype: MIDIOutput;
   new (): MIDIOutput;
 };
@@ -21795,11 +21946,11 @@ declare var MIDIOutput: {
 interface MIDIOutputMap {
   forEach(
     callbackfn: (value: MIDIOutput, key: string, parent: MIDIOutputMap) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var MIDIOutputMap: {
+declare const MIDIOutputMap: {
   prototype: MIDIOutputMap;
   new (): MIDIOutputMap;
 };
@@ -21832,7 +21983,7 @@ interface MIDIPort extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/statechange_event)
    */
-  onstatechange: ((this: MIDIPort, ev: MIDIConnectionEvent) => any) | null;
+  onstatechange: ((this: MIDIPort, ev: MIDIConnectionEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/state) */
   readonly state: MIDIPortDeviceState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/type) */
@@ -21848,7 +21999,7 @@ interface MIDIPort extends EventTarget {
   open(): Promise<MIDIPort>;
   addEventListener<K extends keyof MIDIPortEventMap>(
     type: K,
-    listener: (this: MIDIPort, ev: MIDIPortEventMap[K]) => any,
+    listener: (this: MIDIPort, ev: MIDIPortEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -21858,7 +22009,7 @@ interface MIDIPort extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MIDIPortEventMap>(
     type: K,
-    listener: (this: MIDIPort, ev: MIDIPortEventMap[K]) => any,
+    listener: (this: MIDIPort, ev: MIDIPortEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -21868,7 +22019,7 @@ interface MIDIPort extends EventTarget {
   ): void;
 }
 
-declare var MIDIPort: {
+declare const MIDIPort: {
   prototype: MIDIPort;
   new (): MIDIPort;
 };
@@ -21885,7 +22036,7 @@ interface MathMLElement
     HTMLOrSVGElement {
   addEventListener<K extends keyof MathMLElementEventMap>(
     type: K,
-    listener: (this: MathMLElement, ev: MathMLElementEventMap[K]) => any,
+    listener: (this: MathMLElement, ev: MathMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -21895,7 +22046,7 @@ interface MathMLElement
   ): void;
   removeEventListener<K extends keyof MathMLElementEventMap>(
     type: K,
-    listener: (this: MathMLElement, ev: MathMLElementEventMap[K]) => any,
+    listener: (this: MathMLElement, ev: MathMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -21905,7 +22056,7 @@ interface MathMLElement
   ): void;
 }
 
-declare var MathMLElement: {
+declare const MathMLElement: {
   prototype: MathMLElement;
   new (): MathMLElement;
 };
@@ -21928,7 +22079,7 @@ interface MediaCapabilities {
   ): Promise<MediaCapabilitiesEncodingInfo>;
 }
 
-declare var MediaCapabilities: {
+declare const MediaCapabilities: {
   prototype: MediaCapabilities;
   new (): MediaCapabilities;
 };
@@ -21964,10 +22115,10 @@ interface MediaDeviceInfo {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaDeviceInfo/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var MediaDeviceInfo: {
+declare const MediaDeviceInfo: {
   prototype: MediaDeviceInfo;
   new (): MediaDeviceInfo;
 };
@@ -21988,7 +22139,7 @@ interface MediaDevices extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaDevices/devicechange_event)
    */
-  ondevicechange: ((this: MediaDevices, ev: Event) => any) | null;
+  ondevicechange: ((this: MediaDevices, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaDevices/enumerateDevices)
@@ -22011,7 +22162,7 @@ interface MediaDevices extends EventTarget {
   getUserMedia(constraints?: MediaStreamConstraints): Promise<MediaStream>;
   addEventListener<K extends keyof MediaDevicesEventMap>(
     type: K,
-    listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => any,
+    listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -22021,7 +22172,7 @@ interface MediaDevices extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MediaDevicesEventMap>(
     type: K,
-    listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => any,
+    listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -22031,7 +22182,7 @@ interface MediaDevices extends EventTarget {
   ): void;
 }
 
-declare var MediaDevices: {
+declare const MediaDevices: {
   prototype: MediaDevices;
   new (): MediaDevices;
 };
@@ -22054,7 +22205,7 @@ interface MediaElementAudioSourceNode extends AudioNode {
   readonly mediaElement: HTMLMediaElement;
 }
 
-declare var MediaElementAudioSourceNode: {
+declare const MediaElementAudioSourceNode: {
   prototype: MediaElementAudioSourceNode;
   new (
     context: AudioContext,
@@ -22079,7 +22230,7 @@ interface MediaEncryptedEvent extends Event {
   readonly initDataType: string;
 }
 
-declare var MediaEncryptedEvent: {
+declare const MediaEncryptedEvent: {
   prototype: MediaEncryptedEvent;
   new (
     type: string,
@@ -22107,7 +22258,7 @@ interface MediaError {
   readonly MEDIA_ERR_SRC_NOT_SUPPORTED: 4;
 }
 
-declare var MediaError: {
+declare const MediaError: {
   prototype: MediaError;
   new (): MediaError;
   readonly MEDIA_ERR_ABORTED: 1;
@@ -22137,7 +22288,7 @@ interface MediaKeyMessageEvent extends Event {
   readonly messageType: MediaKeyMessageType;
 }
 
-declare var MediaKeyMessageEvent: {
+declare const MediaKeyMessageEvent: {
   prototype: MediaKeyMessageEvent;
   new (
     type: string,
@@ -22177,12 +22328,14 @@ interface MediaKeySession extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/keystatuseschange_event)
    */
-  onkeystatuseschange: ((this: MediaKeySession, ev: Event) => any) | null;
+  onkeystatuseschange: ((this: MediaKeySession, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/message_event)
    */
-  onmessage: ((this: MediaKeySession, ev: MediaKeyMessageEvent) => any) | null;
+  onmessage:
+    | ((this: MediaKeySession, ev: MediaKeyMessageEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/sessionId)
@@ -22215,7 +22368,10 @@ interface MediaKeySession extends EventTarget {
   update(response: BufferSource): Promise<void>;
   addEventListener<K extends keyof MediaKeySessionEventMap>(
     type: K,
-    listener: (this: MediaKeySession, ev: MediaKeySessionEventMap[K]) => any,
+    listener: (
+      this: MediaKeySession,
+      ev: MediaKeySessionEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -22225,7 +22381,10 @@ interface MediaKeySession extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MediaKeySessionEventMap>(
     type: K,
-    listener: (this: MediaKeySession, ev: MediaKeySessionEventMap[K]) => any,
+    listener: (
+      this: MediaKeySession,
+      ev: MediaKeySessionEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -22235,7 +22394,7 @@ interface MediaKeySession extends EventTarget {
   ): void;
 }
 
-declare var MediaKeySession: {
+declare const MediaKeySession: {
   prototype: MediaKeySession;
   new (): MediaKeySession;
 };
@@ -22268,11 +22427,11 @@ interface MediaKeyStatusMap {
       key: BufferSource,
       parent: MediaKeyStatusMap,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var MediaKeyStatusMap: {
+declare const MediaKeyStatusMap: {
   prototype: MediaKeyStatusMap;
   new (): MediaKeyStatusMap;
 };
@@ -22304,7 +22463,7 @@ interface MediaKeySystemAccess {
   getConfiguration(): MediaKeySystemConfiguration;
 }
 
-declare var MediaKeySystemAccess: {
+declare const MediaKeySystemAccess: {
   prototype: MediaKeySystemAccess;
   new (): MediaKeySystemAccess;
 };
@@ -22330,7 +22489,7 @@ interface MediaKeys {
   setServerCertificate(serverCertificate: BufferSource): Promise<boolean>;
 }
 
-declare var MediaKeys: {
+declare const MediaKeys: {
   prototype: MediaKeys;
   new (): MediaKeys;
 };
@@ -22363,7 +22522,7 @@ interface MediaList {
   [index: number]: string;
 }
 
-declare var MediaList: {
+declare const MediaList: {
   prototype: MediaList;
   new (): MediaList;
 };
@@ -22392,7 +22551,7 @@ interface MediaMetadata {
   title: string;
 }
 
-declare var MediaMetadata: {
+declare const MediaMetadata: {
   prototype: MediaMetadata;
   new (init?: MediaMetadataInit): MediaMetadata;
 };
@@ -22423,7 +22582,7 @@ interface MediaQueryList extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryList/change_event)
    */
-  onchange: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;
+  onchange: ((this: MediaQueryList, ev: MediaQueryListEvent) => unknown) | null;
   /**
    * @deprecated
    *
@@ -22431,7 +22590,9 @@ interface MediaQueryList extends EventTarget {
    *   Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryList/addListener)
    */
   addListener(
-    callback: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null,
+    callback:
+      | ((this: MediaQueryList, ev: MediaQueryListEvent) => unknown)
+      | null,
   ): void;
   /**
    * @deprecated
@@ -22440,11 +22601,13 @@ interface MediaQueryList extends EventTarget {
    *   Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryList/removeListener)
    */
   removeListener(
-    callback: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null,
+    callback:
+      | ((this: MediaQueryList, ev: MediaQueryListEvent) => unknown)
+      | null,
   ): void;
   addEventListener<K extends keyof MediaQueryListEventMap>(
     type: K,
-    listener: (this: MediaQueryList, ev: MediaQueryListEventMap[K]) => any,
+    listener: (this: MediaQueryList, ev: MediaQueryListEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -22454,7 +22617,7 @@ interface MediaQueryList extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MediaQueryListEventMap>(
     type: K,
-    listener: (this: MediaQueryList, ev: MediaQueryListEventMap[K]) => any,
+    listener: (this: MediaQueryList, ev: MediaQueryListEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -22464,7 +22627,7 @@ interface MediaQueryList extends EventTarget {
   ): void;
 }
 
-declare var MediaQueryList: {
+declare const MediaQueryList: {
   prototype: MediaQueryList;
   new (): MediaQueryList;
 };
@@ -22486,7 +22649,7 @@ interface MediaQueryListEvent extends Event {
   readonly media: string;
 }
 
-declare var MediaQueryListEvent: {
+declare const MediaQueryListEvent: {
   prototype: MediaQueryListEvent;
   new (
     type: string,
@@ -22519,32 +22682,32 @@ interface MediaRecorder extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/dataavailable_event)
    */
-  ondataavailable: ((this: MediaRecorder, ev: BlobEvent) => any) | null;
+  ondataavailable: ((this: MediaRecorder, ev: BlobEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/error_event)
    */
-  onerror: ((this: MediaRecorder, ev: Event) => any) | null;
+  onerror: ((this: MediaRecorder, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/pause_event)
    */
-  onpause: ((this: MediaRecorder, ev: Event) => any) | null;
+  onpause: ((this: MediaRecorder, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/resume_event)
    */
-  onresume: ((this: MediaRecorder, ev: Event) => any) | null;
+  onresume: ((this: MediaRecorder, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/start_event)
    */
-  onstart: ((this: MediaRecorder, ev: Event) => any) | null;
+  onstart: ((this: MediaRecorder, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/stop_event)
    */
-  onstop: ((this: MediaRecorder, ev: Event) => any) | null;
+  onstop: ((this: MediaRecorder, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/state)
@@ -22587,7 +22750,7 @@ interface MediaRecorder extends EventTarget {
   stop(): void;
   addEventListener<K extends keyof MediaRecorderEventMap>(
     type: K,
-    listener: (this: MediaRecorder, ev: MediaRecorderEventMap[K]) => any,
+    listener: (this: MediaRecorder, ev: MediaRecorderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -22597,7 +22760,7 @@ interface MediaRecorder extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MediaRecorderEventMap>(
     type: K,
-    listener: (this: MediaRecorder, ev: MediaRecorderEventMap[K]) => any,
+    listener: (this: MediaRecorder, ev: MediaRecorderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -22607,7 +22770,7 @@ interface MediaRecorder extends EventTarget {
   ): void;
 }
 
-declare var MediaRecorder: {
+declare const MediaRecorder: {
   prototype: MediaRecorder;
   new (stream: MediaStream, options?: MediaRecorderOptions): MediaRecorder;
   /**
@@ -22644,7 +22807,7 @@ interface MediaSession {
   setPositionState(state?: MediaPositionState): void;
 }
 
-declare var MediaSession: {
+declare const MediaSession: {
   prototype: MediaSession;
   new (): MediaSession;
 };
@@ -22673,9 +22836,9 @@ interface MediaSource extends EventTarget {
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/duration)
    */
   duration: number;
-  onsourceclose: ((this: MediaSource, ev: Event) => any) | null;
-  onsourceended: ((this: MediaSource, ev: Event) => any) | null;
-  onsourceopen: ((this: MediaSource, ev: Event) => any) | null;
+  onsourceclose: ((this: MediaSource, ev: Event) => unknown) | null;
+  onsourceended: ((this: MediaSource, ev: Event) => unknown) | null;
+  onsourceopen: ((this: MediaSource, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/readyState)
@@ -22713,7 +22876,7 @@ interface MediaSource extends EventTarget {
   setLiveSeekableRange(start: number, end: number): void;
   addEventListener<K extends keyof MediaSourceEventMap>(
     type: K,
-    listener: (this: MediaSource, ev: MediaSourceEventMap[K]) => any,
+    listener: (this: MediaSource, ev: MediaSourceEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -22723,7 +22886,7 @@ interface MediaSource extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MediaSourceEventMap>(
     type: K,
-    listener: (this: MediaSource, ev: MediaSourceEventMap[K]) => any,
+    listener: (this: MediaSource, ev: MediaSourceEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -22733,7 +22896,7 @@ interface MediaSource extends EventTarget {
   ): void;
 }
 
-declare var MediaSource: {
+declare const MediaSource: {
   prototype: MediaSource;
   new (): MediaSource;
   /**
@@ -22751,7 +22914,7 @@ declare var MediaSource: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSourceHandle) */
 interface MediaSourceHandle {}
 
-declare var MediaSourceHandle: {
+declare const MediaSourceHandle: {
   prototype: MediaSourceHandle;
   new (): MediaSourceHandle;
 };
@@ -22779,12 +22942,16 @@ interface MediaStream extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/addtrack_event)
    */
-  onaddtrack: ((this: MediaStream, ev: MediaStreamTrackEvent) => any) | null;
+  onaddtrack:
+    | ((this: MediaStream, ev: MediaStreamTrackEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/removetrack_event)
    */
-  onremovetrack: ((this: MediaStream, ev: MediaStreamTrackEvent) => any) | null;
+  onremovetrack:
+    | ((this: MediaStream, ev: MediaStreamTrackEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/addTrack)
@@ -22822,7 +22989,7 @@ interface MediaStream extends EventTarget {
   removeTrack(track: MediaStreamTrack): void;
   addEventListener<K extends keyof MediaStreamEventMap>(
     type: K,
-    listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => any,
+    listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -22832,7 +22999,7 @@ interface MediaStream extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MediaStreamEventMap>(
     type: K,
-    listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => any,
+    listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -22842,11 +23009,11 @@ interface MediaStream extends EventTarget {
   ): void;
 }
 
-declare var MediaStream: {
+declare const MediaStream: {
   prototype: MediaStream;
   new (): MediaStream;
   new (stream: MediaStream): MediaStream;
-  new (tracks: MediaStreamTrack[]): MediaStream;
+  new (tracks: readonly MediaStreamTrack[]): MediaStream;
 };
 
 /**
@@ -22861,7 +23028,7 @@ interface MediaStreamAudioDestinationNode extends AudioNode {
   readonly stream: MediaStream;
 }
 
-declare var MediaStreamAudioDestinationNode: {
+declare const MediaStreamAudioDestinationNode: {
   prototype: MediaStreamAudioDestinationNode;
   new (
     context: AudioContext,
@@ -22885,7 +23052,7 @@ interface MediaStreamAudioSourceNode extends AudioNode {
   readonly mediaStream: MediaStream;
 }
 
-declare var MediaStreamAudioSourceNode: {
+declare const MediaStreamAudioSourceNode: {
   prototype: MediaStreamAudioSourceNode;
   new (
     context: AudioContext,
@@ -22940,17 +23107,17 @@ interface MediaStreamTrack extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/ended_event)
    */
-  onended: ((this: MediaStreamTrack, ev: Event) => any) | null;
+  onended: ((this: MediaStreamTrack, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/mute_event)
    */
-  onmute: ((this: MediaStreamTrack, ev: Event) => any) | null;
+  onmute: ((this: MediaStreamTrack, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/unmute_event)
    */
-  onunmute: ((this: MediaStreamTrack, ev: Event) => any) | null;
+  onunmute: ((this: MediaStreamTrack, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/readyState)
@@ -22988,7 +23155,10 @@ interface MediaStreamTrack extends EventTarget {
   stop(): void;
   addEventListener<K extends keyof MediaStreamTrackEventMap>(
     type: K,
-    listener: (this: MediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any,
+    listener: (
+      this: MediaStreamTrack,
+      ev: MediaStreamTrackEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -22998,7 +23168,10 @@ interface MediaStreamTrack extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MediaStreamTrackEventMap>(
     type: K,
-    listener: (this: MediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any,
+    listener: (
+      this: MediaStreamTrack,
+      ev: MediaStreamTrackEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23008,7 +23181,7 @@ interface MediaStreamTrack extends EventTarget {
   ): void;
 }
 
-declare var MediaStreamTrack: {
+declare const MediaStreamTrack: {
   prototype: MediaStreamTrack;
   new (): MediaStreamTrack;
 };
@@ -23029,7 +23202,7 @@ interface MediaStreamTrackEvent extends Event {
   readonly track: MediaStreamTrack;
 }
 
-declare var MediaStreamTrackEvent: {
+declare const MediaStreamTrackEvent: {
   prototype: MediaStreamTrackEvent;
   new (
     type: string,
@@ -23060,7 +23233,7 @@ interface MessageChannel {
   readonly port2: MessagePort;
 }
 
-declare var MessageChannel: {
+declare const MessageChannel: {
   prototype: MessageChannel;
   new (): MessageChannel;
 };
@@ -23070,7 +23243,7 @@ declare var MessageChannel: {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent)
  */
-interface MessageEvent<T = any> extends Event {
+interface MessageEvent<T = unknown> extends Event {
   /**
    * Returns the data of the message.
    *
@@ -23115,15 +23288,15 @@ interface MessageEvent<T = any> extends Event {
     type: string,
     bubbles?: boolean,
     cancelable?: boolean,
-    data?: any,
+    data?: unknown,
     origin?: string,
     lastEventId?: string,
     source?: MessageEventSource | null,
-    ports?: MessagePort[],
+    ports?: readonly MessagePort[],
   ): void;
 }
 
-declare var MessageEvent: {
+declare const MessageEvent: {
   prototype: MessageEvent;
   new <T>(type: string, eventInitDict?: MessageEventInit<T>): MessageEvent<T>;
 };
@@ -23145,12 +23318,12 @@ interface MessagePort extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/message_event)
    */
-  onmessage: ((this: MessagePort, ev: MessageEvent) => any) | null;
+  onmessage: ((this: MessagePort, ev: MessageEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/messageerror_event)
    */
-  onmessageerror: ((this: MessagePort, ev: MessageEvent) => any) | null;
+  onmessageerror: ((this: MessagePort, ev: MessageEvent) => unknown) | null;
   /**
    * Disconnects the port, so that it is no longer active.
    *
@@ -23169,8 +23342,8 @@ interface MessagePort extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/postMessage)
    */
-  postMessage(message: any, transfer: Transferable[]): void;
-  postMessage(message: any, options?: StructuredSerializeOptions): void;
+  postMessage(message: unknown, transfer: readonly Transferable[]): void;
+  postMessage(message: unknown, options?: StructuredSerializeOptions): void;
   /**
    * Begins dispatching messages received on the port.
    *
@@ -23180,7 +23353,7 @@ interface MessagePort extends EventTarget {
   start(): void;
   addEventListener<K extends keyof MessagePortEventMap>(
     type: K,
-    listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any,
+    listener: (this: MessagePort, ev: MessagePortEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23190,7 +23363,7 @@ interface MessagePort extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MessagePortEventMap>(
     type: K,
-    listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any,
+    listener: (this: MessagePort, ev: MessagePortEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23200,7 +23373,7 @@ interface MessagePort extends EventTarget {
   ): void;
 }
 
-declare var MessagePort: {
+declare const MessagePort: {
   prototype: MessagePort;
   new (): MessagePort;
 };
@@ -23241,7 +23414,7 @@ interface MimeType {
 }
 
 /** @deprecated */
-declare var MimeType: {
+declare const MimeType: {
   prototype: MimeType;
   new (): MimeType;
 };
@@ -23266,7 +23439,7 @@ interface MimeTypeArray {
 }
 
 /** @deprecated */
-declare var MimeTypeArray: {
+declare const MimeTypeArray: {
   prototype: MimeTypeArray;
   new (): MimeTypeArray;
 };
@@ -23408,7 +23581,7 @@ interface MouseEvent extends UIEvent {
   ): void;
 }
 
-declare var MouseEvent: {
+declare const MouseEvent: {
   prototype: MouseEvent;
   new (type: string, eventInitDict?: MouseEventInit): MouseEvent;
 };
@@ -23483,7 +23656,7 @@ interface MutationEvent extends Event {
 }
 
 /** @deprecated */
-declare var MutationEvent: {
+declare const MutationEvent: {
   prototype: MutationEvent;
   new (): MutationEvent;
   readonly MODIFICATION: 1;
@@ -23527,7 +23700,7 @@ interface MutationObserver {
   takeRecords(): MutationRecord[];
 }
 
-declare var MutationObserver: {
+declare const MutationObserver: {
   prototype: MutationObserver;
   new (callback: MutationCallback): MutationObserver;
 };
@@ -23613,7 +23786,7 @@ interface MutationRecord {
   readonly type: MutationRecordType;
 }
 
-declare var MutationRecord: {
+declare const MutationRecord: {
   prototype: MutationRecord;
   new (): MutationRecord;
 };
@@ -23669,7 +23842,7 @@ interface NamedNodeMap {
   [index: number]: Attr;
 }
 
-declare var NamedNodeMap: {
+declare const NamedNodeMap: {
   prototype: NamedNodeMap;
   new (): NamedNodeMap;
 };
@@ -23703,7 +23876,7 @@ interface NavigationPreloadManager {
   setHeaderValue(value: string): Promise<void>;
 }
 
-declare var NavigationPreloadManager: {
+declare const NavigationPreloadManager: {
   prototype: NavigationPreloadManager;
   new (): NavigationPreloadManager;
 };
@@ -23817,7 +23990,7 @@ interface Navigator
    */
   requestMediaKeySystemAccess(
     keySystem: string,
-    supportedConfigurations: MediaKeySystemConfiguration[],
+    supportedConfigurations: readonly MediaKeySystemConfiguration[],
   ): Promise<MediaKeySystemAccess>;
   /**
    * [MDN
@@ -23837,7 +24010,7 @@ interface Navigator
   vibrate(pattern: VibratePattern): boolean;
 }
 
-declare var Navigator: {
+declare const Navigator: {
   prototype: Navigator;
   new (): Navigator;
 };
@@ -24230,7 +24403,7 @@ interface Node extends EventTarget {
   readonly DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: 0x20;
 }
 
-declare var Node: {
+declare const Node: {
   prototype: Node;
   new (): Node;
   /** Node is an element. */
@@ -24317,7 +24490,7 @@ interface NodeIterator {
   previousNode(): Node | null;
 }
 
-declare var NodeIterator: {
+declare const NodeIterator: {
   prototype: NodeIterator;
   new (): NodeIterator;
 };
@@ -24353,12 +24526,12 @@ interface NodeList {
    */
   forEach(
     callbackfn: (value: Node, key: number, parent: NodeList) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: Node;
 }
 
-declare var NodeList: {
+declare const NodeList: {
   prototype: NodeList;
   new (): NodeList;
 };
@@ -24376,7 +24549,7 @@ interface NodeListOf<TNode extends Node> extends NodeList {
    */
   forEach(
     callbackfn: (value: TNode, key: number, parent: NodeListOf<TNode>) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: TNode;
 }
@@ -24436,7 +24609,7 @@ interface Notification extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Notification/data)
    */
-  readonly data: any;
+  readonly data: unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Notification/dir)
@@ -24456,22 +24629,22 @@ interface Notification extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Notification/click_event)
    */
-  onclick: ((this: Notification, ev: Event) => any) | null;
+  onclick: ((this: Notification, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Notification/close_event)
    */
-  onclose: ((this: Notification, ev: Event) => any) | null;
+  onclose: ((this: Notification, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Notification/error_event)
    */
-  onerror: ((this: Notification, ev: Event) => any) | null;
+  onerror: ((this: Notification, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Notification/show_event)
    */
-  onshow: ((this: Notification, ev: Event) => any) | null;
+  onshow: ((this: Notification, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Notification/requireInteraction)
@@ -24499,7 +24672,7 @@ interface Notification extends EventTarget {
   close(): void;
   addEventListener<K extends keyof NotificationEventMap>(
     type: K,
-    listener: (this: Notification, ev: NotificationEventMap[K]) => any,
+    listener: (this: Notification, ev: NotificationEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24509,7 +24682,7 @@ interface Notification extends EventTarget {
   ): void;
   removeEventListener<K extends keyof NotificationEventMap>(
     type: K,
-    listener: (this: Notification, ev: NotificationEventMap[K]) => any,
+    listener: (this: Notification, ev: NotificationEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24519,7 +24692,7 @@ interface Notification extends EventTarget {
   ): void;
 }
 
-declare var Notification: {
+declare const Notification: {
   prototype: Notification;
   new (title: string, options?: NotificationOptions): Notification;
   /**
@@ -24722,7 +24895,7 @@ interface OfflineAudioCompletionEvent extends Event {
   readonly renderedBuffer: AudioBuffer;
 }
 
-declare var OfflineAudioCompletionEvent: {
+declare const OfflineAudioCompletionEvent: {
   prototype: OfflineAudioCompletionEvent;
   new (
     type: string,
@@ -24755,7 +24928,7 @@ interface OfflineAudioContext extends BaseAudioContext {
    * Reference](https://developer.mozilla.org/docs/Web/API/OfflineAudioContext/complete_event)
    */
   oncomplete:
-    | ((this: OfflineAudioContext, ev: OfflineAudioCompletionEvent) => any)
+    | ((this: OfflineAudioContext, ev: OfflineAudioCompletionEvent) => unknown)
     | null;
   /**
    * [MDN
@@ -24777,7 +24950,7 @@ interface OfflineAudioContext extends BaseAudioContext {
     listener: (
       this: OfflineAudioContext,
       ev: OfflineAudioContextEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24790,7 +24963,7 @@ interface OfflineAudioContext extends BaseAudioContext {
     listener: (
       this: OfflineAudioContext,
       ev: OfflineAudioContextEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24800,7 +24973,7 @@ interface OfflineAudioContext extends BaseAudioContext {
   ): void;
 }
 
-declare var OfflineAudioContext: {
+declare const OfflineAudioContext: {
   prototype: OfflineAudioContext;
   new (contextOptions: OfflineAudioContextOptions): OfflineAudioContext;
   new (
@@ -24832,12 +25005,12 @@ interface OffscreenCanvas extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/contextlost_event)
    */
-  oncontextlost: ((this: OffscreenCanvas, ev: Event) => any) | null;
+  oncontextlost: ((this: OffscreenCanvas, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/contextrestored_event)
    */
-  oncontextrestored: ((this: OffscreenCanvas, ev: Event) => any) | null;
+  oncontextrestored: ((this: OffscreenCanvas, ev: Event) => unknown) | null;
   /**
    * These attributes return the dimensions of the OffscreenCanvas object's
    * bitmap.
@@ -24883,17 +25056,23 @@ interface OffscreenCanvas extends EventTarget {
    */
   getContext(
     contextId: '2d',
-    options?: any,
+    options?: unknown,
   ): OffscreenCanvasRenderingContext2D | null;
   getContext(
     contextId: 'bitmaprenderer',
-    options?: any,
+    options?: unknown,
   ): ImageBitmapRenderingContext | null;
-  getContext(contextId: 'webgl', options?: any): WebGLRenderingContext | null;
-  getContext(contextId: 'webgl2', options?: any): WebGL2RenderingContext | null;
+  getContext(
+    contextId: 'webgl',
+    options?: unknown,
+  ): WebGLRenderingContext | null;
+  getContext(
+    contextId: 'webgl2',
+    options?: unknown,
+  ): WebGL2RenderingContext | null;
   getContext(
     contextId: OffscreenRenderingContextId,
-    options?: any,
+    options?: unknown,
   ): OffscreenRenderingContext | null;
   /**
    * Returns a newly created ImageBitmap object with the image in the
@@ -24906,7 +25085,10 @@ interface OffscreenCanvas extends EventTarget {
   transferToImageBitmap(): ImageBitmap;
   addEventListener<K extends keyof OffscreenCanvasEventMap>(
     type: K,
-    listener: (this: OffscreenCanvas, ev: OffscreenCanvasEventMap[K]) => any,
+    listener: (
+      this: OffscreenCanvas,
+      ev: OffscreenCanvasEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24916,7 +25098,10 @@ interface OffscreenCanvas extends EventTarget {
   ): void;
   removeEventListener<K extends keyof OffscreenCanvasEventMap>(
     type: K,
-    listener: (this: OffscreenCanvas, ev: OffscreenCanvasEventMap[K]) => any,
+    listener: (
+      this: OffscreenCanvas,
+      ev: OffscreenCanvasEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24926,7 +25111,7 @@ interface OffscreenCanvas extends EventTarget {
   ): void;
 }
 
-declare var OffscreenCanvas: {
+declare const OffscreenCanvas: {
   prototype: OffscreenCanvas;
   new (width: number, height: number): OffscreenCanvas;
 };
@@ -24954,7 +25139,7 @@ interface OffscreenCanvasRenderingContext2D
   readonly canvas: OffscreenCanvas;
 }
 
-declare var OffscreenCanvasRenderingContext2D: {
+declare const OffscreenCanvasRenderingContext2D: {
   prototype: OffscreenCanvasRenderingContext2D;
   new (): OffscreenCanvasRenderingContext2D;
 };
@@ -24993,7 +25178,7 @@ interface OscillatorNode extends AudioScheduledSourceNode {
     listener: (
       this: OscillatorNode,
       ev: AudioScheduledSourceNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25006,7 +25191,7 @@ interface OscillatorNode extends AudioScheduledSourceNode {
     listener: (
       this: OscillatorNode,
       ev: AudioScheduledSourceNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25016,7 +25201,7 @@ interface OscillatorNode extends AudioScheduledSourceNode {
   ): void;
 }
 
-declare var OscillatorNode: {
+declare const OscillatorNode: {
   prototype: OscillatorNode;
   new (context: BaseAudioContext, options?: OscillatorOptions): OscillatorNode;
 };
@@ -25033,7 +25218,7 @@ interface OverconstrainedError extends DOMException {
   readonly constraint: string;
 }
 
-declare var OverconstrainedError: {
+declare const OverconstrainedError: {
   prototype: OverconstrainedError;
   new (constraint: string, message?: string): OverconstrainedError;
 };
@@ -25066,7 +25251,7 @@ interface PageTransitionEvent extends Event {
   readonly persisted: boolean;
 }
 
-declare var PageTransitionEvent: {
+declare const PageTransitionEvent: {
   prototype: PageTransitionEvent;
   new (
     type: string,
@@ -25168,7 +25353,7 @@ interface PannerNode extends AudioNode {
   setPosition(x: number, y: number, z: number): void;
 }
 
-declare var PannerNode: {
+declare const PannerNode: {
   prototype: PannerNode;
   new (context: BaseAudioContext, options?: PannerOptions): PannerNode;
 };
@@ -25295,7 +25480,7 @@ interface Path2D extends CanvasPath {
   addPath(path: Path2D, transform?: DOMMatrix2DInit): void;
 }
 
-declare var Path2D: {
+declare const Path2D: {
   prototype: Path2D;
   new (path?: Path2D | string): Path2D;
 };
@@ -25311,7 +25496,7 @@ interface PaymentMethodChangeEvent extends PaymentRequestUpdateEvent {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PaymentMethodChangeEvent/methodDetails)
    */
-  readonly methodDetails: any;
+  readonly methodDetails: unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PaymentMethodChangeEvent/methodName)
@@ -25319,7 +25504,7 @@ interface PaymentMethodChangeEvent extends PaymentRequestUpdateEvent {
   readonly methodName: string;
 }
 
-declare var PaymentMethodChangeEvent: {
+declare const PaymentMethodChangeEvent: {
   prototype: PaymentMethodChangeEvent;
   new (
     type: string,
@@ -25348,7 +25533,7 @@ interface PaymentRequest extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/paymentmethodchange_event)
    */
-  onpaymentmethodchange: ((this: PaymentRequest, ev: Event) => any) | null;
+  onpaymentmethodchange: ((this: PaymentRequest, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/abort)
@@ -25368,7 +25553,7 @@ interface PaymentRequest extends EventTarget {
   ): Promise<PaymentResponse>;
   addEventListener<K extends keyof PaymentRequestEventMap>(
     type: K,
-    listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => any,
+    listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25378,7 +25563,7 @@ interface PaymentRequest extends EventTarget {
   ): void;
   removeEventListener<K extends keyof PaymentRequestEventMap>(
     type: K,
-    listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => any,
+    listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25388,10 +25573,10 @@ interface PaymentRequest extends EventTarget {
   ): void;
 }
 
-declare var PaymentRequest: {
+declare const PaymentRequest: {
   prototype: PaymentRequest;
   new (
-    methodData: PaymentMethodData[],
+    methodData: readonly PaymentMethodData[],
     details: PaymentDetailsInit,
   ): PaymentRequest;
 };
@@ -25414,7 +25599,7 @@ interface PaymentRequestUpdateEvent extends Event {
   ): void;
 }
 
-declare var PaymentRequestUpdateEvent: {
+declare const PaymentRequestUpdateEvent: {
   prototype: PaymentRequestUpdateEvent;
   new (
     type: string,
@@ -25433,7 +25618,7 @@ interface PaymentResponse extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/details)
    */
-  readonly details: any;
+  readonly details: unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/methodName)
@@ -25458,10 +25643,10 @@ interface PaymentResponse extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var PaymentResponse: {
+declare const PaymentResponse: {
   prototype: PaymentResponse;
   new (): PaymentResponse;
 };
@@ -25495,7 +25680,9 @@ interface Performance extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Performance/resourcetimingbufferfull_event)
    */
-  onresourcetimingbufferfull: ((this: Performance, ev: Event) => any) | null;
+  onresourcetimingbufferfull:
+    | ((this: Performance, ev: Event) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Performance/timeOrigin)
@@ -25563,10 +25750,10 @@ interface Performance extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Performance/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
   addEventListener<K extends keyof PerformanceEventMap>(
     type: K,
-    listener: (this: Performance, ev: PerformanceEventMap[K]) => any,
+    listener: (this: Performance, ev: PerformanceEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25576,7 +25763,7 @@ interface Performance extends EventTarget {
   ): void;
   removeEventListener<K extends keyof PerformanceEventMap>(
     type: K,
-    listener: (this: Performance, ev: PerformanceEventMap[K]) => any,
+    listener: (this: Performance, ev: PerformanceEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25586,7 +25773,7 @@ interface Performance extends EventTarget {
   ): void;
 }
 
-declare var Performance: {
+declare const Performance: {
   prototype: Performance;
   new (): Performance;
 };
@@ -25625,10 +25812,10 @@ interface PerformanceEntry {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var PerformanceEntry: {
+declare const PerformanceEntry: {
   prototype: PerformanceEntry;
   new (): PerformanceEntry;
 };
@@ -25662,10 +25849,10 @@ interface PerformanceEventTiming extends PerformanceEntry {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEventTiming/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var PerformanceEventTiming: {
+declare const PerformanceEventTiming: {
   prototype: PerformanceEventTiming;
   new (): PerformanceEventTiming;
 };
@@ -25683,10 +25870,10 @@ interface PerformanceMark extends PerformanceEntry {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMark/detail)
    */
-  readonly detail: any;
+  readonly detail: unknown;
 }
 
-declare var PerformanceMark: {
+declare const PerformanceMark: {
   prototype: PerformanceMark;
   new (markName: string, markOptions?: PerformanceMarkOptions): PerformanceMark;
 };
@@ -25705,10 +25892,10 @@ interface PerformanceMeasure extends PerformanceEntry {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMeasure/detail)
    */
-  readonly detail: any;
+  readonly detail: unknown;
 }
 
-declare var PerformanceMeasure: {
+declare const PerformanceMeasure: {
   prototype: PerformanceMeasure;
   new (): PerformanceMeasure;
 };
@@ -25745,7 +25932,7 @@ interface PerformanceNavigation {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigation/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
   readonly TYPE_NAVIGATE: 0;
   readonly TYPE_RELOAD: 1;
   readonly TYPE_BACK_FORWARD: 2;
@@ -25753,7 +25940,7 @@ interface PerformanceNavigation {
 }
 
 /** @deprecated */
-declare var PerformanceNavigation: {
+declare const PerformanceNavigation: {
   prototype: PerformanceNavigation;
   new (): PerformanceNavigation;
   readonly TYPE_NAVIGATE: 0;
@@ -25825,10 +26012,10 @@ interface PerformanceNavigationTiming extends PerformanceResourceTiming {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var PerformanceNavigationTiming: {
+declare const PerformanceNavigationTiming: {
   prototype: PerformanceNavigationTiming;
   new (): PerformanceNavigationTiming;
 };
@@ -25855,7 +26042,7 @@ interface PerformanceObserver {
   takeRecords(): PerformanceEntryList;
 }
 
-declare var PerformanceObserver: {
+declare const PerformanceObserver: {
   prototype: PerformanceObserver;
   new (callback: PerformanceObserverCallback): PerformanceObserver;
   /**
@@ -25887,7 +26074,7 @@ interface PerformanceObserverEntryList {
   getEntriesByType(type: string): PerformanceEntryList;
 }
 
-declare var PerformanceObserverEntryList: {
+declare const PerformanceObserverEntryList: {
   prototype: PerformanceObserverEntryList;
   new (): PerformanceObserverEntryList;
 };
@@ -25898,7 +26085,7 @@ declare var PerformanceObserverEntryList: {
  */
 interface PerformancePaintTiming extends PerformanceEntry {}
 
-declare var PerformancePaintTiming: {
+declare const PerformancePaintTiming: {
   prototype: PerformancePaintTiming;
   new (): PerformancePaintTiming;
 };
@@ -26007,10 +26194,10 @@ interface PerformanceResourceTiming extends PerformanceEntry {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var PerformanceResourceTiming: {
+declare const PerformanceResourceTiming: {
   prototype: PerformanceResourceTiming;
   new (): PerformanceResourceTiming;
 };
@@ -26039,10 +26226,10 @@ interface PerformanceServerTiming {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var PerformanceServerTiming: {
+declare const PerformanceServerTiming: {
   prototype: PerformanceServerTiming;
   new (): PerformanceServerTiming;
 };
@@ -26213,11 +26400,11 @@ interface PerformanceTiming {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
 /** @deprecated */
-declare var PerformanceTiming: {
+declare const PerformanceTiming: {
   prototype: PerformanceTiming;
   new (): PerformanceTiming;
 };
@@ -26231,7 +26418,7 @@ declare var PerformanceTiming: {
  */
 interface PeriodicWave {}
 
-declare var PeriodicWave: {
+declare const PeriodicWave: {
   prototype: PeriodicWave;
   new (context: BaseAudioContext, options?: PeriodicWaveOptions): PeriodicWave;
 };
@@ -26251,7 +26438,7 @@ interface PermissionStatus extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/change_event)
    */
-  onchange: ((this: PermissionStatus, ev: Event) => any) | null;
+  onchange: ((this: PermissionStatus, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/state)
@@ -26259,7 +26446,10 @@ interface PermissionStatus extends EventTarget {
   readonly state: PermissionState;
   addEventListener<K extends keyof PermissionStatusEventMap>(
     type: K,
-    listener: (this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any,
+    listener: (
+      this: PermissionStatus,
+      ev: PermissionStatusEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -26269,7 +26459,10 @@ interface PermissionStatus extends EventTarget {
   ): void;
   removeEventListener<K extends keyof PermissionStatusEventMap>(
     type: K,
-    listener: (this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any,
+    listener: (
+      this: PermissionStatus,
+      ev: PermissionStatusEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -26279,7 +26472,7 @@ interface PermissionStatus extends EventTarget {
   ): void;
 }
 
-declare var PermissionStatus: {
+declare const PermissionStatus: {
   prototype: PermissionStatus;
   new (): PermissionStatus;
 };
@@ -26293,7 +26486,7 @@ interface Permissions {
   query(permissionDesc: PermissionDescriptor): Promise<PermissionStatus>;
 }
 
-declare var Permissions: {
+declare const Permissions: {
   prototype: Permissions;
   new (): Permissions;
 };
@@ -26310,7 +26503,7 @@ interface PictureInPictureEvent extends Event {
   readonly pictureInPictureWindow: PictureInPictureWindow;
 }
 
-declare var PictureInPictureEvent: {
+declare const PictureInPictureEvent: {
   prototype: PictureInPictureEvent;
   new (
     type: string,
@@ -26336,7 +26529,7 @@ interface PictureInPictureWindow extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PictureInPictureWindow/resize_event)
    */
-  onresize: ((this: PictureInPictureWindow, ev: Event) => any) | null;
+  onresize: ((this: PictureInPictureWindow, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PictureInPictureWindow/width)
@@ -26347,7 +26540,7 @@ interface PictureInPictureWindow extends EventTarget {
     listener: (
       this: PictureInPictureWindow,
       ev: PictureInPictureWindowEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -26360,7 +26553,7 @@ interface PictureInPictureWindow extends EventTarget {
     listener: (
       this: PictureInPictureWindow,
       ev: PictureInPictureWindowEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -26370,7 +26563,7 @@ interface PictureInPictureWindow extends EventTarget {
   ): void;
 }
 
-declare var PictureInPictureWindow: {
+declare const PictureInPictureWindow: {
   prototype: PictureInPictureWindow;
   new (): PictureInPictureWindow;
 };
@@ -26421,7 +26614,7 @@ interface Plugin {
 }
 
 /** @deprecated */
-declare var Plugin: {
+declare const Plugin: {
   prototype: Plugin;
   new (): Plugin;
 };
@@ -26450,7 +26643,7 @@ interface PluginArray {
 }
 
 /** @deprecated */
-declare var PluginArray: {
+declare const PluginArray: {
   prototype: PluginArray;
   new (): PluginArray;
 };
@@ -26527,7 +26720,7 @@ interface PointerEvent extends MouseEvent {
   getPredictedEvents(): PointerEvent[];
 }
 
-declare var PointerEvent: {
+declare const PointerEvent: {
   prototype: PointerEvent;
   new (type: string, eventInitDict?: PointerEventInit): PointerEvent;
 };
@@ -26546,10 +26739,10 @@ interface PopStateEvent extends Event {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PopStateEvent/state)
    */
-  readonly state: any;
+  readonly state: unknown;
 }
 
-declare var PopStateEvent: {
+declare const PopStateEvent: {
   prototype: PopStateEvent;
   new (type: string, eventInitDict?: PopStateEventInit): PopStateEvent;
 };
@@ -26583,7 +26776,7 @@ interface ProcessingInstruction extends CharacterData, LinkStyle {
   readonly target: string;
 }
 
-declare var ProcessingInstruction: {
+declare const ProcessingInstruction: {
   prototype: ProcessingInstruction;
   new (): ProcessingInstruction;
 };
@@ -26614,7 +26807,7 @@ interface ProgressEvent<T extends EventTarget = EventTarget> extends Event {
   readonly total: number;
 }
 
-declare var ProgressEvent: {
+declare const ProgressEvent: {
   prototype: ProgressEvent;
   new (type: string, eventInitDict?: ProgressEventInit): ProgressEvent;
 };
@@ -26628,15 +26821,15 @@ interface PromiseRejectionEvent extends Event {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent/promise)
    */
-  readonly promise: Promise<any>;
+  readonly promise: Promise<unknown>;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent/reason)
    */
-  readonly reason: any;
+  readonly reason: unknown;
 }
 
-declare var PromiseRejectionEvent: {
+declare const PromiseRejectionEvent: {
   prototype: PromiseRejectionEvent;
   new (
     type: string,
@@ -26673,7 +26866,7 @@ interface PublicKeyCredential extends Credential {
   getClientExtensionResults(): AuthenticationExtensionsClientOutputs;
 }
 
-declare var PublicKeyCredential: {
+declare const PublicKeyCredential: {
   prototype: PublicKeyCredential;
   new (): PublicKeyCredential;
   /**
@@ -26715,7 +26908,7 @@ interface PushManager {
   subscribe(options?: PushSubscriptionOptionsInit): Promise<PushSubscription>;
 }
 
-declare var PushManager: {
+declare const PushManager: {
   prototype: PushManager;
   new (): PushManager;
   /**
@@ -26764,7 +26957,7 @@ interface PushSubscription {
   unsubscribe(): Promise<boolean>;
 }
 
-declare var PushSubscription: {
+declare const PushSubscription: {
   prototype: PushSubscription;
   new (): PushSubscription;
 };
@@ -26788,7 +26981,7 @@ interface PushSubscriptionOptions {
   readonly userVisibleOnly: boolean;
 }
 
-declare var PushSubscriptionOptions: {
+declare const PushSubscriptionOptions: {
   prototype: PushSubscriptionOptions;
   new (): PushSubscriptionOptions;
 };
@@ -26807,7 +27000,7 @@ interface RTCCertificate {
   getFingerprints(): RTCDtlsFingerprint[];
 }
 
-declare var RTCCertificate: {
+declare const RTCCertificate: {
   prototype: RTCCertificate;
   new (): RTCCertificate;
 };
@@ -26828,7 +27021,7 @@ interface RTCDTMFSender extends EventTarget {
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCDTMFSender/tonechange_event)
    */
   ontonechange:
-    | ((this: RTCDTMFSender, ev: RTCDTMFToneChangeEvent) => any)
+    | ((this: RTCDTMFSender, ev: RTCDTMFToneChangeEvent) => unknown)
     | null;
   /**
    * [MDN
@@ -26842,7 +27035,7 @@ interface RTCDTMFSender extends EventTarget {
   insertDTMF(tones: string, duration?: number, interToneGap?: number): void;
   addEventListener<K extends keyof RTCDTMFSenderEventMap>(
     type: K,
-    listener: (this: RTCDTMFSender, ev: RTCDTMFSenderEventMap[K]) => any,
+    listener: (this: RTCDTMFSender, ev: RTCDTMFSenderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -26852,7 +27045,7 @@ interface RTCDTMFSender extends EventTarget {
   ): void;
   removeEventListener<K extends keyof RTCDTMFSenderEventMap>(
     type: K,
-    listener: (this: RTCDTMFSender, ev: RTCDTMFSenderEventMap[K]) => any,
+    listener: (this: RTCDTMFSender, ev: RTCDTMFSenderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -26862,7 +27055,7 @@ interface RTCDTMFSender extends EventTarget {
   ): void;
 }
 
-declare var RTCDTMFSender: {
+declare const RTCDTMFSender: {
   prototype: RTCDTMFSender;
   new (): RTCDTMFSender;
 };
@@ -26882,7 +27075,7 @@ interface RTCDTMFToneChangeEvent extends Event {
   readonly tone: string;
 }
 
-declare var RTCDTMFToneChangeEvent: {
+declare const RTCDTMFToneChangeEvent: {
   prototype: RTCDTMFToneChangeEvent;
   new (
     type: string,
@@ -26945,32 +27138,32 @@ interface RTCDataChannel extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/bufferedamountlow_event)
    */
-  onbufferedamountlow: ((this: RTCDataChannel, ev: Event) => any) | null;
+  onbufferedamountlow: ((this: RTCDataChannel, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/close_event)
    */
-  onclose: ((this: RTCDataChannel, ev: Event) => any) | null;
+  onclose: ((this: RTCDataChannel, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/closing_event)
    */
-  onclosing: ((this: RTCDataChannel, ev: Event) => any) | null;
+  onclosing: ((this: RTCDataChannel, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/error_event)
    */
-  onerror: ((this: RTCDataChannel, ev: Event) => any) | null;
+  onerror: ((this: RTCDataChannel, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/message_event)
    */
-  onmessage: ((this: RTCDataChannel, ev: MessageEvent) => any) | null;
+  onmessage: ((this: RTCDataChannel, ev: MessageEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/open_event)
    */
-  onopen: ((this: RTCDataChannel, ev: Event) => any) | null;
+  onopen: ((this: RTCDataChannel, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/ordered)
@@ -27001,7 +27194,7 @@ interface RTCDataChannel extends EventTarget {
   send(data: ArrayBufferView): void;
   addEventListener<K extends keyof RTCDataChannelEventMap>(
     type: K,
-    listener: (this: RTCDataChannel, ev: RTCDataChannelEventMap[K]) => any,
+    listener: (this: RTCDataChannel, ev: RTCDataChannelEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -27011,7 +27204,7 @@ interface RTCDataChannel extends EventTarget {
   ): void;
   removeEventListener<K extends keyof RTCDataChannelEventMap>(
     type: K,
-    listener: (this: RTCDataChannel, ev: RTCDataChannelEventMap[K]) => any,
+    listener: (this: RTCDataChannel, ev: RTCDataChannelEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -27021,7 +27214,7 @@ interface RTCDataChannel extends EventTarget {
   ): void;
 }
 
-declare var RTCDataChannel: {
+declare const RTCDataChannel: {
   prototype: RTCDataChannel;
   new (): RTCDataChannel;
 };
@@ -27038,7 +27231,7 @@ interface RTCDataChannelEvent extends Event {
   readonly channel: RTCDataChannel;
 }
 
-declare var RTCDataChannelEvent: {
+declare const RTCDataChannelEvent: {
   prototype: RTCDataChannelEvent;
   new (
     type: string,
@@ -27062,8 +27255,8 @@ interface RTCDtlsTransport extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCDtlsTransport/error_event)
    */
-  onerror: ((this: RTCDtlsTransport, ev: Event) => any) | null;
-  onstatechange: ((this: RTCDtlsTransport, ev: Event) => any) | null;
+  onerror: ((this: RTCDtlsTransport, ev: Event) => unknown) | null;
+  onstatechange: ((this: RTCDtlsTransport, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCDtlsTransport/state)
@@ -27072,7 +27265,10 @@ interface RTCDtlsTransport extends EventTarget {
   getRemoteCertificates(): ArrayBuffer[];
   addEventListener<K extends keyof RTCDtlsTransportEventMap>(
     type: K,
-    listener: (this: RTCDtlsTransport, ev: RTCDtlsTransportEventMap[K]) => any,
+    listener: (
+      this: RTCDtlsTransport,
+      ev: RTCDtlsTransportEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -27082,7 +27278,10 @@ interface RTCDtlsTransport extends EventTarget {
   ): void;
   removeEventListener<K extends keyof RTCDtlsTransportEventMap>(
     type: K,
-    listener: (this: RTCDtlsTransport, ev: RTCDtlsTransportEventMap[K]) => any,
+    listener: (
+      this: RTCDtlsTransport,
+      ev: RTCDtlsTransportEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -27092,7 +27291,7 @@ interface RTCDtlsTransport extends EventTarget {
   ): void;
 }
 
-declare var RTCDtlsTransport: {
+declare const RTCDtlsTransport: {
   prototype: RTCDtlsTransport;
   new (): RTCDtlsTransport;
 };
@@ -27119,7 +27318,7 @@ interface RTCEncodedAudioFrame {
   getMetadata(): RTCEncodedAudioFrameMetadata;
 }
 
-declare var RTCEncodedAudioFrame: {
+declare const RTCEncodedAudioFrame: {
   prototype: RTCEncodedAudioFrame;
   new (): RTCEncodedAudioFrame;
 };
@@ -27151,7 +27350,7 @@ interface RTCEncodedVideoFrame {
   getMetadata(): RTCEncodedVideoFrameMetadata;
 }
 
-declare var RTCEncodedVideoFrame: {
+declare const RTCEncodedVideoFrame: {
   prototype: RTCEncodedVideoFrame;
   new (): RTCEncodedVideoFrame;
 };
@@ -27185,7 +27384,7 @@ interface RTCError extends DOMException {
   readonly sentAlert: number | null;
 }
 
-declare var RTCError: {
+declare const RTCError: {
   prototype: RTCError;
   new (init: RTCErrorInit, message?: string): RTCError;
 };
@@ -27199,7 +27398,7 @@ interface RTCErrorEvent extends Event {
   readonly error: RTCError;
 }
 
-declare var RTCErrorEvent: {
+declare const RTCErrorEvent: {
   prototype: RTCErrorEvent;
   new (type: string, eventInitDict: RTCErrorEventInit): RTCErrorEvent;
 };
@@ -27289,7 +27488,7 @@ interface RTCIceCandidate {
   toJSON(): RTCIceCandidateInit;
 }
 
-declare var RTCIceCandidate: {
+declare const RTCIceCandidate: {
   prototype: RTCIceCandidate;
   new (candidateInitDict?: RTCIceCandidateInit): RTCIceCandidate;
 };
@@ -27321,19 +27520,21 @@ interface RTCIceTransport extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/gatheringstatechange_event)
    */
-  ongatheringstatechange: ((this: RTCIceTransport, ev: Event) => any) | null;
+  ongatheringstatechange:
+    | ((this: RTCIceTransport, ev: Event) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/selectedcandidatepairchange_event)
    */
   onselectedcandidatepairchange:
-    | ((this: RTCIceTransport, ev: Event) => any)
+    | ((this: RTCIceTransport, ev: Event) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/statechange_event)
    */
-  onstatechange: ((this: RTCIceTransport, ev: Event) => any) | null;
+  onstatechange: ((this: RTCIceTransport, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/state)
@@ -27346,7 +27547,10 @@ interface RTCIceTransport extends EventTarget {
   getSelectedCandidatePair(): RTCIceCandidatePair | null;
   addEventListener<K extends keyof RTCIceTransportEventMap>(
     type: K,
-    listener: (this: RTCIceTransport, ev: RTCIceTransportEventMap[K]) => any,
+    listener: (
+      this: RTCIceTransport,
+      ev: RTCIceTransportEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -27356,7 +27560,10 @@ interface RTCIceTransport extends EventTarget {
   ): void;
   removeEventListener<K extends keyof RTCIceTransportEventMap>(
     type: K,
-    listener: (this: RTCIceTransport, ev: RTCIceTransportEventMap[K]) => any,
+    listener: (
+      this: RTCIceTransport,
+      ev: RTCIceTransportEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -27366,7 +27573,7 @@ interface RTCIceTransport extends EventTarget {
   ): void;
 }
 
-declare var RTCIceTransport: {
+declare const RTCIceTransport: {
   prototype: RTCIceTransport;
   new (): RTCIceTransport;
 };
@@ -27430,57 +27637,61 @@ interface RTCPeerConnection extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/connectionstatechange_event)
    */
-  onconnectionstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;
+  onconnectionstatechange:
+    | ((this: RTCPeerConnection, ev: Event) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/datachannel_event)
    */
   ondatachannel:
-    | ((this: RTCPeerConnection, ev: RTCDataChannelEvent) => any)
+    | ((this: RTCPeerConnection, ev: RTCDataChannelEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/icecandidate_event)
    */
   onicecandidate:
-    | ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => any)
+    | ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/icecandidateerror_event)
    */
   onicecandidateerror:
-    | ((this: RTCPeerConnection, ev: RTCPeerConnectionIceErrorEvent) => any)
+    | ((this: RTCPeerConnection, ev: RTCPeerConnectionIceErrorEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/iceconnectionstatechange_event)
    */
   oniceconnectionstatechange:
-    | ((this: RTCPeerConnection, ev: Event) => any)
+    | ((this: RTCPeerConnection, ev: Event) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event)
    */
   onicegatheringstatechange:
-    | ((this: RTCPeerConnection, ev: Event) => any)
+    | ((this: RTCPeerConnection, ev: Event) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/negotiationneeded_event)
    */
-  onnegotiationneeded: ((this: RTCPeerConnection, ev: Event) => any) | null;
+  onnegotiationneeded: ((this: RTCPeerConnection, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/signalingstatechange_event)
    */
-  onsignalingstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;
+  onsignalingstatechange:
+    | ((this: RTCPeerConnection, ev: Event) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/track_event)
    */
-  ontrack: ((this: RTCPeerConnection, ev: RTCTrackEvent) => any) | null;
+  ontrack: ((this: RTCPeerConnection, ev: RTCTrackEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/pendingLocalDescription)
@@ -27521,7 +27732,10 @@ interface RTCPeerConnection extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/addTrack)
    */
-  addTrack(track: MediaStreamTrack, ...streams: MediaStream[]): RTCRtpSender;
+  addTrack(
+    track: MediaStreamTrack,
+    ...streams: readonly MediaStream[]
+  ): RTCRtpSender;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/addTransceiver)
@@ -27633,7 +27847,7 @@ interface RTCPeerConnection extends EventTarget {
     listener: (
       this: RTCPeerConnection,
       ev: RTCPeerConnectionEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -27646,7 +27860,7 @@ interface RTCPeerConnection extends EventTarget {
     listener: (
       this: RTCPeerConnection,
       ev: RTCPeerConnectionEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -27656,7 +27870,7 @@ interface RTCPeerConnection extends EventTarget {
   ): void;
 }
 
-declare var RTCPeerConnection: {
+declare const RTCPeerConnection: {
   prototype: RTCPeerConnection;
   new (configuration?: RTCConfiguration): RTCPeerConnection;
   /**
@@ -27684,7 +27898,7 @@ interface RTCPeerConnectionIceErrorEvent extends Event {
   readonly url: string;
 }
 
-declare var RTCPeerConnectionIceErrorEvent: {
+declare const RTCPeerConnectionIceErrorEvent: {
   prototype: RTCPeerConnectionIceErrorEvent;
   new (
     type: string,
@@ -27707,7 +27921,7 @@ interface RTCPeerConnectionIceEvent extends Event {
   readonly candidate: RTCIceCandidate | null;
 }
 
-declare var RTCPeerConnectionIceEvent: {
+declare const RTCPeerConnectionIceEvent: {
   prototype: RTCPeerConnectionIceEvent;
   new (
     type: string,
@@ -27764,7 +27978,7 @@ interface RTCRtpReceiver {
   getSynchronizationSources(): RTCRtpSynchronizationSource[];
 }
 
-declare var RTCRtpReceiver: {
+declare const RTCRtpReceiver: {
   prototype: RTCRtpReceiver;
   new (): RTCRtpReceiver;
   /**
@@ -27780,9 +27994,13 @@ declare var RTCRtpReceiver: {
  */
 interface RTCRtpScriptTransform {}
 
-declare var RTCRtpScriptTransform: {
+declare const RTCRtpScriptTransform: {
   prototype: RTCRtpScriptTransform;
-  new (worker: Worker, options?: any, transfer?: any[]): RTCRtpScriptTransform;
+  new (
+    worker: Worker,
+    options?: unknown,
+    transfer?: readonly unknown[],
+  ): RTCRtpScriptTransform;
 };
 
 /**
@@ -27839,10 +28057,10 @@ interface RTCRtpSender {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/setStreams)
    */
-  setStreams(...streams: MediaStream[]): void;
+  setStreams(...streams: readonly MediaStream[]): void;
 }
 
-declare var RTCRtpSender: {
+declare const RTCRtpSender: {
   prototype: RTCRtpSender;
   new (): RTCRtpSender;
   /**
@@ -27883,7 +28101,7 @@ interface RTCRtpTransceiver {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/setCodecPreferences)
    */
-  setCodecPreferences(codecs: RTCRtpCodec[]): void;
+  setCodecPreferences(codecs: readonly RTCRtpCodec[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/stop)
@@ -27891,7 +28109,7 @@ interface RTCRtpTransceiver {
   stop(): void;
 }
 
-declare var RTCRtpTransceiver: {
+declare const RTCRtpTransceiver: {
   prototype: RTCRtpTransceiver;
   new (): RTCRtpTransceiver;
 };
@@ -27916,7 +28134,7 @@ interface RTCSctpTransport extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCSctpTransport/statechange_event)
    */
-  onstatechange: ((this: RTCSctpTransport, ev: Event) => any) | null;
+  onstatechange: ((this: RTCSctpTransport, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RTCSctpTransport/state)
@@ -27929,7 +28147,10 @@ interface RTCSctpTransport extends EventTarget {
   readonly transport: RTCDtlsTransport;
   addEventListener<K extends keyof RTCSctpTransportEventMap>(
     type: K,
-    listener: (this: RTCSctpTransport, ev: RTCSctpTransportEventMap[K]) => any,
+    listener: (
+      this: RTCSctpTransport,
+      ev: RTCSctpTransportEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -27939,7 +28160,10 @@ interface RTCSctpTransport extends EventTarget {
   ): void;
   removeEventListener<K extends keyof RTCSctpTransportEventMap>(
     type: K,
-    listener: (this: RTCSctpTransport, ev: RTCSctpTransportEventMap[K]) => any,
+    listener: (
+      this: RTCSctpTransport,
+      ev: RTCSctpTransportEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -27949,7 +28173,7 @@ interface RTCSctpTransport extends EventTarget {
   ): void;
 }
 
-declare var RTCSctpTransport: {
+declare const RTCSctpTransport: {
   prototype: RTCSctpTransport;
   new (): RTCSctpTransport;
 };
@@ -27981,7 +28205,7 @@ interface RTCSessionDescription {
   toJSON(): RTCSessionDescriptionInit;
 }
 
-declare var RTCSessionDescription: {
+declare const RTCSessionDescription: {
   prototype: RTCSessionDescription;
   new (descriptionInitDict: RTCSessionDescriptionInit): RTCSessionDescription;
 };
@@ -27989,12 +28213,12 @@ declare var RTCSessionDescription: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCStatsReport) */
 interface RTCStatsReport {
   forEach(
-    callbackfn: (value: any, key: string, parent: RTCStatsReport) => void,
-    thisArg?: any,
+    callbackfn: (value: unknown, key: string, parent: RTCStatsReport) => void,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var RTCStatsReport: {
+declare const RTCStatsReport: {
   prototype: RTCStatsReport;
   new (): RTCStatsReport;
 };
@@ -28023,7 +28247,7 @@ interface RTCTrackEvent extends Event {
   readonly transceiver: RTCRtpTransceiver;
 }
 
-declare var RTCTrackEvent: {
+declare const RTCTrackEvent: {
   prototype: RTCTrackEvent;
   new (type: string, eventInitDict: RTCTrackEventInit): RTCTrackEvent;
 };
@@ -28037,7 +28261,7 @@ interface RadioNodeList extends NodeList {
   value: string;
 }
 
-declare var RadioNodeList: {
+declare const RadioNodeList: {
   prototype: RadioNodeList;
   new (): RadioNodeList;
 };
@@ -28171,7 +28395,7 @@ interface Range extends AbstractRange {
   readonly END_TO_START: 3;
 }
 
-declare var Range: {
+declare const Range: {
   prototype: Range;
   new (): Range;
   readonly START_TO_START: 0;
@@ -28209,10 +28433,10 @@ interface ReadableByteStreamController {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/error)
    */
-  error(e?: any): void;
+  error(e?: unknown): void;
 }
 
-declare var ReadableByteStreamController: {
+declare const ReadableByteStreamController: {
   prototype: ReadableByteStreamController;
   new (): ReadableByteStreamController;
 };
@@ -28224,7 +28448,7 @@ declare var ReadableByteStreamController: {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)
  */
-interface ReadableStream<R = any> {
+interface ReadableStream<R = unknown> {
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked)
@@ -28234,7 +28458,7 @@ interface ReadableStream<R = any> {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/cancel)
    */
-  cancel(reason?: any): Promise<void>;
+  cancel(reason?: unknown): Promise<void>;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/getReader)
@@ -28265,17 +28489,17 @@ interface ReadableStream<R = any> {
   tee(): [ReadableStream<R>, ReadableStream<R>];
 }
 
-declare var ReadableStream: {
+declare const ReadableStream: {
   prototype: ReadableStream;
   new (
     underlyingSource: UnderlyingByteSource,
     strategy?: { highWaterMark?: number },
   ): ReadableStream<Uint8Array>;
-  new <R = any>(
+  new <R = unknown>(
     underlyingSource: UnderlyingDefaultSource<R>,
     strategy?: QueuingStrategy<R>,
   ): ReadableStream<R>;
-  new <R = any>(
+  new <R = unknown>(
     underlyingSource?: UnderlyingSource<R>,
     strategy?: QueuingStrategy<R>,
   ): ReadableStream<R>;
@@ -28300,7 +28524,7 @@ interface ReadableStreamBYOBReader extends ReadableStreamGenericReader {
   releaseLock(): void;
 }
 
-declare var ReadableStreamBYOBReader: {
+declare const ReadableStreamBYOBReader: {
   prototype: ReadableStreamBYOBReader;
   new (stream: ReadableStream): ReadableStreamBYOBReader;
 };
@@ -28327,7 +28551,7 @@ interface ReadableStreamBYOBRequest {
   respondWithNewView(view: ArrayBufferView): void;
 }
 
-declare var ReadableStreamBYOBRequest: {
+declare const ReadableStreamBYOBRequest: {
   prototype: ReadableStreamBYOBRequest;
   new (): ReadableStreamBYOBRequest;
 };
@@ -28336,7 +28560,7 @@ declare var ReadableStreamBYOBRequest: {
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController)
  */
-interface ReadableStreamDefaultController<R = any> {
+interface ReadableStreamDefaultController<R = unknown> {
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/desiredSize)
@@ -28356,10 +28580,10 @@ interface ReadableStreamDefaultController<R = any> {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/error)
    */
-  error(e?: any): void;
+  error(e?: unknown): void;
 }
 
-declare var ReadableStreamDefaultController: {
+declare const ReadableStreamDefaultController: {
   prototype: ReadableStreamDefaultController;
   new (): ReadableStreamDefaultController;
 };
@@ -28368,7 +28592,7 @@ declare var ReadableStreamDefaultController: {
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultReader)
  */
-interface ReadableStreamDefaultReader<R = any>
+interface ReadableStreamDefaultReader<R = unknown>
   extends ReadableStreamGenericReader {
   /**
    * [MDN
@@ -28382,9 +28606,9 @@ interface ReadableStreamDefaultReader<R = any>
   releaseLock(): void;
 }
 
-declare var ReadableStreamDefaultReader: {
+declare const ReadableStreamDefaultReader: {
   prototype: ReadableStreamDefaultReader;
-  new <R = any>(stream: ReadableStream<R>): ReadableStreamDefaultReader<R>;
+  new <R = unknown>(stream: ReadableStream<R>): ReadableStreamDefaultReader<R>;
 };
 
 interface ReadableStreamGenericReader {
@@ -28397,7 +28621,7 @@ interface ReadableStreamGenericReader {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/cancel)
    */
-  cancel(reason?: any): Promise<void>;
+  cancel(reason?: unknown): Promise<void>;
 }
 
 interface RemotePlaybackEventMap {
@@ -28412,17 +28636,17 @@ interface RemotePlayback extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/connect_event)
    */
-  onconnect: ((this: RemotePlayback, ev: Event) => any) | null;
+  onconnect: ((this: RemotePlayback, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/connecting_event)
    */
-  onconnecting: ((this: RemotePlayback, ev: Event) => any) | null;
+  onconnecting: ((this: RemotePlayback, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/disconnect_event)
    */
-  ondisconnect: ((this: RemotePlayback, ev: Event) => any) | null;
+  ondisconnect: ((this: RemotePlayback, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/state)
@@ -28447,7 +28671,7 @@ interface RemotePlayback extends EventTarget {
   ): Promise<number>;
   addEventListener<K extends keyof RemotePlaybackEventMap>(
     type: K,
-    listener: (this: RemotePlayback, ev: RemotePlaybackEventMap[K]) => any,
+    listener: (this: RemotePlayback, ev: RemotePlaybackEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -28457,7 +28681,7 @@ interface RemotePlayback extends EventTarget {
   ): void;
   removeEventListener<K extends keyof RemotePlaybackEventMap>(
     type: K,
-    listener: (this: RemotePlayback, ev: RemotePlaybackEventMap[K]) => any,
+    listener: (this: RemotePlayback, ev: RemotePlaybackEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -28467,7 +28691,7 @@ interface RemotePlayback extends EventTarget {
   ): void;
 }
 
-declare var RemotePlayback: {
+declare const RemotePlayback: {
   prototype: RemotePlayback;
   new (): RemotePlayback;
 };
@@ -28480,10 +28704,10 @@ interface Report {
   readonly type: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Report/url) */
   readonly url: string;
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var Report: {
+declare const Report: {
   prototype: Report;
   new (): Report;
 };
@@ -28494,10 +28718,10 @@ interface ReportBody {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ReportBody/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var ReportBody: {
+declare const ReportBody: {
   prototype: ReportBody;
   new (): ReportBody;
 };
@@ -28521,7 +28745,7 @@ interface ReportingObserver {
   takeRecords(): ReportList;
 }
 
-declare var ReportingObserver: {
+declare const ReportingObserver: {
   prototype: ReportingObserver;
   new (
     callback: ReportingObserverCallback,
@@ -28587,7 +28811,7 @@ interface Request extends Body {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/method)
    */
-  readonly method: string;
+  readonly method: HTTPRequestMethod;
   /**
    * Returns the mode associated with request, which is a string indicating
    * whether the request will use CORS, or will be restricted to same-origin
@@ -28642,7 +28866,7 @@ interface Request extends Body {
   clone(): Request;
 }
 
-declare var Request: {
+declare const Request: {
   prototype: Request;
   new (input: RequestInfo | URL, init?: RequestInit): Request;
 };
@@ -28666,7 +28890,7 @@ interface ResizeObserver {
   unobserve(target: Element): void;
 }
 
-declare var ResizeObserver: {
+declare const ResizeObserver: {
   prototype: ResizeObserver;
   new (callback: ResizeObserverCallback): ResizeObserver;
 };
@@ -28703,7 +28927,7 @@ interface ResizeObserverEntry {
   readonly target: Element;
 }
 
-declare var ResizeObserverEntry: {
+declare const ResizeObserverEntry: {
   prototype: ResizeObserverEntry;
   new (): ResizeObserverEntry;
 };
@@ -28725,7 +28949,7 @@ interface ResizeObserverSize {
   readonly inlineSize: number;
 }
 
-declare var ResizeObserverSize: {
+declare const ResizeObserverSize: {
   prototype: ResizeObserverSize;
   new (): ResizeObserverSize;
 };
@@ -28763,7 +28987,7 @@ interface Response extends Body {
   clone(): Response;
 }
 
-declare var Response: {
+declare const Response: {
   prototype: Response;
   new (body?: BodyInit | null, init?: ResponseInit): Response;
   /**
@@ -28775,7 +28999,7 @@ declare var Response: {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Response/json_static)
    */
-  json(data: any, init?: ResponseInit): Response;
+  json(data: unknown, init?: ResponseInit): Response;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Response/redirect_static)
@@ -28799,7 +29023,7 @@ interface SVGAElement extends SVGGraphicsElement, SVGURIReference {
   readonly target: SVGAnimatedString;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -28809,7 +29033,7 @@ interface SVGAElement extends SVGGraphicsElement, SVGURIReference {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -28819,7 +29043,7 @@ interface SVGAElement extends SVGGraphicsElement, SVGURIReference {
   ): void;
 }
 
-declare var SVGAElement: {
+declare const SVGAElement: {
   prototype: SVGAElement;
   new (): SVGAElement;
 };
@@ -28844,7 +29068,7 @@ interface SVGAngle {
   readonly SVG_ANGLETYPE_GRAD: 4;
 }
 
-declare var SVGAngle: {
+declare const SVGAngle: {
   prototype: SVGAngle;
   new (): SVGAngle;
   readonly SVG_ANGLETYPE_UNKNOWN: 0;
@@ -28858,7 +29082,7 @@ declare var SVGAngle: {
 interface SVGAnimateElement extends SVGAnimationElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGAnimateElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGAnimateElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -28868,7 +29092,7 @@ interface SVGAnimateElement extends SVGAnimationElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGAnimateElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGAnimateElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -28878,7 +29102,7 @@ interface SVGAnimateElement extends SVGAnimationElement {
   ): void;
 }
 
-declare var SVGAnimateElement: {
+declare const SVGAnimateElement: {
   prototype: SVGAnimateElement;
   new (): SVGAnimateElement;
 };
@@ -28890,7 +29114,10 @@ declare var SVGAnimateElement: {
 interface SVGAnimateMotionElement extends SVGAnimationElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGAnimateMotionElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGAnimateMotionElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -28900,7 +29127,10 @@ interface SVGAnimateMotionElement extends SVGAnimationElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGAnimateMotionElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGAnimateMotionElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -28910,7 +29140,7 @@ interface SVGAnimateMotionElement extends SVGAnimationElement {
   ): void;
 }
 
-declare var SVGAnimateMotionElement: {
+declare const SVGAnimateMotionElement: {
   prototype: SVGAnimateMotionElement;
   new (): SVGAnimateMotionElement;
 };
@@ -28925,7 +29155,7 @@ interface SVGAnimateTransformElement extends SVGAnimationElement {
     listener: (
       this: SVGAnimateTransformElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -28938,7 +29168,7 @@ interface SVGAnimateTransformElement extends SVGAnimationElement {
     listener: (
       this: SVGAnimateTransformElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -28948,7 +29178,7 @@ interface SVGAnimateTransformElement extends SVGAnimationElement {
   ): void;
 }
 
-declare var SVGAnimateTransformElement: {
+declare const SVGAnimateTransformElement: {
   prototype: SVGAnimateTransformElement;
   new (): SVGAnimateTransformElement;
 };
@@ -28963,7 +29193,7 @@ interface SVGAnimatedAngle {
   readonly baseVal: SVGAngle;
 }
 
-declare var SVGAnimatedAngle: {
+declare const SVGAnimatedAngle: {
   prototype: SVGAnimatedAngle;
   new (): SVGAnimatedAngle;
 };
@@ -28979,7 +29209,7 @@ interface SVGAnimatedBoolean {
   baseVal: boolean;
 }
 
-declare var SVGAnimatedBoolean: {
+declare const SVGAnimatedBoolean: {
   prototype: SVGAnimatedBoolean;
   new (): SVGAnimatedBoolean;
 };
@@ -29004,7 +29234,7 @@ interface SVGAnimatedEnumeration {
   baseVal: number;
 }
 
-declare var SVGAnimatedEnumeration: {
+declare const SVGAnimatedEnumeration: {
   prototype: SVGAnimatedEnumeration;
   new (): SVGAnimatedEnumeration;
 };
@@ -29020,7 +29250,7 @@ interface SVGAnimatedInteger {
   baseVal: number;
 }
 
-declare var SVGAnimatedInteger: {
+declare const SVGAnimatedInteger: {
   prototype: SVGAnimatedInteger;
   new (): SVGAnimatedInteger;
 };
@@ -29043,7 +29273,7 @@ interface SVGAnimatedLength {
   readonly baseVal: SVGLength;
 }
 
-declare var SVGAnimatedLength: {
+declare const SVGAnimatedLength: {
   prototype: SVGAnimatedLength;
   new (): SVGAnimatedLength;
 };
@@ -29059,7 +29289,7 @@ interface SVGAnimatedLengthList {
   readonly baseVal: SVGLengthList;
 }
 
-declare var SVGAnimatedLengthList: {
+declare const SVGAnimatedLengthList: {
   prototype: SVGAnimatedLengthList;
   new (): SVGAnimatedLengthList;
 };
@@ -29074,7 +29304,7 @@ interface SVGAnimatedNumber {
   baseVal: number;
 }
 
-declare var SVGAnimatedNumber: {
+declare const SVGAnimatedNumber: {
   prototype: SVGAnimatedNumber;
   new (): SVGAnimatedNumber;
 };
@@ -29091,7 +29321,7 @@ interface SVGAnimatedNumberList {
   readonly baseVal: SVGNumberList;
 }
 
-declare var SVGAnimatedNumberList: {
+declare const SVGAnimatedNumberList: {
   prototype: SVGAnimatedNumberList;
   new (): SVGAnimatedNumberList;
 };
@@ -29112,7 +29342,7 @@ interface SVGAnimatedPreserveAspectRatio {
   readonly baseVal: SVGPreserveAspectRatio;
 }
 
-declare var SVGAnimatedPreserveAspectRatio: {
+declare const SVGAnimatedPreserveAspectRatio: {
   prototype: SVGAnimatedPreserveAspectRatio;
   new (): SVGAnimatedPreserveAspectRatio;
 };
@@ -29127,7 +29357,7 @@ interface SVGAnimatedRect {
   readonly baseVal: DOMRect;
 }
 
-declare var SVGAnimatedRect: {
+declare const SVGAnimatedRect: {
   prototype: SVGAnimatedRect;
   new (): SVGAnimatedRect;
 };
@@ -29152,7 +29382,7 @@ interface SVGAnimatedString {
   baseVal: string;
 }
 
-declare var SVGAnimatedString: {
+declare const SVGAnimatedString: {
   prototype: SVGAnimatedString;
   new (): SVGAnimatedString;
 };
@@ -29168,7 +29398,7 @@ interface SVGAnimatedTransformList {
   readonly baseVal: SVGTransformList;
 }
 
-declare var SVGAnimatedTransformList: {
+declare const SVGAnimatedTransformList: {
   prototype: SVGAnimatedTransformList;
   new (): SVGAnimatedTransformList;
 };
@@ -29192,7 +29422,7 @@ interface SVGAnimationElement extends SVGElement, SVGTests {
   getStartTime(): number;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGAnimationElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGAnimationElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -29202,7 +29432,7 @@ interface SVGAnimationElement extends SVGElement, SVGTests {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGAnimationElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGAnimationElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -29212,7 +29442,7 @@ interface SVGAnimationElement extends SVGElement, SVGTests {
   ): void;
 }
 
-declare var SVGAnimationElement: {
+declare const SVGAnimationElement: {
   prototype: SVGAnimationElement;
   new (): SVGAnimationElement;
 };
@@ -29242,7 +29472,7 @@ interface SVGCircleElement extends SVGGeometryElement {
   readonly r: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -29252,7 +29482,7 @@ interface SVGCircleElement extends SVGGeometryElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -29262,7 +29492,7 @@ interface SVGCircleElement extends SVGGeometryElement {
   ): void;
 }
 
-declare var SVGCircleElement: {
+declare const SVGCircleElement: {
   prototype: SVGCircleElement;
   new (): SVGCircleElement;
 };
@@ -29287,7 +29517,7 @@ interface SVGClipPathElement extends SVGElement {
   readonly transform: SVGAnimatedTransformList;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -29297,7 +29527,7 @@ interface SVGClipPathElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -29307,7 +29537,7 @@ interface SVGClipPathElement extends SVGElement {
   ): void;
 }
 
-declare var SVGClipPathElement: {
+declare const SVGClipPathElement: {
   prototype: SVGClipPathElement;
   new (): SVGClipPathElement;
 };
@@ -29337,7 +29567,7 @@ interface SVGComponentTransferFunctionElement extends SVGElement {
     listener: (
       this: SVGComponentTransferFunctionElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -29350,7 +29580,7 @@ interface SVGComponentTransferFunctionElement extends SVGElement {
     listener: (
       this: SVGComponentTransferFunctionElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -29360,7 +29590,7 @@ interface SVGComponentTransferFunctionElement extends SVGElement {
   ): void;
 }
 
-declare var SVGComponentTransferFunctionElement: {
+declare const SVGComponentTransferFunctionElement: {
   prototype: SVGComponentTransferFunctionElement;
   new (): SVGComponentTransferFunctionElement;
   readonly SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: 0;
@@ -29379,7 +29609,7 @@ declare var SVGComponentTransferFunctionElement: {
 interface SVGDefsElement extends SVGGraphicsElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -29389,7 +29619,7 @@ interface SVGDefsElement extends SVGGraphicsElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -29399,7 +29629,7 @@ interface SVGDefsElement extends SVGGraphicsElement {
   ): void;
 }
 
-declare var SVGDefsElement: {
+declare const SVGDefsElement: {
   prototype: SVGDefsElement;
   new (): SVGDefsElement;
 };
@@ -29412,7 +29642,7 @@ declare var SVGDefsElement: {
 interface SVGDescElement extends SVGElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -29422,7 +29652,7 @@ interface SVGDescElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -29432,7 +29662,7 @@ interface SVGDescElement extends SVGElement {
   ): void;
 }
 
-declare var SVGDescElement: {
+declare const SVGDescElement: {
   prototype: SVGDescElement;
   new (): SVGDescElement;
 };
@@ -29453,12 +29683,12 @@ interface SVGElement
     GlobalEventHandlers,
     HTMLOrSVGElement {
   /** @deprecated */
-  readonly className: any;
+  // readonly className: unknown;
   readonly ownerSVGElement: SVGSVGElement | null;
   readonly viewportElement: SVGElement | null;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -29468,7 +29698,7 @@ interface SVGElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -29478,7 +29708,7 @@ interface SVGElement
   ): void;
 }
 
-declare var SVGElement: {
+declare const SVGElement: {
   prototype: SVGElement;
   new (): SVGElement;
 };
@@ -29495,7 +29725,7 @@ interface SVGEllipseElement extends SVGGeometryElement {
   readonly ry: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -29505,7 +29735,7 @@ interface SVGEllipseElement extends SVGGeometryElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -29515,7 +29745,7 @@ interface SVGEllipseElement extends SVGGeometryElement {
   ): void;
 }
 
-declare var SVGEllipseElement: {
+declare const SVGEllipseElement: {
   prototype: SVGEllipseElement;
   new (): SVGEllipseElement;
 };
@@ -29550,7 +29780,7 @@ interface SVGFEBlendElement
   readonly SVG_FEBLEND_MODE_LUMINOSITY: 16;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -29560,7 +29790,7 @@ interface SVGFEBlendElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -29570,7 +29800,7 @@ interface SVGFEBlendElement
   ): void;
 }
 
-declare var SVGFEBlendElement: {
+declare const SVGFEBlendElement: {
   prototype: SVGFEBlendElement;
   new (): SVGFEBlendElement;
   readonly SVG_FEBLEND_MODE_UNKNOWN: 0;
@@ -29611,7 +29841,10 @@ interface SVGFEColorMatrixElement
   readonly SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: 4;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEColorMatrixElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEColorMatrixElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -29621,7 +29854,10 @@ interface SVGFEColorMatrixElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEColorMatrixElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEColorMatrixElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -29631,7 +29867,7 @@ interface SVGFEColorMatrixElement
   ): void;
 }
 
-declare var SVGFEColorMatrixElement: {
+declare const SVGFEColorMatrixElement: {
   prototype: SVGFEColorMatrixElement;
   new (): SVGFEColorMatrixElement;
   readonly SVG_FECOLORMATRIX_TYPE_UNKNOWN: 0;
@@ -29656,7 +29892,7 @@ interface SVGFEComponentTransferElement
     listener: (
       this: SVGFEComponentTransferElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -29669,7 +29905,7 @@ interface SVGFEComponentTransferElement
     listener: (
       this: SVGFEComponentTransferElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -29679,7 +29915,7 @@ interface SVGFEComponentTransferElement
   ): void;
 }
 
-declare var SVGFEComponentTransferElement: {
+declare const SVGFEComponentTransferElement: {
   prototype: SVGFEComponentTransferElement;
   new (): SVGFEComponentTransferElement;
 };
@@ -29709,7 +29945,10 @@ interface SVGFECompositeElement
   readonly SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: 6;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFECompositeElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFECompositeElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -29719,7 +29958,10 @@ interface SVGFECompositeElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFECompositeElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFECompositeElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -29729,7 +29971,7 @@ interface SVGFECompositeElement
   ): void;
 }
 
-declare var SVGFECompositeElement: {
+declare const SVGFECompositeElement: {
   prototype: SVGFECompositeElement;
   new (): SVGFECompositeElement;
   readonly SVG_FECOMPOSITE_OPERATOR_UNKNOWN: 0;
@@ -29771,7 +30013,7 @@ interface SVGFEConvolveMatrixElement
     listener: (
       this: SVGFEConvolveMatrixElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -29784,7 +30026,7 @@ interface SVGFEConvolveMatrixElement
     listener: (
       this: SVGFEConvolveMatrixElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -29794,7 +30036,7 @@ interface SVGFEConvolveMatrixElement
   ): void;
 }
 
-declare var SVGFEConvolveMatrixElement: {
+declare const SVGFEConvolveMatrixElement: {
   prototype: SVGFEConvolveMatrixElement;
   new (): SVGFEConvolveMatrixElement;
   readonly SVG_EDGEMODE_UNKNOWN: 0;
@@ -29822,7 +30064,7 @@ interface SVGFEDiffuseLightingElement
     listener: (
       this: SVGFEDiffuseLightingElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -29835,7 +30077,7 @@ interface SVGFEDiffuseLightingElement
     listener: (
       this: SVGFEDiffuseLightingElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -29845,7 +30087,7 @@ interface SVGFEDiffuseLightingElement
   ): void;
 }
 
-declare var SVGFEDiffuseLightingElement: {
+declare const SVGFEDiffuseLightingElement: {
   prototype: SVGFEDiffuseLightingElement;
   new (): SVGFEDiffuseLightingElement;
 };
@@ -29874,7 +30116,7 @@ interface SVGFEDisplacementMapElement
     listener: (
       this: SVGFEDisplacementMapElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -29887,7 +30129,7 @@ interface SVGFEDisplacementMapElement
     listener: (
       this: SVGFEDisplacementMapElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -29897,7 +30139,7 @@ interface SVGFEDisplacementMapElement
   ): void;
 }
 
-declare var SVGFEDisplacementMapElement: {
+declare const SVGFEDisplacementMapElement: {
   prototype: SVGFEDisplacementMapElement;
   new (): SVGFEDisplacementMapElement;
   readonly SVG_CHANNEL_UNKNOWN: 0;
@@ -29921,7 +30163,7 @@ interface SVGFEDistantLightElement extends SVGElement {
     listener: (
       this: SVGFEDistantLightElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -29934,7 +30176,7 @@ interface SVGFEDistantLightElement extends SVGElement {
     listener: (
       this: SVGFEDistantLightElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -29944,7 +30186,7 @@ interface SVGFEDistantLightElement extends SVGElement {
   ): void;
 }
 
-declare var SVGFEDistantLightElement: {
+declare const SVGFEDistantLightElement: {
   prototype: SVGFEDistantLightElement;
   new (): SVGFEDistantLightElement;
 };
@@ -29964,7 +30206,10 @@ interface SVGFEDropShadowElement
   setStdDeviation(stdDeviationX: number, stdDeviationY: number): void;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEDropShadowElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEDropShadowElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -29974,7 +30219,10 @@ interface SVGFEDropShadowElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEDropShadowElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEDropShadowElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -29984,7 +30232,7 @@ interface SVGFEDropShadowElement
   ): void;
 }
 
-declare var SVGFEDropShadowElement: {
+declare const SVGFEDropShadowElement: {
   prototype: SVGFEDropShadowElement;
   new (): SVGFEDropShadowElement;
 };
@@ -29999,7 +30247,7 @@ interface SVGFEFloodElement
     SVGFilterPrimitiveStandardAttributes {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30009,7 +30257,7 @@ interface SVGFEFloodElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30019,7 +30267,7 @@ interface SVGFEFloodElement
   ): void;
 }
 
-declare var SVGFEFloodElement: {
+declare const SVGFEFloodElement: {
   prototype: SVGFEFloodElement;
   new (): SVGFEFloodElement;
 };
@@ -30032,7 +30280,7 @@ declare var SVGFEFloodElement: {
 interface SVGFEFuncAElement extends SVGComponentTransferFunctionElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30042,7 +30290,7 @@ interface SVGFEFuncAElement extends SVGComponentTransferFunctionElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30052,7 +30300,7 @@ interface SVGFEFuncAElement extends SVGComponentTransferFunctionElement {
   ): void;
 }
 
-declare var SVGFEFuncAElement: {
+declare const SVGFEFuncAElement: {
   prototype: SVGFEFuncAElement;
   new (): SVGFEFuncAElement;
 };
@@ -30065,7 +30313,7 @@ declare var SVGFEFuncAElement: {
 interface SVGFEFuncBElement extends SVGComponentTransferFunctionElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30075,7 +30323,7 @@ interface SVGFEFuncBElement extends SVGComponentTransferFunctionElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30085,7 +30333,7 @@ interface SVGFEFuncBElement extends SVGComponentTransferFunctionElement {
   ): void;
 }
 
-declare var SVGFEFuncBElement: {
+declare const SVGFEFuncBElement: {
   prototype: SVGFEFuncBElement;
   new (): SVGFEFuncBElement;
 };
@@ -30098,7 +30346,7 @@ declare var SVGFEFuncBElement: {
 interface SVGFEFuncGElement extends SVGComponentTransferFunctionElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30108,7 +30356,7 @@ interface SVGFEFuncGElement extends SVGComponentTransferFunctionElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30118,7 +30366,7 @@ interface SVGFEFuncGElement extends SVGComponentTransferFunctionElement {
   ): void;
 }
 
-declare var SVGFEFuncGElement: {
+declare const SVGFEFuncGElement: {
   prototype: SVGFEFuncGElement;
   new (): SVGFEFuncGElement;
 };
@@ -30131,7 +30379,7 @@ declare var SVGFEFuncGElement: {
 interface SVGFEFuncRElement extends SVGComponentTransferFunctionElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30141,7 +30389,7 @@ interface SVGFEFuncRElement extends SVGComponentTransferFunctionElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30151,7 +30399,7 @@ interface SVGFEFuncRElement extends SVGComponentTransferFunctionElement {
   ): void;
 }
 
-declare var SVGFEFuncRElement: {
+declare const SVGFEFuncRElement: {
   prototype: SVGFEFuncRElement;
   new (): SVGFEFuncRElement;
 };
@@ -30174,7 +30422,7 @@ interface SVGFEGaussianBlurElement
     listener: (
       this: SVGFEGaussianBlurElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30187,7 +30435,7 @@ interface SVGFEGaussianBlurElement
     listener: (
       this: SVGFEGaussianBlurElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30197,7 +30445,7 @@ interface SVGFEGaussianBlurElement
   ): void;
 }
 
-declare var SVGFEGaussianBlurElement: {
+declare const SVGFEGaussianBlurElement: {
   prototype: SVGFEGaussianBlurElement;
   new (): SVGFEGaussianBlurElement;
 };
@@ -30214,7 +30462,7 @@ interface SVGFEImageElement
   readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30224,7 +30472,7 @@ interface SVGFEImageElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30234,7 +30482,7 @@ interface SVGFEImageElement
   ): void;
 }
 
-declare var SVGFEImageElement: {
+declare const SVGFEImageElement: {
   prototype: SVGFEImageElement;
   new (): SVGFEImageElement;
 };
@@ -30249,7 +30497,7 @@ interface SVGFEMergeElement
     SVGFilterPrimitiveStandardAttributes {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30259,7 +30507,7 @@ interface SVGFEMergeElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30269,7 +30517,7 @@ interface SVGFEMergeElement
   ): void;
 }
 
-declare var SVGFEMergeElement: {
+declare const SVGFEMergeElement: {
   prototype: SVGFEMergeElement;
   new (): SVGFEMergeElement;
 };
@@ -30284,7 +30532,10 @@ interface SVGFEMergeNodeElement extends SVGElement {
   readonly in1: SVGAnimatedString;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEMergeNodeElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEMergeNodeElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30294,7 +30545,10 @@ interface SVGFEMergeNodeElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEMergeNodeElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEMergeNodeElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30304,7 +30558,7 @@ interface SVGFEMergeNodeElement extends SVGElement {
   ): void;
 }
 
-declare var SVGFEMergeNodeElement: {
+declare const SVGFEMergeNodeElement: {
   prototype: SVGFEMergeNodeElement;
   new (): SVGFEMergeNodeElement;
 };
@@ -30327,7 +30581,10 @@ interface SVGFEMorphologyElement
   readonly SVG_MORPHOLOGY_OPERATOR_DILATE: 2;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEMorphologyElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEMorphologyElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30337,7 +30594,10 @@ interface SVGFEMorphologyElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEMorphologyElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEMorphologyElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30347,7 +30607,7 @@ interface SVGFEMorphologyElement
   ): void;
 }
 
-declare var SVGFEMorphologyElement: {
+declare const SVGFEMorphologyElement: {
   prototype: SVGFEMorphologyElement;
   new (): SVGFEMorphologyElement;
   readonly SVG_MORPHOLOGY_OPERATOR_UNKNOWN: 0;
@@ -30369,7 +30629,7 @@ interface SVGFEOffsetElement
   readonly in1: SVGAnimatedString;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30379,7 +30639,7 @@ interface SVGFEOffsetElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30389,7 +30649,7 @@ interface SVGFEOffsetElement
   ): void;
 }
 
-declare var SVGFEOffsetElement: {
+declare const SVGFEOffsetElement: {
   prototype: SVGFEOffsetElement;
   new (): SVGFEOffsetElement;
 };
@@ -30406,7 +30666,10 @@ interface SVGFEPointLightElement extends SVGElement {
   readonly z: SVGAnimatedNumber;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEPointLightElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEPointLightElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30416,7 +30679,10 @@ interface SVGFEPointLightElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEPointLightElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEPointLightElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30426,7 +30692,7 @@ interface SVGFEPointLightElement extends SVGElement {
   ): void;
 }
 
-declare var SVGFEPointLightElement: {
+declare const SVGFEPointLightElement: {
   prototype: SVGFEPointLightElement;
   new (): SVGFEPointLightElement;
 };
@@ -30451,7 +30717,7 @@ interface SVGFESpecularLightingElement
     listener: (
       this: SVGFESpecularLightingElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30464,7 +30730,7 @@ interface SVGFESpecularLightingElement
     listener: (
       this: SVGFESpecularLightingElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30474,7 +30740,7 @@ interface SVGFESpecularLightingElement
   ): void;
 }
 
-declare var SVGFESpecularLightingElement: {
+declare const SVGFESpecularLightingElement: {
   prototype: SVGFESpecularLightingElement;
   new (): SVGFESpecularLightingElement;
 };
@@ -30496,7 +30762,10 @@ interface SVGFESpotLightElement extends SVGElement {
   readonly z: SVGAnimatedNumber;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFESpotLightElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFESpotLightElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30506,7 +30775,10 @@ interface SVGFESpotLightElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFESpotLightElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFESpotLightElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30516,7 +30788,7 @@ interface SVGFESpotLightElement extends SVGElement {
   ): void;
 }
 
-declare var SVGFESpotLightElement: {
+declare const SVGFESpotLightElement: {
   prototype: SVGFESpotLightElement;
   new (): SVGFESpotLightElement;
 };
@@ -30532,7 +30804,7 @@ interface SVGFETileElement
   readonly in1: SVGAnimatedString;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30542,7 +30814,7 @@ interface SVGFETileElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30552,7 +30824,7 @@ interface SVGFETileElement
   ): void;
 }
 
-declare var SVGFETileElement: {
+declare const SVGFETileElement: {
   prototype: SVGFETileElement;
   new (): SVGFETileElement;
 };
@@ -30580,7 +30852,10 @@ interface SVGFETurbulenceElement
   readonly SVG_STITCHTYPE_NOSTITCH: 2;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFETurbulenceElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFETurbulenceElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30590,7 +30865,10 @@ interface SVGFETurbulenceElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFETurbulenceElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFETurbulenceElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30600,7 +30878,7 @@ interface SVGFETurbulenceElement
   ): void;
 }
 
-declare var SVGFETurbulenceElement: {
+declare const SVGFETurbulenceElement: {
   prototype: SVGFETurbulenceElement;
   new (): SVGFETurbulenceElement;
   readonly SVG_TURBULENCE_TYPE_UNKNOWN: 0;
@@ -30626,7 +30904,7 @@ interface SVGFilterElement extends SVGElement, SVGURIReference {
   readonly y: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30636,7 +30914,7 @@ interface SVGFilterElement extends SVGElement, SVGURIReference {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30646,7 +30924,7 @@ interface SVGFilterElement extends SVGElement, SVGURIReference {
   ): void;
 }
 
-declare var SVGFilterElement: {
+declare const SVGFilterElement: {
   prototype: SVGFilterElement;
   new (): SVGFilterElement;
 };
@@ -30686,7 +30964,10 @@ interface SVGForeignObjectElement extends SVGGraphicsElement {
   readonly y: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGForeignObjectElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGForeignObjectElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30696,7 +30977,10 @@ interface SVGForeignObjectElement extends SVGGraphicsElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGForeignObjectElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGForeignObjectElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30706,7 +30990,7 @@ interface SVGForeignObjectElement extends SVGGraphicsElement {
   ): void;
 }
 
-declare var SVGForeignObjectElement: {
+declare const SVGForeignObjectElement: {
   prototype: SVGForeignObjectElement;
   new (): SVGForeignObjectElement;
 };
@@ -30719,7 +31003,7 @@ declare var SVGForeignObjectElement: {
 interface SVGGElement extends SVGGraphicsElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30729,7 +31013,7 @@ interface SVGGElement extends SVGGraphicsElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30739,7 +31023,7 @@ interface SVGGElement extends SVGGraphicsElement {
   ): void;
 }
 
-declare var SVGGElement: {
+declare const SVGGElement: {
   prototype: SVGGElement;
   new (): SVGGElement;
 };
@@ -30776,7 +31060,7 @@ interface SVGGeometryElement extends SVGGraphicsElement {
   isPointInStroke(point?: DOMPointInit): boolean;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGGeometryElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGGeometryElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30786,7 +31070,7 @@ interface SVGGeometryElement extends SVGGraphicsElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGGeometryElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGGeometryElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30796,7 +31080,7 @@ interface SVGGeometryElement extends SVGGraphicsElement {
   ): void;
 }
 
-declare var SVGGeometryElement: {
+declare const SVGGeometryElement: {
   prototype: SVGGeometryElement;
   new (): SVGGeometryElement;
 };
@@ -30818,7 +31102,7 @@ interface SVGGradientElement extends SVGElement, SVGURIReference {
   readonly SVG_SPREADMETHOD_REPEAT: 3;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30828,7 +31112,7 @@ interface SVGGradientElement extends SVGElement, SVGURIReference {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30838,7 +31122,7 @@ interface SVGGradientElement extends SVGElement, SVGURIReference {
   ): void;
 }
 
-declare var SVGGradientElement: {
+declare const SVGGradientElement: {
   prototype: SVGGradientElement;
   new (): SVGGradientElement;
   readonly SVG_SPREADMETHOD_UNKNOWN: 0;
@@ -30865,7 +31149,7 @@ interface SVGGraphicsElement extends SVGElement, SVGTests {
   getScreenCTM(): DOMMatrix | null;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30875,7 +31159,7 @@ interface SVGGraphicsElement extends SVGElement, SVGTests {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30885,7 +31169,7 @@ interface SVGGraphicsElement extends SVGElement, SVGTests {
   ): void;
 }
 
-declare var SVGGraphicsElement: {
+declare const SVGGraphicsElement: {
   prototype: SVGGraphicsElement;
   new (): SVGGraphicsElement;
 };
@@ -30924,7 +31208,7 @@ interface SVGImageElement extends SVGGraphicsElement, SVGURIReference {
   readonly y: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -30934,7 +31218,7 @@ interface SVGImageElement extends SVGGraphicsElement, SVGURIReference {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -30944,7 +31228,7 @@ interface SVGImageElement extends SVGGraphicsElement, SVGURIReference {
   ): void;
 }
 
-declare var SVGImageElement: {
+declare const SVGImageElement: {
   prototype: SVGImageElement;
   new (): SVGImageElement;
 };
@@ -30974,7 +31258,7 @@ interface SVGLength {
   readonly SVG_LENGTHTYPE_PC: 10;
 }
 
-declare var SVGLength: {
+declare const SVGLength: {
   prototype: SVGLength;
   new (): SVGLength;
   readonly SVG_LENGTHTYPE_UNKNOWN: 0;
@@ -31008,7 +31292,7 @@ interface SVGLengthList {
   [index: number]: SVGLength;
 }
 
-declare var SVGLengthList: {
+declare const SVGLengthList: {
   prototype: SVGLengthList;
   new (): SVGLengthList;
 };
@@ -31026,7 +31310,7 @@ interface SVGLineElement extends SVGGeometryElement {
   readonly y2: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31036,7 +31320,7 @@ interface SVGLineElement extends SVGGeometryElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31046,7 +31330,7 @@ interface SVGLineElement extends SVGGeometryElement {
   ): void;
 }
 
-declare var SVGLineElement: {
+declare const SVGLineElement: {
   prototype: SVGLineElement;
   new (): SVGLineElement;
 };
@@ -31067,7 +31351,7 @@ interface SVGLinearGradientElement extends SVGGradientElement {
     listener: (
       this: SVGLinearGradientElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31080,7 +31364,7 @@ interface SVGLinearGradientElement extends SVGGradientElement {
     listener: (
       this: SVGLinearGradientElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31090,7 +31374,7 @@ interface SVGLinearGradientElement extends SVGGradientElement {
   ): void;
 }
 
-declare var SVGLinearGradientElement: {
+declare const SVGLinearGradientElement: {
   prototype: SVGLinearGradientElement;
   new (): SVGLinearGradientElement;
 };
@@ -31099,7 +31383,7 @@ declare var SVGLinearGradientElement: {
 interface SVGMPathElement extends SVGElement, SVGURIReference {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGMPathElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGMPathElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31109,7 +31393,7 @@ interface SVGMPathElement extends SVGElement, SVGURIReference {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGMPathElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGMPathElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31119,7 +31403,7 @@ interface SVGMPathElement extends SVGElement, SVGURIReference {
   ): void;
 }
 
-declare var SVGMPathElement: {
+declare const SVGMPathElement: {
   prototype: SVGMPathElement;
   new (): SVGMPathElement;
 };
@@ -31179,7 +31463,7 @@ interface SVGMarkerElement extends SVGElement, SVGFitToViewBox {
   readonly SVG_MARKER_ORIENT_ANGLE: 2;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31189,7 +31473,7 @@ interface SVGMarkerElement extends SVGElement, SVGFitToViewBox {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31199,7 +31483,7 @@ interface SVGMarkerElement extends SVGElement, SVGFitToViewBox {
   ): void;
 }
 
-declare var SVGMarkerElement: {
+declare const SVGMarkerElement: {
   prototype: SVGMarkerElement;
   new (): SVGMarkerElement;
   readonly SVG_MARKERUNITS_UNKNOWN: 0;
@@ -31249,7 +31533,7 @@ interface SVGMaskElement extends SVGElement {
   readonly y: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31259,7 +31543,7 @@ interface SVGMaskElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31269,7 +31553,7 @@ interface SVGMaskElement extends SVGElement {
   ): void;
 }
 
-declare var SVGMaskElement: {
+declare const SVGMaskElement: {
   prototype: SVGMaskElement;
   new (): SVGMaskElement;
 };
@@ -31283,7 +31567,7 @@ declare var SVGMaskElement: {
 interface SVGMetadataElement extends SVGElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31293,7 +31577,7 @@ interface SVGMetadataElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31303,7 +31587,7 @@ interface SVGMetadataElement extends SVGElement {
   ): void;
 }
 
-declare var SVGMetadataElement: {
+declare const SVGMetadataElement: {
   prototype: SVGMetadataElement;
   new (): SVGMetadataElement;
 };
@@ -31317,7 +31601,7 @@ interface SVGNumber {
   value: number;
 }
 
-declare var SVGNumber: {
+declare const SVGNumber: {
   prototype: SVGNumber;
   new (): SVGNumber;
 };
@@ -31340,7 +31624,7 @@ interface SVGNumberList {
   [index: number]: SVGNumber;
 }
 
-declare var SVGNumberList: {
+declare const SVGNumberList: {
   prototype: SVGNumberList;
   new (): SVGNumberList;
 };
@@ -31353,7 +31637,7 @@ declare var SVGNumberList: {
 interface SVGPathElement extends SVGGeometryElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31363,7 +31647,7 @@ interface SVGPathElement extends SVGGeometryElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31373,7 +31657,7 @@ interface SVGPathElement extends SVGGeometryElement {
   ): void;
 }
 
-declare var SVGPathElement: {
+declare const SVGPathElement: {
   prototype: SVGPathElement;
   new (): SVGPathElement;
 };
@@ -31396,7 +31680,7 @@ interface SVGPatternElement
   readonly y: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31406,7 +31690,7 @@ interface SVGPatternElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31416,7 +31700,7 @@ interface SVGPatternElement
   ): void;
 }
 
-declare var SVGPatternElement: {
+declare const SVGPatternElement: {
   prototype: SVGPatternElement;
   new (): SVGPatternElement;
 };
@@ -31471,7 +31755,7 @@ interface SVGPointList {
   [index: number]: DOMPoint;
 }
 
-declare var SVGPointList: {
+declare const SVGPointList: {
   prototype: SVGPointList;
   new (): SVGPointList;
 };
@@ -31485,7 +31769,7 @@ declare var SVGPointList: {
 interface SVGPolygonElement extends SVGGeometryElement, SVGAnimatedPoints {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31495,7 +31779,7 @@ interface SVGPolygonElement extends SVGGeometryElement, SVGAnimatedPoints {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31505,7 +31789,7 @@ interface SVGPolygonElement extends SVGGeometryElement, SVGAnimatedPoints {
   ): void;
 }
 
-declare var SVGPolygonElement: {
+declare const SVGPolygonElement: {
   prototype: SVGPolygonElement;
   new (): SVGPolygonElement;
 };
@@ -31520,7 +31804,7 @@ declare var SVGPolygonElement: {
 interface SVGPolylineElement extends SVGGeometryElement, SVGAnimatedPoints {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31530,7 +31814,7 @@ interface SVGPolylineElement extends SVGGeometryElement, SVGAnimatedPoints {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31540,7 +31824,7 @@ interface SVGPolylineElement extends SVGGeometryElement, SVGAnimatedPoints {
   ): void;
 }
 
-declare var SVGPolylineElement: {
+declare const SVGPolylineElement: {
   prototype: SVGPolylineElement;
   new (): SVGPolylineElement;
 };
@@ -31571,7 +31855,7 @@ interface SVGPreserveAspectRatio {
   readonly SVG_MEETORSLICE_SLICE: 2;
 }
 
-declare var SVGPreserveAspectRatio: {
+declare const SVGPreserveAspectRatio: {
   prototype: SVGPreserveAspectRatio;
   new (): SVGPreserveAspectRatio;
   readonly SVG_PRESERVEASPECTRATIO_UNKNOWN: 0;
@@ -31608,7 +31892,7 @@ interface SVGRadialGradientElement extends SVGGradientElement {
     listener: (
       this: SVGRadialGradientElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31621,7 +31905,7 @@ interface SVGRadialGradientElement extends SVGGradientElement {
     listener: (
       this: SVGRadialGradientElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31631,7 +31915,7 @@ interface SVGRadialGradientElement extends SVGGradientElement {
   ): void;
 }
 
-declare var SVGRadialGradientElement: {
+declare const SVGRadialGradientElement: {
   prototype: SVGRadialGradientElement;
   new (): SVGRadialGradientElement;
 };
@@ -31651,7 +31935,7 @@ interface SVGRectElement extends SVGGeometryElement {
   readonly y: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31661,7 +31945,7 @@ interface SVGRectElement extends SVGGeometryElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31671,7 +31955,7 @@ interface SVGRectElement extends SVGGeometryElement {
   ): void;
 }
 
-declare var SVGRectElement: {
+declare const SVGRectElement: {
   prototype: SVGRectElement;
   new (): SVGRectElement;
 };
@@ -31755,7 +32039,7 @@ interface SVGSVGElement
   unsuspendRedrawAll(): void;
   addEventListener<K extends keyof SVGSVGElementEventMap>(
     type: K,
-    listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => any,
+    listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31765,7 +32049,7 @@ interface SVGSVGElement
   ): void;
   removeEventListener<K extends keyof SVGSVGElementEventMap>(
     type: K,
-    listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => any,
+    listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31775,7 +32059,7 @@ interface SVGSVGElement
   ): void;
 }
 
-declare var SVGSVGElement: {
+declare const SVGSVGElement: {
   prototype: SVGSVGElement;
   new (): SVGSVGElement;
 };
@@ -31789,7 +32073,7 @@ interface SVGScriptElement extends SVGElement, SVGURIReference {
   type: string;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31799,7 +32083,7 @@ interface SVGScriptElement extends SVGElement, SVGURIReference {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31809,7 +32093,7 @@ interface SVGScriptElement extends SVGElement, SVGURIReference {
   ): void;
 }
 
-declare var SVGScriptElement: {
+declare const SVGScriptElement: {
   prototype: SVGScriptElement;
   new (): SVGScriptElement;
 };
@@ -31818,7 +32102,7 @@ declare var SVGScriptElement: {
 interface SVGSetElement extends SVGAnimationElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGSetElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGSetElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31828,7 +32112,7 @@ interface SVGSetElement extends SVGAnimationElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGSetElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGSetElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31838,7 +32122,7 @@ interface SVGSetElement extends SVGAnimationElement {
   ): void;
 }
 
-declare var SVGSetElement: {
+declare const SVGSetElement: {
   prototype: SVGSetElement;
   new (): SVGSetElement;
 };
@@ -31852,7 +32136,7 @@ interface SVGStopElement extends SVGElement {
   readonly offset: SVGAnimatedNumber;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31862,7 +32146,7 @@ interface SVGStopElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31872,7 +32156,7 @@ interface SVGStopElement extends SVGElement {
   ): void;
 }
 
-declare var SVGStopElement: {
+declare const SVGStopElement: {
   prototype: SVGStopElement;
   new (): SVGStopElement;
 };
@@ -31895,7 +32179,7 @@ interface SVGStringList {
   [index: number]: string;
 }
 
-declare var SVGStringList: {
+declare const SVGStringList: {
   prototype: SVGStringList;
   new (): SVGStringList;
 };
@@ -31926,7 +32210,7 @@ interface SVGStyleElement extends SVGElement, LinkStyle {
   type: string;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31936,7 +32220,7 @@ interface SVGStyleElement extends SVGElement, LinkStyle {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31946,7 +32230,7 @@ interface SVGStyleElement extends SVGElement, LinkStyle {
   ): void;
 }
 
-declare var SVGStyleElement: {
+declare const SVGStyleElement: {
   prototype: SVGStyleElement;
   new (): SVGStyleElement;
 };
@@ -31959,7 +32243,7 @@ declare var SVGStyleElement: {
 interface SVGSwitchElement extends SVGGraphicsElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -31969,7 +32253,7 @@ interface SVGSwitchElement extends SVGGraphicsElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -31979,7 +32263,7 @@ interface SVGSwitchElement extends SVGGraphicsElement {
   ): void;
 }
 
-declare var SVGSwitchElement: {
+declare const SVGSwitchElement: {
   prototype: SVGSwitchElement;
   new (): SVGSwitchElement;
 };
@@ -31992,7 +32276,7 @@ declare var SVGSwitchElement: {
 interface SVGSymbolElement extends SVGElement, SVGFitToViewBox {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32002,7 +32286,7 @@ interface SVGSymbolElement extends SVGElement, SVGFitToViewBox {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32012,7 +32296,7 @@ interface SVGSymbolElement extends SVGElement, SVGFitToViewBox {
   ): void;
 }
 
-declare var SVGSymbolElement: {
+declare const SVGSymbolElement: {
   prototype: SVGSymbolElement;
   new (): SVGSymbolElement;
 };
@@ -32025,7 +32309,7 @@ declare var SVGSymbolElement: {
 interface SVGTSpanElement extends SVGTextPositioningElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32035,7 +32319,7 @@ interface SVGTSpanElement extends SVGTextPositioningElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32045,7 +32329,7 @@ interface SVGTSpanElement extends SVGTextPositioningElement {
   ): void;
 }
 
-declare var SVGTSpanElement: {
+declare const SVGTSpanElement: {
   prototype: SVGTSpanElement;
   new (): SVGTSpanElement;
 };
@@ -32081,7 +32365,10 @@ interface SVGTextContentElement extends SVGGraphicsElement {
   readonly LENGTHADJUST_SPACINGANDGLYPHS: 2;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTextContentElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGTextContentElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32091,7 +32378,10 @@ interface SVGTextContentElement extends SVGGraphicsElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTextContentElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGTextContentElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32101,7 +32391,7 @@ interface SVGTextContentElement extends SVGGraphicsElement {
   ): void;
 }
 
-declare var SVGTextContentElement: {
+declare const SVGTextContentElement: {
   prototype: SVGTextContentElement;
   new (): SVGTextContentElement;
   readonly LENGTHADJUST_UNKNOWN: 0;
@@ -32117,7 +32407,7 @@ declare var SVGTextContentElement: {
 interface SVGTextElement extends SVGTextPositioningElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32127,7 +32417,7 @@ interface SVGTextElement extends SVGTextPositioningElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32137,7 +32427,7 @@ interface SVGTextElement extends SVGTextPositioningElement {
   ): void;
 }
 
-declare var SVGTextElement: {
+declare const SVGTextElement: {
   prototype: SVGTextElement;
   new (): SVGTextElement;
 };
@@ -32160,7 +32450,7 @@ interface SVGTextPathElement extends SVGTextContentElement, SVGURIReference {
   readonly TEXTPATH_SPACINGTYPE_EXACT: 2;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32170,7 +32460,7 @@ interface SVGTextPathElement extends SVGTextContentElement, SVGURIReference {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32180,7 +32470,7 @@ interface SVGTextPathElement extends SVGTextContentElement, SVGURIReference {
   ): void;
 }
 
-declare var SVGTextPathElement: {
+declare const SVGTextPathElement: {
   prototype: SVGTextPathElement;
   new (): SVGTextPathElement;
   readonly TEXTPATH_METHODTYPE_UNKNOWN: 0;
@@ -32210,7 +32500,7 @@ interface SVGTextPositioningElement extends SVGTextContentElement {
     listener: (
       this: SVGTextPositioningElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32223,7 +32513,7 @@ interface SVGTextPositioningElement extends SVGTextContentElement {
     listener: (
       this: SVGTextPositioningElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32233,7 +32523,7 @@ interface SVGTextPositioningElement extends SVGTextContentElement {
   ): void;
 }
 
-declare var SVGTextPositioningElement: {
+declare const SVGTextPositioningElement: {
   prototype: SVGTextPositioningElement;
   new (): SVGTextPositioningElement;
 };
@@ -32246,7 +32536,7 @@ declare var SVGTextPositioningElement: {
 interface SVGTitleElement extends SVGElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32256,7 +32546,7 @@ interface SVGTitleElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32266,7 +32556,7 @@ interface SVGTitleElement extends SVGElement {
   ): void;
 }
 
-declare var SVGTitleElement: {
+declare const SVGTitleElement: {
   prototype: SVGTitleElement;
   new (): SVGTitleElement;
 };
@@ -32297,7 +32587,7 @@ interface SVGTransform {
   readonly SVG_TRANSFORM_SKEWY: 6;
 }
 
-declare var SVGTransform: {
+declare const SVGTransform: {
   prototype: SVGTransform;
   new (): SVGTransform;
   readonly SVG_TRANSFORM_UNKNOWN: 0;
@@ -32329,7 +32619,7 @@ interface SVGTransformList {
   [index: number]: SVGTransform;
 }
 
-declare var SVGTransformList: {
+declare const SVGTransformList: {
   prototype: SVGTransformList;
   new (): SVGTransformList;
 };
@@ -32350,7 +32640,7 @@ interface SVGUnitTypes {
   readonly SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: 2;
 }
 
-declare var SVGUnitTypes: {
+declare const SVGUnitTypes: {
   prototype: SVGUnitTypes;
   new (): SVGUnitTypes;
   readonly SVG_UNIT_TYPE_UNKNOWN: 0;
@@ -32370,7 +32660,7 @@ interface SVGUseElement extends SVGGraphicsElement, SVGURIReference {
   readonly y: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32380,7 +32670,7 @@ interface SVGUseElement extends SVGGraphicsElement, SVGURIReference {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32390,7 +32680,7 @@ interface SVGUseElement extends SVGGraphicsElement, SVGURIReference {
   ): void;
 }
 
-declare var SVGUseElement: {
+declare const SVGUseElement: {
   prototype: SVGUseElement;
   new (): SVGUseElement;
 };
@@ -32404,7 +32694,7 @@ declare var SVGUseElement: {
 interface SVGViewElement extends SVGElement, SVGFitToViewBox {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32414,7 +32704,7 @@ interface SVGViewElement extends SVGElement, SVGFitToViewBox {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32424,7 +32714,7 @@ interface SVGViewElement extends SVGElement, SVGFitToViewBox {
   ): void;
 }
 
-declare var SVGViewElement: {
+declare const SVGViewElement: {
   prototype: SVGViewElement;
   new (): SVGViewElement;
 };
@@ -32467,7 +32757,7 @@ interface Screen {
   readonly width: number;
 }
 
-declare var Screen: {
+declare const Screen: {
   prototype: Screen;
   new (): Screen;
 };
@@ -32487,7 +32777,7 @@ interface ScreenOrientation extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ScreenOrientation/change_event)
    */
-  onchange: ((this: ScreenOrientation, ev: Event) => any) | null;
+  onchange: ((this: ScreenOrientation, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ScreenOrientation/type)
@@ -32503,7 +32793,7 @@ interface ScreenOrientation extends EventTarget {
     listener: (
       this: ScreenOrientation,
       ev: ScreenOrientationEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32516,7 +32806,7 @@ interface ScreenOrientation extends EventTarget {
     listener: (
       this: ScreenOrientation,
       ev: ScreenOrientationEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32526,7 +32816,7 @@ interface ScreenOrientation extends EventTarget {
   ): void;
 }
 
-declare var ScreenOrientation: {
+declare const ScreenOrientation: {
   prototype: ScreenOrientation;
   new (): ScreenOrientation;
 };
@@ -32560,14 +32850,14 @@ interface ScriptProcessorNode extends AudioNode {
    *   Reference](https://developer.mozilla.org/docs/Web/API/ScriptProcessorNode/audioprocess_event)
    */
   onaudioprocess:
-    | ((this: ScriptProcessorNode, ev: AudioProcessingEvent) => any)
+    | ((this: ScriptProcessorNode, ev: AudioProcessingEvent) => unknown)
     | null;
   addEventListener<K extends keyof ScriptProcessorNodeEventMap>(
     type: K,
     listener: (
       this: ScriptProcessorNode,
       ev: ScriptProcessorNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32580,7 +32870,7 @@ interface ScriptProcessorNode extends AudioNode {
     listener: (
       this: ScriptProcessorNode,
       ev: ScriptProcessorNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32591,7 +32881,7 @@ interface ScriptProcessorNode extends AudioNode {
 }
 
 /** @deprecated */
-declare var ScriptProcessorNode: {
+declare const ScriptProcessorNode: {
   prototype: ScriptProcessorNode;
   new (): ScriptProcessorNode;
 };
@@ -32666,7 +32956,7 @@ interface SecurityPolicyViolationEvent extends Event {
   readonly violatedDirective: string;
 }
 
-declare var SecurityPolicyViolationEvent: {
+declare const SecurityPolicyViolationEvent: {
   prototype: SecurityPolicyViolationEvent;
   new (
     type: string,
@@ -32802,7 +33092,7 @@ interface Selection {
   toString(): string;
 }
 
-declare var Selection: {
+declare const Selection: {
   prototype: Selection;
   new (): Selection;
 };
@@ -32824,7 +33114,7 @@ interface ServiceWorker extends EventTarget, AbstractWorker {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/statechange_event)
    */
-  onstatechange: ((this: ServiceWorker, ev: Event) => any) | null;
+  onstatechange: ((this: ServiceWorker, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/scriptURL)
@@ -32839,11 +33129,11 @@ interface ServiceWorker extends EventTarget, AbstractWorker {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/postMessage)
    */
-  postMessage(message: any, transfer: Transferable[]): void;
-  postMessage(message: any, options?: StructuredSerializeOptions): void;
+  postMessage(message: unknown, transfer: readonly Transferable[]): void;
+  postMessage(message: unknown, options?: StructuredSerializeOptions): void;
   addEventListener<K extends keyof ServiceWorkerEventMap>(
     type: K,
-    listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any,
+    listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32853,7 +33143,7 @@ interface ServiceWorker extends EventTarget, AbstractWorker {
   ): void;
   removeEventListener<K extends keyof ServiceWorkerEventMap>(
     type: K,
-    listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any,
+    listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32863,7 +33153,7 @@ interface ServiceWorker extends EventTarget, AbstractWorker {
   ): void;
 }
 
-declare var ServiceWorker: {
+declare const ServiceWorker: {
   prototype: ServiceWorker;
   new (): ServiceWorker;
 };
@@ -32894,18 +33184,22 @@ interface ServiceWorkerContainer extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/controllerchange_event)
    */
-  oncontrollerchange: ((this: ServiceWorkerContainer, ev: Event) => any) | null;
+  oncontrollerchange:
+    | ((this: ServiceWorkerContainer, ev: Event) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/message_event)
    */
-  onmessage: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;
+  onmessage:
+    | ((this: ServiceWorkerContainer, ev: MessageEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/messageerror_event)
    */
   onmessageerror:
-    | ((this: ServiceWorkerContainer, ev: MessageEvent) => any)
+    | ((this: ServiceWorkerContainer, ev: MessageEvent) => unknown)
     | null;
   /**
    * [MDN
@@ -32942,7 +33236,7 @@ interface ServiceWorkerContainer extends EventTarget {
     listener: (
       this: ServiceWorkerContainer,
       ev: ServiceWorkerContainerEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32955,7 +33249,7 @@ interface ServiceWorkerContainer extends EventTarget {
     listener: (
       this: ServiceWorkerContainer,
       ev: ServiceWorkerContainerEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32965,7 +33259,7 @@ interface ServiceWorkerContainer extends EventTarget {
   ): void;
 }
 
-declare var ServiceWorkerContainer: {
+declare const ServiceWorkerContainer: {
   prototype: ServiceWorkerContainer;
   new (): ServiceWorkerContainer;
 };
@@ -33002,7 +33296,9 @@ interface ServiceWorkerRegistration extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/updatefound_event)
    */
-  onupdatefound: ((this: ServiceWorkerRegistration, ev: Event) => any) | null;
+  onupdatefound:
+    | ((this: ServiceWorkerRegistration, ev: Event) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/pushManager)
@@ -33048,7 +33344,7 @@ interface ServiceWorkerRegistration extends EventTarget {
     listener: (
       this: ServiceWorkerRegistration,
       ev: ServiceWorkerRegistrationEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -33061,7 +33357,7 @@ interface ServiceWorkerRegistration extends EventTarget {
     listener: (
       this: ServiceWorkerRegistration,
       ev: ServiceWorkerRegistrationEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -33071,7 +33367,7 @@ interface ServiceWorkerRegistration extends EventTarget {
   ): void;
 }
 
-declare var ServiceWorkerRegistration: {
+declare const ServiceWorkerRegistration: {
   prototype: ServiceWorkerRegistration;
   new (): ServiceWorkerRegistration;
 };
@@ -33101,7 +33397,7 @@ interface ShadowRoot extends DocumentFragment, DocumentOrShadowRoot {
   innerHTML: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/mode) */
   readonly mode: ShadowRootMode;
-  onslotchange: ((this: ShadowRoot, ev: Event) => any) | null;
+  onslotchange: ((this: ShadowRoot, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/serializable)
@@ -33128,7 +33424,7 @@ interface ShadowRoot extends DocumentFragment, DocumentOrShadowRoot {
    */
   addEventListener<K extends keyof ShadowRootEventMap>(
     type: K,
-    listener: (this: ShadowRoot, ev: ShadowRootEventMap[K]) => any,
+    listener: (this: ShadowRoot, ev: ShadowRootEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -33138,7 +33434,7 @@ interface ShadowRoot extends DocumentFragment, DocumentOrShadowRoot {
   ): void;
   removeEventListener<K extends keyof ShadowRootEventMap>(
     type: K,
-    listener: (this: ShadowRoot, ev: ShadowRootEventMap[K]) => any,
+    listener: (this: ShadowRoot, ev: ShadowRootEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -33148,7 +33444,7 @@ interface ShadowRoot extends DocumentFragment, DocumentOrShadowRoot {
   ): void;
 }
 
-declare var ShadowRoot: {
+declare const ShadowRoot: {
   prototype: ShadowRoot;
   new (): ShadowRoot;
 };
@@ -33165,7 +33461,7 @@ interface SharedWorker extends EventTarget, AbstractWorker {
   readonly port: MessagePort;
   addEventListener<K extends keyof AbstractWorkerEventMap>(
     type: K,
-    listener: (this: SharedWorker, ev: AbstractWorkerEventMap[K]) => any,
+    listener: (this: SharedWorker, ev: AbstractWorkerEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -33175,7 +33471,7 @@ interface SharedWorker extends EventTarget, AbstractWorker {
   ): void;
   removeEventListener<K extends keyof AbstractWorkerEventMap>(
     type: K,
-    listener: (this: SharedWorker, ev: AbstractWorkerEventMap[K]) => any,
+    listener: (this: SharedWorker, ev: AbstractWorkerEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -33185,7 +33481,7 @@ interface SharedWorker extends EventTarget, AbstractWorker {
   ): void;
 }
 
-declare var SharedWorker: {
+declare const SharedWorker: {
   prototype: SharedWorker;
   new (scriptURL: string | URL, options?: string | WorkerOptions): SharedWorker;
 };
@@ -33233,11 +33529,11 @@ interface SourceBuffer extends EventTarget {
    * Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/mode)
    */
   mode: AppendMode;
-  onabort: ((this: SourceBuffer, ev: Event) => any) | null;
-  onerror: ((this: SourceBuffer, ev: Event) => any) | null;
-  onupdate: ((this: SourceBuffer, ev: Event) => any) | null;
-  onupdateend: ((this: SourceBuffer, ev: Event) => any) | null;
-  onupdatestart: ((this: SourceBuffer, ev: Event) => any) | null;
+  onabort: ((this: SourceBuffer, ev: Event) => unknown) | null;
+  onerror: ((this: SourceBuffer, ev: Event) => unknown) | null;
+  onupdate: ((this: SourceBuffer, ev: Event) => unknown) | null;
+  onupdateend: ((this: SourceBuffer, ev: Event) => unknown) | null;
+  onupdatestart: ((this: SourceBuffer, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/timestampOffset)
@@ -33270,7 +33566,7 @@ interface SourceBuffer extends EventTarget {
   remove(start: number, end: number): void;
   addEventListener<K extends keyof SourceBufferEventMap>(
     type: K,
-    listener: (this: SourceBuffer, ev: SourceBufferEventMap[K]) => any,
+    listener: (this: SourceBuffer, ev: SourceBufferEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -33280,7 +33576,7 @@ interface SourceBuffer extends EventTarget {
   ): void;
   removeEventListener<K extends keyof SourceBufferEventMap>(
     type: K,
-    listener: (this: SourceBuffer, ev: SourceBufferEventMap[K]) => any,
+    listener: (this: SourceBuffer, ev: SourceBufferEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -33290,7 +33586,7 @@ interface SourceBuffer extends EventTarget {
   ): void;
 }
 
-declare var SourceBuffer: {
+declare const SourceBuffer: {
   prototype: SourceBuffer;
   new (): SourceBuffer;
 };
@@ -33311,11 +33607,14 @@ interface SourceBufferList extends EventTarget {
    * Reference](https://developer.mozilla.org/docs/Web/API/SourceBufferList/length)
    */
   readonly length: number;
-  onaddsourcebuffer: ((this: SourceBufferList, ev: Event) => any) | null;
-  onremovesourcebuffer: ((this: SourceBufferList, ev: Event) => any) | null;
+  onaddsourcebuffer: ((this: SourceBufferList, ev: Event) => unknown) | null;
+  onremovesourcebuffer: ((this: SourceBufferList, ev: Event) => unknown) | null;
   addEventListener<K extends keyof SourceBufferListEventMap>(
     type: K,
-    listener: (this: SourceBufferList, ev: SourceBufferListEventMap[K]) => any,
+    listener: (
+      this: SourceBufferList,
+      ev: SourceBufferListEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -33325,7 +33624,10 @@ interface SourceBufferList extends EventTarget {
   ): void;
   removeEventListener<K extends keyof SourceBufferListEventMap>(
     type: K,
-    listener: (this: SourceBufferList, ev: SourceBufferListEventMap[K]) => any,
+    listener: (
+      this: SourceBufferList,
+      ev: SourceBufferListEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -33336,7 +33638,7 @@ interface SourceBufferList extends EventTarget {
   [index: number]: SourceBuffer;
 }
 
-declare var SourceBufferList: {
+declare const SourceBufferList: {
   prototype: SourceBufferList;
   new (): SourceBufferList;
 };
@@ -33358,7 +33660,7 @@ interface SpeechRecognitionAlternative {
   readonly transcript: string;
 }
 
-declare var SpeechRecognitionAlternative: {
+declare const SpeechRecognitionAlternative: {
   prototype: SpeechRecognitionAlternative;
   new (): SpeechRecognitionAlternative;
 };
@@ -33386,7 +33688,7 @@ interface SpeechRecognitionResult {
   [index: number]: SpeechRecognitionAlternative;
 }
 
-declare var SpeechRecognitionResult: {
+declare const SpeechRecognitionResult: {
   prototype: SpeechRecognitionResult;
   new (): SpeechRecognitionResult;
 };
@@ -33409,7 +33711,7 @@ interface SpeechRecognitionResultList {
   [index: number]: SpeechRecognitionResult;
 }
 
-declare var SpeechRecognitionResultList: {
+declare const SpeechRecognitionResultList: {
   prototype: SpeechRecognitionResultList;
   new (): SpeechRecognitionResultList;
 };
@@ -33430,7 +33732,7 @@ interface SpeechSynthesis extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/voiceschanged_event)
    */
-  onvoiceschanged: ((this: SpeechSynthesis, ev: Event) => any) | null;
+  onvoiceschanged: ((this: SpeechSynthesis, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/paused)
@@ -33473,7 +33775,10 @@ interface SpeechSynthesis extends EventTarget {
   speak(utterance: SpeechSynthesisUtterance): void;
   addEventListener<K extends keyof SpeechSynthesisEventMap>(
     type: K,
-    listener: (this: SpeechSynthesis, ev: SpeechSynthesisEventMap[K]) => any,
+    listener: (
+      this: SpeechSynthesis,
+      ev: SpeechSynthesisEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -33483,7 +33788,10 @@ interface SpeechSynthesis extends EventTarget {
   ): void;
   removeEventListener<K extends keyof SpeechSynthesisEventMap>(
     type: K,
-    listener: (this: SpeechSynthesis, ev: SpeechSynthesisEventMap[K]) => any,
+    listener: (
+      this: SpeechSynthesis,
+      ev: SpeechSynthesisEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -33493,7 +33801,7 @@ interface SpeechSynthesis extends EventTarget {
   ): void;
 }
 
-declare var SpeechSynthesis: {
+declare const SpeechSynthesis: {
   prototype: SpeechSynthesis;
   new (): SpeechSynthesis;
 };
@@ -33510,7 +33818,7 @@ interface SpeechSynthesisErrorEvent extends SpeechSynthesisEvent {
   readonly error: SpeechSynthesisErrorCode;
 }
 
-declare var SpeechSynthesisErrorEvent: {
+declare const SpeechSynthesisErrorEvent: {
   prototype: SpeechSynthesisErrorEvent;
   new (
     type: string,
@@ -33554,7 +33862,7 @@ interface SpeechSynthesisEvent extends Event {
   readonly utterance: SpeechSynthesisUtterance;
 }
 
-declare var SpeechSynthesisEvent: {
+declare const SpeechSynthesisEvent: {
   prototype: SpeechSynthesisEvent;
   new (
     type: string,
@@ -33591,49 +33899,52 @@ interface SpeechSynthesisUtterance extends EventTarget {
    * Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/boundary_event)
    */
   onboundary:
-    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any)
+    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/end_event)
    */
   onend:
-    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any)
+    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/error_event)
    */
   onerror:
-    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisErrorEvent) => any)
+    | ((
+        this: SpeechSynthesisUtterance,
+        ev: SpeechSynthesisErrorEvent,
+      ) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/mark_event)
    */
   onmark:
-    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any)
+    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/pause_event)
    */
   onpause:
-    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any)
+    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/resume_event)
    */
   onresume:
-    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any)
+    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/start_event)
    */
   onstart:
-    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any)
+    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => unknown)
     | null;
   /**
    * [MDN
@@ -33665,7 +33976,7 @@ interface SpeechSynthesisUtterance extends EventTarget {
     listener: (
       this: SpeechSynthesisUtterance,
       ev: SpeechSynthesisUtteranceEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -33678,7 +33989,7 @@ interface SpeechSynthesisUtterance extends EventTarget {
     listener: (
       this: SpeechSynthesisUtterance,
       ev: SpeechSynthesisUtteranceEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -33688,7 +33999,7 @@ interface SpeechSynthesisUtterance extends EventTarget {
   ): void;
 }
 
-declare var SpeechSynthesisUtterance: {
+declare const SpeechSynthesisUtterance: {
   prototype: SpeechSynthesisUtterance;
   new (text?: string): SpeechSynthesisUtterance;
 };
@@ -33729,7 +34040,7 @@ interface SpeechSynthesisVoice {
   readonly voiceURI: string;
 }
 
-declare var SpeechSynthesisVoice: {
+declare const SpeechSynthesisVoice: {
   prototype: SpeechSynthesisVoice;
   new (): SpeechSynthesisVoice;
 };
@@ -33737,7 +34048,7 @@ declare var SpeechSynthesisVoice: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StaticRange) */
 interface StaticRange extends AbstractRange {}
 
-declare var StaticRange: {
+declare const StaticRange: {
   prototype: StaticRange;
   new (init: StaticRangeInit): StaticRange;
 };
@@ -33757,7 +34068,7 @@ interface StereoPannerNode extends AudioNode {
   readonly pan: AudioParam;
 }
 
-declare var StereoPannerNode: {
+declare const StereoPannerNode: {
   prototype: StereoPannerNode;
   new (
     context: BaseAudioContext,
@@ -33827,10 +34138,10 @@ interface Storage {
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/setItem)
    */
   setItem(key: string, value: string): void;
-  [name: string]: any;
+  [name: string]: unknown;
 }
 
-declare var Storage: {
+declare const Storage: {
   prototype: Storage;
   new (): Storage;
 };
@@ -33897,7 +34208,7 @@ interface StorageEvent extends Event {
   ): void;
 }
 
-declare var StorageEvent: {
+declare const StorageEvent: {
   prototype: StorageEvent;
   new (type: string, eventInitDict?: StorageEventInit): StorageEvent;
 };
@@ -33930,7 +34241,7 @@ interface StorageManager {
   persisted(): Promise<boolean>;
 }
 
-declare var StorageManager: {
+declare const StorageManager: {
   prototype: StorageManager;
   new (): StorageManager;
 };
@@ -33965,7 +34276,7 @@ interface StylePropertyMap extends StylePropertyMapReadOnly {
   set(property: string, ...values: (CSSStyleValue | string)[]): void;
 }
 
-declare var StylePropertyMap: {
+declare const StylePropertyMap: {
   prototype: StylePropertyMap;
   new (): StylePropertyMap;
 };
@@ -33997,15 +34308,15 @@ interface StylePropertyMapReadOnly {
   has(property: string): boolean;
   forEach(
     callbackfn: (
-      value: CSSStyleValue[],
+      value: readonly CSSStyleValue[],
       key: string,
       parent: StylePropertyMapReadOnly,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var StylePropertyMapReadOnly: {
+declare const StylePropertyMapReadOnly: {
   prototype: StylePropertyMapReadOnly;
   new (): StylePropertyMapReadOnly;
 };
@@ -34048,7 +34359,7 @@ interface StyleSheet {
   readonly type: string;
 }
 
-declare var StyleSheet: {
+declare const StyleSheet: {
   prototype: StyleSheet;
   new (): StyleSheet;
 };
@@ -34072,7 +34383,7 @@ interface StyleSheetList {
   [index: number]: CSSStyleSheet;
 }
 
-declare var StyleSheetList: {
+declare const StyleSheetList: {
   prototype: StyleSheetList;
   new (): StyleSheetList;
 };
@@ -34089,7 +34400,7 @@ interface SubmitEvent extends Event {
   readonly submitter: HTMLElement | null;
 }
 
-declare var SubmitEvent: {
+declare const SubmitEvent: {
   prototype: SubmitEvent;
   new (type: string, eventInitDict?: SubmitEventInit): SubmitEvent;
 };
@@ -34147,7 +34458,7 @@ interface SubtleCrypto {
       | HkdfParams
       | Pbkdf2Params,
     extractable: boolean,
-    keyUsages: KeyUsage[],
+    keyUsages: readonly KeyUsage[],
   ): Promise<CryptoKey>;
   /**
    * [MDN
@@ -34206,7 +34517,7 @@ interface SubtleCrypto {
   generateKey(
     algorithm: AlgorithmIdentifier,
     extractable: boolean,
-    keyUsages: KeyUsage[],
+    keyUsages: readonly KeyUsage[],
   ): Promise<CryptoKeyPair | CryptoKey>;
   /**
    * [MDN
@@ -34234,7 +34545,7 @@ interface SubtleCrypto {
       | HmacImportParams
       | AesKeyAlgorithm,
     extractable: boolean,
-    keyUsages: KeyUsage[],
+    keyUsages: readonly KeyUsage[],
   ): Promise<CryptoKey>;
   /**
    * [MDN
@@ -34266,7 +34577,7 @@ interface SubtleCrypto {
       | HmacImportParams
       | AesKeyAlgorithm,
     extractable: boolean,
-    keyUsages: KeyUsage[],
+    keyUsages: readonly KeyUsage[],
   ): Promise<CryptoKey>;
   /**
    * [MDN
@@ -34295,7 +34606,7 @@ interface SubtleCrypto {
   ): Promise<ArrayBuffer>;
 }
 
-declare var SubtleCrypto: {
+declare const SubtleCrypto: {
   prototype: SubtleCrypto;
   new (): SubtleCrypto;
 };
@@ -34323,7 +34634,7 @@ interface Text extends CharacterData, Slottable {
   splitText(offset: number): Text;
 }
 
-declare var Text: {
+declare const Text: {
   prototype: Text;
   new (data?: string): Text;
 };
@@ -34345,7 +34656,7 @@ interface TextDecoder extends TextDecoderCommon {
    * invocation without options's stream (or set to false) has no input, it's
    * clearest to omit both arguments.
    *
-   *     var string = '',
+   *     const string = '',
    *       decoder = new TextDecoder(encoding),
    *       buffer;
    *     while ((buffer = next_chunk())) {
@@ -34362,7 +34673,7 @@ interface TextDecoder extends TextDecoderCommon {
   decode(input?: AllowSharedBufferSource, options?: TextDecodeOptions): string;
 }
 
-declare var TextDecoder: {
+declare const TextDecoder: {
   prototype: TextDecoder;
   new (label?: string, options?: TextDecoderOptions): TextDecoder;
 };
@@ -34397,7 +34708,7 @@ interface TextDecoderStream extends GenericTransformStream, TextDecoderCommon {
   readonly writable: WritableStream<BufferSource>;
 }
 
-declare var TextDecoderStream: {
+declare const TextDecoderStream: {
   prototype: TextDecoderStream;
   new (label?: string, options?: TextDecoderOptions): TextDecoderStream;
 };
@@ -34432,7 +34743,7 @@ interface TextEncoder extends TextEncoderCommon {
   ): TextEncoderEncodeIntoResult;
 }
 
-declare var TextEncoder: {
+declare const TextEncoder: {
   prototype: TextEncoder;
   new (): TextEncoder;
 };
@@ -34453,7 +34764,7 @@ interface TextEncoderStream extends GenericTransformStream, TextEncoderCommon {
   readonly writable: WritableStream<string>;
 }
 
-declare var TextEncoderStream: {
+declare const TextEncoderStream: {
   prototype: TextEncoderStream;
   new (): TextEncoderStream;
 };
@@ -34469,7 +34780,7 @@ interface TextEvent extends UIEvent {
   ): void;
 }
 
-declare var TextEvent: {
+declare const TextEvent: {
   prototype: TextEvent;
   new (): TextEvent;
 };
@@ -34567,7 +34878,7 @@ interface TextMetrics {
   readonly width: number;
 }
 
-declare var TextMetrics: {
+declare const TextMetrics: {
   prototype: TextMetrics;
   new (): TextMetrics;
 };
@@ -34652,7 +34963,7 @@ interface TextTrack extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/cuechange_event)
    */
-  oncuechange: ((this: TextTrack, ev: Event) => any) | null;
+  oncuechange: ((this: TextTrack, ev: Event) => unknown) | null;
   /**
    * Adds the given cue to textTrack's text track list of cues.
    *
@@ -34669,7 +34980,7 @@ interface TextTrack extends EventTarget {
   removeCue(cue: TextTrackCue): void;
   addEventListener<K extends keyof TextTrackEventMap>(
     type: K,
-    listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any,
+    listener: (this: TextTrack, ev: TextTrackEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -34679,7 +34990,7 @@ interface TextTrack extends EventTarget {
   ): void;
   removeEventListener<K extends keyof TextTrackEventMap>(
     type: K,
-    listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any,
+    listener: (this: TextTrack, ev: TextTrackEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -34689,7 +35000,7 @@ interface TextTrack extends EventTarget {
   ): void;
 }
 
-declare var TextTrack: {
+declare const TextTrack: {
   prototype: TextTrack;
   new (): TextTrack;
 };
@@ -34729,12 +35040,12 @@ interface TextTrackCue extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/enter_event)
    */
-  onenter: ((this: TextTrackCue, ev: Event) => any) | null;
+  onenter: ((this: TextTrackCue, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/exit_event)
    */
-  onexit: ((this: TextTrackCue, ev: Event) => any) | null;
+  onexit: ((this: TextTrackCue, ev: Event) => unknown) | null;
   /**
    * Returns true if the text track cue pause-on-exit flag is set, false
    * otherwise.
@@ -34764,7 +35075,7 @@ interface TextTrackCue extends EventTarget {
   readonly track: TextTrack | null;
   addEventListener<K extends keyof TextTrackCueEventMap>(
     type: K,
-    listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => any,
+    listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -34774,7 +35085,7 @@ interface TextTrackCue extends EventTarget {
   ): void;
   removeEventListener<K extends keyof TextTrackCueEventMap>(
     type: K,
-    listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => any,
+    listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -34784,7 +35095,7 @@ interface TextTrackCue extends EventTarget {
   ): void;
 }
 
-declare var TextTrackCue: {
+declare const TextTrackCue: {
   prototype: TextTrackCue;
   new (): TextTrackCue;
 };
@@ -34812,7 +35123,7 @@ interface TextTrackCueList {
   [index: number]: TextTrackCue;
 }
 
-declare var TextTrackCueList: {
+declare const TextTrackCueList: {
   prototype: TextTrackCueList;
   new (): TextTrackCueList;
 };
@@ -34834,17 +35145,17 @@ interface TextTrackList extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/addtrack_event)
    */
-  onaddtrack: ((this: TextTrackList, ev: TrackEvent) => any) | null;
+  onaddtrack: ((this: TextTrackList, ev: TrackEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/change_event)
    */
-  onchange: ((this: TextTrackList, ev: Event) => any) | null;
+  onchange: ((this: TextTrackList, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/removeTrack_event)
    */
-  onremovetrack: ((this: TextTrackList, ev: TrackEvent) => any) | null;
+  onremovetrack: ((this: TextTrackList, ev: TrackEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/getTrackById)
@@ -34852,7 +35163,7 @@ interface TextTrackList extends EventTarget {
   getTrackById(id: string): TextTrack | null;
   addEventListener<K extends keyof TextTrackListEventMap>(
     type: K,
-    listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => any,
+    listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -34862,7 +35173,7 @@ interface TextTrackList extends EventTarget {
   ): void;
   removeEventListener<K extends keyof TextTrackListEventMap>(
     type: K,
-    listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => any,
+    listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -34873,7 +35184,7 @@ interface TextTrackList extends EventTarget {
   [index: number]: TextTrack;
 }
 
-declare var TextTrackList: {
+declare const TextTrackList: {
   prototype: TextTrackList;
   new (): TextTrackList;
 };
@@ -34912,7 +35223,7 @@ interface TimeRanges {
   start(index: number): number;
 }
 
-declare var TimeRanges: {
+declare const TimeRanges: {
   prototype: TimeRanges;
   new (): TimeRanges;
 };
@@ -34931,7 +35242,7 @@ interface ToggleEvent extends Event {
   readonly oldState: string;
 }
 
-declare var ToggleEvent: {
+declare const ToggleEvent: {
   prototype: ToggleEvent;
   new (type: string, eventInitDict?: ToggleEventInit): ToggleEvent;
 };
@@ -34975,7 +35286,7 @@ interface Touch {
   readonly target: EventTarget;
 }
 
-declare var Touch: {
+declare const Touch: {
   prototype: Touch;
   new (touchInitDict: TouchInit): Touch;
 };
@@ -35027,7 +35338,7 @@ interface TouchEvent extends UIEvent {
   readonly touches: TouchList;
 }
 
-declare var TouchEvent: {
+declare const TouchEvent: {
   prototype: TouchEvent;
   new (type: string, eventInitDict?: TouchEventInit): TouchEvent;
 };
@@ -35051,7 +35362,7 @@ interface TouchList {
   [index: number]: Touch;
 }
 
-declare var TouchList: {
+declare const TouchList: {
   prototype: TouchList;
   new (): TouchList;
 };
@@ -35074,13 +35385,13 @@ interface TrackEvent extends Event {
   readonly track: TextTrack | null;
 }
 
-declare var TrackEvent: {
+declare const TrackEvent: {
   prototype: TrackEvent;
   new (type: string, eventInitDict?: TrackEventInit): TrackEvent;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStream) */
-interface TransformStream<I = any, O = any> {
+interface TransformStream<I = unknown, O = unknown> {
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/TransformStream/readable)
@@ -35093,9 +35404,9 @@ interface TransformStream<I = any, O = any> {
   readonly writable: WritableStream<I>;
 }
 
-declare var TransformStream: {
+declare const TransformStream: {
   prototype: TransformStream;
-  new <I = any, O = any>(
+  new <I = unknown, O = unknown>(
     transformer?: Transformer<I, O>,
     writableStrategy?: QueuingStrategy<I>,
     readableStrategy?: QueuingStrategy<O>,
@@ -35106,7 +35417,7 @@ declare var TransformStream: {
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController)
  */
-interface TransformStreamDefaultController<O = any> {
+interface TransformStreamDefaultController<O = unknown> {
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/desiredSize)
@@ -35121,7 +35432,7 @@ interface TransformStreamDefaultController<O = any> {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/error)
    */
-  error(reason?: any): void;
+  error(reason?: unknown): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/terminate)
@@ -35129,7 +35440,7 @@ interface TransformStreamDefaultController<O = any> {
   terminate(): void;
 }
 
-declare var TransformStreamDefaultController: {
+declare const TransformStreamDefaultController: {
   prototype: TransformStreamDefaultController;
   new (): TransformStreamDefaultController;
 };
@@ -35157,7 +35468,7 @@ interface TransitionEvent extends Event {
   readonly pseudoElement: string;
 }
 
-declare var TransitionEvent: {
+declare const TransitionEvent: {
   prototype: TransitionEvent;
   new (
     type: string,
@@ -35225,7 +35536,7 @@ interface TreeWalker {
   previousSibling(): Node | null;
 }
 
-declare var TreeWalker: {
+declare const TreeWalker: {
   prototype: TreeWalker;
   new (): TreeWalker;
 };
@@ -35261,7 +35572,7 @@ interface UIEvent extends Event {
   ): void;
 }
 
-declare var UIEvent: {
+declare const UIEvent: {
   prototype: UIEvent;
   new (type: string, eventInitDict?: UIEventInit): UIEvent;
 };
@@ -35305,7 +35616,7 @@ interface URL {
   toJSON(): string;
 }
 
-declare var URL: {
+declare const URL: {
   prototype: URL;
   new (url: string | URL, base?: string | URL): URL;
   /**
@@ -35331,7 +35642,7 @@ declare var URL: {
 };
 
 type webkitURL = URL;
-declare var webkitURL: typeof URL;
+declare const webkitURL: typeof URL;
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams) */
 interface URLSearchParams {
@@ -35396,14 +35707,18 @@ interface URLSearchParams {
   toString(): string;
   forEach(
     callbackfn: (value: string, key: string, parent: URLSearchParams) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var URLSearchParams: {
+declare const URLSearchParams: {
   prototype: URLSearchParams;
   new (
-    init?: string[][] | Record<string, string> | string | URLSearchParams,
+    init?:
+      | readonly (readonly string[])[]
+      | Record<string, string>
+      | string
+      | URLSearchParams,
   ): URLSearchParams;
 };
 
@@ -35421,7 +35736,7 @@ interface UserActivation {
   readonly isActive: boolean;
 }
 
-declare var UserActivation: {
+declare const UserActivation: {
   prototype: UserActivation;
   new (): UserActivation;
 };
@@ -35464,7 +35779,7 @@ interface VTTCue extends TextTrackCue {
   getCueAsHTML(): DocumentFragment;
   addEventListener<K extends keyof TextTrackCueEventMap>(
     type: K,
-    listener: (this: VTTCue, ev: TextTrackCueEventMap[K]) => any,
+    listener: (this: VTTCue, ev: TextTrackCueEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -35474,7 +35789,7 @@ interface VTTCue extends TextTrackCue {
   ): void;
   removeEventListener<K extends keyof TextTrackCueEventMap>(
     type: K,
-    listener: (this: VTTCue, ev: TextTrackCueEventMap[K]) => any,
+    listener: (this: VTTCue, ev: TextTrackCueEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -35484,7 +35799,7 @@ interface VTTCue extends TextTrackCue {
   ): void;
 }
 
-declare var VTTCue: {
+declare const VTTCue: {
   prototype: VTTCue;
   new (startTime: number, endTime: number, text: string): VTTCue;
 };
@@ -35501,7 +35816,7 @@ interface VTTRegion {
   width: number;
 }
 
-declare var VTTRegion: {
+declare const VTTRegion: {
   prototype: VTTRegion;
   new (): VTTRegion;
 };
@@ -35563,7 +35878,7 @@ interface ValidityState {
   readonly valueMissing: boolean;
 }
 
-declare var ValidityState: {
+declare const ValidityState: {
   prototype: ValidityState;
   new (): ValidityState;
 };
@@ -35597,7 +35912,7 @@ interface VideoColorSpace {
   toJSON(): VideoColorSpaceInit;
 }
 
-declare var VideoColorSpace: {
+declare const VideoColorSpace: {
   prototype: VideoColorSpace;
   new (init?: VideoColorSpaceInit): VideoColorSpace;
 };
@@ -35621,7 +35936,7 @@ interface VideoDecoder extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/dequeue_event)
    */
-  ondequeue: ((this: VideoDecoder, ev: Event) => any) | null;
+  ondequeue: ((this: VideoDecoder, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/state)
@@ -35654,7 +35969,7 @@ interface VideoDecoder extends EventTarget {
   reset(): void;
   addEventListener<K extends keyof VideoDecoderEventMap>(
     type: K,
-    listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => any,
+    listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -35664,7 +35979,7 @@ interface VideoDecoder extends EventTarget {
   ): void;
   removeEventListener<K extends keyof VideoDecoderEventMap>(
     type: K,
-    listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => any,
+    listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -35674,7 +35989,7 @@ interface VideoDecoder extends EventTarget {
   ): void;
 }
 
-declare var VideoDecoder: {
+declare const VideoDecoder: {
   prototype: VideoDecoder;
   new (init: VideoDecoderInit): VideoDecoder;
   /**
@@ -35703,7 +36018,7 @@ interface VideoEncoder extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/dequeue_event)
    */
-  ondequeue: ((this: VideoEncoder, ev: Event) => any) | null;
+  ondequeue: ((this: VideoEncoder, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/state)
@@ -35736,7 +36051,7 @@ interface VideoEncoder extends EventTarget {
   reset(): void;
   addEventListener<K extends keyof VideoEncoderEventMap>(
     type: K,
-    listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => any,
+    listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -35746,7 +36061,7 @@ interface VideoEncoder extends EventTarget {
   ): void;
   removeEventListener<K extends keyof VideoEncoderEventMap>(
     type: K,
-    listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => any,
+    listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -35756,7 +36071,7 @@ interface VideoEncoder extends EventTarget {
   ): void;
 }
 
-declare var VideoEncoder: {
+declare const VideoEncoder: {
   prototype: VideoEncoder;
   new (init: VideoEncoderInit): VideoEncoder;
   /**
@@ -35843,7 +36158,7 @@ interface VideoFrame {
   ): Promise<PlaneLayout[]>;
 }
 
-declare var VideoFrame: {
+declare const VideoFrame: {
   prototype: VideoFrame;
   new (image: CanvasImageSource, init?: VideoFrameInit): VideoFrame;
   new (data: AllowSharedBufferSource, init: VideoFrameBufferInit): VideoFrame;
@@ -35882,7 +36197,7 @@ interface VideoPlaybackQuality {
   readonly totalVideoFrames: number;
 }
 
-declare var VideoPlaybackQuality: {
+declare const VideoPlaybackQuality: {
   prototype: VideoPlaybackQuality;
   new (): VideoPlaybackQuality;
 };
@@ -35911,7 +36226,7 @@ interface ViewTransition {
   skipTransition(): void;
 }
 
-declare var ViewTransition: {
+declare const ViewTransition: {
   prototype: ViewTransition;
   new (): ViewTransition;
 };
@@ -35942,12 +36257,12 @@ interface VisualViewport extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/resize_event)
    */
-  onresize: ((this: VisualViewport, ev: Event) => any) | null;
+  onresize: ((this: VisualViewport, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/scroll_event)
    */
-  onscroll: ((this: VisualViewport, ev: Event) => any) | null;
+  onscroll: ((this: VisualViewport, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/pageLeft)
@@ -35970,7 +36285,7 @@ interface VisualViewport extends EventTarget {
   readonly width: number;
   addEventListener<K extends keyof VisualViewportEventMap>(
     type: K,
-    listener: (this: VisualViewport, ev: VisualViewportEventMap[K]) => any,
+    listener: (this: VisualViewport, ev: VisualViewportEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -35980,7 +36295,7 @@ interface VisualViewport extends EventTarget {
   ): void;
   removeEventListener<K extends keyof VisualViewportEventMap>(
     type: K,
-    listener: (this: VisualViewport, ev: VisualViewportEventMap[K]) => any,
+    listener: (this: VisualViewport, ev: VisualViewportEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -35990,7 +36305,7 @@ interface VisualViewport extends EventTarget {
   ): void;
 }
 
-declare var VisualViewport: {
+declare const VisualViewport: {
   prototype: VisualViewport;
   new (): VisualViewport;
 };
@@ -36151,7 +36466,7 @@ interface WEBGL_draw_buffers {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_draw_buffers/drawBuffersWEBGL)
    */
-  drawBuffersWEBGL(buffers: GLenum[]): void;
+  drawBuffersWEBGL(buffers: readonly GLenum[]): void;
   readonly COLOR_ATTACHMENT0_WEBGL: 0x8ce0;
   readonly COLOR_ATTACHMENT1_WEBGL: 0x8ce1;
   readonly COLOR_ATTACHMENT2_WEBGL: 0x8ce2;
@@ -36213,11 +36528,11 @@ interface WEBGL_multi_draw {
    */
   multiDrawArraysInstancedWEBGL(
     mode: GLenum,
-    firstsList: Int32Array | GLint[],
+    firstsList: Int32Array | readonly GLint[],
     firstsOffset: number,
-    countsList: Int32Array | GLsizei[],
+    countsList: Int32Array | readonly GLsizei[],
     countsOffset: number,
-    instanceCountsList: Int32Array | GLsizei[],
+    instanceCountsList: Int32Array | readonly GLsizei[],
     instanceCountsOffset: number,
     drawcount: GLsizei,
   ): void;
@@ -36227,9 +36542,9 @@ interface WEBGL_multi_draw {
    */
   multiDrawArraysWEBGL(
     mode: GLenum,
-    firstsList: Int32Array | GLint[],
+    firstsList: Int32Array | readonly GLint[],
     firstsOffset: number,
-    countsList: Int32Array | GLsizei[],
+    countsList: Int32Array | readonly GLsizei[],
     countsOffset: number,
     drawcount: GLsizei,
   ): void;
@@ -36239,12 +36554,12 @@ interface WEBGL_multi_draw {
    */
   multiDrawElementsInstancedWEBGL(
     mode: GLenum,
-    countsList: Int32Array | GLsizei[],
+    countsList: Int32Array | readonly GLsizei[],
     countsOffset: number,
     type: GLenum,
-    offsetsList: Int32Array | GLsizei[],
+    offsetsList: Int32Array | readonly GLsizei[],
     offsetsOffset: number,
-    instanceCountsList: Int32Array | GLsizei[],
+    instanceCountsList: Int32Array | readonly GLsizei[],
     instanceCountsOffset: number,
     drawcount: GLsizei,
   ): void;
@@ -36254,10 +36569,10 @@ interface WEBGL_multi_draw {
    */
   multiDrawElementsWEBGL(
     mode: GLenum,
-    countsList: Int32Array | GLsizei[],
+    countsList: Int32Array | readonly GLsizei[],
     countsOffset: number,
     type: GLenum,
-    offsetsList: Int32Array | GLsizei[],
+    offsetsList: Int32Array | readonly GLsizei[],
     offsetsOffset: number,
     drawcount: GLsizei,
   ): void;
@@ -36276,7 +36591,7 @@ interface WakeLock {
   request(type?: WakeLockType): Promise<WakeLockSentinel>;
 }
 
-declare var WakeLock: {
+declare const WakeLock: {
   prototype: WakeLock;
   new (): WakeLock;
 };
@@ -36295,7 +36610,7 @@ interface WakeLockSentinel extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WakeLockSentinel/release_event)
    */
-  onrelease: ((this: WakeLockSentinel, ev: Event) => any) | null;
+  onrelease: ((this: WakeLockSentinel, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WakeLockSentinel/released)
@@ -36313,7 +36628,10 @@ interface WakeLockSentinel extends EventTarget {
   release(): Promise<void>;
   addEventListener<K extends keyof WakeLockSentinelEventMap>(
     type: K,
-    listener: (this: WakeLockSentinel, ev: WakeLockSentinelEventMap[K]) => any,
+    listener: (
+      this: WakeLockSentinel,
+      ev: WakeLockSentinelEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -36323,7 +36641,10 @@ interface WakeLockSentinel extends EventTarget {
   ): void;
   removeEventListener<K extends keyof WakeLockSentinelEventMap>(
     type: K,
-    listener: (this: WakeLockSentinel, ev: WakeLockSentinelEventMap[K]) => any,
+    listener: (
+      this: WakeLockSentinel,
+      ev: WakeLockSentinelEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -36333,7 +36654,7 @@ interface WakeLockSentinel extends EventTarget {
   ): void;
 }
 
-declare var WakeLockSentinel: {
+declare const WakeLockSentinel: {
   prototype: WakeLockSentinel;
   new (): WakeLockSentinel;
 };
@@ -36356,7 +36677,7 @@ interface WaveShaperNode extends AudioNode {
   oversample: OverSampleType;
 }
 
-declare var WaveShaperNode: {
+declare const WaveShaperNode: {
   prototype: WaveShaperNode;
   new (context: BaseAudioContext, options?: WaveShaperOptions): WaveShaperNode;
 };
@@ -36370,7 +36691,7 @@ interface WebGL2RenderingContext
     WebGL2RenderingContextOverloads,
     WebGLRenderingContextBase {}
 
-declare var WebGL2RenderingContext: {
+declare const WebGL2RenderingContext: {
   prototype: WebGL2RenderingContext;
   new (): WebGL2RenderingContext;
   readonly READ_BUFFER: 0x0c02;
@@ -37187,7 +37508,7 @@ interface WebGL2RenderingContextBase {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawBuffers)
    */
-  drawBuffers(buffers: GLenum[]): void;
+  drawBuffers(buffers: readonly GLenum[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawElementsInstanced)
@@ -37253,16 +37574,16 @@ interface WebGL2RenderingContextBase {
     program: WebGLProgram,
     uniformBlockIndex: GLuint,
     pname: GLenum,
-  ): any;
+  ): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getActiveUniforms)
    */
   getActiveUniforms(
     program: WebGLProgram,
-    uniformIndices: GLuint[],
+    uniformIndices: readonly GLuint[],
     pname: GLenum,
-  ): any;
+  ): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getBufferSubData)
@@ -37283,7 +37604,7 @@ interface WebGL2RenderingContextBase {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getIndexedParameter)
    */
-  getIndexedParameter(target: GLenum, index: GLuint): any;
+  getIndexedParameter(target: GLenum, index: GLuint): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getInternalformatParameter)
@@ -37292,7 +37613,7 @@ interface WebGL2RenderingContextBase {
     target: GLenum,
     internalformat: GLenum,
     pname: GLenum,
-  ): any;
+  ): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getQuery)
@@ -37302,17 +37623,17 @@ interface WebGL2RenderingContextBase {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getQueryParameter)
    */
-  getQueryParameter(query: WebGLQuery, pname: GLenum): any;
+  getQueryParameter(query: WebGLQuery, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getSamplerParameter)
    */
-  getSamplerParameter(sampler: WebGLSampler, pname: GLenum): any;
+  getSamplerParameter(sampler: WebGLSampler, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getSyncParameter)
    */
-  getSyncParameter(sync: WebGLSync, pname: GLenum): any;
+  getSyncParameter(sync: WebGLSync, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getTransformFeedbackVarying)
@@ -37332,20 +37653,20 @@ interface WebGL2RenderingContextBase {
    */
   getUniformIndices(
     program: WebGLProgram,
-    uniformNames: string[],
+    uniformNames: readonly string[],
   ): GLuint[] | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateFramebuffer)
    */
-  invalidateFramebuffer(target: GLenum, attachments: GLenum[]): void;
+  invalidateFramebuffer(target: GLenum, attachments: readonly GLenum[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateSubFramebuffer)
    */
   invalidateSubFramebuffer(
     target: GLenum,
-    attachments: GLenum[],
+    attachments: readonly GLenum[],
     x: GLint,
     y: GLint,
     width: GLsizei,
@@ -37538,7 +37859,7 @@ interface WebGL2RenderingContextBase {
    */
   transformFeedbackVaryings(
     program: WebGLProgram,
-    varyings: string[],
+    varyings: readonly string[],
     bufferMode: GLenum,
   ): void;
   /**
@@ -38375,7 +38696,7 @@ interface WebGLActiveInfo {
   readonly type: GLenum;
 }
 
-declare var WebGLActiveInfo: {
+declare const WebGLActiveInfo: {
   prototype: WebGLActiveInfo;
   new (): WebGLActiveInfo;
 };
@@ -38388,7 +38709,7 @@ declare var WebGLActiveInfo: {
  */
 interface WebGLBuffer {}
 
-declare var WebGLBuffer: {
+declare const WebGLBuffer: {
   prototype: WebGLBuffer;
   new (): WebGLBuffer;
 };
@@ -38408,7 +38729,7 @@ interface WebGLContextEvent extends Event {
   readonly statusMessage: string;
 }
 
-declare var WebGLContextEvent: {
+declare const WebGLContextEvent: {
   prototype: WebGLContextEvent;
   new (type: string, eventInit?: WebGLContextEventInit): WebGLContextEvent;
 };
@@ -38421,7 +38742,7 @@ declare var WebGLContextEvent: {
  */
 interface WebGLFramebuffer {}
 
-declare var WebGLFramebuffer: {
+declare const WebGLFramebuffer: {
   prototype: WebGLFramebuffer;
   new (): WebGLFramebuffer;
 };
@@ -38435,7 +38756,7 @@ declare var WebGLFramebuffer: {
  */
 interface WebGLProgram {}
 
-declare var WebGLProgram: {
+declare const WebGLProgram: {
   prototype: WebGLProgram;
   new (): WebGLProgram;
 };
@@ -38443,7 +38764,7 @@ declare var WebGLProgram: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLQuery) */
 interface WebGLQuery {}
 
-declare var WebGLQuery: {
+declare const WebGLQuery: {
   prototype: WebGLQuery;
   new (): WebGLQuery;
 };
@@ -38456,7 +38777,7 @@ declare var WebGLQuery: {
  */
 interface WebGLRenderbuffer {}
 
-declare var WebGLRenderbuffer: {
+declare const WebGLRenderbuffer: {
   prototype: WebGLRenderbuffer;
   new (): WebGLRenderbuffer;
 };
@@ -38472,7 +38793,7 @@ interface WebGLRenderingContext
   extends WebGLRenderingContextBase,
     WebGLRenderingContextOverloads {}
 
-declare var WebGLRenderingContext: {
+declare const WebGLRenderingContext: {
   prototype: WebGLRenderingContext;
   new (): WebGLRenderingContext;
   readonly DEPTH_BUFFER_BIT: 0x00000100;
@@ -39129,7 +39450,7 @@ interface WebGLRenderingContextBase {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getBufferParameter)
    */
-  getBufferParameter(target: GLenum, pname: GLenum): any;
+  getBufferParameter(target: GLenum, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getContextAttributes)
@@ -39228,7 +39549,7 @@ interface WebGLRenderingContextBase {
   getExtension(extensionName: 'WEBGL_draw_buffers'): WEBGL_draw_buffers | null;
   getExtension(extensionName: 'WEBGL_lose_context'): WEBGL_lose_context | null;
   getExtension(extensionName: 'WEBGL_multi_draw'): WEBGL_multi_draw | null;
-  getExtension(name: string): any;
+  getExtension(name: string): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getFramebufferAttachmentParameter)
@@ -39237,12 +39558,12 @@ interface WebGLRenderingContextBase {
     target: GLenum,
     attachment: GLenum,
     pname: GLenum,
-  ): any;
+  ): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getParameter)
    */
-  getParameter(pname: GLenum): any;
+  getParameter(pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getProgramInfoLog)
@@ -39252,12 +39573,12 @@ interface WebGLRenderingContextBase {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getProgramParameter)
    */
-  getProgramParameter(program: WebGLProgram, pname: GLenum): any;
+  getProgramParameter(program: WebGLProgram, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getRenderbufferParameter)
    */
-  getRenderbufferParameter(target: GLenum, pname: GLenum): any;
+  getRenderbufferParameter(target: GLenum, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderInfoLog)
@@ -39267,7 +39588,7 @@ interface WebGLRenderingContextBase {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderParameter)
    */
-  getShaderParameter(shader: WebGLShader, pname: GLenum): any;
+  getShaderParameter(shader: WebGLShader, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderPrecisionFormat)
@@ -39290,12 +39611,12 @@ interface WebGLRenderingContextBase {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getTexParameter)
    */
-  getTexParameter(target: GLenum, pname: GLenum): any;
+  getTexParameter(target: GLenum, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getUniform)
    */
-  getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;
+  getUniform(program: WebGLProgram, location: WebGLUniformLocation): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getUniformLocation)
@@ -39308,7 +39629,7 @@ interface WebGLRenderingContextBase {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getVertexAttrib)
    */
-  getVertexAttrib(index: GLuint, pname: GLenum): any;
+  getVertexAttrib(index: GLuint, pname: GLenum): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getVertexAttribOffset)
@@ -40067,7 +40388,7 @@ interface WebGLRenderingContextOverloads {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLSampler) */
 interface WebGLSampler {}
 
-declare var WebGLSampler: {
+declare const WebGLSampler: {
   prototype: WebGLSampler;
   new (): WebGLSampler;
 };
@@ -40080,7 +40401,7 @@ declare var WebGLSampler: {
  */
 interface WebGLShader {}
 
-declare var WebGLShader: {
+declare const WebGLShader: {
   prototype: WebGLShader;
   new (): WebGLShader;
 };
@@ -40110,7 +40431,7 @@ interface WebGLShaderPrecisionFormat {
   readonly rangeMin: GLint;
 }
 
-declare var WebGLShaderPrecisionFormat: {
+declare const WebGLShaderPrecisionFormat: {
   prototype: WebGLShaderPrecisionFormat;
   new (): WebGLShaderPrecisionFormat;
 };
@@ -40118,7 +40439,7 @@ declare var WebGLShaderPrecisionFormat: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLSync) */
 interface WebGLSync {}
 
-declare var WebGLSync: {
+declare const WebGLSync: {
   prototype: WebGLSync;
   new (): WebGLSync;
 };
@@ -40131,7 +40452,7 @@ declare var WebGLSync: {
  */
 interface WebGLTexture {}
 
-declare var WebGLTexture: {
+declare const WebGLTexture: {
   prototype: WebGLTexture;
   new (): WebGLTexture;
 };
@@ -40142,7 +40463,7 @@ declare var WebGLTexture: {
  */
 interface WebGLTransformFeedback {}
 
-declare var WebGLTransformFeedback: {
+declare const WebGLTransformFeedback: {
   prototype: WebGLTransformFeedback;
   new (): WebGLTransformFeedback;
 };
@@ -40156,7 +40477,7 @@ declare var WebGLTransformFeedback: {
  */
 interface WebGLUniformLocation {}
 
-declare var WebGLUniformLocation: {
+declare const WebGLUniformLocation: {
   prototype: WebGLUniformLocation;
   new (): WebGLUniformLocation;
 };
@@ -40167,7 +40488,7 @@ declare var WebGLUniformLocation: {
  */
 interface WebGLVertexArrayObject {}
 
-declare var WebGLVertexArrayObject: {
+declare const WebGLVertexArrayObject: {
   prototype: WebGLVertexArrayObject;
   new (): WebGLVertexArrayObject;
 };
@@ -40226,22 +40547,22 @@ interface WebSocket extends EventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/close_event)
    */
-  onclose: ((this: WebSocket, ev: CloseEvent) => any) | null;
+  onclose: ((this: WebSocket, ev: CloseEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/error_event)
    */
-  onerror: ((this: WebSocket, ev: Event) => any) | null;
+  onerror: ((this: WebSocket, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/message_event)
    */
-  onmessage: ((this: WebSocket, ev: MessageEvent) => any) | null;
+  onmessage: ((this: WebSocket, ev: MessageEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/open_event)
    */
-  onopen: ((this: WebSocket, ev: Event) => any) | null;
+  onopen: ((this: WebSocket, ev: Event) => unknown) | null;
   /**
    * Returns the subprotocol selected by the server, if any. It can be used in
    * conjunction with the array form of the constructor's second argument to
@@ -40286,7 +40607,7 @@ interface WebSocket extends EventTarget {
   readonly CLOSED: 3;
   addEventListener<K extends keyof WebSocketEventMap>(
     type: K,
-    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any,
+    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -40296,7 +40617,7 @@ interface WebSocket extends EventTarget {
   ): void;
   removeEventListener<K extends keyof WebSocketEventMap>(
     type: K,
-    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any,
+    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -40306,9 +40627,9 @@ interface WebSocket extends EventTarget {
   ): void;
 }
 
-declare var WebSocket: {
+declare const WebSocket: {
   prototype: WebSocket;
-  new (url: string | URL, protocols?: string | string[]): WebSocket;
+  new (url: string | URL, protocols?: string | readonly string[]): WebSocket;
   readonly CONNECTING: 0;
   readonly OPEN: 1;
   readonly CLOSING: 2;
@@ -40367,7 +40688,7 @@ interface WebTransport {
   ): Promise<WritableStream>;
 }
 
-declare var WebTransport: {
+declare const WebTransport: {
   prototype: WebTransport;
   new (url: string | URL, options?: WebTransportOptions): WebTransport;
 };
@@ -40391,7 +40712,7 @@ interface WebTransportBidirectionalStream {
   readonly writable: WritableStream;
 }
 
-declare var WebTransportBidirectionalStream: {
+declare const WebTransportBidirectionalStream: {
   prototype: WebTransportBidirectionalStream;
   new (): WebTransportBidirectionalStream;
 };
@@ -40440,7 +40761,7 @@ interface WebTransportDatagramDuplexStream {
   readonly writable: WritableStream;
 }
 
-declare var WebTransportDatagramDuplexStream: {
+declare const WebTransportDatagramDuplexStream: {
   prototype: WebTransportDatagramDuplexStream;
   new (): WebTransportDatagramDuplexStream;
 };
@@ -40463,7 +40784,7 @@ interface WebTransportError extends DOMException {
   readonly streamErrorCode: number | null;
 }
 
-declare var WebTransportError: {
+declare const WebTransportError: {
   prototype: WebTransportError;
   new (message?: string, options?: WebTransportErrorOptions): WebTransportError;
 };
@@ -40500,7 +40821,7 @@ interface WheelEvent extends MouseEvent {
   readonly DOM_DELTA_PAGE: 0x02;
 }
 
-declare var WheelEvent: {
+declare const WheelEvent: {
   prototype: WheelEvent;
   new (type: string, eventInitDict?: WheelEventInit): WheelEvent;
   readonly DOM_DELTA_PIXEL: 0x00;
@@ -40624,7 +40945,7 @@ interface Window
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/devicemotion_event)
    */
-  ondevicemotion: ((this: Window, ev: DeviceMotionEvent) => any) | null;
+  ondevicemotion: ((this: Window, ev: DeviceMotionEvent) => unknown) | null;
   /**
    * Available only in secure contexts.
    *
@@ -40632,7 +40953,7 @@ interface Window
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/deviceorientation_event)
    */
   ondeviceorientation:
-    | ((this: Window, ev: DeviceOrientationEvent) => any)
+    | ((this: Window, ev: DeviceOrientationEvent) => unknown)
     | null;
   /**
    * Available only in secure contexts.
@@ -40641,7 +40962,7 @@ interface Window
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/deviceorientationabsolute_event)
    */
   ondeviceorientationabsolute:
-    | ((this: Window, ev: DeviceOrientationEvent) => any)
+    | ((this: Window, ev: DeviceOrientationEvent) => unknown)
     | null;
   /**
    * @deprecated
@@ -40649,9 +40970,9 @@ interface Window
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Window/orientationchange_event)
    */
-  onorientationchange: ((this: Window, ev: Event) => any) | null;
+  onorientationchange: ((this: Window, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/opener) */
-  opener: any;
+  opener: unknown;
   /**
    * @deprecated
    *
@@ -40760,7 +41081,7 @@ interface Window
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/window) */
   readonly window: Window & typeof globalThis;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/alert) */
-  alert(message?: any): void;
+  alert(message?: unknown): void;
   /**
    * @deprecated
    *
@@ -40845,11 +41166,11 @@ interface Window
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/postMessage)
    */
   postMessage(
-    message: any,
+    message: unknown,
     targetOrigin: string,
-    transfer?: Transferable[],
+    transfer?: readonly Transferable[],
   ): void;
-  postMessage(message: any, options?: WindowPostMessageOptions): void;
+  postMessage(message: unknown, options?: WindowPostMessageOptions): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/print) */
   print(): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/prompt) */
@@ -40890,7 +41211,7 @@ interface Window
   stop(): void;
   addEventListener<K extends keyof WindowEventMap>(
     type: K,
-    listener: (this: Window, ev: WindowEventMap[K]) => any,
+    listener: (this: Window, ev: WindowEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -40900,7 +41221,7 @@ interface Window
   ): void;
   removeEventListener<K extends keyof WindowEventMap>(
     type: K,
-    listener: (this: Window, ev: WindowEventMap[K]) => any,
+    listener: (this: Window, ev: WindowEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -40911,7 +41232,7 @@ interface Window
   [index: number]: Window;
 }
 
-declare var Window: {
+declare const Window: {
   prototype: Window;
   new (): Window;
 };
@@ -40942,102 +41263,106 @@ interface WindowEventHandlers {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/afterprint_event)
    */
-  onafterprint: ((this: WindowEventHandlers, ev: Event) => any) | null;
+  onafterprint: ((this: WindowEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/beforeprint_event)
    */
-  onbeforeprint: ((this: WindowEventHandlers, ev: Event) => any) | null;
+  onbeforeprint: ((this: WindowEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/beforeunload_event)
    */
   onbeforeunload:
-    | ((this: WindowEventHandlers, ev: BeforeUnloadEvent) => any)
+    | ((this: WindowEventHandlers, ev: BeforeUnloadEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/gamepadconnected_event)
    */
   ongamepadconnected:
-    | ((this: WindowEventHandlers, ev: GamepadEvent) => any)
+    | ((this: WindowEventHandlers, ev: GamepadEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/gamepaddisconnected_event)
    */
   ongamepaddisconnected:
-    | ((this: WindowEventHandlers, ev: GamepadEvent) => any)
+    | ((this: WindowEventHandlers, ev: GamepadEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/hashchange_event)
    */
   onhashchange:
-    | ((this: WindowEventHandlers, ev: HashChangeEvent) => any)
+    | ((this: WindowEventHandlers, ev: HashChangeEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/languagechange_event)
    */
-  onlanguagechange: ((this: WindowEventHandlers, ev: Event) => any) | null;
+  onlanguagechange: ((this: WindowEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/message_event)
    */
-  onmessage: ((this: WindowEventHandlers, ev: MessageEvent) => any) | null;
+  onmessage: ((this: WindowEventHandlers, ev: MessageEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/messageerror_event)
    */
-  onmessageerror: ((this: WindowEventHandlers, ev: MessageEvent) => any) | null;
+  onmessageerror:
+    | ((this: WindowEventHandlers, ev: MessageEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/offline_event)
    */
-  onoffline: ((this: WindowEventHandlers, ev: Event) => any) | null;
+  onoffline: ((this: WindowEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/online_event)
    */
-  ononline: ((this: WindowEventHandlers, ev: Event) => any) | null;
+  ononline: ((this: WindowEventHandlers, ev: Event) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/pagehide_event)
    */
   onpagehide:
-    | ((this: WindowEventHandlers, ev: PageTransitionEvent) => any)
+    | ((this: WindowEventHandlers, ev: PageTransitionEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/pageshow_event)
    */
   onpageshow:
-    | ((this: WindowEventHandlers, ev: PageTransitionEvent) => any)
+    | ((this: WindowEventHandlers, ev: PageTransitionEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/popstate_event)
    */
-  onpopstate: ((this: WindowEventHandlers, ev: PopStateEvent) => any) | null;
+  onpopstate:
+    | ((this: WindowEventHandlers, ev: PopStateEvent) => unknown)
+    | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/rejectionhandled_event)
    */
   onrejectionhandled:
-    | ((this: WindowEventHandlers, ev: PromiseRejectionEvent) => any)
+    | ((this: WindowEventHandlers, ev: PromiseRejectionEvent) => unknown)
     | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/storage_event)
    */
-  onstorage: ((this: WindowEventHandlers, ev: StorageEvent) => any) | null;
+  onstorage: ((this: WindowEventHandlers, ev: StorageEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Window/unhandledrejection_event)
    */
   onunhandledrejection:
-    | ((this: WindowEventHandlers, ev: PromiseRejectionEvent) => any)
+    | ((this: WindowEventHandlers, ev: PromiseRejectionEvent) => unknown)
     | null;
   /**
    * @deprecated
@@ -41045,13 +41370,13 @@ interface WindowEventHandlers {
    *   [MDN
    *   Reference](https://developer.mozilla.org/docs/Web/API/Window/unload_event)
    */
-  onunload: ((this: WindowEventHandlers, ev: Event) => any) | null;
+  onunload: ((this: WindowEventHandlers, ev: Event) => unknown) | null;
   addEventListener<K extends keyof WindowEventHandlersEventMap>(
     type: K,
     listener: (
       this: WindowEventHandlers,
       ev: WindowEventHandlersEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -41064,7 +41389,7 @@ interface WindowEventHandlers {
     listener: (
       this: WindowEventHandlers,
       ev: WindowEventHandlersEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -41142,21 +41467,24 @@ interface WindowOrWorkerGlobalScope {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/queueMicrotask) */
   queueMicrotask(callback: VoidFunction): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/reportError) */
-  reportError(e: any): void;
+  reportError(e: unknown): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/setInterval) */
   setInterval(
     handler: TimerHandler,
     timeout?: number,
-    ...arguments: any[]
+    ...arguments: readonly unknown[]
   ): number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/setTimeout) */
   setTimeout(
     handler: TimerHandler,
     timeout?: number,
-    ...arguments: any[]
+    ...arguments: readonly unknown[]
   ): number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/structuredClone) */
-  structuredClone<T = any>(value: T, options?: StructuredSerializeOptions): T;
+  structuredClone<T = unknown>(
+    value: T,
+    options?: StructuredSerializeOptions,
+  ): T;
 }
 
 interface WindowSessionStorage {
@@ -41185,12 +41513,12 @@ interface Worker extends EventTarget, AbstractWorker {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Worker/message_event)
    */
-  onmessage: ((this: Worker, ev: MessageEvent) => any) | null;
+  onmessage: ((this: Worker, ev: MessageEvent) => unknown) | null;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Worker/messageerror_event)
    */
-  onmessageerror: ((this: Worker, ev: MessageEvent) => any) | null;
+  onmessageerror: ((this: Worker, ev: MessageEvent) => unknown) | null;
   /**
    * Clones message and transmits it to worker's global environment. transfer
    * can be passed as a list of objects that are to be transferred rather than
@@ -41199,8 +41527,8 @@ interface Worker extends EventTarget, AbstractWorker {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/Worker/postMessage)
    */
-  postMessage(message: any, transfer: Transferable[]): void;
-  postMessage(message: any, options?: StructuredSerializeOptions): void;
+  postMessage(message: unknown, transfer: readonly Transferable[]): void;
+  postMessage(message: unknown, options?: StructuredSerializeOptions): void;
   /**
    * Aborts worker's associated global environment.
    *
@@ -41210,7 +41538,7 @@ interface Worker extends EventTarget, AbstractWorker {
   terminate(): void;
   addEventListener<K extends keyof WorkerEventMap>(
     type: K,
-    listener: (this: Worker, ev: WorkerEventMap[K]) => any,
+    listener: (this: Worker, ev: WorkerEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -41220,7 +41548,7 @@ interface Worker extends EventTarget, AbstractWorker {
   ): void;
   removeEventListener<K extends keyof WorkerEventMap>(
     type: K,
-    listener: (this: Worker, ev: WorkerEventMap[K]) => any,
+    listener: (this: Worker, ev: WorkerEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -41230,7 +41558,7 @@ interface Worker extends EventTarget, AbstractWorker {
   ): void;
 }
 
-declare var Worker: {
+declare const Worker: {
   prototype: Worker;
   new (scriptURL: string | URL, options?: WorkerOptions): Worker;
 };
@@ -41262,7 +41590,7 @@ interface Worklet {
   addModule(moduleURL: string | URL, options?: WorkletOptions): Promise<void>;
 }
 
-declare var Worklet: {
+declare const Worklet: {
   prototype: Worklet;
   new (): Worklet;
 };
@@ -41274,7 +41602,7 @@ declare var Worklet: {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream)
  */
-interface WritableStream<W = any> {
+interface WritableStream<W = unknown> {
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/locked)
@@ -41284,7 +41612,7 @@ interface WritableStream<W = any> {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/abort)
    */
-  abort(reason?: any): Promise<void>;
+  abort(reason?: unknown): Promise<void>;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/close)
@@ -41297,9 +41625,9 @@ interface WritableStream<W = any> {
   getWriter(): WritableStreamDefaultWriter<W>;
 }
 
-declare var WritableStream: {
+declare const WritableStream: {
   prototype: WritableStream;
-  new <W = any>(
+  new <W = unknown>(
     underlyingSink?: UnderlyingSink<W>,
     strategy?: QueuingStrategy<W>,
   ): WritableStream<W>;
@@ -41324,10 +41652,10 @@ interface WritableStreamDefaultController {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultController/error)
    */
-  error(e?: any): void;
+  error(e?: unknown): void;
 }
 
-declare var WritableStreamDefaultController: {
+declare const WritableStreamDefaultController: {
   prototype: WritableStreamDefaultController;
   new (): WritableStreamDefaultController;
 };
@@ -41341,7 +41669,7 @@ declare var WritableStreamDefaultController: {
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter)
  */
-interface WritableStreamDefaultWriter<W = any> {
+interface WritableStreamDefaultWriter<W = unknown> {
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/closed)
@@ -41361,7 +41689,7 @@ interface WritableStreamDefaultWriter<W = any> {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/abort)
    */
-  abort(reason?: any): Promise<void>;
+  abort(reason?: unknown): Promise<void>;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/close)
@@ -41379,9 +41707,9 @@ interface WritableStreamDefaultWriter<W = any> {
   write(chunk?: W): Promise<void>;
 }
 
-declare var WritableStreamDefaultWriter: {
+declare const WritableStreamDefaultWriter: {
   prototype: WritableStreamDefaultWriter;
-  new <W = any>(stream: WritableStream<W>): WritableStreamDefaultWriter<W>;
+  new <W = unknown>(stream: WritableStream<W>): WritableStreamDefaultWriter<W>;
 };
 
 /**
@@ -41394,7 +41722,7 @@ declare var WritableStreamDefaultWriter: {
 interface XMLDocument extends Document {
   addEventListener<K extends keyof DocumentEventMap>(
     type: K,
-    listener: (this: XMLDocument, ev: DocumentEventMap[K]) => any,
+    listener: (this: XMLDocument, ev: DocumentEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -41404,7 +41732,7 @@ interface XMLDocument extends Document {
   ): void;
   removeEventListener<K extends keyof DocumentEventMap>(
     type: K,
-    listener: (this: XMLDocument, ev: DocumentEventMap[K]) => any,
+    listener: (this: XMLDocument, ev: DocumentEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -41414,7 +41742,7 @@ interface XMLDocument extends Document {
   ): void;
 }
 
-declare var XMLDocument: {
+declare const XMLDocument: {
   prototype: XMLDocument;
   new (): XMLDocument;
 };
@@ -41436,7 +41764,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/readystatechange_event)
    */
-  onreadystatechange: ((this: XMLHttpRequest, ev: Event) => any) | null;
+  onreadystatechange: ((this: XMLHttpRequest, ev: Event) => unknown) | null;
   /**
    * Returns client's state.
    *
@@ -41450,7 +41778,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/response)
    */
-  readonly response: any;
+  readonly response: unknown;
   /**
    * Returns response as text.
    *
@@ -41572,9 +41900,9 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/open)
    */
-  open(method: string, url: string | URL): void;
+  open(method: 'post' | 'get' | 'dialog', url: string | URL): void;
   open(
-    method: string,
+    method: 'post' | 'get' | 'dialog',
     url: string | URL,
     async: boolean,
     username?: string | null,
@@ -41621,7 +41949,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
   readonly DONE: 4;
   addEventListener<K extends keyof XMLHttpRequestEventMap>(
     type: K,
-    listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any,
+    listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -41631,7 +41959,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
   ): void;
   removeEventListener<K extends keyof XMLHttpRequestEventMap>(
     type: K,
-    listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any,
+    listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -41641,7 +41969,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
   ): void;
 }
 
-declare var XMLHttpRequest: {
+declare const XMLHttpRequest: {
   prototype: XMLHttpRequest;
   new (): XMLHttpRequest;
   readonly UNSENT: 0;
@@ -41666,19 +41994,19 @@ interface XMLHttpRequestEventTargetEventMap {
  * Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequestEventTarget)
  */
 interface XMLHttpRequestEventTarget extends EventTarget {
-  onabort: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onerror: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onload: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onloadstart: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
+  onabort: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onerror: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onload: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onloadstart: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
   addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(
     type: K,
     listener: (
       this: XMLHttpRequestEventTarget,
       ev: XMLHttpRequestEventTargetEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -41691,7 +42019,7 @@ interface XMLHttpRequestEventTarget extends EventTarget {
     listener: (
       this: XMLHttpRequestEventTarget,
       ev: XMLHttpRequestEventTargetEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -41701,7 +42029,7 @@ interface XMLHttpRequestEventTarget extends EventTarget {
   ): void;
 }
 
-declare var XMLHttpRequestEventTarget: {
+declare const XMLHttpRequestEventTarget: {
   prototype: XMLHttpRequestEventTarget;
   new (): XMLHttpRequestEventTarget;
 };
@@ -41716,7 +42044,7 @@ interface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {
     listener: (
       this: XMLHttpRequestUpload,
       ev: XMLHttpRequestEventTargetEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -41729,7 +42057,7 @@ interface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {
     listener: (
       this: XMLHttpRequestUpload,
       ev: XMLHttpRequestEventTargetEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -41739,7 +42067,7 @@ interface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {
   ): void;
 }
 
-declare var XMLHttpRequestUpload: {
+declare const XMLHttpRequestUpload: {
   prototype: XMLHttpRequestUpload;
   new (): XMLHttpRequestUpload;
 };
@@ -41758,7 +42086,7 @@ interface XMLSerializer {
   serializeToString(root: Node): string;
 }
 
-declare var XMLSerializer: {
+declare const XMLSerializer: {
   prototype: XMLSerializer;
   new (): XMLSerializer;
 };
@@ -41771,7 +42099,7 @@ declare var XMLSerializer: {
  */
 interface XPathEvaluator extends XPathEvaluatorBase {}
 
-declare var XPathEvaluator: {
+declare const XPathEvaluator: {
   prototype: XPathEvaluator;
   new (): XPathEvaluator;
 };
@@ -41821,7 +42149,7 @@ interface XPathExpression {
   ): XPathResult;
 }
 
-declare var XPathExpression: {
+declare const XPathExpression: {
   prototype: XPathExpression;
   new (): XPathExpression;
 };
@@ -41890,7 +42218,7 @@ interface XPathResult {
   readonly FIRST_ORDERED_NODE_TYPE: 9;
 }
 
-declare var XPathResult: {
+declare const XPathResult: {
   prototype: XPathResult;
   new (): XPathResult;
   readonly ANY_TYPE: 0;
@@ -41923,7 +42251,7 @@ interface XSLTProcessor {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/getParameter)
    */
-  getParameter(namespaceURI: string | null, localName: string): any;
+  getParameter(namespaceURI: string | null, localName: string): unknown;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/importStylesheet)
@@ -41946,7 +42274,7 @@ interface XSLTProcessor {
   setParameter(
     namespaceURI: string | null,
     localName: string,
-    value: any,
+    value: unknown,
   ): void;
   /**
    * [MDN
@@ -41960,7 +42288,7 @@ interface XSLTProcessor {
   transformToFragment(source: Node, output: Document): DocumentFragment;
 }
 
-declare var XSLTProcessor: {
+declare const XSLTProcessor: {
   prototype: XSLTProcessor;
   new (): XSLTProcessor;
 };
@@ -41971,7 +42299,7 @@ interface Console {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/assert_static)
    */
-  assert(condition?: boolean, ...data: any[]): void;
+  assert(condition?: boolean, ...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/clear_static)
@@ -41991,32 +42319,32 @@ interface Console {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/debug_static)
    */
-  debug(...data: any[]): void;
+  debug(...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/dir_static)
    */
-  dir(item?: any, options?: any): void;
+  dir(item?: unknown, options?: unknown): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/dirxml_static)
    */
-  dirxml(...data: any[]): void;
+  dirxml(...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/error_static)
    */
-  error(...data: any[]): void;
+  error(...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/group_static)
    */
-  group(...data: any[]): void;
+  group(...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/groupcollapsed_static)
    */
-  groupCollapsed(...data: any[]): void;
+  groupCollapsed(...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/groupend_static)
@@ -42026,17 +42354,17 @@ interface Console {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/info_static)
    */
-  info(...data: any[]): void;
+  info(...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/log_static)
    */
-  log(...data: any[]): void;
+  log(...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/table_static)
    */
-  table(tabularData?: any, properties?: string[]): void;
+  table(tabularData?: unknown, properties?: readonly string[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/time_static)
@@ -42051,21 +42379,21 @@ interface Console {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/timelog_static)
    */
-  timeLog(label?: string, ...data: any[]): void;
+  timeLog(label?: string, ...data: readonly unknown[]): void;
   timeStamp(label?: string): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/trace_static)
    */
-  trace(...data: any[]): void;
+  trace(...data: readonly unknown[]): void;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/console/warn_static)
    */
-  warn(...data: any[]): void;
+  warn(...data: readonly unknown[]): void;
 }
 
-declare var console: Console;
+declare const console: Console;
 
 /**
  * Holds useful CSS-related methods. No object with this interface are
@@ -42077,7 +42405,7 @@ declare namespace CSS {
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSS/highlights_static)
    */
-  var highlights: HighlightRegistry;
+  const highlights: HighlightRegistry;
   /**
    * [MDN
    * Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static)
@@ -42377,7 +42705,7 @@ declare namespace CSS {
 declare namespace WebAssembly {
   interface CompileError extends Error {}
 
-  var CompileError: {
+  const CompileError: {
     prototype: CompileError;
     new (message?: string): CompileError;
     (message?: string): CompileError;
@@ -42392,7 +42720,7 @@ declare namespace WebAssembly {
     valueOf(): ValueTypeMap[T];
   }
 
-  var Global: {
+  const Global: {
     prototype: Global;
     new <T extends ValueType = ValueType>(
       descriptor: GlobalDescriptor<T>,
@@ -42412,14 +42740,14 @@ declare namespace WebAssembly {
     readonly exports: Exports;
   }
 
-  var Instance: {
+  const Instance: {
     prototype: Instance;
     new (module: Module, importObject?: Imports): Instance;
   };
 
   interface LinkError extends Error {}
 
-  var LinkError: {
+  const LinkError: {
     prototype: LinkError;
     new (message?: string): LinkError;
     (message?: string): LinkError;
@@ -42442,7 +42770,7 @@ declare namespace WebAssembly {
     grow(delta: number): number;
   }
 
-  var Memory: {
+  const Memory: {
     prototype: Memory;
     new (descriptor: MemoryDescriptor): Memory;
   };
@@ -42453,7 +42781,7 @@ declare namespace WebAssembly {
    */
   interface Module {}
 
-  var Module: {
+  const Module: {
     prototype: Module;
     new (bytes: BufferSource): Module;
     /**
@@ -42475,7 +42803,7 @@ declare namespace WebAssembly {
 
   interface RuntimeError extends Error {}
 
-  var RuntimeError: {
+  const RuntimeError: {
     prototype: RuntimeError;
     new (message?: string): RuntimeError;
     (message?: string): RuntimeError;
@@ -42495,22 +42823,22 @@ declare namespace WebAssembly {
      * [MDN
      * Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/get)
      */
-    get(index: number): any;
+    get(index: number): unknown;
     /**
      * [MDN
      * Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/grow)
      */
-    grow(delta: number, value?: any): number;
+    grow(delta: number, value?: unknown): number;
     /**
      * [MDN
      * Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/set)
      */
-    set(index: number, value?: any): void;
+    set(index: number, value?: unknown): void;
   }
 
-  var Table: {
+  const Table: {
     prototype: Table;
-    new (descriptor: TableDescriptor, value?: any): Table;
+    new (descriptor: TableDescriptor, value?: unknown): Table;
   };
 
   interface GlobalDescriptor<T extends ValueType = ValueType> {
@@ -42543,7 +42871,7 @@ declare namespace WebAssembly {
 
   interface ValueTypeMap {
     anyfunc: Function;
-    externref: any;
+    externref: unknown;
     f32: number;
     f64: number;
     i32: number;
@@ -42608,7 +42936,7 @@ interface BlobCallback {
 }
 
 interface CustomElementConstructor {
-  new (...params: any[]): HTMLElement;
+  new (...params: readonly unknown[]): HTMLElement;
 }
 
 interface DecodeErrorCallback {
@@ -42632,7 +42960,7 @@ interface FileCallback {
 }
 
 interface FileSystemEntriesCallback {
-  (entries: FileSystemEntry[]): void;
+  (entries: readonly FileSystemEntry[]): void;
 }
 
 interface FileSystemEntryCallback {
@@ -42652,11 +42980,14 @@ interface IdleRequestCallback {
 }
 
 interface IntersectionObserverCallback {
-  (entries: IntersectionObserverEntry[], observer: IntersectionObserver): void;
+  (
+    entries: readonly IntersectionObserverEntry[],
+    observer: IntersectionObserver,
+  ): void;
 }
 
 interface LockGrantedCallback {
-  (lock: Lock | null): any;
+  (lock: Lock | null): unknown;
 }
 
 interface MediaSessionActionHandler {
@@ -42664,7 +42995,7 @@ interface MediaSessionActionHandler {
 }
 
 interface MutationCallback {
-  (mutations: MutationRecord[], observer: MutationObserver): void;
+  (mutations: readonly MutationRecord[], observer: MutationObserver): void;
 }
 
 interface NotificationPermissionCallback {
@@ -42682,7 +43013,7 @@ interface OnErrorEventHandlerNonNull {
     lineno?: number,
     colno?: number,
     error?: Error,
-  ): any;
+  ): unknown;
 }
 
 interface PerformanceObserverCallback {
@@ -42697,7 +43028,7 @@ interface PositionErrorCallback {
   (positionError: GeolocationPositionError): void;
 }
 
-interface QueuingStrategySize<T = any> {
+interface QueuingStrategySize<T = unknown> {
   (chunk: T): number;
 }
 
@@ -42714,11 +43045,11 @@ interface RemotePlaybackAvailabilityCallback {
 }
 
 interface ReportingObserverCallback {
-  (reports: Report[], observer: ReportingObserver): void;
+  (reports: readonly Report[], observer: ReportingObserver): void;
 }
 
 interface ResizeObserverCallback {
-  (entries: ResizeObserverEntry[], observer: ResizeObserver): void;
+  (entries: readonly ResizeObserverEntry[], observer: ResizeObserver): void;
 }
 
 interface TransformerFlushCallback<O> {
@@ -42726,7 +43057,7 @@ interface TransformerFlushCallback<O> {
 }
 
 interface TransformerStartCallback<O> {
-  (controller: TransformStreamDefaultController<O>): any;
+  (controller: TransformStreamDefaultController<O>): unknown;
 }
 
 interface TransformerTransformCallback<I, O> {
@@ -42737,7 +43068,7 @@ interface TransformerTransformCallback<I, O> {
 }
 
 interface UnderlyingSinkAbortCallback {
-  (reason?: any): void | PromiseLike<void>;
+  (reason?: unknown): void | PromiseLike<void>;
 }
 
 interface UnderlyingSinkCloseCallback {
@@ -42745,7 +43076,7 @@ interface UnderlyingSinkCloseCallback {
 }
 
 interface UnderlyingSinkStartCallback {
-  (controller: WritableStreamDefaultController): any;
+  (controller: WritableStreamDefaultController): unknown;
 }
 
 interface UnderlyingSinkWriteCallback<W> {
@@ -42756,7 +43087,7 @@ interface UnderlyingSinkWriteCallback<W> {
 }
 
 interface UnderlyingSourceCancelCallback {
-  (reason?: any): void | PromiseLike<void>;
+  (reason?: unknown): void | PromiseLike<void>;
 }
 
 interface UnderlyingSourcePullCallback<R> {
@@ -42764,11 +43095,11 @@ interface UnderlyingSourcePullCallback<R> {
 }
 
 interface UnderlyingSourceStartCallback<R> {
-  (controller: ReadableStreamController<R>): any;
+  (controller: ReadableStreamController<R>): unknown;
 }
 
 interface UpdateCallback {
-  (): any;
+  (): unknown;
 }
 
 interface VideoFrameOutputCallback {
@@ -43040,16 +43371,16 @@ interface MathMLElementTagNameMap {
 type ElementTagNameMap = HTMLElementTagNameMap &
   Pick<
     SVGElementTagNameMap,
-    Exclude<keyof SVGElementTagNameMap, keyof HTMLElementTagNameMap>
+    RelaxedExclude<keyof SVGElementTagNameMap, keyof HTMLElementTagNameMap>
   >;
 
-declare var Audio: {
+declare const Audio: {
   new (src?: string): HTMLAudioElement;
 };
-declare var Image: {
+declare const Image: {
   new (width?: number, height?: number): HTMLImageElement;
 };
-declare var Option: {
+declare const Option: {
   new (
     text?: string,
     value?: string,
@@ -43062,13 +43393,13 @@ declare var Option: {
  *
  *   [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/navigator)
  */
-declare var clientInformation: Navigator;
+declare const clientInformation: Navigator;
 /**
  * Returns true if the window has been closed, false otherwise.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/closed)
  */
-declare var closed: boolean;
+declare const closed: boolean;
 /**
  * Defines a new custom element, mapping the given name to the given constructor
  * as an autonomous custom element.
@@ -43076,72 +43407,72 @@ declare var closed: boolean;
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/customElements)
  */
-declare var customElements: CustomElementRegistry;
+declare const customElements: CustomElementRegistry;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/devicePixelRatio)
  */
-declare var devicePixelRatio: number;
+declare const devicePixelRatio: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/document) */
-declare var document: Document;
+declare const document: Document;
 /**
  * @deprecated
  *
  *   [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/event)
  */
-declare var event: Event | undefined;
+declare const event: Event | undefined;
 /**
  * @deprecated
  *
  *   [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/external)
  */
-declare var external: External;
+declare const external: External;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/frameElement)
  */
-declare var frameElement: Element | null;
+declare const frameElement: Element | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/frames) */
-declare var frames: WindowProxy;
+declare const frames: WindowProxy;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/history) */
-declare var history: History;
+declare const history: History;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/innerHeight)
  */
-declare var innerHeight: number;
+declare const innerHeight: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/innerWidth) */
-declare var innerWidth: number;
+declare const innerWidth: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/length) */
-declare var length: number;
+declare const length: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/location) */
-declare var location: Location;
+declare const location: Location;
 /**
  * Returns true if the location bar is visible; otherwise, returns false.
  *
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/locationbar)
  */
-declare var locationbar: BarProp;
+declare const locationbar: BarProp;
 /**
  * Returns true if the menu bar is visible; otherwise, returns false.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/menubar)
  */
-declare var menubar: BarProp;
+declare const menubar: BarProp;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/name) */
 /** @deprecated */
 declare const name: void;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/navigator) */
-declare var navigator: Navigator;
+declare const navigator: Navigator;
 /**
  * Available only in secure contexts.
  *
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/devicemotion_event)
  */
-declare var ondevicemotion:
-  | ((this: Window, ev: DeviceMotionEvent) => any)
+declare const ondevicemotion:
+  | ((this: Window, ev: DeviceMotionEvent) => unknown)
   | null;
 /**
  * Available only in secure contexts.
@@ -43149,8 +43480,8 @@ declare var ondevicemotion:
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/deviceorientation_event)
  */
-declare var ondeviceorientation:
-  | ((this: Window, ev: DeviceOrientationEvent) => any)
+declare const ondeviceorientation:
+  | ((this: Window, ev: DeviceOrientationEvent) => unknown)
   | null;
 /**
  * Available only in secure contexts.
@@ -43158,8 +43489,8 @@ declare var ondeviceorientation:
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/deviceorientationabsolute_event)
  */
-declare var ondeviceorientationabsolute:
-  | ((this: Window, ev: DeviceOrientationEvent) => any)
+declare const ondeviceorientationabsolute:
+  | ((this: Window, ev: DeviceOrientationEvent) => unknown)
   | null;
 /**
  * @deprecated
@@ -43167,35 +43498,37 @@ declare var ondeviceorientationabsolute:
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Window/orientationchange_event)
  */
-declare var onorientationchange: ((this: Window, ev: Event) => any) | null;
+declare const onorientationchange:
+  | ((this: Window, ev: Event) => unknown)
+  | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/opener) */
-declare var opener: any;
+declare const opener: unknown;
 /**
  * @deprecated
  *
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Window/orientation)
  */
-declare var orientation: number;
+declare const orientation: number;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/outerHeight)
  */
-declare var outerHeight: number;
+declare const outerHeight: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/outerWidth) */
-declare var outerWidth: number;
+declare const outerWidth: number;
 /**
  * @deprecated This is a legacy alias of `scrollX`.
  *
  *   [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollX)
  */
-declare var pageXOffset: number;
+declare const pageXOffset: number;
 /**
  * @deprecated This is a legacy alias of `scrollY`.
  *
  *   [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollY)
  */
-declare var pageYOffset: number;
+declare const pageYOffset: number;
 /**
  * Refers to either the parent WindowProxy, or itself.
  *
@@ -43204,70 +43537,70 @@ declare var pageYOffset: number;
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/parent)
  */
-declare var parent: WindowProxy;
+declare const parent: WindowProxy;
 /**
  * Returns true if the personal bar is visible; otherwise, returns false.
  *
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/personalbar)
  */
-declare var personalbar: BarProp;
+declare const personalbar: BarProp;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screen) */
-declare var screen: Screen;
+declare const screen: Screen;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenLeft) */
-declare var screenLeft: number;
+declare const screenLeft: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenTop) */
-declare var screenTop: number;
+declare const screenTop: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenX) */
-declare var screenX: number;
+declare const screenX: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenY) */
-declare var screenY: number;
+declare const screenY: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollX) */
-declare var scrollX: number;
+declare const scrollX: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollY) */
-declare var scrollY: number;
+declare const scrollY: number;
 /**
  * Returns true if the scrollbars are visible; otherwise, returns false.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollbars)
  */
-declare var scrollbars: BarProp;
+declare const scrollbars: BarProp;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/self) */
-declare var self: Window & typeof globalThis;
+declare const self: Window & typeof globalThis;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/speechSynthesis)
  */
-declare var speechSynthesis: SpeechSynthesis;
+declare const speechSynthesis: SpeechSynthesis;
 /**
  * @deprecated
  *
  *   [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/status)
  */
-declare var status: string;
+declare const status: string;
 /**
  * Returns true if the status bar is visible; otherwise, returns false.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/statusbar)
  */
-declare var statusbar: BarProp;
+declare const statusbar: BarProp;
 /**
  * Returns true if the toolbar is visible; otherwise, returns false.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/toolbar)
  */
-declare var toolbar: BarProp;
+declare const toolbar: BarProp;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/top) */
-declare var top: WindowProxy | null;
+declare const top: WindowProxy | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/visualViewport)
  */
-declare var visualViewport: VisualViewport | null;
+declare const visualViewport: VisualViewport | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/window) */
-declare var window: Window & typeof globalThis;
+declare const window: Window & typeof globalThis;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/alert) */
-declare function alert(message?: any): void;
+declare function alert(message?: unknown): void;
 /**
  * @deprecated
  *
@@ -43349,12 +43682,12 @@ declare function open(
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/postMessage)
  */
 declare function postMessage(
-  message: any,
+  message: unknown,
   targetOrigin: string,
-  transfer?: Transferable[],
+  transfer?: readonly Transferable[],
 ): void;
 declare function postMessage(
-  message: any,
+  message: unknown,
   options?: WindowPostMessageOptions,
 ): void;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/print) */
@@ -43423,48 +43756,50 @@ declare function requestAnimationFrame(callback: FrameRequestCallback): number;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/abort_event)
  */
-declare var onabort: ((this: Window, ev: UIEvent) => any) | null;
+declare const onabort: ((this: Window, ev: UIEvent) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/animationcancel_event)
  */
-declare var onanimationcancel:
-  | ((this: Window, ev: AnimationEvent) => any)
+declare const onanimationcancel:
+  | ((this: Window, ev: AnimationEvent) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event)
  */
-declare var onanimationend: ((this: Window, ev: AnimationEvent) => any) | null;
+declare const onanimationend:
+  | ((this: Window, ev: AnimationEvent) => unknown)
+  | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event)
  */
-declare var onanimationiteration:
-  | ((this: Window, ev: AnimationEvent) => any)
+declare const onanimationiteration:
+  | ((this: Window, ev: AnimationEvent) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event)
  */
-declare var onanimationstart:
-  | ((this: Window, ev: AnimationEvent) => any)
+declare const onanimationstart:
+  | ((this: Window, ev: AnimationEvent) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/auxclick_event)
  */
-declare var onauxclick: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onauxclick: ((this: Window, ev: MouseEvent) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/beforeinput_event)
  */
-declare var onbeforeinput: ((this: Window, ev: InputEvent) => any) | null;
+declare const onbeforeinput: ((this: Window, ev: InputEvent) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/beforetoggle_event)
  */
-declare var onbeforetoggle: ((this: Window, ev: Event) => any) | null;
+declare const onbeforetoggle: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Fires when the object loses the input focus.
  *
@@ -43473,12 +43808,12 @@ declare var onbeforetoggle: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Element/blur_event)
  */
-declare var onblur: ((this: Window, ev: FocusEvent) => any) | null;
+declare const onblur: ((this: Window, ev: FocusEvent) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/cancel_event)
  */
-declare var oncancel: ((this: Window, ev: Event) => any) | null;
+declare const oncancel: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when playback is possible, but would require further buffering.
  *
@@ -43487,12 +43822,12 @@ declare var oncancel: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplay_event)
  */
-declare var oncanplay: ((this: Window, ev: Event) => any) | null;
+declare const oncanplay: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplaythrough_event)
  */
-declare var oncanplaythrough: ((this: Window, ev: Event) => any) | null;
+declare const oncanplaythrough: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Fires when the contents of the object or selection have changed.
  *
@@ -43501,7 +43836,7 @@ declare var oncanplaythrough: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/change_event)
  */
-declare var onchange: ((this: Window, ev: Event) => any) | null;
+declare const onchange: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Fires when the user clicks the left mouse button on the object
  *
@@ -43510,17 +43845,17 @@ declare var onchange: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Element/click_event)
  */
-declare var onclick: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onclick: ((this: Window, ev: MouseEvent) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/close_event)
  */
-declare var onclose: ((this: Window, ev: Event) => any) | null;
+declare const onclose: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/webglcontextlost_event)
  */
-declare var oncontextlost: ((this: Window, ev: Event) => any) | null;
+declare const oncontextlost: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Fires when the user clicks the right mouse button in the client area, opening
  * the context menu.
@@ -43530,24 +43865,24 @@ declare var oncontextlost: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Element/contextmenu_event)
  */
-declare var oncontextmenu: ((this: Window, ev: MouseEvent) => any) | null;
+declare const oncontextmenu: ((this: Window, ev: MouseEvent) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextrestored_event)
  */
-declare var oncontextrestored: ((this: Window, ev: Event) => any) | null;
+declare const oncontextrestored: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/copy_event)
  */
-declare var oncopy: ((this: Window, ev: ClipboardEvent) => any) | null;
+declare const oncopy: ((this: Window, ev: ClipboardEvent) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/cuechange_event)
  */
-declare var oncuechange: ((this: Window, ev: Event) => any) | null;
+declare const oncuechange: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/cut_event) */
-declare var oncut: ((this: Window, ev: ClipboardEvent) => any) | null;
+declare const oncut: ((this: Window, ev: ClipboardEvent) => unknown) | null;
 /**
  * Fires when the user double-clicks the object.
  *
@@ -43556,7 +43891,7 @@ declare var oncut: ((this: Window, ev: ClipboardEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Element/dblclick_event)
  */
-declare var ondblclick: ((this: Window, ev: MouseEvent) => any) | null;
+declare const ondblclick: ((this: Window, ev: MouseEvent) => unknown) | null;
 /**
  * Fires on the source object continuously during a drag operation.
  *
@@ -43565,7 +43900,7 @@ declare var ondblclick: ((this: Window, ev: MouseEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drag_event)
  */
-declare var ondrag: ((this: Window, ev: DragEvent) => any) | null;
+declare const ondrag: ((this: Window, ev: DragEvent) => unknown) | null;
 /**
  * Fires on the source object when the user releases the mouse at the close of a
  * drag operation.
@@ -43575,7 +43910,7 @@ declare var ondrag: ((this: Window, ev: DragEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragend_event)
  */
-declare var ondragend: ((this: Window, ev: DragEvent) => any) | null;
+declare const ondragend: ((this: Window, ev: DragEvent) => unknown) | null;
 /**
  * Fires on the target element when the user drags the object to a valid drop
  * target.
@@ -43585,7 +43920,7 @@ declare var ondragend: ((this: Window, ev: DragEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragenter_event)
  */
-declare var ondragenter: ((this: Window, ev: DragEvent) => any) | null;
+declare const ondragenter: ((this: Window, ev: DragEvent) => unknown) | null;
 /**
  * Fires on the target object when the user moves the mouse out of a valid drop
  * target during a drag operation.
@@ -43595,7 +43930,7 @@ declare var ondragenter: ((this: Window, ev: DragEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragleave_event)
  */
-declare var ondragleave: ((this: Window, ev: DragEvent) => any) | null;
+declare const ondragleave: ((this: Window, ev: DragEvent) => unknown) | null;
 /**
  * Fires on the target element continuously while the user drags the object over
  * a valid drop target.
@@ -43605,7 +43940,7 @@ declare var ondragleave: ((this: Window, ev: DragEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragover_event)
  */
-declare var ondragover: ((this: Window, ev: DragEvent) => any) | null;
+declare const ondragover: ((this: Window, ev: DragEvent) => unknown) | null;
 /**
  * Fires on the source object when the user starts to drag a text selection or
  * selected object.
@@ -43615,12 +43950,12 @@ declare var ondragover: ((this: Window, ev: DragEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragstart_event)
  */
-declare var ondragstart: ((this: Window, ev: DragEvent) => any) | null;
+declare const ondragstart: ((this: Window, ev: DragEvent) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drop_event)
  */
-declare var ondrop: ((this: Window, ev: DragEvent) => any) | null;
+declare const ondrop: ((this: Window, ev: DragEvent) => unknown) | null;
 /**
  * Occurs when the duration attribute is updated.
  *
@@ -43629,7 +43964,7 @@ declare var ondrop: ((this: Window, ev: DragEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/durationchange_event)
  */
-declare var ondurationchange: ((this: Window, ev: Event) => any) | null;
+declare const ondurationchange: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when the media element is reset to its initial state.
  *
@@ -43638,7 +43973,7 @@ declare var ondurationchange: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/emptied_event)
  */
-declare var onemptied: ((this: Window, ev: Event) => any) | null;
+declare const onemptied: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when the end of playback is reached.
  *
@@ -43647,7 +43982,7 @@ declare var onemptied: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ended_event)
  */
-declare var onended: ((this: Window, ev: Event) => any) | null;
+declare const onended: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Fires when an error occurs during object loading.
  *
@@ -43656,7 +43991,7 @@ declare var onended: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/error_event)
  */
-declare var onerror: OnErrorEventHandler;
+declare const onerror: OnErrorEventHandler;
 /**
  * Fires when the object receives focus.
  *
@@ -43665,29 +44000,29 @@ declare var onerror: OnErrorEventHandler;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Element/focus_event)
  */
-declare var onfocus: ((this: Window, ev: FocusEvent) => any) | null;
+declare const onfocus: ((this: Window, ev: FocusEvent) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/formdata_event)
  */
-declare var onformdata: ((this: Window, ev: FormDataEvent) => any) | null;
+declare const onformdata: ((this: Window, ev: FormDataEvent) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/gotpointercapture_event)
  */
-declare var ongotpointercapture:
-  | ((this: Window, ev: PointerEvent) => any)
+declare const ongotpointercapture:
+  | ((this: Window, ev: PointerEvent) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/input_event)
  */
-declare var oninput: ((this: Window, ev: Event) => any) | null;
+declare const oninput: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/invalid_event)
  */
-declare var oninvalid: ((this: Window, ev: Event) => any) | null;
+declare const oninvalid: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Fires when the user presses a key.
  *
@@ -43696,7 +44031,7 @@ declare var oninvalid: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Element/keydown_event)
  */
-declare var onkeydown: ((this: Window, ev: KeyboardEvent) => any) | null;
+declare const onkeydown: ((this: Window, ev: KeyboardEvent) => unknown) | null;
 /**
  * Fires when the user presses an alphanumeric key.
  *
@@ -43706,7 +44041,7 @@ declare var onkeydown: ((this: Window, ev: KeyboardEvent) => any) | null;
  *   Reference](https://developer.mozilla.org/docs/Web/API/Element/keypress_event)
  * @param ev The event.
  */
-declare var onkeypress: ((this: Window, ev: KeyboardEvent) => any) | null;
+declare const onkeypress: ((this: Window, ev: KeyboardEvent) => unknown) | null;
 /**
  * Fires when the user releases a key.
  *
@@ -43715,7 +44050,7 @@ declare var onkeypress: ((this: Window, ev: KeyboardEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Element/keyup_event)
  */
-declare var onkeyup: ((this: Window, ev: KeyboardEvent) => any) | null;
+declare const onkeyup: ((this: Window, ev: KeyboardEvent) => unknown) | null;
 /**
  * Fires immediately after the browser loads the object.
  *
@@ -43724,7 +44059,7 @@ declare var onkeyup: ((this: Window, ev: KeyboardEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/SVGElement/load_event)
  */
-declare var onload: ((this: Window, ev: Event) => any) | null;
+declare const onload: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when media data is loaded at the current playback position.
  *
@@ -43733,7 +44068,7 @@ declare var onload: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadeddata_event)
  */
-declare var onloadeddata: ((this: Window, ev: Event) => any) | null;
+declare const onloadeddata: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when the duration and dimensions of the media have been determined.
  *
@@ -43742,7 +44077,7 @@ declare var onloadeddata: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadedmetadata_event)
  */
-declare var onloadedmetadata: ((this: Window, ev: Event) => any) | null;
+declare const onloadedmetadata: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when Internet Explorer begins looking for media data.
  *
@@ -43751,13 +44086,13 @@ declare var onloadedmetadata: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadstart_event)
  */
-declare var onloadstart: ((this: Window, ev: Event) => any) | null;
+declare const onloadstart: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/lostpointercapture_event)
  */
-declare var onlostpointercapture:
-  | ((this: Window, ev: PointerEvent) => any)
+declare const onlostpointercapture:
+  | ((this: Window, ev: PointerEvent) => unknown)
   | null;
 /**
  * Fires when the user clicks the object with either mouse button.
@@ -43767,17 +44102,17 @@ declare var onlostpointercapture:
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Element/mousedown_event)
  */
-declare var onmousedown: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onmousedown: ((this: Window, ev: MouseEvent) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseenter_event)
  */
-declare var onmouseenter: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onmouseenter: ((this: Window, ev: MouseEvent) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseleave_event)
  */
-declare var onmouseleave: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onmouseleave: ((this: Window, ev: MouseEvent) => unknown) | null;
 /**
  * Fires when the user moves the mouse over the object.
  *
@@ -43786,7 +44121,7 @@ declare var onmouseleave: ((this: Window, ev: MouseEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Element/mousemove_event)
  */
-declare var onmousemove: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onmousemove: ((this: Window, ev: MouseEvent) => unknown) | null;
 /**
  * Fires when the user moves the mouse pointer outside the boundaries of the
  * object.
@@ -43796,7 +44131,7 @@ declare var onmousemove: ((this: Window, ev: MouseEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseout_event)
  */
-declare var onmouseout: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onmouseout: ((this: Window, ev: MouseEvent) => unknown) | null;
 /**
  * Fires when the user moves the mouse pointer into the object.
  *
@@ -43805,7 +44140,7 @@ declare var onmouseout: ((this: Window, ev: MouseEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseover_event)
  */
-declare var onmouseover: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onmouseover: ((this: Window, ev: MouseEvent) => unknown) | null;
 /**
  * Fires when the user releases a mouse button while the mouse is over the
  * object.
@@ -43815,12 +44150,12 @@ declare var onmouseover: ((this: Window, ev: MouseEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseup_event)
  */
-declare var onmouseup: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onmouseup: ((this: Window, ev: MouseEvent) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/paste_event)
  */
-declare var onpaste: ((this: Window, ev: ClipboardEvent) => any) | null;
+declare const onpaste: ((this: Window, ev: ClipboardEvent) => unknown) | null;
 /**
  * Occurs when playback is paused.
  *
@@ -43829,7 +44164,7 @@ declare var onpaste: ((this: Window, ev: ClipboardEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/pause_event)
  */
-declare var onpause: ((this: Window, ev: Event) => any) | null;
+declare const onpause: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when the play method is requested.
  *
@@ -43838,7 +44173,7 @@ declare var onpause: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/play_event)
  */
-declare var onplay: ((this: Window, ev: Event) => any) | null;
+declare const onplay: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when the audio or video has started playing.
  *
@@ -43847,47 +44182,61 @@ declare var onplay: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/playing_event)
  */
-declare var onplaying: ((this: Window, ev: Event) => any) | null;
+declare const onplaying: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/pointercancel_event)
  */
-declare var onpointercancel: ((this: Window, ev: PointerEvent) => any) | null;
+declare const onpointercancel:
+  | ((this: Window, ev: PointerEvent) => unknown)
+  | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerdown_event)
  */
-declare var onpointerdown: ((this: Window, ev: PointerEvent) => any) | null;
+declare const onpointerdown:
+  | ((this: Window, ev: PointerEvent) => unknown)
+  | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerenter_event)
  */
-declare var onpointerenter: ((this: Window, ev: PointerEvent) => any) | null;
+declare const onpointerenter:
+  | ((this: Window, ev: PointerEvent) => unknown)
+  | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerleave_event)
  */
-declare var onpointerleave: ((this: Window, ev: PointerEvent) => any) | null;
+declare const onpointerleave:
+  | ((this: Window, ev: PointerEvent) => unknown)
+  | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/pointermove_event)
  */
-declare var onpointermove: ((this: Window, ev: PointerEvent) => any) | null;
+declare const onpointermove:
+  | ((this: Window, ev: PointerEvent) => unknown)
+  | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerout_event)
  */
-declare var onpointerout: ((this: Window, ev: PointerEvent) => any) | null;
+declare const onpointerout:
+  | ((this: Window, ev: PointerEvent) => unknown)
+  | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerover_event)
  */
-declare var onpointerover: ((this: Window, ev: PointerEvent) => any) | null;
+declare const onpointerover:
+  | ((this: Window, ev: PointerEvent) => unknown)
+  | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerup_event)
  */
-declare var onpointerup: ((this: Window, ev: PointerEvent) => any) | null;
+declare const onpointerup: ((this: Window, ev: PointerEvent) => unknown) | null;
 /**
  * Occurs to indicate progress while downloading media data.
  *
@@ -43896,7 +44245,7 @@ declare var onpointerup: ((this: Window, ev: PointerEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/progress_event)
  */
-declare var onprogress: ((this: Window, ev: ProgressEvent) => any) | null;
+declare const onprogress: ((this: Window, ev: ProgressEvent) => unknown) | null;
 /**
  * Occurs when the playback rate is increased or decreased.
  *
@@ -43905,7 +44254,7 @@ declare var onprogress: ((this: Window, ev: ProgressEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ratechange_event)
  */
-declare var onratechange: ((this: Window, ev: Event) => any) | null;
+declare const onratechange: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Fires when the user resets a form.
  *
@@ -43914,12 +44263,12 @@ declare var onratechange: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/reset_event)
  */
-declare var onreset: ((this: Window, ev: Event) => any) | null;
+declare const onreset: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/resize_event)
  */
-declare var onresize: ((this: Window, ev: UIEvent) => any) | null;
+declare const onresize: ((this: Window, ev: UIEvent) => unknown) | null;
 /**
  * Fires when the user repositions the scroll box in the scroll bar on the
  * object.
@@ -43929,18 +44278,18 @@ declare var onresize: ((this: Window, ev: UIEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Document/scroll_event)
  */
-declare var onscroll: ((this: Window, ev: Event) => any) | null;
+declare const onscroll: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Document/scrollend_event)
  */
-declare var onscrollend: ((this: Window, ev: Event) => any) | null;
+declare const onscrollend: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Document/securitypolicyviolation_event)
  */
-declare var onsecuritypolicyviolation:
-  | ((this: Window, ev: SecurityPolicyViolationEvent) => any)
+declare const onsecuritypolicyviolation:
+  | ((this: Window, ev: SecurityPolicyViolationEvent) => unknown)
   | null;
 /**
  * Occurs when the seek operation ends.
@@ -43950,7 +44299,7 @@ declare var onsecuritypolicyviolation:
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeked_event)
  */
-declare var onseeked: ((this: Window, ev: Event) => any) | null;
+declare const onseeked: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when the current playback position is moved.
  *
@@ -43959,7 +44308,7 @@ declare var onseeked: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeking_event)
  */
-declare var onseeking: ((this: Window, ev: Event) => any) | null;
+declare const onseeking: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Fires when the current selection changes.
  *
@@ -43968,22 +44317,22 @@ declare var onseeking: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/select_event)
  */
-declare var onselect: ((this: Window, ev: Event) => any) | null;
+declare const onselect: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Document/selectionchange_event)
  */
-declare var onselectionchange: ((this: Window, ev: Event) => any) | null;
+declare const onselectionchange: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Node/selectstart_event)
  */
-declare var onselectstart: ((this: Window, ev: Event) => any) | null;
+declare const onselectstart: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/slotchange_event)
  */
-declare var onslotchange: ((this: Window, ev: Event) => any) | null;
+declare const onslotchange: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when the download has stopped.
  *
@@ -43992,12 +44341,12 @@ declare var onslotchange: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/stalled_event)
  */
-declare var onstalled: ((this: Window, ev: Event) => any) | null;
+declare const onstalled: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/submit_event)
  */
-declare var onsubmit: ((this: Window, ev: SubmitEvent) => any) | null;
+declare const onsubmit: ((this: Window, ev: SubmitEvent) => unknown) | null;
 /**
  * Occurs if the load operation has been intentionally halted.
  *
@@ -44006,7 +44355,7 @@ declare var onsubmit: ((this: Window, ev: SubmitEvent) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/suspend_event)
  */
-declare var onsuspend: ((this: Window, ev: Event) => any) | null;
+declare const onsuspend: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs to indicate the current playback position.
  *
@@ -44015,71 +44364,71 @@ declare var onsuspend: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/timeupdate_event)
  */
-declare var ontimeupdate: ((this: Window, ev: Event) => any) | null;
+declare const ontimeupdate: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/HTMLDetailsElement/toggle_event)
  */
-declare var ontoggle: ((this: Window, ev: Event) => any) | null;
+declare const ontoggle: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/touchcancel_event)
  */
-declare var ontouchcancel:
-  | ((this: Window, ev: TouchEvent) => any)
+declare const ontouchcancel:
+  | ((this: Window, ev: TouchEvent) => unknown)
   | null
   | undefined;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/touchend_event)
  */
-declare var ontouchend:
-  | ((this: Window, ev: TouchEvent) => any)
+declare const ontouchend:
+  | ((this: Window, ev: TouchEvent) => unknown)
   | null
   | undefined;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/touchmove_event)
  */
-declare var ontouchmove:
-  | ((this: Window, ev: TouchEvent) => any)
+declare const ontouchmove:
+  | ((this: Window, ev: TouchEvent) => unknown)
   | null
   | undefined;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/touchstart_event)
  */
-declare var ontouchstart:
-  | ((this: Window, ev: TouchEvent) => any)
+declare const ontouchstart:
+  | ((this: Window, ev: TouchEvent) => unknown)
   | null
   | undefined;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/transitioncancel_event)
  */
-declare var ontransitioncancel:
-  | ((this: Window, ev: TransitionEvent) => any)
+declare const ontransitioncancel:
+  | ((this: Window, ev: TransitionEvent) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)
  */
-declare var ontransitionend:
-  | ((this: Window, ev: TransitionEvent) => any)
+declare const ontransitionend:
+  | ((this: Window, ev: TransitionEvent) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionrun_event)
  */
-declare var ontransitionrun:
-  | ((this: Window, ev: TransitionEvent) => any)
+declare const ontransitionrun:
+  | ((this: Window, ev: TransitionEvent) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionstart_event)
  */
-declare var ontransitionstart:
-  | ((this: Window, ev: TransitionEvent) => any)
+declare const ontransitionstart:
+  | ((this: Window, ev: TransitionEvent) => unknown)
   | null;
 /**
  * Occurs when the volume is changed, or playback is muted or unmuted.
@@ -44089,7 +44438,7 @@ declare var ontransitionstart:
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/volumechange_event)
  */
-declare var onvolumechange: ((this: Window, ev: Event) => any) | null;
+declare const onvolumechange: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when playback stops because the next frame of a video resource is not
  * available.
@@ -44099,22 +44448,24 @@ declare var onvolumechange: ((this: Window, ev: Event) => any) | null;
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/waiting_event)
  */
-declare var onwaiting: ((this: Window, ev: Event) => any) | null;
+declare const onwaiting: ((this: Window, ev: Event) => unknown) | null;
 /**
  * @deprecated This is a legacy alias of `onanimationend`.
  *
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event)
  */
-declare var onwebkitanimationend: ((this: Window, ev: Event) => any) | null;
+declare const onwebkitanimationend:
+  | ((this: Window, ev: Event) => unknown)
+  | null;
 /**
  * @deprecated This is a legacy alias of `onanimationiteration`.
  *
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event)
  */
-declare var onwebkitanimationiteration:
-  | ((this: Window, ev: Event) => any)
+declare const onwebkitanimationiteration:
+  | ((this: Window, ev: Event) => unknown)
   | null;
 /**
  * @deprecated This is a legacy alias of `onanimationstart`.
@@ -44122,113 +44473,125 @@ declare var onwebkitanimationiteration:
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event)
  */
-declare var onwebkitanimationstart: ((this: Window, ev: Event) => any) | null;
+declare const onwebkitanimationstart:
+  | ((this: Window, ev: Event) => unknown)
+  | null;
 /**
  * @deprecated This is a legacy alias of `ontransitionend`.
  *
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)
  */
-declare var onwebkittransitionend: ((this: Window, ev: Event) => any) | null;
+declare const onwebkittransitionend:
+  | ((this: Window, ev: Event) => unknown)
+  | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Element/wheel_event)
  */
-declare var onwheel: ((this: Window, ev: WheelEvent) => any) | null;
+declare const onwheel: ((this: Window, ev: WheelEvent) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/afterprint_event)
  */
-declare var onafterprint: ((this: Window, ev: Event) => any) | null;
+declare const onafterprint: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/beforeprint_event)
  */
-declare var onbeforeprint: ((this: Window, ev: Event) => any) | null;
+declare const onbeforeprint: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/beforeunload_event)
  */
-declare var onbeforeunload:
-  | ((this: Window, ev: BeforeUnloadEvent) => any)
+declare const onbeforeunload:
+  | ((this: Window, ev: BeforeUnloadEvent) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/gamepadconnected_event)
  */
-declare var ongamepadconnected:
-  | ((this: Window, ev: GamepadEvent) => any)
+declare const ongamepadconnected:
+  | ((this: Window, ev: GamepadEvent) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/gamepaddisconnected_event)
  */
-declare var ongamepaddisconnected:
-  | ((this: Window, ev: GamepadEvent) => any)
+declare const ongamepaddisconnected:
+  | ((this: Window, ev: GamepadEvent) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/hashchange_event)
  */
-declare var onhashchange: ((this: Window, ev: HashChangeEvent) => any) | null;
+declare const onhashchange:
+  | ((this: Window, ev: HashChangeEvent) => unknown)
+  | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/languagechange_event)
  */
-declare var onlanguagechange: ((this: Window, ev: Event) => any) | null;
+declare const onlanguagechange: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/message_event)
  */
-declare var onmessage: ((this: Window, ev: MessageEvent) => any) | null;
+declare const onmessage: ((this: Window, ev: MessageEvent) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/messageerror_event)
  */
-declare var onmessageerror: ((this: Window, ev: MessageEvent) => any) | null;
+declare const onmessageerror:
+  | ((this: Window, ev: MessageEvent) => unknown)
+  | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/offline_event)
  */
-declare var onoffline: ((this: Window, ev: Event) => any) | null;
+declare const onoffline: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/online_event)
  */
-declare var ononline: ((this: Window, ev: Event) => any) | null;
+declare const ononline: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/pagehide_event)
  */
-declare var onpagehide: ((this: Window, ev: PageTransitionEvent) => any) | null;
+declare const onpagehide:
+  | ((this: Window, ev: PageTransitionEvent) => unknown)
+  | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/pageshow_event)
  */
-declare var onpageshow: ((this: Window, ev: PageTransitionEvent) => any) | null;
+declare const onpageshow:
+  | ((this: Window, ev: PageTransitionEvent) => unknown)
+  | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/popstate_event)
  */
-declare var onpopstate: ((this: Window, ev: PopStateEvent) => any) | null;
+declare const onpopstate: ((this: Window, ev: PopStateEvent) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/rejectionhandled_event)
  */
-declare var onrejectionhandled:
-  | ((this: Window, ev: PromiseRejectionEvent) => any)
+declare const onrejectionhandled:
+  | ((this: Window, ev: PromiseRejectionEvent) => unknown)
   | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/storage_event)
  */
-declare var onstorage: ((this: Window, ev: StorageEvent) => any) | null;
+declare const onstorage: ((this: Window, ev: StorageEvent) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/unhandledrejection_event)
  */
-declare var onunhandledrejection:
-  | ((this: Window, ev: PromiseRejectionEvent) => any)
+declare const onunhandledrejection:
+  | ((this: Window, ev: PromiseRejectionEvent) => unknown)
   | null;
 /**
  * @deprecated
@@ -44236,39 +44599,39 @@ declare var onunhandledrejection:
  *   [MDN
  *   Reference](https://developer.mozilla.org/docs/Web/API/Window/unload_event)
  */
-declare var onunload: ((this: Window, ev: Event) => any) | null;
+declare const onunload: ((this: Window, ev: Event) => unknown) | null;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/localStorage)
  */
-declare var localStorage: Storage;
+declare const localStorage: Storage;
 /**
  * Available only in secure contexts.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/caches)
  */
-declare var caches: CacheStorage;
+declare const caches: CacheStorage;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/crossOriginIsolated)
  */
-declare var crossOriginIsolated: boolean;
+declare const crossOriginIsolated: boolean;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/crypto) */
-declare var crypto: Crypto;
+declare const crypto: Crypto;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/indexedDB) */
-declare var indexedDB: IDBFactory;
+declare const indexedDB: IDBFactory;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/isSecureContext)
  */
-declare var isSecureContext: boolean;
+declare const isSecureContext: boolean;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/origin) */
-declare var origin: string;
+declare const origin: string;
 /**
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/performance)
  */
-declare var performance: Performance;
+declare const performance: Performance;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/atob) */
 declare function atob(data: string): string;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/btoa) */
@@ -44298,21 +44661,21 @@ declare function fetch(
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/queueMicrotask) */
 declare function queueMicrotask(callback: VoidFunction): void;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/reportError) */
-declare function reportError(e: any): void;
+declare function reportError(e: unknown): void;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/setInterval) */
 declare function setInterval(
   handler: TimerHandler,
   timeout?: number,
-  ...arguments: any[]
+  ...arguments: readonly unknown[]
 ): number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/setTimeout) */
 declare function setTimeout(
   handler: TimerHandler,
   timeout?: number,
-  ...arguments: any[]
+  ...arguments: readonly unknown[]
 ): number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/structuredClone) */
-declare function structuredClone<T = any>(
+declare function structuredClone<T = unknown>(
   value: T,
   options?: StructuredSerializeOptions,
 ): T;
@@ -44320,10 +44683,10 @@ declare function structuredClone<T = any>(
  * [MDN
  * Reference](https://developer.mozilla.org/docs/Web/API/Window/sessionStorage)
  */
-declare var sessionStorage: Storage;
+declare const sessionStorage: Storage;
 declare function addEventListener<K extends keyof WindowEventMap>(
   type: K,
-  listener: (this: Window, ev: WindowEventMap[K]) => any,
+  listener: (this: Window, ev: WindowEventMap[K]) => unknown,
   options?: boolean | AddEventListenerOptions,
 ): void;
 declare function addEventListener(
@@ -44333,7 +44696,7 @@ declare function addEventListener(
 ): void;
 declare function removeEventListener<K extends keyof WindowEventMap>(
   type: K,
-  listener: (this: Window, ev: WindowEventMap[K]) => any,
+  listener: (this: Window, ev: WindowEventMap[K]) => unknown,
   options?: boolean | EventListenerOptions,
 ): void;
 declare function removeEventListener(
@@ -44368,16 +44731,19 @@ type CanvasImageSource =
   | OffscreenCanvas
   | VideoFrame;
 type ClipboardItemData = Promise<string | Blob>;
-type ClipboardItems = ClipboardItem[];
+type ClipboardItems = readonly ClipboardItem[];
 type ConstrainBoolean = boolean | ConstrainBooleanParameters;
-type ConstrainDOMString = string | string[] | ConstrainDOMStringParameters;
+type ConstrainDOMString =
+  | string
+  | readonly string[]
+  | ConstrainDOMStringParameters;
 type ConstrainDouble = number | ConstrainDoubleRange;
 type ConstrainULong = number | ConstrainULongRange;
 type DOMHighResTimeStamp = number;
 type EpochTimeStamp = number;
 type EventListenerOrEventListenerObject = EventListener | EventListenerObject;
 type FileSystemWriteChunkType = BufferSource | Blob | string | WriteParams;
-type Float32List = Float32Array | GLfloat[];
+type Float32List = Float32Array | readonly GLfloat[];
 type FormDataEntryValue = File | string;
 type GLbitfield = number;
 type GLboolean = boolean;
@@ -44394,10 +44760,18 @@ type GLuint64 = number;
 type HTMLOrSVGImageElement = HTMLImageElement | SVGImageElement;
 type HTMLOrSVGScriptElement = HTMLScriptElement | SVGScriptElement;
 type HashAlgorithmIdentifier = AlgorithmIdentifier;
-type HeadersInit = [string, string][] | Record<string, string> | Headers;
-type IDBValidKey = number | string | Date | BufferSource | IDBValidKey[];
+type HeadersInit =
+  | readonly (readonly [string, string])[]
+  | Record<string, string>
+  | Headers;
+type IDBValidKey =
+  | number
+  | string
+  | Date
+  | BufferSource
+  | readonly IDBValidKey[];
 type ImageBitmapSource = CanvasImageSource | Blob | ImageData;
-type Int32List = Int32Array | GLint[];
+type Int32List = Int32Array | readonly GLint[];
 type LineAndPositionSetting = number | AutoKeyword;
 type MediaProvider = MediaStream | MediaSource | Blob;
 type MessageEventSource = WindowProxy | MessagePort | ServiceWorker;
@@ -44412,7 +44786,7 @@ type OnBeforeUnloadEventHandler = OnBeforeUnloadEventHandlerNonNull | null;
 type OnErrorEventHandler = OnErrorEventHandlerNonNull | null;
 type OptionalPostfixToken<T extends string> = ` ${T}` | '';
 type OptionalPrefixToken<T extends string> = `${T} ` | '';
-type PerformanceEntryList = PerformanceEntry[];
+type PerformanceEntryList = readonly PerformanceEntry[];
 type RTCRtpTransform = RTCRtpScriptTransform;
 type ReadableStreamController<T> =
   | ReadableStreamDefaultController<T>
@@ -44428,7 +44802,7 @@ type RenderingContext =
   | ImageBitmapRenderingContext
   | WebGLRenderingContext
   | WebGL2RenderingContext;
-type ReportList = Report[];
+type ReportList = readonly Report[];
 type RequestInfo = Request | string;
 type TexImageSource =
   | ImageBitmap
@@ -44449,8 +44823,8 @@ type Transferable =
   | TransformStream
   | VideoFrame
   | ArrayBuffer;
-type Uint32List = Uint32Array | GLuint[];
-type VibratePattern = number | number[];
+type Uint32List = Uint32Array | readonly GLuint[];
+type VibratePattern = number | readonly number[];
 type WindowProxy = Window;
 type XMLHttpRequestBodyInit =
   | Blob
