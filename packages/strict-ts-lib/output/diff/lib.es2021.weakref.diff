@@ -1,19 +1,5 @@
-/*! *****************************************************************************
-Copyright (c) Microsoft Corporation. All rights reserved.
-Licensed under the Apache License, Version 2.0 (the "License"); you may not use
-this file except in compliance with the License. You may obtain a copy of the
-License at http://www.apache.org/licenses/LICENSE-2.0
-
-THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
-WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
-MERCHANTABLITY OR NON-INFRINGEMENT.
-
-See the Apache Version 2.0 License for specific language governing permissions
-and limitations under the License.
-***************************************************************************** */
-
 /// <reference no-default-lib="true"/>
+/// <reference types="@noshiro/ts-type-utils" />
 
 interface WeakRef<T extends WeakKey> {
   readonly [Symbol.toStringTag]: 'WeakRef';
@@ -27,7 +13,7 @@ interface WeakRef<T extends WeakKey> {
 }
 
 interface WeakRefConstructor {
-  readonly prototype: WeakRef<any>;
+  readonly prototype: WeakRef<object>;
 
   /**
    * Creates a WeakRef instance for the given target value. In es2023 the value
@@ -39,7 +25,7 @@ interface WeakRefConstructor {
   new <T extends WeakKey>(target: T): WeakRef<T>;
 }
 
-declare var WeakRef: WeakRefConstructor;
+declare const WeakRef: WeakRefConstructor;
 
 interface FinalizationRegistry<T> {
   readonly [Symbol.toStringTag]: 'FinalizationRegistry';
@@ -68,7 +54,7 @@ interface FinalizationRegistry<T> {
 }
 
 interface FinalizationRegistryConstructor {
-  readonly prototype: FinalizationRegistry<any>;
+  readonly prototype: FinalizationRegistry<unknown>;
 
   /**
    * Creates a finalization registry with an associated cleanup callback
@@ -79,4 +65,4 @@ interface FinalizationRegistryConstructor {
   new <T>(cleanupCallback: (heldValue: T) => void): FinalizationRegistry<T>;
 }
 
-declare var FinalizationRegistry: FinalizationRegistryConstructor;
+declare const FinalizationRegistry: FinalizationRegistryConstructor;
