@@ -1,19 +1,5 @@
-/*! *****************************************************************************
-Copyright (c) Microsoft Corporation. All rights reserved.
-Licensed under the Apache License, Version 2.0 (the "License"); you may not use
-this file except in compliance with the License. You may obtain a copy of the
-License at http://www.apache.org/licenses/LICENSE-2.0
-
-THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
-WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
-MERCHANTABLITY OR NON-INFRINGEMENT.
-
-See the Apache Version 2.0 License for specific language governing permissions
-and limitations under the License.
-***************************************************************************** */
-
 /// <reference no-default-lib="true"/>
+/// <reference types="@noshiro/ts-type-utils" />

 interface Array<T> {
   /**
@@ -21,7 +7,10 @@ interface Array<T> {
    * @param searchElement The element to search for.
    * @param fromIndex The position in this array at which to begin searching for searchElement.
    */
-  includes(searchElement: T, fromIndex?: number): boolean;
+  includes(
+    searchElement: T | (WidenLiteral<T> & {}),
+    fromIndex?: number,
+  ): searchElement is T;
 }

 interface ReadonlyArray<T> {
@@ -30,7 +19,10 @@ interface ReadonlyArray<T> {
    * @param searchElement The element to search for.
    * @param fromIndex The position in this array at which to begin searching for searchElement.
    */
-  includes(searchElement: T, fromIndex?: number): boolean;
+  includes(
+    searchElement: T | (WidenLiteral<T> & {}),
+    fromIndex?: number,
+  ): searchElement is T;
 }

 interface Int8Array<TArrayBuffer extends ArrayBufferLike> {
@@ -39,7 +31,7 @@ interface Int8Array<TArrayBuffer extends ArrayBufferLike> {
    * @param searchElement The element to search for.
    * @param fromIndex The position in this array at which to begin searching for searchElement.
    */
-  includes(searchElement: number, fromIndex?: number): boolean;
+  includes(searchElement: Int8, fromIndex?: number): boolean;
 }

 interface Uint8Array<TArrayBuffer extends ArrayBufferLike> {
@@ -48,7 +40,7 @@ interface Uint8Array<TArrayBuffer extends ArrayBufferLike> {
    * @param searchElement The element to search for.
    * @param fromIndex The position in this array at which to begin searching for searchElement.
    */
-  includes(searchElement: number, fromIndex?: number): boolean;
+  includes(searchElement: Uint8, fromIndex?: number): boolean;
 }

 interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike> {
@@ -57,7 +49,7 @@ interface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike> {
    * @param searchElement The element to search for.
    * @param fromIndex The position in this array at which to begin searching for searchElement.
    */
-  includes(searchElement: number, fromIndex?: number): boolean;
+  includes(searchElement: Uint8, fromIndex?: number): boolean;
 }

 interface Int16Array<TArrayBuffer extends ArrayBufferLike> {
