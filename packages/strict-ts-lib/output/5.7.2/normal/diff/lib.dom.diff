@@ -1,19 +1,5 @@
-/*! *****************************************************************************
-Copyright (c) Microsoft Corporation. All rights reserved.
-Licensed under the Apache License, Version 2.0 (the "License"); you may not use
-this file except in compliance with the License. You may obtain a copy of the
-License at http://www.apache.org/licenses/LICENSE-2.0
-
-THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
-WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
-MERCHANTABLITY OR NON-INFRINGEMENT.
-
-See the Apache Version 2.0 License for specific language governing permissions
-and limitations under the License.
-***************************************************************************** */
-
 /// <reference no-default-lib="true"/>
+/// <reference types="@noshiro/ts-type-utils" />

 /////////////////////////////
 /// Window APIs
@@ -133,7 +119,7 @@ interface AudioDataInit {
   numberOfFrames: number;
   sampleRate: number;
   timestamp: number;
-  transfer?: ArrayBuffer[];
+  transfer?: readonly ArrayBuffer[];
 }

 interface AudioDecoderConfig {
@@ -192,9 +178,9 @@ interface AudioTimestamp {
 interface AudioWorkletNodeOptions extends AudioNodeOptions {
   numberOfInputs?: number;
   numberOfOutputs?: number;
-  outputChannelCount?: number[];
+  outputChannelCount?: readonly number[];
   parameterData?: Record<string, number>;
-  processorOptions?: any;
+  processorOptions?: unknown;
 }

 interface AuthenticationExtensionsClientInputs {
@@ -293,7 +279,7 @@ interface CanvasRenderingContext2DSettings {
 }

 interface CaretPositionFromPointOptions {
-  shadowRoots?: ShadowRoot[];
+  shadowRoots?: readonly ShadowRoot[];
 }

 interface ChannelMergerOptions extends AudioNodeOptions {
@@ -362,8 +348,8 @@ interface ConstrainBooleanParameters {
 }

 interface ConstrainDOMStringParameters {
-  exact?: string | string[];
-  ideal?: string | string[];
+  exact?: string | readonly string[];
+  ideal?: string | readonly string[];
 }

 interface ConstrainDoubleRange extends DoubleRange {
@@ -405,7 +391,7 @@ interface CryptoKeyPair {
   publicKey: CryptoKey;
 }

-interface CustomEventInit<T = any> extends EventInit {
+interface CustomEventInit<T = unknown> extends EventInit {
   detail?: T;
 }

@@ -560,7 +546,7 @@ interface EncodedAudioChunkInit {
   data: AllowSharedBufferSource;
   duration?: number;
   timestamp: number;
-  transfer?: ArrayBuffer[];
+  transfer?: readonly ArrayBuffer[];
   type: EncodedAudioChunkType;
 }

@@ -581,7 +567,7 @@ interface EncodedVideoChunkMetadata {

 interface ErrorEventInit extends EventInit {
   colno?: number;
-  error?: any;
+  error?: unknown;
   filename?: string;
   lineno?: number;
   message?: string;
@@ -664,7 +650,7 @@ interface FontFaceDescriptors {
 }

 interface FontFaceSetLoadEventInit extends EventInit {
-  fontfaces?: FontFace[];
+  fontfaces?: readonly FontFace[];
 }

 interface FormDataEventInit extends EventInit {
@@ -698,7 +684,7 @@ interface GetAnimationsOptions {

 interface GetHTMLOptions {
   serializableShadowRoots?: boolean;
-  shadowRoots?: ShadowRoot[];
+  shadowRoots?: readonly ShadowRoot[];
 }

 interface GetNotificationOptions {
@@ -747,7 +733,7 @@ interface IDBIndexParameters {

 interface IDBObjectStoreParameters {
   autoIncrement?: boolean;
-  keyPath?: string | string[] | null;
+  keyPath?: string | readonly string[] | null;
 }

 interface IDBTransactionOptions {
@@ -760,8 +746,8 @@ interface IDBVersionChangeEventInit extends EventInit {
 }

 interface IIRFilterOptions extends AudioNodeOptions {
-  feedback: number[];
-  feedforward: number[];
+  feedback: readonly number[];
+  feedforward: readonly number[];
 }

 interface IdleRequestOptions {
@@ -795,13 +781,13 @@ interface InputEventInit extends UIEventInit {
   dataTransfer?: DataTransfer | null;
   inputType?: string;
   isComposing?: boolean;
-  targetRanges?: StaticRange[];
+  targetRanges?: readonly StaticRange[];
 }

 interface IntersectionObserverInit {
   root?: Element | Document | null;
   rootMargin?: string;
-  threshold?: number | number[];
+  threshold?: number | readonly number[];
 }

 interface JsonWebKey {
@@ -813,10 +799,10 @@ interface JsonWebKey {
   e?: string;
   ext?: boolean;
   k?: string;
-  key_ops?: string[];
+  key_ops?: readonly string[];
   kty?: string;
   n?: string;
-  oth?: RsaOtherPrimesInfo[];
+  oth?: readonly RsaOtherPrimesInfo[];
   p?: string;
   q?: string;
   qi?: string;
@@ -866,8 +852,8 @@ interface LockInfo {
 }

 interface LockManagerSnapshot {
-  held?: LockInfo[];
-  pending?: LockInfo[];
+  held?: readonly LockInfo[];
+  pending?: readonly LockInfo[];
 }

 interface LockOptions {
@@ -938,13 +924,13 @@ interface MediaKeyMessageEventInit extends EventInit {
 }

 interface MediaKeySystemConfiguration {
-  audioCapabilities?: MediaKeySystemMediaCapability[];
+  audioCapabilities?: readonly MediaKeySystemMediaCapability[];
   distinctiveIdentifier?: MediaKeysRequirement;
-  initDataTypes?: string[];
+  initDataTypes?: readonly string[];
   label?: string;
   persistentState?: MediaKeysRequirement;
-  sessionTypes?: string[];
-  videoCapabilities?: MediaKeySystemMediaCapability[];
+  sessionTypes?: readonly string[];
+  videoCapabilities?: readonly MediaKeySystemMediaCapability[];
 }

 interface MediaKeySystemMediaCapability {
@@ -960,7 +946,7 @@ interface MediaKeysPolicy {
 interface MediaMetadataInit {
   album?: string;
   artist?: string;
-  artwork?: MediaImage[];
+  artwork?: readonly MediaImage[];
   title?: string;
 }

@@ -1006,17 +992,17 @@ interface MediaStreamTrackEventInit extends EventInit {

 interface MediaTrackCapabilities {
   aspectRatio?: DoubleRange;
-  autoGainControl?: boolean[];
-  backgroundBlur?: boolean[];
+  autoGainControl?: readonly boolean[];
+  backgroundBlur?: readonly boolean[];
   channelCount?: ULongRange;
   deviceId?: string;
   displaySurface?: string;
-  echoCancellation?: boolean[];
-  facingMode?: string[];
+  echoCancellation?: readonly boolean[];
+  facingMode?: readonly string[];
   frameRate?: DoubleRange;
   groupId?: string;
   height?: ULongRange;
-  noiseSuppression?: boolean[];
+  noiseSuppression?: readonly boolean[];
   sampleRate?: ULongRange;
   sampleSize?: ULongRange;
   width?: ULongRange;
@@ -1041,7 +1027,7 @@ interface MediaTrackConstraintSet {
 }

 interface MediaTrackConstraints extends MediaTrackConstraintSet {
-  advanced?: MediaTrackConstraintSet[];
+  advanced?: readonly MediaTrackConstraintSet[];
 }

 interface MediaTrackSettings {
@@ -1080,11 +1066,11 @@ interface MediaTrackSupportedConstraints {
   width?: boolean;
 }

-interface MessageEventInit<T = any> extends EventInit {
+interface MessageEventInit<T = unknown> extends EventInit {
   data?: T;
   lastEventId?: string;
   origin?: string;
-  ports?: MessagePort[];
+  ports?: readonly MessagePort[];
   source?: MessageEventSource | null;
 }

@@ -1106,7 +1092,7 @@ interface MultiCacheQueryOptions extends CacheQueryOptions {

 interface MutationObserverInit {
   /** Set to a list of attribute local names (without namespace) if not all attribute mutations need to be observed and attributes is true or omitted. */
-  attributeFilter?: string[];
+  attributeFilter?: readonly string[];
   /** Set to true if attributes is true or omitted and target's attribute value before the mutation needs to be recorded. */
   attributeOldValue?: boolean;
   /** Set to true if mutations to target's attributes are to be observed. Can be omitted if attributeOldValue or attributeFilter is specified. */
@@ -1129,7 +1115,7 @@ interface NavigationPreloadState {
 interface NotificationOptions {
   badge?: string;
   body?: string;
-  data?: any;
+  data?: unknown;
   dir?: NotificationDirection;
   icon?: string;
   lang?: string;
@@ -1209,9 +1195,9 @@ interface PaymentCurrencyAmount {
 }

 interface PaymentDetailsBase {
-  displayItems?: PaymentItem[];
-  modifiers?: PaymentDetailsModifier[];
-  shippingOptions?: PaymentShippingOption[];
+  displayItems?: readonly PaymentItem[];
+  modifiers?: readonly PaymentDetailsModifier[];
+  shippingOptions?: readonly PaymentShippingOption[];
 }

 interface PaymentDetailsInit extends PaymentDetailsBase {
@@ -1220,15 +1206,15 @@ interface PaymentDetailsInit extends PaymentDetailsBase {
 }

 interface PaymentDetailsModifier {
-  additionalDisplayItems?: PaymentItem[];
-  data?: any;
+  additionalDisplayItems?: readonly PaymentItem[];
+  data?: unknown;
   supportedMethods: string;
   total?: PaymentItem;
 }

 interface PaymentDetailsUpdate extends PaymentDetailsBase {
   error?: string;
-  paymentMethodErrors?: any;
+  paymentMethodErrors?: unknown;
   shippingAddressErrors?: AddressErrors;
   total?: PaymentItem;
 }
@@ -1240,12 +1226,12 @@ interface PaymentItem {
 }

 interface PaymentMethodChangeEventInit extends PaymentRequestUpdateEventInit {
-  methodDetails?: any;
+  methodDetails?: unknown;
   methodName?: string;
 }

 interface PaymentMethodData {
-  data?: any;
+  data?: unknown;
   supportedMethods: string;
 }

@@ -1279,12 +1265,12 @@ interface Pbkdf2Params extends Algorithm {
 }

 interface PerformanceMarkOptions {
-  detail?: any;
+  detail?: unknown;
   startTime?: DOMHighResTimeStamp;
 }

 interface PerformanceMeasureOptions {
-  detail?: any;
+  detail?: unknown;
   duration?: DOMHighResTimeStamp;
   end?: string | DOMHighResTimeStamp;
   start?: string | DOMHighResTimeStamp;
@@ -1292,7 +1278,7 @@ interface PerformanceMeasureOptions {

 interface PerformanceObserverInit {
   buffered?: boolean;
-  entryTypes?: string[];
+  entryTypes?: readonly string[];
   type?: string;
 }

@@ -1301,8 +1287,8 @@ interface PeriodicWaveConstraints {
 }

 interface PeriodicWaveOptions extends PeriodicWaveConstraints {
-  imag?: number[] | Float32Array;
-  real?: number[] | Float32Array;
+  imag?: readonly number[] | Float32Array;
+  real?: readonly number[] | Float32Array;
 }

 interface PermissionDescriptor {
@@ -1321,12 +1307,12 @@ interface PlaneLayout {
 interface PointerEventInit extends MouseEventInit {
   altitudeAngle?: number;
   azimuthAngle?: number;
-  coalescedEvents?: PointerEvent[];
+  coalescedEvents?: readonly PointerEvent[];
   height?: number;
   isPrimary?: boolean;
   pointerId?: number;
   pointerType?: string;
-  predictedEvents?: PointerEvent[];
+  predictedEvents?: readonly PointerEvent[];
   pressure?: number;
   tangentialPressure?: number;
   tiltX?: number;
@@ -1340,7 +1326,7 @@ interface PointerLockOptions {
 }

 interface PopStateEventInit extends EventInit {
-  state?: any;
+  state?: unknown;
 }

 interface PositionOptions {
@@ -1356,8 +1342,8 @@ interface ProgressEventInit extends EventInit {
 }

 interface PromiseRejectionEventInit extends EventInit {
-  promise: Promise<any>;
-  reason?: any;
+  promise: Promise<unknown>;
+  reason?: unknown;
 }

 interface PropertyDefinition {
@@ -1368,12 +1354,12 @@ interface PropertyDefinition {
 }

 interface PropertyIndexedKeyframes {
-  composite?: CompositeOperationOrAuto | CompositeOperationOrAuto[];
-  easing?: string | string[];
+  composite?: CompositeOperationOrAuto | readonly CompositeOperationOrAuto[];
+  easing?: string | readonly string[];
   offset?: number | (number | null)[];
   [property: string]:
     | string
-    | string[]
+    | readonly string[]
     | number
     | null
     | (number | null)[]
@@ -1384,9 +1370,9 @@ interface PublicKeyCredentialCreationOptions {
   attestation?: AttestationConveyancePreference;
   authenticatorSelection?: AuthenticatorSelectionCriteria;
   challenge: BufferSource;
-  excludeCredentials?: PublicKeyCredentialDescriptor[];
+  excludeCredentials?: readonly PublicKeyCredentialDescriptor[];
   extensions?: AuthenticationExtensionsClientInputs;
-  pubKeyCredParams: PublicKeyCredentialParameters[];
+  pubKeyCredParams: readonly PublicKeyCredentialParameters[];
   rp: PublicKeyCredentialRpEntity;
   timeout?: number;
   user: PublicKeyCredentialUserEntity;
@@ -1396,10 +1382,10 @@ interface PublicKeyCredentialCreationOptionsJSON {
   attestation?: string;
   authenticatorSelection?: AuthenticatorSelectionCriteria;
   challenge: Base64URLString;
-  excludeCredentials?: PublicKeyCredentialDescriptorJSON[];
+  excludeCredentials?: readonly PublicKeyCredentialDescriptorJSON[];
   extensions?: AuthenticationExtensionsClientInputsJSON;
-  hints?: string[];
-  pubKeyCredParams: PublicKeyCredentialParameters[];
+  hints?: readonly string[];
+  pubKeyCredParams: readonly PublicKeyCredentialParameters[];
   rp: PublicKeyCredentialRpEntity;
   timeout?: number;
   user: PublicKeyCredentialUserEntityJSON;
@@ -1407,13 +1393,13 @@ interface PublicKeyCredentialCreationOptionsJSON {

 interface PublicKeyCredentialDescriptor {
   id: BufferSource;
-  transports?: AuthenticatorTransport[];
+  transports?: readonly AuthenticatorTransport[];
   type: PublicKeyCredentialType;
 }

 interface PublicKeyCredentialDescriptorJSON {
   id: Base64URLString;
-  transports?: string[];
+  transports?: readonly string[];
   type: string;
 }

@@ -1427,7 +1413,7 @@ interface PublicKeyCredentialParameters {
 }

 interface PublicKeyCredentialRequestOptions {
-  allowCredentials?: PublicKeyCredentialDescriptor[];
+  allowCredentials?: readonly PublicKeyCredentialDescriptor[];
   challenge: BufferSource;
   extensions?: AuthenticationExtensionsClientInputs;
   rpId?: string;
@@ -1436,10 +1422,10 @@ interface PublicKeyCredentialRequestOptions {
 }

 interface PublicKeyCredentialRequestOptionsJSON {
-  allowCredentials?: PublicKeyCredentialDescriptorJSON[];
+  allowCredentials?: readonly PublicKeyCredentialDescriptorJSON[];
   challenge: Base64URLString;
   extensions?: AuthenticationExtensionsClientInputsJSON;
-  hints?: string[];
+  hints?: readonly string[];
   rpId?: string;
   timeout?: number;
   userVerification?: string;
@@ -1471,7 +1457,7 @@ interface PushSubscriptionOptionsInit {
   userVisibleOnly?: boolean;
 }

-interface QueuingStrategy<T = any> {
+interface QueuingStrategy<T = unknown> {
   highWaterMark?: number;
   size?: QueuingStrategySize<T>;
 }
@@ -1493,9 +1479,9 @@ interface RTCCertificateExpiration {

 interface RTCConfiguration {
   bundlePolicy?: RTCBundlePolicy;
-  certificates?: RTCCertificate[];
+  certificates?: readonly RTCCertificate[];
   iceCandidatePoolSize?: number;
-  iceServers?: RTCIceServer[];
+  iceServers?: readonly RTCIceServer[];
   iceTransportPolicy?: RTCIceTransportPolicy;
   rtcpMuxPolicy?: RTCRtcpMuxPolicy;
 }
@@ -1523,15 +1509,15 @@ interface RTCDtlsFingerprint {
 }

 interface RTCEncodedAudioFrameMetadata {
-  contributingSources?: number[];
+  contributingSources?: readonly number[];
   payloadType?: number;
   sequenceNumber?: number;
   synchronizationSource?: number;
 }

 interface RTCEncodedVideoFrameMetadata {
-  contributingSources?: number[];
-  dependencies?: number[];
+  contributingSources?: readonly number[];
+  dependencies?: readonly number[];
   frameId?: number;
   height?: number;
   payloadType?: number;
@@ -1584,7 +1570,7 @@ interface RTCIceCandidatePairStats extends RTCStats {

 interface RTCIceServer {
   credential?: string;
-  urls: string | string[];
+  urls: string | readonly string[];
   username?: string;
 }

@@ -1692,8 +1678,8 @@ interface RTCRtcpParameters {
 }

 interface RTCRtpCapabilities {
-  codecs: RTCRtpCodec[];
-  headerExtensions: RTCRtpHeaderExtensionCapability[];
+  codecs: readonly RTCRtpCodec[];
+  headerExtensions: readonly RTCRtpHeaderExtensionCapability[];
 }

 interface RTCRtpCodec {
@@ -1738,8 +1724,8 @@ interface RTCRtpHeaderExtensionParameters {
 }

 interface RTCRtpParameters {
-  codecs: RTCRtpCodecParameters[];
-  headerExtensions: RTCRtpHeaderExtensionParameters[];
+  codecs: readonly RTCRtpCodecParameters[];
+  headerExtensions: readonly RTCRtpHeaderExtensionParameters[];
   rtcp: RTCRtcpParameters;
 }

@@ -1747,7 +1733,7 @@ interface RTCRtpReceiveParameters extends RTCRtpParameters {}

 interface RTCRtpSendParameters extends RTCRtpParameters {
   degradationPreference?: RTCDegradationPreference;
-  encodings: RTCRtpEncodingParameters[];
+  encodings: readonly RTCRtpEncodingParameters[];
   transactionId: string;
 }

@@ -1762,8 +1748,8 @@ interface RTCRtpSynchronizationSource extends RTCRtpContributingSource {}

 interface RTCRtpTransceiverInit {
   direction?: RTCRtpTransceiverDirection;
-  sendEncodings?: RTCRtpEncodingParameters[];
-  streams?: MediaStream[];
+  sendEncodings?: readonly RTCRtpEncodingParameters[];
+  streams?: readonly MediaStream[];
 }

 interface RTCSentRtpStreamStats extends RTCRtpStreamStats {
@@ -1786,7 +1772,7 @@ interface RTCStats {

 interface RTCTrackEventInit extends EventInit {
   receiver: RTCRtpReceiver;
-  streams?: MediaStream[];
+  streams?: readonly MediaStream[];
   track: MediaStreamTrack;
   transceiver: RTCRtpTransceiver;
 }
@@ -1833,7 +1819,7 @@ interface ReadableStreamReadValueResult<T> {
   value: T;
 }

-interface ReadableWritablePair<R = any, W = any> {
+interface ReadableWritablePair<R = unknown, W = unknown> {
   readable: ReadableStream<R>;
   /**
    * Provides a convenient, chainable way of piping this readable stream through a transform stream (or any other { writable, readable } pair). It simply pipes the stream into the writable side of the supplied pair, and returns the readable side for further use.
@@ -1851,7 +1837,7 @@ interface RegistrationOptions {

 interface ReportingObserverOptions {
   buffered?: boolean;
-  types?: string[];
+  types?: readonly string[];
 }

 interface RequestInit {
@@ -1974,7 +1960,7 @@ interface ShadowRootInit {
 }

 interface ShareData {
-  files?: File[];
+  files?: readonly File[];
   text?: string;
   title?: string;
   url?: string;
@@ -2041,7 +2027,7 @@ interface StreamPipeOptions {
 }

 interface StructuredSerializeOptions {
-  transfer?: Transferable[];
+  transfer?: readonly Transferable[];
 }

 interface SubmitEventInit extends EventInit {
@@ -2068,9 +2054,9 @@ interface ToggleEventInit extends EventInit {
 }

 interface TouchEventInit extends EventModifierInit {
-  changedTouches?: Touch[];
-  targetTouches?: Touch[];
-  touches?: Touch[];
+  changedTouches?: readonly Touch[];
+  targetTouches?: readonly Touch[];
+  touches?: readonly Touch[];
 }

 interface TouchInit {
@@ -2095,7 +2081,7 @@ interface TrackEventInit extends EventInit {
   track?: TextTrack | null;
 }

-interface Transformer<I = any, O = any> {
+interface Transformer<I = unknown, O = unknown> {
   flush?: TransformerFlushCallback<O>;
   readableType?: undefined;
   start?: TransformerStartCallback<O>;
@@ -2125,20 +2111,20 @@ interface UnderlyingByteSource {
   autoAllocateChunkSize?: number;
   cancel?: UnderlyingSourceCancelCallback;
   pull?: (controller: ReadableByteStreamController) => void | PromiseLike<void>;
-  start?: (controller: ReadableByteStreamController) => any;
+  start?: (controller: ReadableByteStreamController) => unknown;
   type: 'bytes';
 }

-interface UnderlyingDefaultSource<R = any> {
+interface UnderlyingDefaultSource<R = unknown> {
   cancel?: UnderlyingSourceCancelCallback;
   pull?: (
     controller: ReadableStreamDefaultController<R>,
   ) => void | PromiseLike<void>;
-  start?: (controller: ReadableStreamDefaultController<R>) => any;
+  start?: (controller: ReadableStreamDefaultController<R>) => unknown;
   type?: undefined;
 }

-interface UnderlyingSink<W = any> {
+interface UnderlyingSink<W = unknown> {
   abort?: UnderlyingSinkAbortCallback;
   close?: UnderlyingSinkCloseCallback;
   start?: UnderlyingSinkStartCallback;
@@ -2146,7 +2132,7 @@ interface UnderlyingSink<W = any> {
   write?: UnderlyingSinkWriteCallback<W>;
 }

-interface UnderlyingSource<R = any> {
+interface UnderlyingSource<R = unknown> {
   autoAllocateChunkSize?: number;
   cancel?: UnderlyingSourceCancelCallback;
   pull?: UnderlyingSourcePullCallback<R>;
@@ -2253,7 +2239,7 @@ interface VideoFrameBufferInit {
   displayWidth?: number;
   duration?: number;
   format: VideoPixelFormat;
-  layout?: PlaneLayout[];
+  layout?: readonly PlaneLayout[];
   timestamp: number;
   visibleRect?: DOMRectInit;
 }
@@ -2274,7 +2260,7 @@ interface VideoFrameCallbackMetadata {
 interface VideoFrameCopyToOptions {
   colorSpace?: PredefinedColorSpace;
   format?: VideoPixelFormat;
-  layout?: PlaneLayout[];
+  layout?: readonly PlaneLayout[];
   rect?: DOMRectInit;
 }

@@ -2288,7 +2274,7 @@ interface VideoFrameInit {
 }

 interface WaveShaperOptions extends AudioNodeOptions {
-  curve?: number[] | Float32Array;
+  curve?: readonly number[] | Float32Array;
   oversample?: OverSampleType;
 }

@@ -2327,7 +2313,7 @@ interface WebTransportOptions {
   allowPooling?: boolean;
   congestionControl?: WebTransportCongestionControl;
   requireUnreliable?: boolean;
-  serverCertificateHashes?: WebTransportHash[];
+  serverCertificateHashes?: readonly WebTransportHash[];
 }

 interface WebTransportSendStreamOptions {
@@ -2364,7 +2350,7 @@ interface WriteParams {

 type NodeFilter = ((node: Node) => number) | { acceptNode(node: Node): number };

-declare var NodeFilter: {
+declare const NodeFilter: {
   readonly FILTER_ACCEPT: 1;
   readonly FILTER_REJECT: 2;
   readonly FILTER_SKIP: 3;
@@ -2517,10 +2503,10 @@ interface AbortController {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortController/abort)
    */
-  abort(reason?: any): void;
+  abort(reason?: unknown): void;
 }

-declare var AbortController: {
+declare const AbortController: {
   prototype: AbortController;
   new (): AbortController;
 };
@@ -2542,14 +2528,14 @@ interface AbortSignal extends EventTarget {
    */
   readonly aborted: boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_event) */
-  onabort: ((this: AbortSignal, ev: Event) => any) | null;
+  onabort: ((this: AbortSignal, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/reason) */
-  readonly reason: any;
+  readonly reason: unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/throwIfAborted) */
   throwIfAborted(): void;
   addEventListener<K extends keyof AbortSignalEventMap>(
     type: K,
-    listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any,
+    listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -2559,7 +2545,7 @@ interface AbortSignal extends EventTarget {
   ): void;
   removeEventListener<K extends keyof AbortSignalEventMap>(
     type: K,
-    listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any,
+    listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -2569,13 +2555,13 @@ interface AbortSignal extends EventTarget {
   ): void;
 }

-declare var AbortSignal: {
+declare const AbortSignal: {
   prototype: AbortSignal;
   new (): AbortSignal;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_static) */
-  abort(reason?: any): AbortSignal;
+  abort(reason?: unknown): AbortSignal;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/any_static) */
-  any(signals: AbortSignal[]): AbortSignal;
+  any(signals: readonly AbortSignal[]): AbortSignal;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/timeout_static) */
   timeout(milliseconds: number): AbortSignal;
 };
@@ -2614,7 +2600,7 @@ interface AbstractRange {
   readonly startOffset: number;
 }

-declare var AbstractRange: {
+declare const AbstractRange: {
   prototype: AbstractRange;
   new (): AbstractRange;
 };
@@ -2625,10 +2611,10 @@ interface AbstractWorkerEventMap {

 interface AbstractWorker {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/error_event) */
-  onerror: ((this: AbstractWorker, ev: ErrorEvent) => any) | null;
+  onerror: ((this: AbstractWorker, ev: ErrorEvent) => unknown) | null;
   addEventListener<K extends keyof AbstractWorkerEventMap>(
     type: K,
-    listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any,
+    listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -2638,7 +2624,7 @@ interface AbstractWorker {
   ): void;
   removeEventListener<K extends keyof AbstractWorkerEventMap>(
     type: K,
-    listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any,
+    listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -2674,7 +2660,7 @@ interface AnalyserNode extends AudioNode {
   getFloatTimeDomainData(array: Float32Array): void;
 }

-declare var AnalyserNode: {
+declare const AnalyserNode: {
   prototype: AnalyserNode;
   new (context: BaseAudioContext, options?: AnalyserOptions): AnalyserNode;
 };
@@ -2682,7 +2668,7 @@ declare var AnalyserNode: {
 interface Animatable {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animate) */
   animate(
-    keyframes: Keyframe[] | PropertyIndexedKeyframes | null,
+    keyframes: readonly Keyframe[] | PropertyIndexedKeyframes | null,
     options?: number | KeyframeAnimationOptions,
   ): Animation;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAnimations) */
@@ -2706,11 +2692,11 @@ interface Animation extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/id) */
   id: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/cancel_event) */
-  oncancel: ((this: Animation, ev: AnimationPlaybackEvent) => any) | null;
+  oncancel: ((this: Animation, ev: AnimationPlaybackEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/finish_event) */
-  onfinish: ((this: Animation, ev: AnimationPlaybackEvent) => any) | null;
+  onfinish: ((this: Animation, ev: AnimationPlaybackEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/remove_event) */
-  onremove: ((this: Animation, ev: AnimationPlaybackEvent) => any) | null;
+  onremove: ((this: Animation, ev: AnimationPlaybackEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/pending) */
   readonly pending: boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/playState) */
@@ -2743,7 +2729,7 @@ interface Animation extends EventTarget {
   updatePlaybackRate(playbackRate: number): void;
   addEventListener<K extends keyof AnimationEventMap>(
     type: K,
-    listener: (this: Animation, ev: AnimationEventMap[K]) => any,
+    listener: (this: Animation, ev: AnimationEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -2753,7 +2739,7 @@ interface Animation extends EventTarget {
   ): void;
   removeEventListener<K extends keyof AnimationEventMap>(
     type: K,
-    listener: (this: Animation, ev: AnimationEventMap[K]) => any,
+    listener: (this: Animation, ev: AnimationEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -2763,7 +2749,7 @@ interface Animation extends EventTarget {
   ): void;
 }

-declare var Animation: {
+declare const Animation: {
   prototype: Animation;
   new (
     effect?: AnimationEffect | null,
@@ -2781,7 +2767,7 @@ interface AnimationEffect {
   updateTiming(timing?: OptionalEffectTiming): void;
 }

-declare var AnimationEffect: {
+declare const AnimationEffect: {
   prototype: AnimationEffect;
   new (): AnimationEffect;
 };
@@ -2800,7 +2786,7 @@ interface AnimationEvent extends Event {
   readonly pseudoElement: string;
 }

-declare var AnimationEvent: {
+declare const AnimationEvent: {
   prototype: AnimationEvent;
   new (
     type: string,
@@ -2823,7 +2809,7 @@ interface AnimationPlaybackEvent extends Event {
   readonly timelineTime: CSSNumberish | null;
 }

-declare var AnimationPlaybackEvent: {
+declare const AnimationPlaybackEvent: {
   prototype: AnimationPlaybackEvent;
   new (
     type: string,
@@ -2837,7 +2823,7 @@ interface AnimationTimeline {
   readonly currentTime: CSSNumberish | null;
 }

-declare var AnimationTimeline: {
+declare const AnimationTimeline: {
   prototype: AnimationTimeline;
   new (): AnimationTimeline;
 };
@@ -2869,7 +2855,7 @@ interface Attr extends Node {
   value: string;
 }

-declare var Attr: {
+declare const Attr: {
   prototype: Attr;
   new (): Attr;
 };
@@ -2904,7 +2890,7 @@ interface AudioBuffer {
   getChannelData(channel: number): Float32Array;
 }

-declare var AudioBuffer: {
+declare const AudioBuffer: {
   prototype: AudioBuffer;
   new (options: AudioBufferOptions): AudioBuffer;
 };
@@ -2934,7 +2920,7 @@ interface AudioBufferSourceNode extends AudioScheduledSourceNode {
     listener: (
       this: AudioBufferSourceNode,
       ev: AudioScheduledSourceNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -2947,7 +2933,7 @@ interface AudioBufferSourceNode extends AudioScheduledSourceNode {
     listener: (
       this: AudioBufferSourceNode,
       ev: AudioScheduledSourceNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -2957,7 +2943,7 @@ interface AudioBufferSourceNode extends AudioScheduledSourceNode {
   ): void;
 }

-declare var AudioBufferSourceNode: {
+declare const AudioBufferSourceNode: {
   prototype: AudioBufferSourceNode;
   new (
     context: BaseAudioContext,
@@ -2993,7 +2979,7 @@ interface AudioContext extends BaseAudioContext {
   suspend(): Promise<void>;
   addEventListener<K extends keyof BaseAudioContextEventMap>(
     type: K,
-    listener: (this: AudioContext, ev: BaseAudioContextEventMap[K]) => any,
+    listener: (this: AudioContext, ev: BaseAudioContextEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3003,7 +2989,7 @@ interface AudioContext extends BaseAudioContext {
   ): void;
   removeEventListener<K extends keyof BaseAudioContextEventMap>(
     type: K,
-    listener: (this: AudioContext, ev: BaseAudioContextEventMap[K]) => any,
+    listener: (this: AudioContext, ev: BaseAudioContextEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3013,7 +2999,7 @@ interface AudioContext extends BaseAudioContext {
   ): void;
 }

-declare var AudioContext: {
+declare const AudioContext: {
   prototype: AudioContext;
   new (contextOptions?: AudioContextOptions): AudioContext;
 };
@@ -3045,7 +3031,7 @@ interface AudioData {
   ): void;
 }

-declare var AudioData: {
+declare const AudioData: {
   prototype: AudioData;
   new (init: AudioDataInit): AudioData;
 };
@@ -3063,7 +3049,7 @@ interface AudioDecoder extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/decodeQueueSize) */
   readonly decodeQueueSize: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/dequeue_event) */
-  ondequeue: ((this: AudioDecoder, ev: Event) => any) | null;
+  ondequeue: ((this: AudioDecoder, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/state) */
   readonly state: CodecState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/close) */
@@ -3078,7 +3064,7 @@ interface AudioDecoder extends EventTarget {
   reset(): void;
   addEventListener<K extends keyof AudioDecoderEventMap>(
     type: K,
-    listener: (this: AudioDecoder, ev: AudioDecoderEventMap[K]) => any,
+    listener: (this: AudioDecoder, ev: AudioDecoderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3088,7 +3074,7 @@ interface AudioDecoder extends EventTarget {
   ): void;
   removeEventListener<K extends keyof AudioDecoderEventMap>(
     type: K,
-    listener: (this: AudioDecoder, ev: AudioDecoderEventMap[K]) => any,
+    listener: (this: AudioDecoder, ev: AudioDecoderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3098,7 +3084,7 @@ interface AudioDecoder extends EventTarget {
   ): void;
 }

-declare var AudioDecoder: {
+declare const AudioDecoder: {
   prototype: AudioDecoder;
   new (init: AudioDecoderInit): AudioDecoder;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/isConfigSupported_static) */
@@ -3115,7 +3101,7 @@ interface AudioDestinationNode extends AudioNode {
   readonly maxChannelCount: number;
 }

-declare var AudioDestinationNode: {
+declare const AudioDestinationNode: {
   prototype: AudioDestinationNode;
   new (): AudioDestinationNode;
 };
@@ -3133,7 +3119,7 @@ interface AudioEncoder extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/encodeQueueSize) */
   readonly encodeQueueSize: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/dequeue_event) */
-  ondequeue: ((this: AudioEncoder, ev: Event) => any) | null;
+  ondequeue: ((this: AudioEncoder, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/state) */
   readonly state: CodecState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/close) */
@@ -3148,7 +3134,7 @@ interface AudioEncoder extends EventTarget {
   reset(): void;
   addEventListener<K extends keyof AudioEncoderEventMap>(
     type: K,
-    listener: (this: AudioEncoder, ev: AudioEncoderEventMap[K]) => any,
+    listener: (this: AudioEncoder, ev: AudioEncoderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3158,7 +3144,7 @@ interface AudioEncoder extends EventTarget {
   ): void;
   removeEventListener<K extends keyof AudioEncoderEventMap>(
     type: K,
-    listener: (this: AudioEncoder, ev: AudioEncoderEventMap[K]) => any,
+    listener: (this: AudioEncoder, ev: AudioEncoderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3168,7 +3154,7 @@ interface AudioEncoder extends EventTarget {
   ): void;
 }

-declare var AudioEncoder: {
+declare const AudioEncoder: {
   prototype: AudioEncoder;
   new (init: AudioEncoderInit): AudioEncoder;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/isConfigSupported_static) */
@@ -3220,7 +3206,7 @@ interface AudioListener {
   setPosition(x: number, y: number, z: number): void;
 }

-declare var AudioListener: {
+declare const AudioListener: {
   prototype: AudioListener;
   new (): AudioListener;
 };
@@ -3260,7 +3246,7 @@ interface AudioNode extends EventTarget {
   disconnect(destinationParam: AudioParam, output: number): void;
 }

-declare var AudioNode: {
+declare const AudioNode: {
   prototype: AudioNode;
   new (): AudioNode;
 };
@@ -3298,13 +3284,13 @@ interface AudioParam {
   setValueAtTime(value: number, startTime: number): AudioParam;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/setValueCurveAtTime) */
   setValueCurveAtTime(
-    values: number[] | Float32Array,
+    values: readonly number[] | Float32Array,
     startTime: number,
     duration: number,
   ): AudioParam;
 }

-declare var AudioParam: {
+declare const AudioParam: {
   prototype: AudioParam;
   new (): AudioParam;
 };
@@ -3313,11 +3299,11 @@ declare var AudioParam: {
 interface AudioParamMap {
   forEach(
     callbackfn: (value: AudioParam, key: string, parent: AudioParamMap) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }

-declare var AudioParamMap: {
+declare const AudioParamMap: {
   prototype: AudioParamMap;
   new (): AudioParamMap;
 };
@@ -3350,7 +3336,7 @@ interface AudioProcessingEvent extends Event {
 }

 /** @deprecated */
-declare var AudioProcessingEvent: {
+declare const AudioProcessingEvent: {
   prototype: AudioProcessingEvent;
   new (
     type: string,
@@ -3365,7 +3351,7 @@ interface AudioScheduledSourceNodeEventMap {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioScheduledSourceNode) */
 interface AudioScheduledSourceNode extends AudioNode {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioScheduledSourceNode/ended_event) */
-  onended: ((this: AudioScheduledSourceNode, ev: Event) => any) | null;
+  onended: ((this: AudioScheduledSourceNode, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioScheduledSourceNode/start) */
   start(when?: number): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioScheduledSourceNode/stop) */
@@ -3375,7 +3361,7 @@ interface AudioScheduledSourceNode extends AudioNode {
     listener: (
       this: AudioScheduledSourceNode,
       ev: AudioScheduledSourceNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3388,7 +3374,7 @@ interface AudioScheduledSourceNode extends AudioNode {
     listener: (
       this: AudioScheduledSourceNode,
       ev: AudioScheduledSourceNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3398,7 +3384,7 @@ interface AudioScheduledSourceNode extends AudioNode {
   ): void;
 }

-declare var AudioScheduledSourceNode: {
+declare const AudioScheduledSourceNode: {
   prototype: AudioScheduledSourceNode;
   new (): AudioScheduledSourceNode;
 };
@@ -3410,7 +3396,7 @@ declare var AudioScheduledSourceNode: {
  */
 interface AudioWorklet extends Worklet {}

-declare var AudioWorklet: {
+declare const AudioWorklet: {
   prototype: AudioWorklet;
   new (): AudioWorklet;
 };
@@ -3426,14 +3412,19 @@ interface AudioWorkletNodeEventMap {
  */
 interface AudioWorkletNode extends AudioNode {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioWorkletNode/processorerror_event) */
-  onprocessorerror: ((this: AudioWorkletNode, ev: ErrorEvent) => any) | null;
+  onprocessorerror:
+    | ((this: AudioWorkletNode, ev: ErrorEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioWorkletNode/parameters) */
   readonly parameters: AudioParamMap;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioWorkletNode/port) */
   readonly port: MessagePort;
   addEventListener<K extends keyof AudioWorkletNodeEventMap>(
     type: K,
-    listener: (this: AudioWorkletNode, ev: AudioWorkletNodeEventMap[K]) => any,
+    listener: (
+      this: AudioWorkletNode,
+      ev: AudioWorkletNodeEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3443,7 +3434,10 @@ interface AudioWorkletNode extends AudioNode {
   ): void;
   removeEventListener<K extends keyof AudioWorkletNodeEventMap>(
     type: K,
-    listener: (this: AudioWorkletNode, ev: AudioWorkletNodeEventMap[K]) => any,
+    listener: (
+      this: AudioWorkletNode,
+      ev: AudioWorkletNodeEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3453,7 +3447,7 @@ interface AudioWorkletNode extends AudioNode {
   ): void;
 }

-declare var AudioWorkletNode: {
+declare const AudioWorkletNode: {
   prototype: AudioWorkletNode;
   new (
     context: BaseAudioContext,
@@ -3476,7 +3470,7 @@ interface AuthenticatorAssertionResponse extends AuthenticatorResponse {
   readonly userHandle: ArrayBuffer | null;
 }

-declare var AuthenticatorAssertionResponse: {
+declare const AuthenticatorAssertionResponse: {
   prototype: AuthenticatorAssertionResponse;
   new (): AuthenticatorAssertionResponse;
 };
@@ -3499,7 +3493,7 @@ interface AuthenticatorAttestationResponse extends AuthenticatorResponse {
   getTransports(): string[];
 }

-declare var AuthenticatorAttestationResponse: {
+declare const AuthenticatorAttestationResponse: {
   prototype: AuthenticatorAttestationResponse;
   new (): AuthenticatorAttestationResponse;
 };
@@ -3514,7 +3508,7 @@ interface AuthenticatorResponse {
   readonly clientDataJSON: ArrayBuffer;
 }

-declare var AuthenticatorResponse: {
+declare const AuthenticatorResponse: {
   prototype: AuthenticatorResponse;
   new (): AuthenticatorResponse;
 };
@@ -3525,7 +3519,7 @@ interface BarProp {
   readonly visible: boolean;
 }

-declare var BarProp: {
+declare const BarProp: {
   prototype: BarProp;
   new (): BarProp;
 };
@@ -3549,7 +3543,7 @@ interface BaseAudioContext extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/listener) */
   readonly listener: AudioListener;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/statechange_event) */
-  onstatechange: ((this: BaseAudioContext, ev: Event) => any) | null;
+  onstatechange: ((this: BaseAudioContext, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/sampleRate) */
   readonly sampleRate: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/state) */
@@ -3581,15 +3575,18 @@ interface BaseAudioContext extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createGain) */
   createGain(): GainNode;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createIIRFilter) */
-  createIIRFilter(feedforward: number[], feedback: number[]): IIRFilterNode;
+  createIIRFilter(
+    feedforward: readonly number[],
+    feedback: readonly number[],
+  ): IIRFilterNode;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createOscillator) */
   createOscillator(): OscillatorNode;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createPanner) */
   createPanner(): PannerNode;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createPeriodicWave) */
   createPeriodicWave(
-    real: number[] | Float32Array,
-    imag: number[] | Float32Array,
+    real: readonly number[] | Float32Array,
+    imag: readonly number[] | Float32Array,
     constraints?: PeriodicWaveConstraints,
   ): PeriodicWave;
   /**
@@ -3614,7 +3611,10 @@ interface BaseAudioContext extends EventTarget {
   ): Promise<AudioBuffer>;
   addEventListener<K extends keyof BaseAudioContextEventMap>(
     type: K,
-    listener: (this: BaseAudioContext, ev: BaseAudioContextEventMap[K]) => any,
+    listener: (
+      this: BaseAudioContext,
+      ev: BaseAudioContextEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3624,7 +3624,10 @@ interface BaseAudioContext extends EventTarget {
   ): void;
   removeEventListener<K extends keyof BaseAudioContextEventMap>(
     type: K,
-    listener: (this: BaseAudioContext, ev: BaseAudioContextEventMap[K]) => any,
+    listener: (
+      this: BaseAudioContext,
+      ev: BaseAudioContextEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3634,7 +3637,7 @@ interface BaseAudioContext extends EventTarget {
   ): void;
 }

-declare var BaseAudioContext: {
+declare const BaseAudioContext: {
   prototype: BaseAudioContext;
   new (): BaseAudioContext;
 };
@@ -3644,16 +3647,16 @@ declare var BaseAudioContext: {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/BeforeUnloadEvent)
  */
-interface BeforeUnloadEvent extends Event {
+interface BeforeUnloadEvent extends Omit<Event, 'returnValue'> {
   /**
    * @deprecated
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/BeforeUnloadEvent/returnValue)
    */
-  returnValue: any;
+  returnValue: unknown;
 }

-declare var BeforeUnloadEvent: {
+declare const BeforeUnloadEvent: {
   prototype: BeforeUnloadEvent;
   new (): BeforeUnloadEvent;
 };
@@ -3682,7 +3685,7 @@ interface BiquadFilterNode extends AudioNode {
   ): void;
 }

-declare var BiquadFilterNode: {
+declare const BiquadFilterNode: {
   prototype: BiquadFilterNode;
   new (
     context: BaseAudioContext,
@@ -3712,9 +3715,9 @@ interface Blob {
   text(): Promise<string>;
 }

-declare var Blob: {
+declare const Blob: {
   prototype: Blob;
-  new (blobParts?: BlobPart[], options?: BlobPropertyBag): Blob;
+  new (blobParts?: readonly BlobPart[], options?: BlobPropertyBag): Blob;
 };

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BlobEvent) */
@@ -3725,7 +3728,7 @@ interface BlobEvent extends Event {
   readonly timecode: DOMHighResTimeStamp;
 }

-declare var BlobEvent: {
+declare const BlobEvent: {
   prototype: BlobEvent;
   new (type: string, eventInitDict: BlobEventInit): BlobEvent;
 };
@@ -3744,7 +3747,7 @@ interface Body {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/formData) */
   formData(): Promise<FormData>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/json) */
-  json(): Promise<any>;
+  json(): Promise<MutableJsonValue>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/text) */
   text(): Promise<string>;
 }
@@ -3763,9 +3766,11 @@ interface BroadcastChannel extends EventTarget {
    */
   readonly name: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/message_event) */
-  onmessage: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;
+  onmessage: ((this: BroadcastChannel, ev: MessageEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/messageerror_event) */
-  onmessageerror: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;
+  onmessageerror:
+    | ((this: BroadcastChannel, ev: MessageEvent) => unknown)
+    | null;
   /**
    * Closes the BroadcastChannel object, opening it up to garbage collection.
    *
@@ -3777,10 +3782,13 @@ interface BroadcastChannel extends EventTarget {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/postMessage)
    */
-  postMessage(message: any): void;
+  postMessage(message: unknown): void;
   addEventListener<K extends keyof BroadcastChannelEventMap>(
     type: K,
-    listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any,
+    listener: (
+      this: BroadcastChannel,
+      ev: BroadcastChannelEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3790,7 +3798,10 @@ interface BroadcastChannel extends EventTarget {
   ): void;
   removeEventListener<K extends keyof BroadcastChannelEventMap>(
     type: K,
-    listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any,
+    listener: (
+      this: BroadcastChannel,
+      ev: BroadcastChannelEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3800,7 +3811,7 @@ interface BroadcastChannel extends EventTarget {
   ): void;
 }

-declare var BroadcastChannel: {
+declare const BroadcastChannel: {
   prototype: BroadcastChannel;
   new (name: string): BroadcastChannel;
 };
@@ -3817,7 +3828,7 @@ interface ByteLengthQueuingStrategy extends QueuingStrategy<ArrayBufferView> {
   readonly size: QueuingStrategySize<ArrayBufferView>;
 }

-declare var ByteLengthQueuingStrategy: {
+declare const ByteLengthQueuingStrategy: {
   prototype: ByteLengthQueuingStrategy;
   new (init: QueuingStrategyInit): ByteLengthQueuingStrategy;
 };
@@ -3829,7 +3840,7 @@ declare var ByteLengthQueuingStrategy: {
  */
 interface CDATASection extends Text {}

-declare var CDATASection: {
+declare const CDATASection: {
   prototype: CDATASection;
   new (): CDATASection;
 };
@@ -3840,7 +3851,7 @@ interface CSSAnimation extends Animation {
   readonly animationName: string;
   addEventListener<K extends keyof AnimationEventMap>(
     type: K,
-    listener: (this: CSSAnimation, ev: AnimationEventMap[K]) => any,
+    listener: (this: CSSAnimation, ev: AnimationEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3850,7 +3861,7 @@ interface CSSAnimation extends Animation {
   ): void;
   removeEventListener<K extends keyof AnimationEventMap>(
     type: K,
-    listener: (this: CSSAnimation, ev: AnimationEventMap[K]) => any,
+    listener: (this: CSSAnimation, ev: AnimationEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3860,7 +3871,7 @@ interface CSSAnimation extends Animation {
   ): void;
 }

-declare var CSSAnimation: {
+declare const CSSAnimation: {
   prototype: CSSAnimation;
   new (): CSSAnimation;
 };
@@ -3875,7 +3886,7 @@ interface CSSConditionRule extends CSSGroupingRule {
   readonly conditionText: string;
 }

-declare var CSSConditionRule: {
+declare const CSSConditionRule: {
   prototype: CSSConditionRule;
   new (): CSSConditionRule;
 };
@@ -3888,7 +3899,7 @@ interface CSSContainerRule extends CSSConditionRule {
   readonly containerQuery: string;
 }

-declare var CSSContainerRule: {
+declare const CSSContainerRule: {
   prototype: CSSContainerRule;
   new (): CSSContainerRule;
 };
@@ -3919,7 +3930,7 @@ interface CSSCounterStyleRule extends CSSRule {
   system: string;
 }

-declare var CSSCounterStyleRule: {
+declare const CSSCounterStyleRule: {
   prototype: CSSCounterStyleRule;
   new (): CSSCounterStyleRule;
 };
@@ -3930,7 +3941,7 @@ interface CSSFontFaceRule extends CSSRule {
   readonly style: CSSStyleDeclaration;
 }

-declare var CSSFontFaceRule: {
+declare const CSSFontFaceRule: {
   prototype: CSSFontFaceRule;
   new (): CSSFontFaceRule;
 };
@@ -3941,7 +3952,7 @@ interface CSSFontFeatureValuesRule extends CSSRule {
   fontFamily: string;
 }

-declare var CSSFontFeatureValuesRule: {
+declare const CSSFontFeatureValuesRule: {
   prototype: CSSFontFeatureValuesRule;
   new (): CSSFontFeatureValuesRule;
 };
@@ -3958,7 +3969,7 @@ interface CSSFontPaletteValuesRule extends CSSRule {
   readonly overrideColors: string;
 }

-declare var CSSFontPaletteValuesRule: {
+declare const CSSFontPaletteValuesRule: {
   prototype: CSSFontPaletteValuesRule;
   new (): CSSFontPaletteValuesRule;
 };
@@ -3977,7 +3988,7 @@ interface CSSGroupingRule extends CSSRule {
   insertRule(rule: string, index?: number): number;
 }

-declare var CSSGroupingRule: {
+declare const CSSGroupingRule: {
   prototype: CSSGroupingRule;
   new (): CSSGroupingRule;
 };
@@ -3985,7 +3996,7 @@ declare var CSSGroupingRule: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSImageValue) */
 interface CSSImageValue extends CSSStyleValue {}

-declare var CSSImageValue: {
+declare const CSSImageValue: {
   prototype: CSSImageValue;
   new (): CSSImageValue;
 };
@@ -4004,7 +4015,7 @@ interface CSSImportRule extends CSSRule {
   readonly supportsText: string | null;
 }

-declare var CSSImportRule: {
+declare const CSSImportRule: {
   prototype: CSSImportRule;
   new (): CSSImportRule;
 };
@@ -4021,7 +4032,7 @@ interface CSSKeyframeRule extends CSSRule {
   readonly style: CSSStyleDeclaration;
 }

-declare var CSSKeyframeRule: {
+declare const CSSKeyframeRule: {
   prototype: CSSKeyframeRule;
   new (): CSSKeyframeRule;
 };
@@ -4047,7 +4058,7 @@ interface CSSKeyframesRule extends CSSRule {
   [index: number]: CSSKeyframeRule;
 }

-declare var CSSKeyframesRule: {
+declare const CSSKeyframesRule: {
   prototype: CSSKeyframesRule;
   new (): CSSKeyframesRule;
 };
@@ -4058,7 +4069,7 @@ interface CSSKeywordValue extends CSSStyleValue {
   value: string;
 }

-declare var CSSKeywordValue: {
+declare const CSSKeywordValue: {
   prototype: CSSKeywordValue;
   new (value: string): CSSKeywordValue;
 };
@@ -4069,7 +4080,7 @@ interface CSSLayerBlockRule extends CSSGroupingRule {
   readonly name: string;
 }

-declare var CSSLayerBlockRule: {
+declare const CSSLayerBlockRule: {
   prototype: CSSLayerBlockRule;
   new (): CSSLayerBlockRule;
 };
@@ -4080,7 +4091,7 @@ interface CSSLayerStatementRule extends CSSRule {
   readonly nameList: ReadonlyArray<string>;
 }

-declare var CSSLayerStatementRule: {
+declare const CSSLayerStatementRule: {
   prototype: CSSLayerStatementRule;
   new (): CSSLayerStatementRule;
 };
@@ -4091,7 +4102,7 @@ interface CSSMathClamp extends CSSMathValue {
   readonly value: CSSNumericValue;
 }

-declare var CSSMathClamp: {
+declare const CSSMathClamp: {
   prototype: CSSMathClamp;
   new (
     lower: CSSNumberish,
@@ -4106,7 +4117,7 @@ interface CSSMathInvert extends CSSMathValue {
   readonly value: CSSNumericValue;
 }

-declare var CSSMathInvert: {
+declare const CSSMathInvert: {
   prototype: CSSMathInvert;
   new (arg: CSSNumberish): CSSMathInvert;
 };
@@ -4117,9 +4128,9 @@ interface CSSMathMax extends CSSMathValue {
   readonly values: CSSNumericArray;
 }

-declare var CSSMathMax: {
+declare const CSSMathMax: {
   prototype: CSSMathMax;
-  new (...args: CSSNumberish[]): CSSMathMax;
+  new (...args: readonly CSSNumberish[]): CSSMathMax;
 };

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathMin) */
@@ -4128,9 +4139,9 @@ interface CSSMathMin extends CSSMathValue {
   readonly values: CSSNumericArray;
 }

-declare var CSSMathMin: {
+declare const CSSMathMin: {
   prototype: CSSMathMin;
-  new (...args: CSSNumberish[]): CSSMathMin;
+  new (...args: readonly CSSNumberish[]): CSSMathMin;
 };

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathNegate) */
@@ -4139,7 +4150,7 @@ interface CSSMathNegate extends CSSMathValue {
   readonly value: CSSNumericValue;
 }

-declare var CSSMathNegate: {
+declare const CSSMathNegate: {
   prototype: CSSMathNegate;
   new (arg: CSSNumberish): CSSMathNegate;
 };
@@ -4150,9 +4161,9 @@ interface CSSMathProduct extends CSSMathValue {
   readonly values: CSSNumericArray;
 }

-declare var CSSMathProduct: {
+declare const CSSMathProduct: {
   prototype: CSSMathProduct;
-  new (...args: CSSNumberish[]): CSSMathProduct;
+  new (...args: readonly CSSNumberish[]): CSSMathProduct;
 };

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathSum) */
@@ -4161,9 +4172,9 @@ interface CSSMathSum extends CSSMathValue {
   readonly values: CSSNumericArray;
 }

-declare var CSSMathSum: {
+declare const CSSMathSum: {
   prototype: CSSMathSum;
-  new (...args: CSSNumberish[]): CSSMathSum;
+  new (...args: readonly CSSNumberish[]): CSSMathSum;
 };

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathValue) */
@@ -4172,7 +4183,7 @@ interface CSSMathValue extends CSSNumericValue {
   readonly operator: CSSMathOperator;
 }

-declare var CSSMathValue: {
+declare const CSSMathValue: {
   prototype: CSSMathValue;
   new (): CSSMathValue;
 };
@@ -4183,7 +4194,7 @@ interface CSSMatrixComponent extends CSSTransformComponent {
   matrix: DOMMatrix;
 }

-declare var CSSMatrixComponent: {
+declare const CSSMatrixComponent: {
   prototype: CSSMatrixComponent;
   new (
     matrix: DOMMatrixReadOnly,
@@ -4201,7 +4212,7 @@ interface CSSMediaRule extends CSSConditionRule {
   readonly media: MediaList;
 }

-declare var CSSMediaRule: {
+declare const CSSMediaRule: {
   prototype: CSSMediaRule;
   new (): CSSMediaRule;
 };
@@ -4218,7 +4229,7 @@ interface CSSNamespaceRule extends CSSRule {
   readonly prefix: string;
 }

-declare var CSSNamespaceRule: {
+declare const CSSNamespaceRule: {
   prototype: CSSNamespaceRule;
   new (): CSSNamespaceRule;
 };
@@ -4233,12 +4244,12 @@ interface CSSNumericArray {
       key: number,
       parent: CSSNumericArray,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: CSSNumericValue;
 }

-declare var CSSNumericArray: {
+declare const CSSNumericArray: {
   prototype: CSSNumericArray;
   new (): CSSNumericArray;
 };
@@ -4246,28 +4257,28 @@ declare var CSSNumericArray: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue) */
 interface CSSNumericValue extends CSSStyleValue {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/add) */
-  add(...values: CSSNumberish[]): CSSNumericValue;
+  add(...values: readonly CSSNumberish[]): CSSNumericValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/div) */
-  div(...values: CSSNumberish[]): CSSNumericValue;
+  div(...values: readonly CSSNumberish[]): CSSNumericValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/equals) */
-  equals(...value: CSSNumberish[]): boolean;
+  equals(...value: readonly CSSNumberish[]): boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/max) */
-  max(...values: CSSNumberish[]): CSSNumericValue;
+  max(...values: readonly CSSNumberish[]): CSSNumericValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/min) */
-  min(...values: CSSNumberish[]): CSSNumericValue;
+  min(...values: readonly CSSNumberish[]): CSSNumericValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/mul) */
-  mul(...values: CSSNumberish[]): CSSNumericValue;
+  mul(...values: readonly CSSNumberish[]): CSSNumericValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/sub) */
-  sub(...values: CSSNumberish[]): CSSNumericValue;
+  sub(...values: readonly CSSNumberish[]): CSSNumericValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/to) */
   to(unit: string): CSSUnitValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/toSum) */
-  toSum(...units: string[]): CSSMathSum;
+  toSum(...units: readonly string[]): CSSMathSum;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/type) */
   type(): CSSNumericType;
 }

-declare var CSSNumericValue: {
+declare const CSSNumericValue: {
   prototype: CSSNumericValue;
   new (): CSSNumericValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/parse_static) */
@@ -4286,7 +4297,7 @@ interface CSSPageRule extends CSSGroupingRule {
   readonly style: CSSStyleDeclaration;
 }

-declare var CSSPageRule: {
+declare const CSSPageRule: {
   prototype: CSSPageRule;
   new (): CSSPageRule;
 };
@@ -4297,7 +4308,7 @@ interface CSSPerspective extends CSSTransformComponent {
   length: CSSPerspectiveValue;
 }

-declare var CSSPerspective: {
+declare const CSSPerspective: {
   prototype: CSSPerspective;
   new (length: CSSPerspectiveValue): CSSPerspective;
 };
@@ -4314,7 +4325,7 @@ interface CSSPropertyRule extends CSSRule {
   readonly syntax: string;
 }

-declare var CSSPropertyRule: {
+declare const CSSPropertyRule: {
   prototype: CSSPropertyRule;
   new (): CSSPropertyRule;
 };
@@ -4331,7 +4342,7 @@ interface CSSRotate extends CSSTransformComponent {
   z: CSSNumberish;
 }

-declare var CSSRotate: {
+declare const CSSRotate: {
   prototype: CSSRotate;
   new (angle: CSSNumericValue): CSSRotate;
   new (
@@ -4374,7 +4385,7 @@ interface CSSRule {
   readonly FONT_FEATURE_VALUES_RULE: 14;
 }

-declare var CSSRule: {
+declare const CSSRule: {
   prototype: CSSRule;
   new (): CSSRule;
   readonly STYLE_RULE: 1;
@@ -4404,7 +4415,7 @@ interface CSSRuleList {
   [index: number]: CSSRule;
 }

-declare var CSSRuleList: {
+declare const CSSRuleList: {
   prototype: CSSRuleList;
   new (): CSSRuleList;
 };
@@ -4419,7 +4430,7 @@ interface CSSScale extends CSSTransformComponent {
   z: CSSNumberish;
 }

-declare var CSSScale: {
+declare const CSSScale: {
   prototype: CSSScale;
   new (x: CSSNumberish, y: CSSNumberish, z?: CSSNumberish): CSSScale;
 };
@@ -4432,7 +4443,7 @@ interface CSSScopeRule extends CSSGroupingRule {
   readonly start: string | null;
 }

-declare var CSSScopeRule: {
+declare const CSSScopeRule: {
   prototype: CSSScopeRule;
   new (): CSSScopeRule;
 };
@@ -4445,7 +4456,7 @@ interface CSSSkew extends CSSTransformComponent {
   ay: CSSNumericValue;
 }

-declare var CSSSkew: {
+declare const CSSSkew: {
   prototype: CSSSkew;
   new (ax: CSSNumericValue, ay: CSSNumericValue): CSSSkew;
 };
@@ -4456,7 +4467,7 @@ interface CSSSkewX extends CSSTransformComponent {
   ax: CSSNumericValue;
 }

-declare var CSSSkewX: {
+declare const CSSSkewX: {
   prototype: CSSSkewX;
   new (ax: CSSNumericValue): CSSSkewX;
 };
@@ -4467,7 +4478,7 @@ interface CSSSkewY extends CSSTransformComponent {
   ay: CSSNumericValue;
 }

-declare var CSSSkewY: {
+declare const CSSSkewY: {
   prototype: CSSSkewY;
   new (ay: CSSNumericValue): CSSSkewY;
 };
@@ -4475,7 +4486,7 @@ declare var CSSSkewY: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStartingStyleRule) */
 interface CSSStartingStyleRule extends CSSGroupingRule {}

-declare var CSSStartingStyleRule: {
+declare const CSSStartingStyleRule: {
   prototype: CSSStartingStyleRule;
   new (): CSSStartingStyleRule;
 };
@@ -5767,7 +5778,7 @@ interface CSSStyleDeclaration {
   [index: number]: string;
 }

-declare var CSSStyleDeclaration: {
+declare const CSSStyleDeclaration: {
   prototype: CSSStyleDeclaration;
   new (): CSSStyleDeclaration;
 };
@@ -5786,7 +5797,7 @@ interface CSSStyleRule extends CSSGroupingRule {
   readonly styleMap: StylePropertyMap;
 }

-declare var CSSStyleRule: {
+declare const CSSStyleRule: {
   prototype: CSSStyleRule;
   new (): CSSStyleRule;
 };
@@ -5829,7 +5840,7 @@ interface CSSStyleSheet extends StyleSheet {
   replaceSync(text: string): void;
 }

-declare var CSSStyleSheet: {
+declare const CSSStyleSheet: {
   prototype: CSSStyleSheet;
   new (options?: CSSStyleSheetInit): CSSStyleSheet;
 };
@@ -5839,7 +5850,7 @@ interface CSSStyleValue {
   toString(): string;
 }

-declare var CSSStyleValue: {
+declare const CSSStyleValue: {
   prototype: CSSStyleValue;
   new (): CSSStyleValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleValue/parse_static) */
@@ -5855,7 +5866,7 @@ declare var CSSStyleValue: {
  */
 interface CSSSupportsRule extends CSSConditionRule {}

-declare var CSSSupportsRule: {
+declare const CSSSupportsRule: {
   prototype: CSSSupportsRule;
   new (): CSSSupportsRule;
 };
@@ -5869,7 +5880,7 @@ interface CSSTransformComponent {
   toString(): string;
 }

-declare var CSSTransformComponent: {
+declare const CSSTransformComponent: {
   prototype: CSSTransformComponent;
   new (): CSSTransformComponent;
 };
@@ -5888,14 +5899,14 @@ interface CSSTransformValue extends CSSStyleValue {
       key: number,
       parent: CSSTransformValue,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: CSSTransformComponent;
 }

-declare var CSSTransformValue: {
+declare const CSSTransformValue: {
   prototype: CSSTransformValue;
-  new (transforms: CSSTransformComponent[]): CSSTransformValue;
+  new (transforms: readonly CSSTransformComponent[]): CSSTransformValue;
 };

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransition) */
@@ -5904,7 +5915,7 @@ interface CSSTransition extends Animation {
   readonly transitionProperty: string;
   addEventListener<K extends keyof AnimationEventMap>(
     type: K,
-    listener: (this: CSSTransition, ev: AnimationEventMap[K]) => any,
+    listener: (this: CSSTransition, ev: AnimationEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -5914,7 +5925,7 @@ interface CSSTransition extends Animation {
   ): void;
   removeEventListener<K extends keyof AnimationEventMap>(
     type: K,
-    listener: (this: CSSTransition, ev: AnimationEventMap[K]) => any,
+    listener: (this: CSSTransition, ev: AnimationEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -5924,7 +5935,7 @@ interface CSSTransition extends Animation {
   ): void;
 }

-declare var CSSTransition: {
+declare const CSSTransition: {
   prototype: CSSTransition;
   new (): CSSTransition;
 };
@@ -5939,7 +5950,7 @@ interface CSSTranslate extends CSSTransformComponent {
   z: CSSNumericValue;
 }

-declare var CSSTranslate: {
+declare const CSSTranslate: {
   prototype: CSSTranslate;
   new (
     x: CSSNumericValue,
@@ -5956,7 +5967,7 @@ interface CSSUnitValue extends CSSNumericValue {
   value: number;
 }

-declare var CSSUnitValue: {
+declare const CSSUnitValue: {
   prototype: CSSUnitValue;
   new (value: number, unit: string): CSSUnitValue;
 };
@@ -5971,14 +5982,14 @@ interface CSSUnparsedValue extends CSSStyleValue {
       key: number,
       parent: CSSUnparsedValue,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: CSSUnparsedSegment;
 }

-declare var CSSUnparsedValue: {
+declare const CSSUnparsedValue: {
   prototype: CSSUnparsedValue;
-  new (members: CSSUnparsedSegment[]): CSSUnparsedValue;
+  new (members: readonly CSSUnparsedSegment[]): CSSUnparsedValue;
 };

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSVariableReferenceValue) */
@@ -5989,7 +6000,7 @@ interface CSSVariableReferenceValue {
   variable: string;
 }

-declare var CSSVariableReferenceValue: {
+declare const CSSVariableReferenceValue: {
   prototype: CSSVariableReferenceValue;
   new (
     variable: string,
@@ -6007,7 +6018,7 @@ interface Cache {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/add) */
   add(request: RequestInfo | URL): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/addAll) */
-  addAll(requests: RequestInfo[]): Promise<void>;
+  addAll(requests: readonly RequestInfo[]): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/delete) */
   delete(
     request: RequestInfo | URL,
@@ -6032,7 +6043,7 @@ interface Cache {
   put(request: RequestInfo | URL, response: Response): Promise<void>;
 }

-declare var Cache: {
+declare const Cache: {
   prototype: Cache;
   new (): Cache;
 };
@@ -6059,7 +6070,7 @@ interface CacheStorage {
   open(cacheName: string): Promise<Cache>;
 }

-declare var CacheStorage: {
+declare const CacheStorage: {
   prototype: CacheStorage;
   new (): CacheStorage;
 };
@@ -6075,7 +6086,7 @@ interface CanvasCaptureMediaStreamTrack extends MediaStreamTrack {
     listener: (
       this: CanvasCaptureMediaStreamTrack,
       ev: MediaStreamTrackEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -6088,7 +6099,7 @@ interface CanvasCaptureMediaStreamTrack extends MediaStreamTrack {
     listener: (
       this: CanvasCaptureMediaStreamTrack,
       ev: MediaStreamTrackEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -6098,7 +6109,7 @@ interface CanvasCaptureMediaStreamTrack extends MediaStreamTrack {
   ): void;
 }

-declare var CanvasCaptureMediaStreamTrack: {
+declare const CanvasCaptureMediaStreamTrack: {
   prototype: CanvasCaptureMediaStreamTrack;
   new (): CanvasCaptureMediaStreamTrack;
 };
@@ -6209,7 +6220,7 @@ interface CanvasGradient {
   addColorStop(offset: number, color: string): void;
 }

-declare var CanvasGradient: {
+declare const CanvasGradient: {
   prototype: CanvasGradient;
   new (): CanvasGradient;
 };
@@ -6316,7 +6327,7 @@ interface CanvasPathDrawingStyles {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/getLineDash) */
   getLineDash(): number[];
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/setLineDash) */
-  setLineDash(segments: number[]): void;
+  setLineDash(segments: readonly number[]): void;
 }

 /**
@@ -6333,7 +6344,7 @@ interface CanvasPattern {
   setTransform(transform?: DOMMatrix2DInit): void;
 }

-declare var CanvasPattern: {
+declare const CanvasPattern: {
   prototype: CanvasPattern;
   new (): CanvasPattern;
 };
@@ -6375,7 +6386,7 @@ interface CanvasRenderingContext2D
   getContextAttributes(): CanvasRenderingContext2DSettings;
 }

-declare var CanvasRenderingContext2D: {
+declare const CanvasRenderingContext2D: {
   prototype: CanvasRenderingContext2D;
   new (): CanvasRenderingContext2D;
 };
@@ -6479,7 +6490,7 @@ interface CaretPosition {
   getClientRect(): DOMRect | null;
 }

-declare var CaretPosition: {
+declare const CaretPosition: {
   prototype: CaretPosition;
   new (): CaretPosition;
 };
@@ -6491,7 +6502,7 @@ declare var CaretPosition: {
  */
 interface ChannelMergerNode extends AudioNode {}

-declare var ChannelMergerNode: {
+declare const ChannelMergerNode: {
   prototype: ChannelMergerNode;
   new (
     context: BaseAudioContext,
@@ -6506,7 +6517,7 @@ declare var ChannelMergerNode: {
  */
 interface ChannelSplitterNode extends AudioNode {}

-declare var ChannelSplitterNode: {
+declare const ChannelSplitterNode: {
   prototype: ChannelSplitterNode;
   new (
     context: BaseAudioContext,
@@ -6537,7 +6548,7 @@ interface CharacterData extends Node, ChildNode, NonDocumentTypeChildNode {
   substringData(offset: number, count: number): string;
 }

-declare var CharacterData: {
+declare const CharacterData: {
   prototype: CharacterData;
   new (): CharacterData;
 };
@@ -6594,7 +6605,7 @@ interface Clipboard extends EventTarget {
   writeText(data: string): Promise<void>;
 }

-declare var Clipboard: {
+declare const Clipboard: {
   prototype: Clipboard;
   new (): Clipboard;
 };
@@ -6609,7 +6620,7 @@ interface ClipboardEvent extends Event {
   readonly clipboardData: DataTransfer | null;
 }

-declare var ClipboardEvent: {
+declare const ClipboardEvent: {
   prototype: ClipboardEvent;
   new (type: string, eventInitDict?: ClipboardEventInit): ClipboardEvent;
 };
@@ -6628,7 +6639,7 @@ interface ClipboardItem {
   getType(type: string): Promise<Blob>;
 }

-declare var ClipboardItem: {
+declare const ClipboardItem: {
   prototype: ClipboardItem;
   new (
     items: Record<string, string | Blob | PromiseLike<string | Blob>>,
@@ -6664,7 +6675,7 @@ interface CloseEvent extends Event {
   readonly wasClean: boolean;
 }

-declare var CloseEvent: {
+declare const CloseEvent: {
   prototype: CloseEvent;
   new (type: string, eventInitDict?: CloseEventInit): CloseEvent;
 };
@@ -6676,7 +6687,7 @@ declare var CloseEvent: {
  */
 interface Comment extends CharacterData {}

-declare var Comment: {
+declare const Comment: {
   prototype: Comment;
   new (data?: string): Comment;
 };
@@ -6703,7 +6714,7 @@ interface CompositionEvent extends UIEvent {
   ): void;
 }

-declare var CompositionEvent: {
+declare const CompositionEvent: {
   prototype: CompositionEvent;
   new (type: string, eventInitDict?: CompositionEventInit): CompositionEvent;
 };
@@ -6714,7 +6725,7 @@ interface CompressionStream extends GenericTransformStream {
   readonly writable: WritableStream<BufferSource>;
 }

-declare var CompressionStream: {
+declare const CompressionStream: {
   prototype: CompressionStream;
   new (format: CompressionFormat): CompressionStream;
 };
@@ -6728,7 +6739,7 @@ interface ConstantSourceNode extends AudioScheduledSourceNode {
     listener: (
       this: ConstantSourceNode,
       ev: AudioScheduledSourceNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -6741,7 +6752,7 @@ interface ConstantSourceNode extends AudioScheduledSourceNode {
     listener: (
       this: ConstantSourceNode,
       ev: AudioScheduledSourceNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -6751,7 +6762,7 @@ interface ConstantSourceNode extends AudioScheduledSourceNode {
   ): void;
 }

-declare var ConstantSourceNode: {
+declare const ConstantSourceNode: {
   prototype: ConstantSourceNode;
   new (
     context: BaseAudioContext,
@@ -6765,7 +6776,7 @@ interface ContentVisibilityAutoStateChangeEvent extends Event {
   readonly skipped: boolean;
 }

-declare var ContentVisibilityAutoStateChangeEvent: {
+declare const ContentVisibilityAutoStateChangeEvent: {
   prototype: ContentVisibilityAutoStateChangeEvent;
   new (
     type: string,
@@ -6785,7 +6796,7 @@ interface ConvolverNode extends AudioNode {
   normalize: boolean;
 }

-declare var ConvolverNode: {
+declare const ConvolverNode: {
   prototype: ConvolverNode;
   new (context: BaseAudioContext, options?: ConvolverOptions): ConvolverNode;
 };
@@ -6802,7 +6813,7 @@ interface CountQueuingStrategy extends QueuingStrategy {
   readonly size: QueuingStrategySize;
 }

-declare var CountQueuingStrategy: {
+declare const CountQueuingStrategy: {
   prototype: CountQueuingStrategy;
   new (init: QueuingStrategyInit): CountQueuingStrategy;
 };
@@ -6819,7 +6830,7 @@ interface Credential {
   readonly type: string;
 }

-declare var Credential: {
+declare const Credential: {
   prototype: Credential;
   new (): Credential;
 };
@@ -6840,7 +6851,7 @@ interface CredentialsContainer {
   store(credential: Credential): Promise<void>;
 }

-declare var CredentialsContainer: {
+declare const CredentialsContainer: {
   prototype: CredentialsContainer;
   new (): CredentialsContainer;
 };
@@ -6867,7 +6878,7 @@ interface Crypto {
   randomUUID(): `${string}-${string}-${string}-${string}-${string}`;
 }

-declare var Crypto: {
+declare const Crypto: {
   prototype: Crypto;
   new (): Crypto;
 };
@@ -6886,10 +6897,10 @@ interface CryptoKey {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/type) */
   readonly type: KeyType;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/usages) */
-  readonly usages: KeyUsage[];
+  readonly usages: readonly KeyUsage[];
 }

-declare var CryptoKey: {
+declare const CryptoKey: {
   prototype: CryptoKey;
   new (): CryptoKey;
 };
@@ -6912,13 +6923,13 @@ interface CustomElementRegistry {
   whenDefined(name: string): Promise<CustomElementConstructor>;
 }

-declare var CustomElementRegistry: {
+declare const CustomElementRegistry: {
   prototype: CustomElementRegistry;
   new (): CustomElementRegistry;
 };

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomEvent) */
-interface CustomEvent<T = any> extends Event {
+interface CustomEvent<T = unknown> extends Event {
   /**
    * Returns any custom data event was created with. Typically used for synthetic events.
    *
@@ -6938,7 +6949,7 @@ interface CustomEvent<T = any> extends Event {
   ): void;
 }

-declare var CustomEvent: {
+declare const CustomEvent: {
   prototype: CustomEvent;
   new <T>(type: string, eventInitDict?: CustomEventInit<T>): CustomEvent<T>;
 };
@@ -6947,11 +6958,11 @@ declare var CustomEvent: {
 interface CustomStateSet {
   forEach(
     callbackfn: (value: string, key: string, parent: CustomStateSet) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }

-declare var CustomStateSet: {
+declare const CustomStateSet: {
   prototype: CustomStateSet;
   new (): CustomStateSet;
 };
@@ -6999,7 +7010,7 @@ interface DOMException extends Error {
   readonly DATA_CLONE_ERR: 25;
 }

-declare var DOMException: {
+declare const DOMException: {
   prototype: DOMException;
   new (message?: string, name?: string): DOMException;
   readonly INDEX_SIZE_ERR: 1;
@@ -7054,10 +7065,10 @@ interface DOMImplementation {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMImplementation/hasFeature)
    */
-  hasFeature(...args: any[]): true;
+  hasFeature(...args: readonly unknown[]): true;
 }

-declare var DOMImplementation: {
+declare const DOMImplementation: {
   prototype: DOMImplementation;
   new (): DOMImplementation;
 };
@@ -7139,19 +7150,19 @@ interface DOMMatrix extends DOMMatrixReadOnly {
   translateSelf(tx?: number, ty?: number, tz?: number): DOMMatrix;
 }

-declare var DOMMatrix: {
+declare const DOMMatrix: {
   prototype: DOMMatrix;
-  new (init?: string | number[]): DOMMatrix;
+  new (init?: string | readonly number[]): DOMMatrix;
   fromFloat32Array(array32: Float32Array): DOMMatrix;
   fromFloat64Array(array64: Float64Array): DOMMatrix;
   fromMatrix(other?: DOMMatrixInit): DOMMatrix;
 };

 type SVGMatrix = DOMMatrix;
-declare var SVGMatrix: typeof DOMMatrix;
+declare const SVGMatrix: typeof DOMMatrix;

 type WebKitCSSMatrix = DOMMatrix;
-declare var WebKitCSSMatrix: typeof DOMMatrix;
+declare const WebKitCSSMatrix: typeof DOMMatrix;

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly) */
 interface DOMMatrixReadOnly {
@@ -7235,16 +7246,16 @@ interface DOMMatrixReadOnly {
   skewY(sy?: number): DOMMatrix;
   toFloat32Array(): Float32Array;
   toFloat64Array(): Float64Array;
-  toJSON(): any;
+  toJSON(): unknown;
   transformPoint(point?: DOMPointInit): DOMPoint;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/translate) */
   translate(tx?: number, ty?: number, tz?: number): DOMMatrix;
   toString(): string;
 }

-declare var DOMMatrixReadOnly: {
+declare const DOMMatrixReadOnly: {
   prototype: DOMMatrixReadOnly;
-  new (init?: string | number[]): DOMMatrixReadOnly;
+  new (init?: string | readonly number[]): DOMMatrixReadOnly;
   fromFloat32Array(array32: Float32Array): DOMMatrixReadOnly;
   fromFloat64Array(array64: Float64Array): DOMMatrixReadOnly;
   fromMatrix(other?: DOMMatrixInit): DOMMatrixReadOnly;
@@ -7270,7 +7281,7 @@ interface DOMParser {
   parseFromString(string: string, type: DOMParserSupportedType): Document;
 }

-declare var DOMParser: {
+declare const DOMParser: {
   prototype: DOMParser;
   new (): DOMParser;
 };
@@ -7287,7 +7298,7 @@ interface DOMPoint extends DOMPointReadOnly {
   z: number;
 }

-declare var DOMPoint: {
+declare const DOMPoint: {
   prototype: DOMPoint;
   new (x?: number, y?: number, z?: number, w?: number): DOMPoint;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint/fromPoint_static) */
@@ -7295,7 +7306,7 @@ declare var DOMPoint: {
 };

 type SVGPoint = DOMPoint;
-declare var SVGPoint: typeof DOMPoint;
+declare const SVGPoint: typeof DOMPoint;

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly) */
 interface DOMPointReadOnly {
@@ -7309,10 +7320,10 @@ interface DOMPointReadOnly {
   readonly z: number;
   matrixTransform(matrix?: DOMMatrixInit): DOMPoint;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
 }

-declare var DOMPointReadOnly: {
+declare const DOMPointReadOnly: {
   prototype: DOMPointReadOnly;
   new (x?: number, y?: number, z?: number, w?: number): DOMPointReadOnly;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/fromPoint_static) */
@@ -7326,10 +7337,10 @@ interface DOMQuad {
   readonly p3: DOMPoint;
   readonly p4: DOMPoint;
   getBounds(): DOMRect;
-  toJSON(): any;
+  toJSON(): unknown;
 }

-declare var DOMQuad: {
+declare const DOMQuad: {
   prototype: DOMQuad;
   new (
     p1?: DOMPointInit,
@@ -7349,7 +7360,7 @@ interface DOMRect extends DOMRectReadOnly {
   y: number;
 }

-declare var DOMRect: {
+declare const DOMRect: {
   prototype: DOMRect;
   new (x?: number, y?: number, width?: number, height?: number): DOMRect;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect/fromRect_static) */
@@ -7357,7 +7368,7 @@ declare var DOMRect: {
 };

 type SVGRect = DOMRect;
-declare var SVGRect: typeof DOMRect;
+declare const SVGRect: typeof DOMRect;

 interface DOMRectList {
   readonly length: number;
@@ -7365,7 +7376,7 @@ interface DOMRectList {
   [index: number]: DOMRect;
 }

-declare var DOMRectList: {
+declare const DOMRectList: {
   prototype: DOMRectList;
   new (): DOMRectList;
 };
@@ -7388,10 +7399,10 @@ interface DOMRectReadOnly {
   readonly x: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/y) */
   readonly y: number;
-  toJSON(): any;
+  toJSON(): unknown;
 }

-declare var DOMRectReadOnly: {
+declare const DOMRectReadOnly: {
   prototype: DOMRectReadOnly;
   new (
     x?: number,
@@ -7430,7 +7441,7 @@ interface DOMStringList {
   [index: number]: string;
 }

-declare var DOMStringList: {
+declare const DOMStringList: {
   prototype: DOMStringList;
   new (): DOMStringList;
 };
@@ -7444,7 +7455,7 @@ interface DOMStringMap {
   [name: string]: string | undefined;
 }

-declare var DOMStringMap: {
+declare const DOMStringMap: {
   prototype: DOMStringMap;
   new (): DOMStringMap;
 };
@@ -7479,7 +7490,7 @@ interface DOMTokenList {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/add)
    */
-  add(...tokens: string[]): void;
+  add(...tokens: readonly string[]): void;
   /**
    * Returns true if token is present, and false otherwise.
    *
@@ -7501,7 +7512,7 @@ interface DOMTokenList {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/remove)
    */
-  remove(...tokens: string[]): void;
+  remove(...tokens: readonly string[]): void;
   /**
    * Replaces token with newToken.
    *
@@ -7536,12 +7547,12 @@ interface DOMTokenList {
   toggle(token: string, force?: boolean): boolean;
   forEach(
     callbackfn: (value: string, key: number, parent: DOMTokenList) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: string;
 }

-declare var DOMTokenList: {
+declare const DOMTokenList: {
   prototype: DOMTokenList;
   new (): DOMTokenList;
 };
@@ -7625,7 +7636,7 @@ interface DataTransfer {
   setDragImage(image: Element, x: number, y: number): void;
 }

-declare var DataTransfer: {
+declare const DataTransfer: {
   prototype: DataTransfer;
   new (): DataTransfer;
 };
@@ -7664,7 +7675,7 @@ interface DataTransferItem {
   webkitGetAsEntry(): FileSystemEntry | null;
 }

-declare var DataTransferItem: {
+declare const DataTransferItem: {
   prototype: DataTransferItem;
   new (): DataTransferItem;
 };
@@ -7703,7 +7714,7 @@ interface DataTransferItemList {
   [index: number]: DataTransferItem;
 }

-declare var DataTransferItemList: {
+declare const DataTransferItemList: {
   prototype: DataTransferItemList;
   new (): DataTransferItemList;
 };
@@ -7714,7 +7725,7 @@ interface DecompressionStream extends GenericTransformStream {
   readonly writable: WritableStream<BufferSource>;
 }

-declare var DecompressionStream: {
+declare const DecompressionStream: {
   prototype: DecompressionStream;
   new (format: CompressionFormat): DecompressionStream;
 };
@@ -7729,7 +7740,7 @@ interface DelayNode extends AudioNode {
   readonly delayTime: AudioParam;
 }

-declare var DelayNode: {
+declare const DelayNode: {
   prototype: DelayNode;
   new (context: BaseAudioContext, options?: DelayOptions): DelayNode;
 };
@@ -7751,7 +7762,7 @@ interface DeviceMotionEvent extends Event {
   readonly rotationRate: DeviceMotionEventRotationRate | null;
 }

-declare var DeviceMotionEvent: {
+declare const DeviceMotionEvent: {
   prototype: DeviceMotionEvent;
   new (type: string, eventInitDict?: DeviceMotionEventInit): DeviceMotionEvent;
 };
@@ -7801,7 +7812,7 @@ interface DeviceOrientationEvent extends Event {
   readonly gamma: number | null;
 }

-declare var DeviceOrientationEvent: {
+declare const DeviceOrientationEvent: {
   prototype: DeviceOrientationEvent;
   new (
     type: string,
@@ -8052,22 +8063,22 @@ interface Document
   get location(): Location;
   set location(href: string | Location);
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fullscreenchange_event) */
-  onfullscreenchange: ((this: Document, ev: Event) => any) | null;
+  onfullscreenchange: ((this: Document, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fullscreenerror_event) */
-  onfullscreenerror: ((this: Document, ev: Event) => any) | null;
+  onfullscreenerror: ((this: Document, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/pointerlockchange_event) */
-  onpointerlockchange: ((this: Document, ev: Event) => any) | null;
+  onpointerlockchange: ((this: Document, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/pointerlockerror_event) */
-  onpointerlockerror: ((this: Document, ev: Event) => any) | null;
+  onpointerlockerror: ((this: Document, ev: Event) => unknown) | null;
   /**
    * Fires when the state of the object has changed.
    * @param ev The event
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/readystatechange_event)
    */
-  onreadystatechange: ((this: Document, ev: Event) => any) | null;
+  onreadystatechange: ((this: Document, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/visibilitychange_event) */
-  onvisibilitychange: ((this: Document, ev: Event) => any) | null;
+  onvisibilitychange: ((this: Document, ev: Event) => unknown) | null;
   readonly ownerDocument: null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/pictureInPictureEnabled) */
   readonly pictureInPictureEnabled: boolean;
@@ -8537,17 +8548,17 @@ interface Document
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/write)
    */
-  write(...text: string[]): void;
+  write(...text: readonly string[]): void;
   /**
    * Writes one or more HTML expressions, followed by a carriage return, to a document in the specified window.
    * @param content The text and HTML tags to write.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/writeln)
    */
-  writeln(...text: string[]): void;
+  writeln(...text: readonly string[]): void;
   addEventListener<K extends keyof DocumentEventMap>(
     type: K,
-    listener: (this: Document, ev: DocumentEventMap[K]) => any,
+    listener: (this: Document, ev: DocumentEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -8557,7 +8568,7 @@ interface Document
   ): void;
   removeEventListener<K extends keyof DocumentEventMap>(
     type: K,
-    listener: (this: Document, ev: DocumentEventMap[K]) => any,
+    listener: (this: Document, ev: DocumentEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -8567,7 +8578,7 @@ interface Document
   ): void;
 }

-declare var Document: {
+declare const Document: {
   prototype: Document;
   new (): Document;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/parseHTMLUnsafe_static) */
@@ -8584,7 +8595,7 @@ interface DocumentFragment extends Node, NonElementParentNode, ParentNode {
   getElementById(elementId: string): HTMLElement | null;
 }

-declare var DocumentFragment: {
+declare const DocumentFragment: {
   prototype: DocumentFragment;
   new (): DocumentFragment;
 };
@@ -8601,7 +8612,7 @@ interface DocumentOrShadowRoot {
    */
   readonly activeElement: Element | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/adoptedStyleSheets) */
-  adoptedStyleSheets: CSSStyleSheet[];
+  adoptedStyleSheets: readonly CSSStyleSheet[];
   /**
    * Returns document's fullscreen element.
    *
@@ -8632,7 +8643,7 @@ interface DocumentOrShadowRoot {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DocumentTimeline) */
 interface DocumentTimeline extends AnimationTimeline {}

-declare var DocumentTimeline: {
+declare const DocumentTimeline: {
   prototype: DocumentTimeline;
   new (options?: DocumentTimelineOptions): DocumentTimeline;
 };
@@ -8652,7 +8663,7 @@ interface DocumentType extends Node, ChildNode {
   readonly systemId: string;
 }

-declare var DocumentType: {
+declare const DocumentType: {
   prototype: DocumentType;
   new (): DocumentType;
 };
@@ -8671,7 +8682,7 @@ interface DragEvent extends MouseEvent {
   readonly dataTransfer: DataTransfer | null;
 }

-declare var DragEvent: {
+declare const DragEvent: {
   prototype: DragEvent;
   new (type: string, eventInitDict?: DragEventInit): DragEvent;
 };
@@ -8696,7 +8707,7 @@ interface DynamicsCompressorNode extends AudioNode {
   readonly threshold: AudioParam;
 }

-declare var DynamicsCompressorNode: {
+declare const DynamicsCompressorNode: {
   prototype: DynamicsCompressorNode;
   new (
     context: BaseAudioContext,
@@ -8843,9 +8854,9 @@ interface Element
    */
   readonly namespaceURI: string | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/fullscreenchange_event) */
-  onfullscreenchange: ((this: Element, ev: Event) => any) | null;
+  onfullscreenchange: ((this: Element, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/fullscreenerror_event) */
-  onfullscreenerror: ((this: Element, ev: Event) => any) | null;
+  onfullscreenerror: ((this: Element, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/outerHTML) */
   outerHTML: string;
   readonly ownerDocument: Document;
@@ -9086,7 +9097,7 @@ interface Element
   webkitMatchesSelector(selectors: string): boolean;
   addEventListener<K extends keyof ElementEventMap>(
     type: K,
-    listener: (this: Element, ev: ElementEventMap[K]) => any,
+    listener: (this: Element, ev: ElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -9096,7 +9107,7 @@ interface Element
   ): void;
   removeEventListener<K extends keyof ElementEventMap>(
     type: K,
-    listener: (this: Element, ev: ElementEventMap[K]) => any,
+    listener: (this: Element, ev: ElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -9106,7 +9117,7 @@ interface Element
   ): void;
 }

-declare var Element: {
+declare const Element: {
   prototype: Element;
   new (): Element;
 };
@@ -9204,7 +9215,7 @@ interface ElementInternals extends ARIAMixin {
   ): void;
 }

-declare var ElementInternals: {
+declare const ElementInternals: {
   prototype: ElementInternals;
   new (): ElementInternals;
 };
@@ -9223,7 +9234,7 @@ interface EncodedAudioChunk {
   copyTo(destination: AllowSharedBufferSource): void;
 }

-declare var EncodedAudioChunk: {
+declare const EncodedAudioChunk: {
   prototype: EncodedAudioChunk;
   new (init: EncodedAudioChunkInit): EncodedAudioChunk;
 };
@@ -9242,7 +9253,7 @@ interface EncodedVideoChunk {
   copyTo(destination: AllowSharedBufferSource): void;
 }

-declare var EncodedVideoChunk: {
+declare const EncodedVideoChunk: {
   prototype: EncodedVideoChunk;
   new (init: EncodedVideoChunkInit): EncodedVideoChunk;
 };
@@ -9254,13 +9265,13 @@ declare var EncodedVideoChunk: {
  */
 interface ErrorEvent extends Event {
   readonly colno: number;
-  readonly error: any;
+  readonly error: unknown;
   readonly filename: string;
   readonly lineno: number;
   readonly message: string;
 }

-declare var ErrorEvent: {
+declare const ErrorEvent: {
   prototype: ErrorEvent;
   new (type: string, eventInitDict?: ErrorEventInit): ErrorEvent;
 };
@@ -9385,7 +9396,7 @@ interface Event {
   readonly BUBBLING_PHASE: 3;
 }

-declare var Event: {
+declare const Event: {
   prototype: Event;
   new (type: string, eventInitDict?: EventInit): Event;
   readonly NONE: 0;
@@ -9398,11 +9409,11 @@ declare var Event: {
 interface EventCounts {
   forEach(
     callbackfn: (value: number, key: string, parent: EventCounts) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }

-declare var EventCounts: {
+declare const EventCounts: {
   prototype: EventCounts;
   new (): EventCounts;
 };
@@ -9424,11 +9435,11 @@ interface EventSourceEventMap {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource) */
 interface EventSource extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/error_event) */
-  onerror: ((this: EventSource, ev: Event) => any) | null;
+  onerror: ((this: EventSource, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/message_event) */
-  onmessage: ((this: EventSource, ev: MessageEvent) => any) | null;
+  onmessage: ((this: EventSource, ev: MessageEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/open_event) */
-  onopen: ((this: EventSource, ev: Event) => any) | null;
+  onopen: ((this: EventSource, ev: Event) => unknown) | null;
   /**
    * Returns the state of this EventSource object's connection. It can have the values described below.
    *
@@ -9458,12 +9469,12 @@ interface EventSource extends EventTarget {
   readonly CLOSED: 2;
   addEventListener<K extends keyof EventSourceEventMap>(
     type: K,
-    listener: (this: EventSource, ev: EventSourceEventMap[K]) => any,
+    listener: (this: EventSource, ev: EventSourceEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
     type: string,
-    listener: (this: EventSource, event: MessageEvent) => any,
+    listener: (this: EventSource, event: MessageEvent) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -9473,12 +9484,12 @@ interface EventSource extends EventTarget {
   ): void;
   removeEventListener<K extends keyof EventSourceEventMap>(
     type: K,
-    listener: (this: EventSource, ev: EventSourceEventMap[K]) => any,
+    listener: (this: EventSource, ev: EventSourceEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
     type: string,
-    listener: (this: EventSource, event: MessageEvent) => any,
+    listener: (this: EventSource, event: MessageEvent) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -9488,7 +9499,7 @@ interface EventSource extends EventTarget {
   ): void;
 }

-declare var EventSource: {
+declare const EventSource: {
   prototype: EventSource;
   new (url: string | URL, eventSourceInitDict?: EventSourceInit): EventSource;
   readonly CONNECTING: 0;
@@ -9542,7 +9553,7 @@ interface EventTarget {
   ): void;
 }

-declare var EventTarget: {
+declare const EventTarget: {
   prototype: EventTarget;
   new (): EventTarget;
 };
@@ -9556,7 +9567,7 @@ interface External {
 }

 /** @deprecated */
-declare var External: {
+declare const External: {
   prototype: External;
   new (): External;
 };
@@ -9575,9 +9586,13 @@ interface File extends Blob {
   readonly webkitRelativePath: string;
 }

-declare var File: {
+declare const File: {
   prototype: File;
-  new (fileBits: BlobPart[], fileName: string, options?: FilePropertyBag): File;
+  new (
+    fileBits: readonly BlobPart[],
+    fileName: string,
+    options?: FilePropertyBag,
+  ): File;
 };

 /**
@@ -9593,7 +9608,7 @@ interface FileList {
   [index: number]: File;
 }

-declare var FileList: {
+declare const FileList: {
   prototype: FileList;
   new (): FileList;
 };
@@ -9616,19 +9631,27 @@ interface FileReader extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/error) */
   readonly error: DOMException | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/abort_event) */
-  onabort: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onabort:
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/error_event) */
-  onerror: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onerror:
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/load_event) */
-  onload: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onload: ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/loadend_event) */
-  onloadend: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onloadend:
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/loadstart_event) */
   onloadstart:
-    | ((this: FileReader, ev: ProgressEvent<FileReader>) => any)
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/progress_event) */
-  onprogress: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onprogress:
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readyState) */
   readonly readyState:
     | typeof FileReader.EMPTY
@@ -9655,7 +9678,7 @@ interface FileReader extends EventTarget {
   readonly DONE: 2;
   addEventListener<K extends keyof FileReaderEventMap>(
     type: K,
-    listener: (this: FileReader, ev: FileReaderEventMap[K]) => any,
+    listener: (this: FileReader, ev: FileReaderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -9665,7 +9688,7 @@ interface FileReader extends EventTarget {
   ): void;
   removeEventListener<K extends keyof FileReaderEventMap>(
     type: K,
-    listener: (this: FileReader, ev: FileReaderEventMap[K]) => any,
+    listener: (this: FileReader, ev: FileReaderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -9675,7 +9698,7 @@ interface FileReader extends EventTarget {
   ): void;
 }

-declare var FileReader: {
+declare const FileReader: {
   prototype: FileReader;
   new (): FileReader;
   readonly EMPTY: 0;
@@ -9691,7 +9714,7 @@ interface FileSystem {
   readonly root: FileSystemDirectoryEntry;
 }

-declare var FileSystem: {
+declare const FileSystem: {
   prototype: FileSystem;
   new (): FileSystem;
 };
@@ -9716,7 +9739,7 @@ interface FileSystemDirectoryEntry extends FileSystemEntry {
   ): void;
 }

-declare var FileSystemDirectoryEntry: {
+declare const FileSystemDirectoryEntry: {
   prototype: FileSystemDirectoryEntry;
   new (): FileSystemDirectoryEntry;
 };
@@ -9744,7 +9767,7 @@ interface FileSystemDirectoryHandle extends FileSystemHandle {
   resolve(possibleDescendant: FileSystemHandle): Promise<string[] | null>;
 }

-declare var FileSystemDirectoryHandle: {
+declare const FileSystemDirectoryHandle: {
   prototype: FileSystemDirectoryHandle;
   new (): FileSystemDirectoryHandle;
 };
@@ -9758,7 +9781,7 @@ interface FileSystemDirectoryReader {
   ): void;
 }

-declare var FileSystemDirectoryReader: {
+declare const FileSystemDirectoryReader: {
   prototype: FileSystemDirectoryReader;
   new (): FileSystemDirectoryReader;
 };
@@ -9782,7 +9805,7 @@ interface FileSystemEntry {
   ): void;
 }

-declare var FileSystemEntry: {
+declare const FileSystemEntry: {
   prototype: FileSystemEntry;
   new (): FileSystemEntry;
 };
@@ -9793,7 +9816,7 @@ interface FileSystemFileEntry extends FileSystemEntry {
   file(successCallback: FileCallback, errorCallback?: ErrorCallback): void;
 }

-declare var FileSystemFileEntry: {
+declare const FileSystemFileEntry: {
   prototype: FileSystemFileEntry;
   new (): FileSystemFileEntry;
 };
@@ -9813,7 +9836,7 @@ interface FileSystemFileHandle extends FileSystemHandle {
   getFile(): Promise<File>;
 }

-declare var FileSystemFileHandle: {
+declare const FileSystemFileHandle: {
   prototype: FileSystemFileHandle;
   new (): FileSystemFileHandle;
 };
@@ -9832,7 +9855,7 @@ interface FileSystemHandle {
   isSameEntry(other: FileSystemHandle): Promise<boolean>;
 }

-declare var FileSystemHandle: {
+declare const FileSystemHandle: {
   prototype: FileSystemHandle;
   new (): FileSystemHandle;
 };
@@ -9851,7 +9874,7 @@ interface FileSystemWritableFileStream extends WritableStream {
   write(data: FileSystemWriteChunkType): Promise<void>;
 }

-declare var FileSystemWritableFileStream: {
+declare const FileSystemWritableFileStream: {
   prototype: FileSystemWritableFileStream;
   new (): FileSystemWritableFileStream;
 };
@@ -9866,7 +9889,7 @@ interface FocusEvent extends UIEvent {
   readonly relatedTarget: EventTarget | null;
 }

-declare var FocusEvent: {
+declare const FocusEvent: {
   prototype: FocusEvent;
   new (type: string, eventInitDict?: FocusEventInit): FocusEvent;
 };
@@ -9901,7 +9924,7 @@ interface FontFace {
   load(): Promise<FontFace>;
 }

-declare var FontFace: {
+declare const FontFace: {
   prototype: FontFace;
   new (
     family: string,
@@ -9919,11 +9942,15 @@ interface FontFaceSetEventMap {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet) */
 interface FontFaceSet extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loading_event) */
-  onloading: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => any) | null;
+  onloading: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loadingdone_event) */
-  onloadingdone: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => any) | null;
+  onloadingdone:
+    | ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loadingerror_event) */
-  onloadingerror: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => any) | null;
+  onloadingerror:
+    | ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/ready) */
   readonly ready: Promise<FontFaceSet>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/status) */
@@ -9934,11 +9961,11 @@ interface FontFaceSet extends EventTarget {
   load(font: string, text?: string): Promise<FontFace[]>;
   forEach(
     callbackfn: (value: FontFace, key: FontFace, parent: FontFaceSet) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   addEventListener<K extends keyof FontFaceSetEventMap>(
     type: K,
-    listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any,
+    listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -9948,7 +9975,7 @@ interface FontFaceSet extends EventTarget {
   ): void;
   removeEventListener<K extends keyof FontFaceSetEventMap>(
     type: K,
-    listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any,
+    listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -9958,7 +9985,7 @@ interface FontFaceSet extends EventTarget {
   ): void;
 }

-declare var FontFaceSet: {
+declare const FontFaceSet: {
   prototype: FontFaceSet;
   new (): FontFaceSet;
 };
@@ -9969,7 +9996,7 @@ interface FontFaceSetLoadEvent extends Event {
   readonly fontfaces: ReadonlyArray<FontFace>;
 }

-declare var FontFaceSetLoadEvent: {
+declare const FontFaceSetLoadEvent: {
   prototype: FontFaceSetLoadEvent;
   new (
     type: string,
@@ -10010,11 +10037,11 @@ interface FormData {
       key: string,
       parent: FormData,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }

-declare var FormData: {
+declare const FormData: {
   prototype: FormData;
   new (form?: HTMLFormElement, submitter?: HTMLElement | null): FormData;
 };
@@ -10029,7 +10056,7 @@ interface FormDataEvent extends Event {
   readonly formData: FormData;
 }

-declare var FormDataEvent: {
+declare const FormDataEvent: {
   prototype: FormDataEvent;
   new (type: string, eventInitDict: FormDataEventInit): FormDataEvent;
 };
@@ -10037,7 +10064,7 @@ declare var FormDataEvent: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FragmentDirective) */
 interface FragmentDirective {}

-declare var FragmentDirective: {
+declare const FragmentDirective: {
   prototype: FragmentDirective;
   new (): FragmentDirective;
 };
@@ -10052,7 +10079,7 @@ interface GainNode extends AudioNode {
   readonly gain: AudioParam;
 }

-declare var GainNode: {
+declare const GainNode: {
   prototype: GainNode;
   new (context: BaseAudioContext, options?: GainOptions): GainNode;
 };
@@ -10081,7 +10108,7 @@ interface Gamepad {
   readonly vibrationActuator: GamepadHapticActuator;
 }

-declare var Gamepad: {
+declare const Gamepad: {
   prototype: Gamepad;
   new (): Gamepad;
 };
@@ -10100,7 +10127,7 @@ interface GamepadButton {
   readonly value: number;
 }

-declare var GamepadButton: {
+declare const GamepadButton: {
   prototype: GamepadButton;
   new (): GamepadButton;
 };
@@ -10115,7 +10142,7 @@ interface GamepadEvent extends Event {
   readonly gamepad: Gamepad;
 }

-declare var GamepadEvent: {
+declare const GamepadEvent: {
   prototype: GamepadEvent;
   new (type: string, eventInitDict: GamepadEventInit): GamepadEvent;
 };
@@ -10135,7 +10162,7 @@ interface GamepadHapticActuator {
   reset(): Promise<GamepadHapticsResult>;
 }

-declare var GamepadHapticActuator: {
+declare const GamepadHapticActuator: {
   prototype: GamepadHapticActuator;
   new (): GamepadHapticActuator;
 };
@@ -10169,7 +10196,7 @@ interface Geolocation {
   ): number;
 }

-declare var Geolocation: {
+declare const Geolocation: {
   prototype: Geolocation;
   new (): Geolocation;
 };
@@ -10195,10 +10222,10 @@ interface GeolocationCoordinates {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/speed) */
   readonly speed: number | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
 }

-declare var GeolocationCoordinates: {
+declare const GeolocationCoordinates: {
   prototype: GeolocationCoordinates;
   new (): GeolocationCoordinates;
 };
@@ -10214,10 +10241,10 @@ interface GeolocationPosition {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationPosition/timestamp) */
   readonly timestamp: EpochTimeStamp;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationPosition/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
 }

-declare var GeolocationPosition: {
+declare const GeolocationPosition: {
   prototype: GeolocationPosition;
   new (): GeolocationPosition;
 };
@@ -10233,7 +10260,7 @@ interface GeolocationPositionError {
   readonly TIMEOUT: 3;
 }

-declare var GeolocationPositionError: {
+declare const GeolocationPositionError: {
   prototype: GeolocationPositionError;
   new (): GeolocationPositionError;
   readonly PERMISSION_DENIED: 1;
@@ -10354,152 +10381,156 @@ interface GlobalEventHandlers {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/abort_event)
    */
-  onabort: ((this: GlobalEventHandlers, ev: UIEvent) => any) | null;
+  onabort: ((this: GlobalEventHandlers, ev: UIEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationcancel_event) */
   onanimationcancel:
-    | ((this: GlobalEventHandlers, ev: AnimationEvent) => any)
+    | ((this: GlobalEventHandlers, ev: AnimationEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event) */
   onanimationend:
-    | ((this: GlobalEventHandlers, ev: AnimationEvent) => any)
+    | ((this: GlobalEventHandlers, ev: AnimationEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event) */
   onanimationiteration:
-    | ((this: GlobalEventHandlers, ev: AnimationEvent) => any)
+    | ((this: GlobalEventHandlers, ev: AnimationEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event) */
   onanimationstart:
-    | ((this: GlobalEventHandlers, ev: AnimationEvent) => any)
+    | ((this: GlobalEventHandlers, ev: AnimationEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/auxclick_event) */
-  onauxclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onauxclick: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/beforeinput_event) */
-  onbeforeinput: ((this: GlobalEventHandlers, ev: InputEvent) => any) | null;
+  onbeforeinput:
+    | ((this: GlobalEventHandlers, ev: InputEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/beforetoggle_event) */
-  onbeforetoggle: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onbeforetoggle: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Fires when the object loses the input focus.
    * @param ev The focus event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/blur_event)
    */
-  onblur: ((this: GlobalEventHandlers, ev: FocusEvent) => any) | null;
+  onblur: ((this: GlobalEventHandlers, ev: FocusEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/cancel_event) */
-  oncancel: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  oncancel: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when playback is possible, but would require further buffering.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplay_event)
    */
-  oncanplay: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  oncanplay: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplaythrough_event) */
-  oncanplaythrough: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  oncanplaythrough: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Fires when the contents of the object or selection have changed.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/change_event)
    */
-  onchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onchange: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Fires when the user clicks the left mouse button on the object
    * @param ev The mouse event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/click_event)
    */
-  onclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onclick: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/close_event) */
-  onclose: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onclose: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/webglcontextlost_event) */
-  oncontextlost: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  oncontextlost: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Fires when the user clicks the right mouse button in the client area, opening the context menu.
    * @param ev The mouse event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/contextmenu_event)
    */
-  oncontextmenu: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  oncontextmenu:
+    | ((this: GlobalEventHandlers, ev: MouseEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextrestored_event) */
-  oncontextrestored: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  oncontextrestored: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/copy_event) */
-  oncopy: ((this: GlobalEventHandlers, ev: ClipboardEvent) => any) | null;
+  oncopy: ((this: GlobalEventHandlers, ev: ClipboardEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/cuechange_event) */
-  oncuechange: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  oncuechange: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/cut_event) */
-  oncut: ((this: GlobalEventHandlers, ev: ClipboardEvent) => any) | null;
+  oncut: ((this: GlobalEventHandlers, ev: ClipboardEvent) => unknown) | null;
   /**
    * Fires when the user double-clicks the object.
    * @param ev The mouse event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/dblclick_event)
    */
-  ondblclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  ondblclick: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /**
    * Fires on the source object continuously during a drag operation.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drag_event)
    */
-  ondrag: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;
+  ondrag: ((this: GlobalEventHandlers, ev: DragEvent) => unknown) | null;
   /**
    * Fires on the source object when the user releases the mouse at the close of a drag operation.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragend_event)
    */
-  ondragend: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;
+  ondragend: ((this: GlobalEventHandlers, ev: DragEvent) => unknown) | null;
   /**
    * Fires on the target element when the user drags the object to a valid drop target.
    * @param ev The drag event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragenter_event)
    */
-  ondragenter: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;
+  ondragenter: ((this: GlobalEventHandlers, ev: DragEvent) => unknown) | null;
   /**
    * Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.
    * @param ev The drag event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragleave_event)
    */
-  ondragleave: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;
+  ondragleave: ((this: GlobalEventHandlers, ev: DragEvent) => unknown) | null;
   /**
    * Fires on the target element continuously while the user drags the object over a valid drop target.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragover_event)
    */
-  ondragover: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;
+  ondragover: ((this: GlobalEventHandlers, ev: DragEvent) => unknown) | null;
   /**
    * Fires on the source object when the user starts to drag a text selection or selected object.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragstart_event)
    */
-  ondragstart: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;
+  ondragstart: ((this: GlobalEventHandlers, ev: DragEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drop_event) */
-  ondrop: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;
+  ondrop: ((this: GlobalEventHandlers, ev: DragEvent) => unknown) | null;
   /**
    * Occurs when the duration attribute is updated.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/durationchange_event)
    */
-  ondurationchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  ondurationchange: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when the media element is reset to its initial state.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/emptied_event)
    */
-  onemptied: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onemptied: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when the end of playback is reached.
    * @param ev The event
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ended_event)
    */
-  onended: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onended: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Fires when an error occurs during object loading.
    * @param ev The event.
@@ -10513,24 +10544,26 @@ interface GlobalEventHandlers {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/focus_event)
    */
-  onfocus: ((this: GlobalEventHandlers, ev: FocusEvent) => any) | null;
+  onfocus: ((this: GlobalEventHandlers, ev: FocusEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/formdata_event) */
-  onformdata: ((this: GlobalEventHandlers, ev: FormDataEvent) => any) | null;
+  onformdata:
+    | ((this: GlobalEventHandlers, ev: FormDataEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/gotpointercapture_event) */
   ongotpointercapture:
-    | ((this: GlobalEventHandlers, ev: PointerEvent) => any)
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/input_event) */
-  oninput: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  oninput: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/invalid_event) */
-  oninvalid: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  oninvalid: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Fires when the user presses a key.
    * @param ev The keyboard event
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keydown_event)
    */
-  onkeydown: ((this: GlobalEventHandlers, ev: KeyboardEvent) => any) | null;
+  onkeydown: ((this: GlobalEventHandlers, ev: KeyboardEvent) => unknown) | null;
   /**
    * Fires when the user presses an alphanumeric key.
    * @param ev The event.
@@ -10538,45 +10571,47 @@ interface GlobalEventHandlers {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keypress_event)
    */
-  onkeypress: ((this: GlobalEventHandlers, ev: KeyboardEvent) => any) | null;
+  onkeypress:
+    | ((this: GlobalEventHandlers, ev: KeyboardEvent) => unknown)
+    | null;
   /**
    * Fires when the user releases a key.
    * @param ev The keyboard event
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keyup_event)
    */
-  onkeyup: ((this: GlobalEventHandlers, ev: KeyboardEvent) => any) | null;
+  onkeyup: ((this: GlobalEventHandlers, ev: KeyboardEvent) => unknown) | null;
   /**
    * Fires immediately after the browser loads the object.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGElement/load_event)
    */
-  onload: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onload: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when media data is loaded at the current playback position.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadeddata_event)
    */
-  onloadeddata: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onloadeddata: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when the duration and dimensions of the media have been determined.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadedmetadata_event)
    */
-  onloadedmetadata: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onloadedmetadata: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when Internet Explorer begins looking for media data.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadstart_event)
    */
-  onloadstart: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onloadstart: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/lostpointercapture_event) */
   onlostpointercapture:
-    | ((this: GlobalEventHandlers, ev: PointerEvent) => any)
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
     | null;
   /**
    * Fires when the user clicks the object with either mouse button.
@@ -10584,115 +10619,131 @@ interface GlobalEventHandlers {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mousedown_event)
    */
-  onmousedown: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onmousedown: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseenter_event) */
-  onmouseenter: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onmouseenter: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseleave_event) */
-  onmouseleave: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onmouseleave: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /**
    * Fires when the user moves the mouse over the object.
    * @param ev The mouse event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mousemove_event)
    */
-  onmousemove: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onmousemove: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /**
    * Fires when the user moves the mouse pointer outside the boundaries of the object.
    * @param ev The mouse event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseout_event)
    */
-  onmouseout: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onmouseout: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /**
    * Fires when the user moves the mouse pointer into the object.
    * @param ev The mouse event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseover_event)
    */
-  onmouseover: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onmouseover: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /**
    * Fires when the user releases a mouse button while the mouse is over the object.
    * @param ev The mouse event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseup_event)
    */
-  onmouseup: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;
+  onmouseup: ((this: GlobalEventHandlers, ev: MouseEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/paste_event) */
-  onpaste: ((this: GlobalEventHandlers, ev: ClipboardEvent) => any) | null;
+  onpaste: ((this: GlobalEventHandlers, ev: ClipboardEvent) => unknown) | null;
   /**
    * Occurs when playback is paused.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/pause_event)
    */
-  onpause: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onpause: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when the play method is requested.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/play_event)
    */
-  onplay: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onplay: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when the audio or video has started playing.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/playing_event)
    */
-  onplaying: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onplaying: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointercancel_event) */
   onpointercancel:
-    | ((this: GlobalEventHandlers, ev: PointerEvent) => any)
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerdown_event) */
-  onpointerdown: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
+  onpointerdown:
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerenter_event) */
-  onpointerenter: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
+  onpointerenter:
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerleave_event) */
-  onpointerleave: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
+  onpointerleave:
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointermove_event) */
-  onpointermove: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
+  onpointermove:
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerout_event) */
-  onpointerout: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
+  onpointerout:
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerover_event) */
-  onpointerover: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
+  onpointerover:
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerup_event) */
-  onpointerup: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;
+  onpointerup:
+    | ((this: GlobalEventHandlers, ev: PointerEvent) => unknown)
+    | null;
   /**
    * Occurs to indicate progress while downloading media data.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/progress_event)
    */
-  onprogress: ((this: GlobalEventHandlers, ev: ProgressEvent) => any) | null;
+  onprogress:
+    | ((this: GlobalEventHandlers, ev: ProgressEvent) => unknown)
+    | null;
   /**
    * Occurs when the playback rate is increased or decreased.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ratechange_event)
    */
-  onratechange: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onratechange: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Fires when the user resets a form.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/reset_event)
    */
-  onreset: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onreset: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/resize_event) */
-  onresize: ((this: GlobalEventHandlers, ev: UIEvent) => any) | null;
+  onresize: ((this: GlobalEventHandlers, ev: UIEvent) => unknown) | null;
   /**
    * Fires when the user repositions the scroll box in the scroll bar on the object.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scroll_event)
    */
-  onscroll: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onscroll: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scrollend_event) */
-  onscrollend: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onscrollend: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/securitypolicyviolation_event) */
   onsecuritypolicyviolation:
-    | ((this: GlobalEventHandlers, ev: SecurityPolicyViolationEvent) => any)
+    | ((this: GlobalEventHandlers, ev: SecurityPolicyViolationEvent) => unknown)
     | null;
   /**
    * Occurs when the seek operation ends.
@@ -10700,87 +10751,87 @@ interface GlobalEventHandlers {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeked_event)
    */
-  onseeked: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onseeked: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when the current playback position is moved.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeking_event)
    */
-  onseeking: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onseeking: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Fires when the current selection changes.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/select_event)
    */
-  onselect: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onselect: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/selectionchange_event) */
-  onselectionchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onselectionchange: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/selectstart_event) */
-  onselectstart: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onselectstart: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/slotchange_event) */
-  onslotchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onslotchange: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when the download has stopped.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/stalled_event)
    */
-  onstalled: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onstalled: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/submit_event) */
-  onsubmit: ((this: GlobalEventHandlers, ev: SubmitEvent) => any) | null;
+  onsubmit: ((this: GlobalEventHandlers, ev: SubmitEvent) => unknown) | null;
   /**
    * Occurs if the load operation has been intentionally halted.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/suspend_event)
    */
-  onsuspend: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onsuspend: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs to indicate the current playback position.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/timeupdate_event)
    */
-  ontimeupdate: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  ontimeupdate: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDetailsElement/toggle_event) */
-  ontoggle: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  ontoggle: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchcancel_event) */
   ontouchcancel?:
-    | ((this: GlobalEventHandlers, ev: TouchEvent) => any)
+    | ((this: GlobalEventHandlers, ev: TouchEvent) => unknown)
     | null
     | undefined;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchend_event) */
   ontouchend?:
-    | ((this: GlobalEventHandlers, ev: TouchEvent) => any)
+    | ((this: GlobalEventHandlers, ev: TouchEvent) => unknown)
     | null
     | undefined;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchmove_event) */
   ontouchmove?:
-    | ((this: GlobalEventHandlers, ev: TouchEvent) => any)
+    | ((this: GlobalEventHandlers, ev: TouchEvent) => unknown)
     | null
     | undefined;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchstart_event) */
   ontouchstart?:
-    | ((this: GlobalEventHandlers, ev: TouchEvent) => any)
+    | ((this: GlobalEventHandlers, ev: TouchEvent) => unknown)
     | null
     | undefined;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitioncancel_event) */
   ontransitioncancel:
-    | ((this: GlobalEventHandlers, ev: TransitionEvent) => any)
+    | ((this: GlobalEventHandlers, ev: TransitionEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event) */
   ontransitionend:
-    | ((this: GlobalEventHandlers, ev: TransitionEvent) => any)
+    | ((this: GlobalEventHandlers, ev: TransitionEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionrun_event) */
   ontransitionrun:
-    | ((this: GlobalEventHandlers, ev: TransitionEvent) => any)
+    | ((this: GlobalEventHandlers, ev: TransitionEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionstart_event) */
   ontransitionstart:
-    | ((this: GlobalEventHandlers, ev: TransitionEvent) => any)
+    | ((this: GlobalEventHandlers, ev: TransitionEvent) => unknown)
     | null;
   /**
    * Occurs when the volume is changed, or playback is muted or unmuted.
@@ -10788,27 +10839,29 @@ interface GlobalEventHandlers {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/volumechange_event)
    */
-  onvolumechange: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onvolumechange: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * Occurs when playback stops because the next frame of a video resource is not available.
    * @param ev The event.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/waiting_event)
    */
-  onwaiting: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onwaiting: ((this: GlobalEventHandlers, ev: Event) => unknown) | null;
   /**
    * @deprecated This is a legacy alias of `onanimationend`.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event)
    */
-  onwebkitanimationend: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onwebkitanimationend:
+    | ((this: GlobalEventHandlers, ev: Event) => unknown)
+    | null;
   /**
    * @deprecated This is a legacy alias of `onanimationiteration`.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event)
    */
   onwebkitanimationiteration:
-    | ((this: GlobalEventHandlers, ev: Event) => any)
+    | ((this: GlobalEventHandlers, ev: Event) => unknown)
     | null;
   /**
    * @deprecated This is a legacy alias of `onanimationstart`.
@@ -10816,22 +10869,24 @@ interface GlobalEventHandlers {
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event)
    */
   onwebkitanimationstart:
-    | ((this: GlobalEventHandlers, ev: Event) => any)
+    | ((this: GlobalEventHandlers, ev: Event) => unknown)
     | null;
   /**
    * @deprecated This is a legacy alias of `ontransitionend`.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)
    */
-  onwebkittransitionend: ((this: GlobalEventHandlers, ev: Event) => any) | null;
+  onwebkittransitionend:
+    | ((this: GlobalEventHandlers, ev: Event) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/wheel_event) */
-  onwheel: ((this: GlobalEventHandlers, ev: WheelEvent) => any) | null;
+  onwheel: ((this: GlobalEventHandlers, ev: WheelEvent) => unknown) | null;
   addEventListener<K extends keyof GlobalEventHandlersEventMap>(
     type: K,
     listener: (
       this: GlobalEventHandlers,
       ev: GlobalEventHandlersEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -10844,7 +10899,7 @@ interface GlobalEventHandlers {
     listener: (
       this: GlobalEventHandlers,
       ev: GlobalEventHandlersEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -10881,7 +10936,7 @@ interface HTMLAllCollection {
   [index: number]: Element;
 }

-declare var HTMLAllCollection: {
+declare const HTMLAllCollection: {
   prototype: HTMLAllCollection;
   new (): HTMLAllCollection;
 };
@@ -10953,7 +11008,7 @@ interface HTMLAnchorElement extends HTMLElement, HTMLHyperlinkElementUtils {
   type: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -10963,7 +11018,7 @@ interface HTMLAnchorElement extends HTMLElement, HTMLHyperlinkElementUtils {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -10973,7 +11028,7 @@ interface HTMLAnchorElement extends HTMLElement, HTMLHyperlinkElementUtils {
   ): void;
 }

-declare var HTMLAnchorElement: {
+declare const HTMLAnchorElement: {
   prototype: HTMLAnchorElement;
   new (): HTMLAnchorElement;
 };
@@ -11012,7 +11067,7 @@ interface HTMLAreaElement extends HTMLElement, HTMLHyperlinkElementUtils {
   target: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11022,7 +11077,7 @@ interface HTMLAreaElement extends HTMLElement, HTMLHyperlinkElementUtils {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11032,7 +11087,7 @@ interface HTMLAreaElement extends HTMLElement, HTMLHyperlinkElementUtils {
   ): void;
 }

-declare var HTMLAreaElement: {
+declare const HTMLAreaElement: {
   prototype: HTMLAreaElement;
   new (): HTMLAreaElement;
 };
@@ -11045,7 +11100,10 @@ declare var HTMLAreaElement: {
 interface HTMLAudioElement extends HTMLMediaElement {
   addEventListener<K extends keyof HTMLMediaElementEventMap>(
     type: K,
-    listener: (this: HTMLAudioElement, ev: HTMLMediaElementEventMap[K]) => any,
+    listener: (
+      this: HTMLAudioElement,
+      ev: HTMLMediaElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11055,7 +11113,10 @@ interface HTMLAudioElement extends HTMLMediaElement {
   ): void;
   removeEventListener<K extends keyof HTMLMediaElementEventMap>(
     type: K,
-    listener: (this: HTMLAudioElement, ev: HTMLMediaElementEventMap[K]) => any,
+    listener: (
+      this: HTMLAudioElement,
+      ev: HTMLMediaElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11065,7 +11126,7 @@ interface HTMLAudioElement extends HTMLMediaElement {
   ): void;
 }

-declare var HTMLAudioElement: {
+declare const HTMLAudioElement: {
   prototype: HTMLAudioElement;
   new (): HTMLAudioElement;
 };
@@ -11083,7 +11144,7 @@ interface HTMLBRElement extends HTMLElement {
   clear: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11093,7 +11154,7 @@ interface HTMLBRElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11103,7 +11164,7 @@ interface HTMLBRElement extends HTMLElement {
   ): void;
 }

-declare var HTMLBRElement: {
+declare const HTMLBRElement: {
   prototype: HTMLBRElement;
   new (): HTMLBRElement;
 };
@@ -11128,7 +11189,7 @@ interface HTMLBaseElement extends HTMLElement {
   target: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11138,7 +11199,7 @@ interface HTMLBaseElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11148,7 +11209,7 @@ interface HTMLBaseElement extends HTMLElement {
   ): void;
 }

-declare var HTMLBaseElement: {
+declare const HTMLBaseElement: {
   prototype: HTMLBaseElement;
   new (): HTMLBaseElement;
 };
@@ -11177,7 +11238,10 @@ interface HTMLBodyElement extends HTMLElement, WindowEventHandlers {
   vLink: string;
   addEventListener<K extends keyof HTMLBodyElementEventMap>(
     type: K,
-    listener: (this: HTMLBodyElement, ev: HTMLBodyElementEventMap[K]) => any,
+    listener: (
+      this: HTMLBodyElement,
+      ev: HTMLBodyElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11187,7 +11251,10 @@ interface HTMLBodyElement extends HTMLElement, WindowEventHandlers {
   ): void;
   removeEventListener<K extends keyof HTMLBodyElementEventMap>(
     type: K,
-    listener: (this: HTMLBodyElement, ev: HTMLBodyElementEventMap[K]) => any,
+    listener: (
+      this: HTMLBodyElement,
+      ev: HTMLBodyElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11197,7 +11264,7 @@ interface HTMLBodyElement extends HTMLElement, WindowEventHandlers {
   ): void;
 }

-declare var HTMLBodyElement: {
+declare const HTMLBodyElement: {
   prototype: HTMLBodyElement;
   new (): HTMLBodyElement;
 };
@@ -11281,7 +11348,7 @@ interface HTMLButtonElement extends HTMLElement, PopoverInvokerElement {
   setCustomValidity(error: string): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11291,7 +11358,7 @@ interface HTMLButtonElement extends HTMLElement, PopoverInvokerElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11301,7 +11368,7 @@ interface HTMLButtonElement extends HTMLElement, PopoverInvokerElement {
   ): void;
 }

-declare var HTMLButtonElement: {
+declare const HTMLButtonElement: {
   prototype: HTMLButtonElement;
   new (): HTMLButtonElement;
 };
@@ -11348,21 +11415,21 @@ interface HTMLCanvasElement extends HTMLElement {
     contextId: 'webgl2',
     options?: WebGLContextAttributes,
   ): WebGL2RenderingContext | null;
-  getContext(contextId: string, options?: any): RenderingContext | null;
+  getContext(contextId: string, options?: unknown): RenderingContext | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/toBlob) */
-  toBlob(callback: BlobCallback, type?: string, quality?: any): void;
+  toBlob(callback: BlobCallback, type?: string, quality?: unknown): void;
   /**
    * Returns the content of the current canvas as an image that you can use as a source for another canvas or an HTML element.
    * @param type The standard MIME type for the image format to return. If you do not specify this parameter, the default value is a PNG format image.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/toDataURL)
    */
-  toDataURL(type?: string, quality?: any): string;
+  toDataURL(type?: string, quality?: unknown): string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/transferControlToOffscreen) */
   transferControlToOffscreen(): OffscreenCanvas;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11372,7 +11439,7 @@ interface HTMLCanvasElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11382,7 +11449,7 @@ interface HTMLCanvasElement extends HTMLElement {
   ): void;
 }

-declare var HTMLCanvasElement: {
+declare const HTMLCanvasElement: {
   prototype: HTMLCanvasElement;
   new (): HTMLCanvasElement;
 };
@@ -11417,7 +11484,7 @@ interface HTMLCollection extends HTMLCollectionBase {
   namedItem(name: string): Element | null;
 }

-declare var HTMLCollection: {
+declare const HTMLCollection: {
   prototype: HTMLCollection;
   new (): HTMLCollection;
 };
@@ -11438,7 +11505,7 @@ interface HTMLDListElement extends HTMLElement {
   compact: boolean;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11448,7 +11515,7 @@ interface HTMLDListElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11458,7 +11525,7 @@ interface HTMLDListElement extends HTMLElement {
   ): void;
 }

-declare var HTMLDListElement: {
+declare const HTMLDListElement: {
   prototype: HTMLDListElement;
   new (): HTMLDListElement;
 };
@@ -11473,7 +11540,7 @@ interface HTMLDataElement extends HTMLElement {
   value: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11483,7 +11550,7 @@ interface HTMLDataElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11493,7 +11560,7 @@ interface HTMLDataElement extends HTMLElement {
   ): void;
 }

-declare var HTMLDataElement: {
+declare const HTMLDataElement: {
   prototype: HTMLDataElement;
   new (): HTMLDataElement;
 };
@@ -11512,7 +11579,10 @@ interface HTMLDataListElement extends HTMLElement {
   readonly options: HTMLCollectionOf<HTMLOptionElement>;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDataListElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLDataListElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11522,7 +11592,10 @@ interface HTMLDataListElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDataListElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLDataListElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11532,7 +11605,7 @@ interface HTMLDataListElement extends HTMLElement {
   ): void;
 }

-declare var HTMLDataListElement: {
+declare const HTMLDataListElement: {
   prototype: HTMLDataListElement;
   new (): HTMLDataListElement;
 };
@@ -11545,7 +11618,7 @@ interface HTMLDetailsElement extends HTMLElement {
   open: boolean;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11555,7 +11628,7 @@ interface HTMLDetailsElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11565,7 +11638,7 @@ interface HTMLDetailsElement extends HTMLElement {
   ): void;
 }

-declare var HTMLDetailsElement: {
+declare const HTMLDetailsElement: {
   prototype: HTMLDetailsElement;
   new (): HTMLDetailsElement;
 };
@@ -11594,7 +11667,7 @@ interface HTMLDialogElement extends HTMLElement {
   showModal(): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11604,7 +11677,7 @@ interface HTMLDialogElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11614,7 +11687,7 @@ interface HTMLDialogElement extends HTMLElement {
   ): void;
 }

-declare var HTMLDialogElement: {
+declare const HTMLDialogElement: {
   prototype: HTMLDialogElement;
   new (): HTMLDialogElement;
 };
@@ -11625,7 +11698,10 @@ interface HTMLDirectoryElement extends HTMLElement {
   compact: boolean;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDirectoryElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLDirectoryElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11635,7 +11711,10 @@ interface HTMLDirectoryElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDirectoryElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLDirectoryElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11646,7 +11725,7 @@ interface HTMLDirectoryElement extends HTMLElement {
 }

 /** @deprecated */
-declare var HTMLDirectoryElement: {
+declare const HTMLDirectoryElement: {
   prototype: HTMLDirectoryElement;
   new (): HTMLDirectoryElement;
 };
@@ -11664,7 +11743,7 @@ interface HTMLDivElement extends HTMLElement {
   align: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11674,7 +11753,7 @@ interface HTMLDivElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11684,7 +11763,7 @@ interface HTMLDivElement extends HTMLElement {
   ): void;
 }

-declare var HTMLDivElement: {
+declare const HTMLDivElement: {
   prototype: HTMLDivElement;
   new (): HTMLDivElement;
 };
@@ -11693,7 +11772,7 @@ declare var HTMLDivElement: {
 interface HTMLDocument extends Document {
   addEventListener<K extends keyof DocumentEventMap>(
     type: K,
-    listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => any,
+    listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11703,7 +11782,7 @@ interface HTMLDocument extends Document {
   ): void;
   removeEventListener<K extends keyof DocumentEventMap>(
     type: K,
-    listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => any,
+    listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11714,7 +11793,7 @@ interface HTMLDocument extends Document {
 }

 /** @deprecated */
-declare var HTMLDocument: {
+declare const HTMLDocument: {
   prototype: HTMLDocument;
   new (): HTMLDocument;
 };
@@ -11785,7 +11864,7 @@ interface HTMLElement
   togglePopover(force?: boolean): boolean;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11795,7 +11874,7 @@ interface HTMLElement
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11805,7 +11884,7 @@ interface HTMLElement
   ): void;
 }

-declare var HTMLElement: {
+declare const HTMLElement: {
   prototype: HTMLElement;
   new (): HTMLElement;
 };
@@ -11845,7 +11924,7 @@ interface HTMLEmbedElement extends HTMLElement {
   getSVGDocument(): Document | null;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11855,7 +11934,7 @@ interface HTMLEmbedElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11865,7 +11944,7 @@ interface HTMLEmbedElement extends HTMLElement {
   ): void;
 }

-declare var HTMLEmbedElement: {
+declare const HTMLEmbedElement: {
   prototype: HTMLEmbedElement;
   new (): HTMLEmbedElement;
 };
@@ -11933,7 +12012,10 @@ interface HTMLFieldSetElement extends HTMLElement {
   setCustomValidity(error: string): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLFieldSetElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLFieldSetElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11943,7 +12025,10 @@ interface HTMLFieldSetElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLFieldSetElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLFieldSetElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11953,7 +12038,7 @@ interface HTMLFieldSetElement extends HTMLElement {
   ): void;
 }

-declare var HTMLFieldSetElement: {
+declare const HTMLFieldSetElement: {
   prototype: HTMLFieldSetElement;
   new (): HTMLFieldSetElement;
 };
@@ -11986,7 +12071,7 @@ interface HTMLFontElement extends HTMLElement {
   size: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11996,7 +12081,7 @@ interface HTMLFontElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -12007,7 +12092,7 @@ interface HTMLFontElement extends HTMLElement {
 }

 /** @deprecated */
-declare var HTMLFontElement: {
+declare const HTMLFontElement: {
   prototype: HTMLFontElement;
   new (): HTMLFontElement;
 };
@@ -12028,7 +12113,7 @@ interface HTMLFormControlsCollection extends HTMLCollectionBase {
   namedItem(name: string): RadioNodeList | Element | null;
 }

-declare var HTMLFormControlsCollection: {
+declare const HTMLFormControlsCollection: {
   prototype: HTMLFormControlsCollection;
   new (): HTMLFormControlsCollection;
 };
@@ -12123,7 +12208,7 @@ interface HTMLFormElement extends HTMLElement {
   submit(): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -12133,7 +12218,7 @@ interface HTMLFormElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -12142,10 +12227,10 @@ interface HTMLFormElement extends HTMLElement {
     options?: boolean | EventListenerOptions,
   ): void;
   [index: number]: Element;
-  [name: string]: any;
+  [name: string]: unknown;
 }

-declare var HTMLFormElement: {
+declare const HTMLFormElement: {
   prototype: HTMLFormElement;
   new (): HTMLFormElement;
 };
@@ -12204,7 +12289,7 @@ interface HTMLFrameElement extends HTMLElement {
   src: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLFrameElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLFrameElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -12214,7 +12299,7 @@ interface HTMLFrameElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLFrameElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLFrameElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -12225,7 +12310,7 @@ interface HTMLFrameElement extends HTMLElement {
 }

 /** @deprecated */
-declare var HTMLFrameElement: {
+declare const HTMLFrameElement: {
   prototype: HTMLFrameElement;
   new (): HTMLFrameElement;
 };
@@ -12256,7 +12341,7 @@ interface HTMLFrameSetElement extends HTMLElement, WindowEventHandlers {
     listener: (
       this: HTMLFrameSetElement,
       ev: HTMLFrameSetElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -12269,7 +12354,7 @@ interface HTMLFrameSetElement extends HTMLElement, WindowEventHandlers {
     listener: (
       this: HTMLFrameSetElement,
       ev: HTMLFrameSetElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -12280,7 +12365,7 @@ interface HTMLFrameSetElement extends HTMLElement, WindowEventHandlers {
 }

 /** @deprecated */
-declare var HTMLFrameSetElement: {
+declare const HTMLFrameSetElement: {
   prototype: HTMLFrameSetElement;
   new (): HTMLFrameSetElement;
 };
@@ -12312,7 +12397,7 @@ interface HTMLHRElement extends HTMLElement {
   width: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -12322,7 +12407,7 @@ interface HTMLHRElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -12332,7 +12417,7 @@ interface HTMLHRElement extends HTMLElement {
   ): void;
 }

-declare var HTMLHRElement: {
+declare const HTMLHRElement: {
   prototype: HTMLHRElement;
   new (): HTMLHRElement;
 };
@@ -12345,7 +12430,7 @@ declare var HTMLHRElement: {
 interface HTMLHeadElement extends HTMLElement {
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -12355,7 +12440,7 @@ interface HTMLHeadElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -12365,7 +12450,7 @@ interface HTMLHeadElement extends HTMLElement {
   ): void;
 }

-declare var HTMLHeadElement: {
+declare const HTMLHeadElement: {
   prototype: HTMLHeadElement;
   new (): HTMLHeadElement;
 };
@@ -12383,7 +12468,7 @@ interface HTMLHeadingElement extends HTMLElement {
   align: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -12393,7 +12478,7 @@ interface HTMLHeadingElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -12403,7 +12488,7 @@ interface HTMLHeadingElement extends HTMLElement {
   ): void;
 }

-declare var HTMLHeadingElement: {
+declare const HTMLHeadingElement: {
   prototype: HTMLHeadingElement;
   new (): HTMLHeadingElement;
 };
@@ -12423,7 +12508,7 @@ interface HTMLHtmlElement extends HTMLElement {
   version: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -12433,7 +12518,7 @@ interface HTMLHtmlElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -12443,7 +12528,7 @@ interface HTMLHtmlElement extends HTMLElement {
   ): void;
 }

-declare var HTMLHtmlElement: {
+declare const HTMLHtmlElement: {
   prototype: HTMLHtmlElement;
   new (): HTMLHtmlElement;
 };
@@ -12629,7 +12714,7 @@ interface HTMLIFrameElement extends HTMLElement {
   getSVGDocument(): Document | null;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLIFrameElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLIFrameElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -12639,7 +12724,7 @@ interface HTMLIFrameElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLIFrameElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLIFrameElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -12649,7 +12734,7 @@ interface HTMLIFrameElement extends HTMLElement {
   ): void;
 }

-declare var HTMLIFrameElement: {
+declare const HTMLIFrameElement: {
   prototype: HTMLIFrameElement;
   new (): HTMLIFrameElement;
 };
@@ -12786,7 +12871,7 @@ interface HTMLImageElement extends HTMLElement {
   decode(): Promise<void>;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -12796,7 +12881,7 @@ interface HTMLImageElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -12806,7 +12891,7 @@ interface HTMLImageElement extends HTMLElement {
   ): void;
 }

-declare var HTMLImageElement: {
+declare const HTMLImageElement: {
   prototype: HTMLImageElement;
   new (): HTMLImageElement;
 };
@@ -13102,7 +13187,7 @@ interface HTMLInputElement extends HTMLElement, PopoverInvokerElement {
   stepUp(n?: number): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13112,7 +13197,7 @@ interface HTMLInputElement extends HTMLElement, PopoverInvokerElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13122,7 +13207,7 @@ interface HTMLInputElement extends HTMLElement, PopoverInvokerElement {
   ): void;
 }

-declare var HTMLInputElement: {
+declare const HTMLInputElement: {
   prototype: HTMLInputElement;
   new (): HTMLInputElement;
 };
@@ -13139,7 +13224,7 @@ interface HTMLLIElement extends HTMLElement {
   value: number;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13149,7 +13234,7 @@ interface HTMLLIElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13159,7 +13244,7 @@ interface HTMLLIElement extends HTMLElement {
   ): void;
 }

-declare var HTMLLIElement: {
+declare const HTMLLIElement: {
   prototype: HTMLLIElement;
   new (): HTMLLIElement;
 };
@@ -13190,7 +13275,7 @@ interface HTMLLabelElement extends HTMLElement {
   htmlFor: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13200,7 +13285,7 @@ interface HTMLLabelElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13210,7 +13295,7 @@ interface HTMLLabelElement extends HTMLElement {
   ): void;
 }

-declare var HTMLLabelElement: {
+declare const HTMLLabelElement: {
   prototype: HTMLLabelElement;
   new (): HTMLLabelElement;
 };
@@ -13231,7 +13316,7 @@ interface HTMLLegendElement extends HTMLElement {
   readonly form: HTMLFormElement | null;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13241,7 +13326,7 @@ interface HTMLLegendElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13251,7 +13336,7 @@ interface HTMLLegendElement extends HTMLElement {
   ): void;
 }

-declare var HTMLLegendElement: {
+declare const HTMLLegendElement: {
   prototype: HTMLLegendElement;
   new (): HTMLLegendElement;
 };
@@ -13326,7 +13411,7 @@ interface HTMLLinkElement extends HTMLElement, LinkStyle {
   type: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13336,7 +13421,7 @@ interface HTMLLinkElement extends HTMLElement, LinkStyle {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13346,7 +13431,7 @@ interface HTMLLinkElement extends HTMLElement, LinkStyle {
   ): void;
 }

-declare var HTMLLinkElement: {
+declare const HTMLLinkElement: {
   prototype: HTMLLinkElement;
   new (): HTMLLinkElement;
 };
@@ -13371,7 +13456,7 @@ interface HTMLMapElement extends HTMLElement {
   name: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13381,7 +13466,7 @@ interface HTMLMapElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13391,7 +13476,7 @@ interface HTMLMapElement extends HTMLElement {
   ): void;
 }

-declare var HTMLMapElement: {
+declare const HTMLMapElement: {
   prototype: HTMLMapElement;
   new (): HTMLMapElement;
 };
@@ -13431,7 +13516,7 @@ interface HTMLMarqueeElement extends HTMLElement {
   stop(): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMarqueeElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMarqueeElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13441,7 +13526,7 @@ interface HTMLMarqueeElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMarqueeElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMarqueeElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13452,7 +13537,7 @@ interface HTMLMarqueeElement extends HTMLElement {
 }

 /** @deprecated */
-declare var HTMLMarqueeElement: {
+declare const HTMLMarqueeElement: {
   prototype: HTMLMarqueeElement;
   new (): HTMLMarqueeElement;
 };
@@ -13554,9 +13639,9 @@ interface HTMLMediaElement extends HTMLElement {
   readonly networkState: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/encrypted_event) */
   onencrypted:
-    | ((this: HTMLMediaElement, ev: MediaEncryptedEvent) => any)
+    | ((this: HTMLMediaElement, ev: MediaEncryptedEvent) => unknown)
     | null;
-  onwaitingforkey: ((this: HTMLMediaElement, ev: Event) => any) | null;
+  onwaitingforkey: ((this: HTMLMediaElement, ev: Event) => unknown) | null;
   /**
    * Gets a flag that specifies whether playback is paused.
    *
@@ -13667,7 +13752,10 @@ interface HTMLMediaElement extends HTMLElement {
   readonly HAVE_ENOUGH_DATA: 4;
   addEventListener<K extends keyof HTMLMediaElementEventMap>(
     type: K,
-    listener: (this: HTMLMediaElement, ev: HTMLMediaElementEventMap[K]) => any,
+    listener: (
+      this: HTMLMediaElement,
+      ev: HTMLMediaElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13677,7 +13765,10 @@ interface HTMLMediaElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLMediaElementEventMap>(
     type: K,
-    listener: (this: HTMLMediaElement, ev: HTMLMediaElementEventMap[K]) => any,
+    listener: (
+      this: HTMLMediaElement,
+      ev: HTMLMediaElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13687,7 +13778,7 @@ interface HTMLMediaElement extends HTMLElement {
   ): void;
 }

-declare var HTMLMediaElement: {
+declare const HTMLMediaElement: {
   prototype: HTMLMediaElement;
   new (): HTMLMediaElement;
   readonly NETWORK_EMPTY: 0;
@@ -13707,7 +13798,7 @@ interface HTMLMenuElement extends HTMLElement {
   compact: boolean;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13717,7 +13808,7 @@ interface HTMLMenuElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13727,7 +13818,7 @@ interface HTMLMenuElement extends HTMLElement {
   ): void;
 }

-declare var HTMLMenuElement: {
+declare const HTMLMenuElement: {
   prototype: HTMLMenuElement;
   new (): HTMLMenuElement;
 };
@@ -13767,7 +13858,7 @@ interface HTMLMetaElement extends HTMLElement {
   scheme: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13777,7 +13868,7 @@ interface HTMLMetaElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13787,7 +13878,7 @@ interface HTMLMetaElement extends HTMLElement {
   ): void;
 }

-declare var HTMLMetaElement: {
+declare const HTMLMetaElement: {
   prototype: HTMLMetaElement;
   new (): HTMLMetaElement;
 };
@@ -13814,7 +13905,7 @@ interface HTMLMeterElement extends HTMLElement {
   value: number;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13824,7 +13915,7 @@ interface HTMLMeterElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13834,7 +13925,7 @@ interface HTMLMeterElement extends HTMLElement {
   ): void;
 }

-declare var HTMLMeterElement: {
+declare const HTMLMeterElement: {
   prototype: HTMLMeterElement;
   new (): HTMLMeterElement;
 };
@@ -13851,7 +13942,7 @@ interface HTMLModElement extends HTMLElement {
   dateTime: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13861,7 +13952,7 @@ interface HTMLModElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13871,7 +13962,7 @@ interface HTMLModElement extends HTMLElement {
   ): void;
 }

-declare var HTMLModElement: {
+declare const HTMLModElement: {
   prototype: HTMLModElement;
   new (): HTMLModElement;
 };
@@ -13896,7 +13987,7 @@ interface HTMLOListElement extends HTMLElement {
   type: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -13906,7 +13997,7 @@ interface HTMLOListElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -13916,7 +14007,7 @@ interface HTMLOListElement extends HTMLElement {
   ): void;
 }

-declare var HTMLOListElement: {
+declare const HTMLOListElement: {
   prototype: HTMLOListElement;
   new (): HTMLOListElement;
 };
@@ -14049,7 +14140,7 @@ interface HTMLObjectElement extends HTMLElement {
   setCustomValidity(error: string): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14059,7 +14150,7 @@ interface HTMLObjectElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14069,7 +14160,7 @@ interface HTMLObjectElement extends HTMLElement {
   ): void;
 }

-declare var HTMLObjectElement: {
+declare const HTMLObjectElement: {
   prototype: HTMLObjectElement;
   new (): HTMLObjectElement;
 };
@@ -14090,7 +14181,10 @@ interface HTMLOptGroupElement extends HTMLElement {
   label: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLOptGroupElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLOptGroupElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14100,7 +14194,10 @@ interface HTMLOptGroupElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLOptGroupElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLOptGroupElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14110,7 +14207,7 @@ interface HTMLOptGroupElement extends HTMLElement {
   ): void;
 }

-declare var HTMLOptGroupElement: {
+declare const HTMLOptGroupElement: {
   prototype: HTMLOptGroupElement;
   new (): HTMLOptGroupElement;
 };
@@ -14167,7 +14264,7 @@ interface HTMLOptionElement extends HTMLElement {
   value: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14177,7 +14274,7 @@ interface HTMLOptionElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14187,7 +14284,7 @@ interface HTMLOptionElement extends HTMLElement {
   ): void;
 }

-declare var HTMLOptionElement: {
+declare const HTMLOptionElement: {
   prototype: HTMLOptionElement;
   new (): HTMLOptionElement;
 };
@@ -14229,7 +14326,7 @@ interface HTMLOptionsCollection extends HTMLCollectionOf<HTMLOptionElement> {
   remove(index: number): void;
 }

-declare var HTMLOptionsCollection: {
+declare const HTMLOptionsCollection: {
   prototype: HTMLOptionsCollection;
   new (): HTMLOptionsCollection;
 };
@@ -14291,7 +14388,7 @@ interface HTMLOutputElement extends HTMLElement {
   setCustomValidity(error: string): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14301,7 +14398,7 @@ interface HTMLOutputElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14311,7 +14408,7 @@ interface HTMLOutputElement extends HTMLElement {
   ): void;
 }

-declare var HTMLOutputElement: {
+declare const HTMLOutputElement: {
   prototype: HTMLOutputElement;
   new (): HTMLOutputElement;
 };
@@ -14329,7 +14426,10 @@ interface HTMLParagraphElement extends HTMLElement {
   align: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLParagraphElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLParagraphElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14339,7 +14439,10 @@ interface HTMLParagraphElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLParagraphElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLParagraphElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14349,7 +14452,7 @@ interface HTMLParagraphElement extends HTMLElement {
   ): void;
 }

-declare var HTMLParagraphElement: {
+declare const HTMLParagraphElement: {
   prototype: HTMLParagraphElement;
   new (): HTMLParagraphElement;
 };
@@ -14383,7 +14486,7 @@ interface HTMLParamElement extends HTMLElement {
   valueType: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14393,7 +14496,7 @@ interface HTMLParamElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14404,7 +14507,7 @@ interface HTMLParamElement extends HTMLElement {
 }

 /** @deprecated */
-declare var HTMLParamElement: {
+declare const HTMLParamElement: {
   prototype: HTMLParamElement;
   new (): HTMLParamElement;
 };
@@ -14417,7 +14520,7 @@ declare var HTMLParamElement: {
 interface HTMLPictureElement extends HTMLElement {
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14427,7 +14530,7 @@ interface HTMLPictureElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14437,7 +14540,7 @@ interface HTMLPictureElement extends HTMLElement {
   ): void;
 }

-declare var HTMLPictureElement: {
+declare const HTMLPictureElement: {
   prototype: HTMLPictureElement;
   new (): HTMLPictureElement;
 };
@@ -14455,7 +14558,7 @@ interface HTMLPreElement extends HTMLElement {
   width: number;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14465,7 +14568,7 @@ interface HTMLPreElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14475,7 +14578,7 @@ interface HTMLPreElement extends HTMLElement {
   ): void;
 }

-declare var HTMLPreElement: {
+declare const HTMLPreElement: {
   prototype: HTMLPreElement;
   new (): HTMLPreElement;
 };
@@ -14508,7 +14611,10 @@ interface HTMLProgressElement extends HTMLElement {
   value: number;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLProgressElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLProgressElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14518,7 +14624,10 @@ interface HTMLProgressElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLProgressElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLProgressElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14528,7 +14637,7 @@ interface HTMLProgressElement extends HTMLElement {
   ): void;
 }

-declare var HTMLProgressElement: {
+declare const HTMLProgressElement: {
   prototype: HTMLProgressElement;
   new (): HTMLProgressElement;
 };
@@ -14543,7 +14652,7 @@ interface HTMLQuoteElement extends HTMLElement {
   cite: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14553,7 +14662,7 @@ interface HTMLQuoteElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14563,7 +14672,7 @@ interface HTMLQuoteElement extends HTMLElement {
   ): void;
 }

-declare var HTMLQuoteElement: {
+declare const HTMLQuoteElement: {
   prototype: HTMLQuoteElement;
   new (): HTMLQuoteElement;
 };
@@ -14627,7 +14736,7 @@ interface HTMLScriptElement extends HTMLElement {
   type: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14637,7 +14746,7 @@ interface HTMLScriptElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14647,7 +14756,7 @@ interface HTMLScriptElement extends HTMLElement {
   ): void;
 }

-declare var HTMLScriptElement: {
+declare const HTMLScriptElement: {
   prototype: HTMLScriptElement;
   new (): HTMLScriptElement;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/supports_static) */
@@ -14798,7 +14907,7 @@ interface HTMLSelectElement extends HTMLElement {
   showPicker(): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14808,7 +14917,7 @@ interface HTMLSelectElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14819,7 +14928,7 @@ interface HTMLSelectElement extends HTMLElement {
   [name: number]: HTMLOptionElement | HTMLOptGroupElement;
 }

-declare var HTMLSelectElement: {
+declare const HTMLSelectElement: {
   prototype: HTMLSelectElement;
   new (): HTMLSelectElement;
 };
@@ -14836,7 +14945,7 @@ interface HTMLSlotElement extends HTMLElement {
   assignedNodes(options?: AssignedNodesOptions): Node[];
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14846,7 +14955,7 @@ interface HTMLSlotElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14856,7 +14965,7 @@ interface HTMLSlotElement extends HTMLElement {
   ): void;
 }

-declare var HTMLSlotElement: {
+declare const HTMLSlotElement: {
   prototype: HTMLSlotElement;
   new (): HTMLSlotElement;
 };
@@ -14881,7 +14990,7 @@ interface HTMLSourceElement extends HTMLElement {
   width: number;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14891,7 +15000,7 @@ interface HTMLSourceElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14901,7 +15010,7 @@ interface HTMLSourceElement extends HTMLElement {
   ): void;
 }

-declare var HTMLSourceElement: {
+declare const HTMLSourceElement: {
   prototype: HTMLSourceElement;
   new (): HTMLSourceElement;
 };
@@ -14914,7 +15023,7 @@ declare var HTMLSourceElement: {
 interface HTMLSpanElement extends HTMLElement {
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14924,7 +15033,7 @@ interface HTMLSpanElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14934,7 +15043,7 @@ interface HTMLSpanElement extends HTMLElement {
   ): void;
 }

-declare var HTMLSpanElement: {
+declare const HTMLSpanElement: {
   prototype: HTMLSpanElement;
   new (): HTMLSpanElement;
 };
@@ -14966,7 +15075,7 @@ interface HTMLStyleElement extends HTMLElement, LinkStyle {
   type: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -14976,7 +15085,7 @@ interface HTMLStyleElement extends HTMLElement, LinkStyle {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -14986,7 +15095,7 @@ interface HTMLStyleElement extends HTMLElement, LinkStyle {
   ): void;
 }

-declare var HTMLStyleElement: {
+declare const HTMLStyleElement: {
   prototype: HTMLStyleElement;
   new (): HTMLStyleElement;
 };
@@ -15009,7 +15118,7 @@ interface HTMLTableCaptionElement extends HTMLElement {
     listener: (
       this: HTMLTableCaptionElement,
       ev: HTMLElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15022,7 +15131,7 @@ interface HTMLTableCaptionElement extends HTMLElement {
     listener: (
       this: HTMLTableCaptionElement,
       ev: HTMLElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15032,7 +15141,7 @@ interface HTMLTableCaptionElement extends HTMLElement {
   ): void;
 }

-declare var HTMLTableCaptionElement: {
+declare const HTMLTableCaptionElement: {
   prototype: HTMLTableCaptionElement;
   new (): HTMLTableCaptionElement;
 };
@@ -15134,7 +15243,10 @@ interface HTMLTableCellElement extends HTMLElement {
   width: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTableCellElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTableCellElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15144,7 +15256,10 @@ interface HTMLTableCellElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTableCellElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTableCellElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15154,7 +15269,7 @@ interface HTMLTableCellElement extends HTMLElement {
   ): void;
 }

-declare var HTMLTableCellElement: {
+declare const HTMLTableCellElement: {
   prototype: HTMLTableCellElement;
   new (): HTMLTableCellElement;
 };
@@ -15203,7 +15318,10 @@ interface HTMLTableColElement extends HTMLElement {
   width: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTableColElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTableColElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15213,7 +15331,10 @@ interface HTMLTableColElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTableColElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTableColElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15223,7 +15344,7 @@ interface HTMLTableColElement extends HTMLElement {
   ): void;
 }

-declare var HTMLTableColElement: {
+declare const HTMLTableColElement: {
   prototype: HTMLTableColElement;
   new (): HTMLTableColElement;
 };
@@ -15235,7 +15356,7 @@ interface HTMLTableDataCellElement extends HTMLTableCellElement {
     listener: (
       this: HTMLTableDataCellElement,
       ev: HTMLElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15248,7 +15369,7 @@ interface HTMLTableDataCellElement extends HTMLTableCellElement {
     listener: (
       this: HTMLTableDataCellElement,
       ev: HTMLElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15414,7 +15535,7 @@ interface HTMLTableElement extends HTMLElement {
   insertRow(index?: number): HTMLTableRowElement;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15424,7 +15545,7 @@ interface HTMLTableElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15434,7 +15555,7 @@ interface HTMLTableElement extends HTMLElement {
   ): void;
 }

-declare var HTMLTableElement: {
+declare const HTMLTableElement: {
   prototype: HTMLTableElement;
   new (): HTMLTableElement;
 };
@@ -15446,7 +15567,7 @@ interface HTMLTableHeaderCellElement extends HTMLTableCellElement {
     listener: (
       this: HTMLTableHeaderCellElement,
       ev: HTMLElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15459,7 +15580,7 @@ interface HTMLTableHeaderCellElement extends HTMLTableCellElement {
     listener: (
       this: HTMLTableHeaderCellElement,
       ev: HTMLElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15540,7 +15661,10 @@ interface HTMLTableRowElement extends HTMLElement {
   insertCell(index?: number): HTMLTableCellElement;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTableRowElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTableRowElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15550,7 +15674,10 @@ interface HTMLTableRowElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTableRowElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTableRowElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15560,7 +15687,7 @@ interface HTMLTableRowElement extends HTMLElement {
   ): void;
 }

-declare var HTMLTableRowElement: {
+declare const HTMLTableRowElement: {
   prototype: HTMLTableRowElement;
   new (): HTMLTableRowElement;
 };
@@ -15621,7 +15748,7 @@ interface HTMLTableSectionElement extends HTMLElement {
     listener: (
       this: HTMLTableSectionElement,
       ev: HTMLElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15634,7 +15761,7 @@ interface HTMLTableSectionElement extends HTMLElement {
     listener: (
       this: HTMLTableSectionElement,
       ev: HTMLElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15644,7 +15771,7 @@ interface HTMLTableSectionElement extends HTMLElement {
   ): void;
 }

-declare var HTMLTableSectionElement: {
+declare const HTMLTableSectionElement: {
   prototype: HTMLTableSectionElement;
   new (): HTMLTableSectionElement;
 };
@@ -15671,7 +15798,10 @@ interface HTMLTemplateElement extends HTMLElement {
   shadowRootSerializable: boolean;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTemplateElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTemplateElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15681,7 +15811,10 @@ interface HTMLTemplateElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTemplateElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTemplateElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15691,7 +15824,7 @@ interface HTMLTemplateElement extends HTMLElement {
   ): void;
 }

-declare var HTMLTemplateElement: {
+declare const HTMLTemplateElement: {
   prototype: HTMLTemplateElement;
   new (): HTMLTemplateElement;
 };
@@ -15861,7 +15994,10 @@ interface HTMLTextAreaElement extends HTMLElement {
   ): void;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTextAreaElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTextAreaElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15871,7 +16007,10 @@ interface HTMLTextAreaElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTextAreaElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (
+      this: HTMLTextAreaElement,
+      ev: HTMLElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15881,7 +16020,7 @@ interface HTMLTextAreaElement extends HTMLElement {
   ): void;
 }

-declare var HTMLTextAreaElement: {
+declare const HTMLTextAreaElement: {
   prototype: HTMLTextAreaElement;
   new (): HTMLTextAreaElement;
 };
@@ -15896,7 +16035,7 @@ interface HTMLTimeElement extends HTMLElement {
   dateTime: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15906,7 +16045,7 @@ interface HTMLTimeElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15916,7 +16055,7 @@ interface HTMLTimeElement extends HTMLElement {
   ): void;
 }

-declare var HTMLTimeElement: {
+declare const HTMLTimeElement: {
   prototype: HTMLTimeElement;
   new (): HTMLTimeElement;
 };
@@ -15935,7 +16074,7 @@ interface HTMLTitleElement extends HTMLElement {
   text: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15945,7 +16084,7 @@ interface HTMLTitleElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -15955,7 +16094,7 @@ interface HTMLTitleElement extends HTMLElement {
   ): void;
 }

-declare var HTMLTitleElement: {
+declare const HTMLTitleElement: {
   prototype: HTMLTitleElement;
   new (): HTMLTitleElement;
 };
@@ -15981,7 +16120,7 @@ interface HTMLTrackElement extends HTMLElement {
   readonly ERROR: 3;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -15991,7 +16130,7 @@ interface HTMLTrackElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -16001,7 +16140,7 @@ interface HTMLTrackElement extends HTMLElement {
   ): void;
 }

-declare var HTMLTrackElement: {
+declare const HTMLTrackElement: {
   prototype: HTMLTrackElement;
   new (): HTMLTrackElement;
   readonly NONE: 0;
@@ -16022,7 +16161,7 @@ interface HTMLUListElement extends HTMLElement {
   type: string;
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -16032,7 +16171,7 @@ interface HTMLUListElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -16042,7 +16181,7 @@ interface HTMLUListElement extends HTMLElement {
   ): void;
 }

-declare var HTMLUListElement: {
+declare const HTMLUListElement: {
   prototype: HTMLUListElement;
   new (): HTMLUListElement;
 };
@@ -16055,7 +16194,7 @@ declare var HTMLUListElement: {
 interface HTMLUnknownElement extends HTMLElement {
   addEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -16065,7 +16204,7 @@ interface HTMLUnknownElement extends HTMLElement {
   ): void;
   removeEventListener<K extends keyof HTMLElementEventMap>(
     type: K,
-    listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => any,
+    listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -16075,7 +16214,7 @@ interface HTMLUnknownElement extends HTMLElement {
   ): void;
 }

-declare var HTMLUnknownElement: {
+declare const HTMLUnknownElement: {
   prototype: HTMLUnknownElement;
   new (): HTMLUnknownElement;
 };
@@ -16101,11 +16240,11 @@ interface HTMLVideoElement extends HTMLMediaElement {
   height: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/enterpictureinpicture_event) */
   onenterpictureinpicture:
-    | ((this: HTMLVideoElement, ev: PictureInPictureEvent) => any)
+    | ((this: HTMLVideoElement, ev: PictureInPictureEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/leavepictureinpicture_event) */
   onleavepictureinpicture:
-    | ((this: HTMLVideoElement, ev: PictureInPictureEvent) => any)
+    | ((this: HTMLVideoElement, ev: PictureInPictureEvent) => unknown)
     | null;
   /** Gets or sets the playsinline of the video element. for example, On iPhone, video elements will now be allowed to play inline, and will not automatically enter fullscreen mode when playback begins. */
   playsInline: boolean;
@@ -16143,7 +16282,10 @@ interface HTMLVideoElement extends HTMLMediaElement {
   requestVideoFrameCallback(callback: VideoFrameRequestCallback): number;
   addEventListener<K extends keyof HTMLVideoElementEventMap>(
     type: K,
-    listener: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any,
+    listener: (
+      this: HTMLVideoElement,
+      ev: HTMLVideoElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -16153,7 +16295,10 @@ interface HTMLVideoElement extends HTMLMediaElement {
   ): void;
   removeEventListener<K extends keyof HTMLVideoElementEventMap>(
     type: K,
-    listener: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any,
+    listener: (
+      this: HTMLVideoElement,
+      ev: HTMLVideoElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -16163,7 +16308,7 @@ interface HTMLVideoElement extends HTMLMediaElement {
   ): void;
 }

-declare var HTMLVideoElement: {
+declare const HTMLVideoElement: {
   prototype: HTMLVideoElement;
   new (): HTMLVideoElement;
 };
@@ -16188,7 +16333,7 @@ interface HashChangeEvent extends Event {
   readonly oldURL: string;
 }

-declare var HashChangeEvent: {
+declare const HashChangeEvent: {
   prototype: HashChangeEvent;
   new (type: string, eventInitDict?: HashChangeEventInit): HashChangeEvent;
 };
@@ -16213,11 +16358,11 @@ interface Headers {
   set(name: string, value: string): void;
   forEach(
     callbackfn: (value: string, key: string, parent: Headers) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }

-declare var Headers: {
+declare const Headers: {
   prototype: Headers;
   new (init?: HeadersInit): Headers;
 };
@@ -16234,13 +16379,13 @@ interface Highlight {
       key: AbstractRange,
       parent: Highlight,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }

-declare var Highlight: {
+declare const Highlight: {
   prototype: Highlight;
-  new (...initialRanges: AbstractRange[]): Highlight;
+  new (...initialRanges: readonly AbstractRange[]): Highlight;
 };

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HighlightRegistry) */
@@ -16251,11 +16396,11 @@ interface HighlightRegistry {
       key: string,
       parent: HighlightRegistry,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }

-declare var HighlightRegistry: {
+declare const HighlightRegistry: {
   prototype: HighlightRegistry;
   new (): HighlightRegistry;
 };
@@ -16271,7 +16416,7 @@ interface History {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/scrollRestoration) */
   scrollRestoration: ScrollRestoration;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/state) */
-  readonly state: any;
+  readonly state: unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/back) */
   back(): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/forward) */
@@ -16279,12 +16424,12 @@ interface History {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/go) */
   go(delta?: number): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/pushState) */
-  pushState(data: any, unused: string, url?: string | URL | null): void;
+  pushState(data: unknown, unused: string, url?: string | URL | null): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/replaceState) */
-  replaceState(data: any, unused: string, url?: string | URL | null): void;
+  replaceState(data: unknown, unused: string, url?: string | URL | null): void;
 }

-declare var History: {
+declare const History: {
   prototype: History;
   new (): History;
 };
@@ -16356,10 +16501,10 @@ interface IDBCursor {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/update)
    */
-  update(value: any): IDBRequest<IDBValidKey>;
+  update(value: unknown): IDBRequest<IDBValidKey>;
 }

-declare var IDBCursor: {
+declare const IDBCursor: {
   prototype: IDBCursor;
   new (): IDBCursor;
 };
@@ -16375,10 +16520,10 @@ interface IDBCursorWithValue extends IDBCursor {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursorWithValue/value)
    */
-  readonly value: any;
+  readonly value: unknown;
 }

-declare var IDBCursorWithValue: {
+declare const IDBCursorWithValue: {
   prototype: IDBCursorWithValue;
   new (): IDBCursorWithValue;
 };
@@ -16408,13 +16553,13 @@ interface IDBDatabase extends EventTarget {
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/objectStoreNames)
    */
   readonly objectStoreNames: DOMStringList;
-  onabort: ((this: IDBDatabase, ev: Event) => any) | null;
+  onabort: ((this: IDBDatabase, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/close_event) */
-  onclose: ((this: IDBDatabase, ev: Event) => any) | null;
-  onerror: ((this: IDBDatabase, ev: Event) => any) | null;
+  onclose: ((this: IDBDatabase, ev: Event) => unknown) | null;
+  onerror: ((this: IDBDatabase, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/versionchange_event) */
   onversionchange:
-    | ((this: IDBDatabase, ev: IDBVersionChangeEvent) => any)
+    | ((this: IDBDatabase, ev: IDBVersionChangeEvent) => unknown)
     | null;
   /**
    * Returns the version of the database.
@@ -16453,13 +16598,13 @@ interface IDBDatabase extends EventTarget {
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/transaction)
    */
   transaction(
-    storeNames: string | string[],
+    storeNames: string | readonly string[],
     mode?: IDBTransactionMode,
     options?: IDBTransactionOptions,
   ): IDBTransaction;
   addEventListener<K extends keyof IDBDatabaseEventMap>(
     type: K,
-    listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any,
+    listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -16469,7 +16614,7 @@ interface IDBDatabase extends EventTarget {
   ): void;
   removeEventListener<K extends keyof IDBDatabaseEventMap>(
     type: K,
-    listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any,
+    listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -16479,7 +16624,7 @@ interface IDBDatabase extends EventTarget {
   ): void;
 }

-declare var IDBDatabase: {
+declare const IDBDatabase: {
   prototype: IDBDatabase;
   new (): IDBDatabase;
 };
@@ -16497,7 +16642,7 @@ interface IDBFactory {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/cmp)
    */
-  cmp(first: any, second: any): number;
+  cmp(first: unknown, second: unknown): number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/databases) */
   databases(): Promise<IDBDatabaseInfo[]>;
   /**
@@ -16514,7 +16659,7 @@ interface IDBFactory {
   open(name: string, version?: number): IDBOpenDBRequest;
 }

-declare var IDBFactory: {
+declare const IDBFactory: {
   prototype: IDBFactory;
   new (): IDBFactory;
 };
@@ -16526,7 +16671,7 @@ declare var IDBFactory: {
  */
 interface IDBIndex {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/keyPath) */
-  readonly keyPath: string | string[];
+  readonly keyPath: string | readonly string[];
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/multiEntry) */
   readonly multiEntry: boolean;
   /**
@@ -16558,7 +16703,7 @@ interface IDBIndex {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/get)
    */
-  get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;
+  get(query: IDBValidKey | IDBKeyRange): IDBRequest<unknown>;
   /**
    * Retrieves the values of the records matching the given key or key range in query (up to count if given).
    *
@@ -16569,7 +16714,7 @@ interface IDBIndex {
   getAll(
     query?: IDBValidKey | IDBKeyRange | null,
     count?: number,
-  ): IDBRequest<any[]>;
+  ): IDBRequest<unknown[]>;
   /**
    * Retrieves the keys of records matching the given key or key range in query (up to count if given).
    *
@@ -16613,7 +16758,7 @@ interface IDBIndex {
   ): IDBRequest<IDBCursor | null>;
 }

-declare var IDBIndex: {
+declare const IDBIndex: {
   prototype: IDBIndex;
   new (): IDBIndex;
 };
@@ -16629,7 +16774,7 @@ interface IDBKeyRange {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/lower)
    */
-  readonly lower: any;
+  readonly lower: unknown;
   /**
    * Returns true if the lower open flag is set, and false otherwise.
    *
@@ -16641,7 +16786,7 @@ interface IDBKeyRange {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/upper)
    */
-  readonly upper: any;
+  readonly upper: unknown;
   /**
    * Returns true if the upper open flag is set, and false otherwise.
    *
@@ -16653,10 +16798,10 @@ interface IDBKeyRange {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/includes)
    */
-  includes(key: any): boolean;
+  includes(key: unknown): boolean;
 }

-declare var IDBKeyRange: {
+declare const IDBKeyRange: {
   prototype: IDBKeyRange;
   new (): IDBKeyRange;
   /**
@@ -16665,8 +16810,8 @@ declare var IDBKeyRange: {
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/bound_static)
    */
   bound(
-    lower: any,
-    upper: any,
+    lower: unknown,
+    upper: unknown,
     lowerOpen?: boolean,
     upperOpen?: boolean,
   ): IDBKeyRange;
@@ -16675,19 +16820,19 @@ declare var IDBKeyRange: {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/lowerBound_static)
    */
-  lowerBound(lower: any, open?: boolean): IDBKeyRange;
+  lowerBound(lower: unknown, open?: boolean): IDBKeyRange;
   /**
    * Returns a new IDBKeyRange spanning only key.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/only_static)
    */
-  only(value: any): IDBKeyRange;
+  only(value: unknown): IDBKeyRange;
   /**
    * Returns a new IDBKeyRange with no lower bound and ending at key. If open is true, key is not included in the range.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/upperBound_static)
    */
-  upperBound(upper: any, open?: boolean): IDBKeyRange;
+  upperBound(upper: unknown, open?: boolean): IDBKeyRange;
 };

 /**
@@ -16713,7 +16858,7 @@ interface IDBObjectStore {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/keyPath)
    */
-  readonly keyPath: string | string[];
+  readonly keyPath: string | readonly string[];
   /**
    * Returns the name of the store.
    *
@@ -16737,7 +16882,7 @@ interface IDBObjectStore {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/add)
    */
-  add(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;
+  add(value: unknown, key?: IDBValidKey): IDBRequest<IDBValidKey>;
   /**
    * Deletes all records in store.
    *
@@ -16763,7 +16908,7 @@ interface IDBObjectStore {
    */
   createIndex(
     name: string,
-    keyPath: string | string[],
+    keyPath: string | readonly string[],
     options?: IDBIndexParameters,
   ): IDBIndex;
   /**
@@ -16789,7 +16934,7 @@ interface IDBObjectStore {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/get)
    */
-  get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;
+  get(query: IDBValidKey | IDBKeyRange): IDBRequest<unknown>;
   /**
    * Retrieves the values of the records matching the given key or key range in query (up to count if given).
    *
@@ -16800,7 +16945,7 @@ interface IDBObjectStore {
   getAll(
     query?: IDBValidKey | IDBKeyRange | null,
     count?: number,
-  ): IDBRequest<any[]>;
+  ): IDBRequest<unknown[]>;
   /**
    * Retrieves the keys of records matching the given key or key range in query (up to count if given).
    *
@@ -16855,10 +17000,10 @@ interface IDBObjectStore {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/put)
    */
-  put(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;
+  put(value: unknown, key?: IDBValidKey): IDBRequest<IDBValidKey>;
 }

-declare var IDBObjectStore: {
+declare const IDBObjectStore: {
   prototype: IDBObjectStore;
   new (): IDBObjectStore;
 };
@@ -16876,15 +17021,18 @@ interface IDBOpenDBRequestEventMap extends IDBRequestEventMap {
 interface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBOpenDBRequest/blocked_event) */
   onblocked:
-    | ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any)
+    | ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBOpenDBRequest/upgradeneeded_event) */
   onupgradeneeded:
-    | ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any)
+    | ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => unknown)
     | null;
   addEventListener<K extends keyof IDBOpenDBRequestEventMap>(
     type: K,
-    listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any,
+    listener: (
+      this: IDBOpenDBRequest,
+      ev: IDBOpenDBRequestEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -16894,7 +17042,10 @@ interface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {
   ): void;
   removeEventListener<K extends keyof IDBOpenDBRequestEventMap>(
     type: K,
-    listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any,
+    listener: (
+      this: IDBOpenDBRequest,
+      ev: IDBOpenDBRequestEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -16904,7 +17055,7 @@ interface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {
   ): void;
 }

-declare var IDBOpenDBRequest: {
+declare const IDBOpenDBRequest: {
   prototype: IDBOpenDBRequest;
   new (): IDBOpenDBRequest;
 };
@@ -16919,7 +17070,7 @@ interface IDBRequestEventMap {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest)
  */
-interface IDBRequest<T = any> extends EventTarget {
+interface IDBRequest<T = unknown> extends EventTarget {
   /**
    * When a request is completed, returns the error (a DOMException), or null if the request succeeded. Throws a "InvalidStateError" DOMException if the request is still pending.
    *
@@ -16927,9 +17078,9 @@ interface IDBRequest<T = any> extends EventTarget {
    */
   readonly error: DOMException | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/error_event) */
-  onerror: ((this: IDBRequest<T>, ev: Event) => any) | null;
+  onerror: ((this: IDBRequest<T>, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/success_event) */
-  onsuccess: ((this: IDBRequest<T>, ev: Event) => any) | null;
+  onsuccess: ((this: IDBRequest<T>, ev: Event) => unknown) | null;
   /**
    * Returns "pending" until a request is complete, then returns "done".
    *
@@ -16956,7 +17107,7 @@ interface IDBRequest<T = any> extends EventTarget {
   readonly transaction: IDBTransaction | null;
   addEventListener<K extends keyof IDBRequestEventMap>(
     type: K,
-    listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any,
+    listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -16966,7 +17117,7 @@ interface IDBRequest<T = any> extends EventTarget {
   ): void;
   removeEventListener<K extends keyof IDBRequestEventMap>(
     type: K,
-    listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any,
+    listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -16976,7 +17127,7 @@ interface IDBRequest<T = any> extends EventTarget {
   ): void;
 }

-declare var IDBRequest: {
+declare const IDBRequest: {
   prototype: IDBRequest;
   new (): IDBRequest;
 };
@@ -17016,11 +17167,11 @@ interface IDBTransaction extends EventTarget {
    */
   readonly objectStoreNames: DOMStringList;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/abort_event) */
-  onabort: ((this: IDBTransaction, ev: Event) => any) | null;
+  onabort: ((this: IDBTransaction, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/complete_event) */
-  oncomplete: ((this: IDBTransaction, ev: Event) => any) | null;
+  oncomplete: ((this: IDBTransaction, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/error_event) */
-  onerror: ((this: IDBTransaction, ev: Event) => any) | null;
+  onerror: ((this: IDBTransaction, ev: Event) => unknown) | null;
   /**
    * Aborts the transaction. All pending requests will fail with a "AbortError" DOMException and all changes made to the database will be reverted.
    *
@@ -17037,7 +17188,7 @@ interface IDBTransaction extends EventTarget {
   objectStore(name: string): IDBObjectStore;
   addEventListener<K extends keyof IDBTransactionEventMap>(
     type: K,
-    listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any,
+    listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17047,7 +17198,7 @@ interface IDBTransaction extends EventTarget {
   ): void;
   removeEventListener<K extends keyof IDBTransactionEventMap>(
     type: K,
-    listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any,
+    listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17057,7 +17208,7 @@ interface IDBTransaction extends EventTarget {
   ): void;
 }

-declare var IDBTransaction: {
+declare const IDBTransaction: {
   prototype: IDBTransaction;
   new (): IDBTransaction;
 };
@@ -17074,7 +17225,7 @@ interface IDBVersionChangeEvent extends Event {
   readonly oldVersion: number;
 }

-declare var IDBVersionChangeEvent: {
+declare const IDBVersionChangeEvent: {
   prototype: IDBVersionChangeEvent;
   new (
     type: string,
@@ -17096,7 +17247,7 @@ interface IIRFilterNode extends AudioNode {
   ): void;
 }

-declare var IIRFilterNode: {
+declare const IIRFilterNode: {
   prototype: IIRFilterNode;
   new (context: BaseAudioContext, options: IIRFilterOptions): IIRFilterNode;
 };
@@ -17109,7 +17260,7 @@ interface IdleDeadline {
   timeRemaining(): DOMHighResTimeStamp;
 }

-declare var IdleDeadline: {
+declare const IdleDeadline: {
   prototype: IdleDeadline;
   new (): IdleDeadline;
 };
@@ -17136,7 +17287,7 @@ interface ImageBitmap {
   close(): void;
 }

-declare var ImageBitmap: {
+declare const ImageBitmap: {
   prototype: ImageBitmap;
   new (): ImageBitmap;
 };
@@ -17157,7 +17308,7 @@ interface ImageBitmapRenderingContext {
   transferFromImageBitmap(bitmap: ImageBitmap | null): void;
 }

-declare var ImageBitmapRenderingContext: {
+declare const ImageBitmapRenderingContext: {
   prototype: ImageBitmapRenderingContext;
   new (): ImageBitmapRenderingContext;
 };
@@ -17190,7 +17341,7 @@ interface ImageData {
   readonly width: number;
 }

-declare var ImageData: {
+declare const ImageData: {
   prototype: ImageData;
   new (sw: number, sh: number, settings?: ImageDataSettings): ImageData;
   new (
@@ -17216,7 +17367,7 @@ interface InputDeviceInfo extends MediaDeviceInfo {
   getCapabilities(): MediaTrackCapabilities;
 }

-declare var InputDeviceInfo: {
+declare const InputDeviceInfo: {
   prototype: InputDeviceInfo;
   new (): InputDeviceInfo;
 };
@@ -17235,7 +17386,7 @@ interface InputEvent extends UIEvent {
   getTargetRanges(): StaticRange[];
 }

-declare var InputEvent: {
+declare const InputEvent: {
   prototype: InputEvent;
   new (type: string, eventInitDict?: InputEventInit): InputEvent;
 };
@@ -17262,7 +17413,7 @@ interface IntersectionObserver {
   unobserve(target: Element): void;
 }

-declare var IntersectionObserver: {
+declare const IntersectionObserver: {
   prototype: IntersectionObserver;
   new (
     callback: IntersectionObserverCallback,
@@ -17292,7 +17443,7 @@ interface IntersectionObserverEntry {
   readonly time: DOMHighResTimeStamp;
 }

-declare var IntersectionObserverEntry: {
+declare const IntersectionObserverEntry: {
   prototype: IntersectionObserverEntry;
   new (): IntersectionObserverEntry;
 };
@@ -17363,7 +17514,7 @@ interface KeyboardEvent extends UIEvent {
   readonly DOM_KEY_LOCATION_NUMPAD: 0x03;
 }

-declare var KeyboardEvent: {
+declare const KeyboardEvent: {
   prototype: KeyboardEvent;
   new (type: string, eventInitDict?: KeyboardEventInit): KeyboardEvent;
   readonly DOM_KEY_LOCATION_STANDARD: 0x00;
@@ -17385,14 +17536,16 @@ interface KeyframeEffect extends AnimationEffect {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyframeEffect/getKeyframes) */
   getKeyframes(): ComputedKeyframe[];
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyframeEffect/setKeyframes) */
-  setKeyframes(keyframes: Keyframe[] | PropertyIndexedKeyframes | null): void;
+  setKeyframes(
+    keyframes: readonly Keyframe[] | PropertyIndexedKeyframes | null,
+  ): void;
 }

-declare var KeyframeEffect: {
+declare const KeyframeEffect: {
   prototype: KeyframeEffect;
   new (
     target: Element | null,
-    keyframes: Keyframe[] | PropertyIndexedKeyframes | null,
+    keyframes: readonly Keyframe[] | PropertyIndexedKeyframes | null,
     options?: number | KeyframeEffectOptions,
   ): KeyframeEffect;
   new (source: KeyframeEffect): KeyframeEffect;
@@ -17413,10 +17566,10 @@ interface LargestContentfulPaint extends PerformanceEntry {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint/url) */
   readonly url: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
 }

-declare var LargestContentfulPaint: {
+declare const LargestContentfulPaint: {
   prototype: LargestContentfulPaint;
   new (): LargestContentfulPaint;
 };
@@ -17529,7 +17682,7 @@ interface Location {
   replace(url: string | URL): void;
 }

-declare var Location: {
+declare const Location: {
   prototype: Location;
   new (): Location;
 };
@@ -17546,7 +17699,7 @@ interface Lock {
   readonly name: string;
 }

-declare var Lock: {
+declare const Lock: {
   prototype: Lock;
   new (): Lock;
 };
@@ -17560,15 +17713,15 @@ interface LockManager {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LockManager/query) */
   query(): Promise<LockManagerSnapshot>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LockManager/request) */
-  request(name: string, callback: LockGrantedCallback): Promise<any>;
+  request(name: string, callback: LockGrantedCallback): Promise<unknown>;
   request(
     name: string,
     options: LockOptions,
     callback: LockGrantedCallback,
-  ): Promise<any>;
+  ): Promise<unknown>;
 }

-declare var LockManager: {
+declare const LockManager: {
   prototype: LockManager;
   new (): LockManager;
 };
@@ -17586,14 +17739,16 @@ interface MIDIAccess extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIAccess/inputs) */
   readonly inputs: MIDIInputMap;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIAccess/statechange_event) */
-  onstatechange: ((this: MIDIAccess, ev: MIDIConnectionEvent) => any) | null;
+  onstatechange:
+    | ((this: MIDIAccess, ev: MIDIConnectionEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIAccess/outputs) */
   readonly outputs: MIDIOutputMap;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIAccess/sysexEnabled) */
   readonly sysexEnabled: boolean;
   addEventListener<K extends keyof MIDIAccessEventMap>(
     type: K,
-    listener: (this: MIDIAccess, ev: MIDIAccessEventMap[K]) => any,
+    listener: (this: MIDIAccess, ev: MIDIAccessEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17603,7 +17758,7 @@ interface MIDIAccess extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MIDIAccessEventMap>(
     type: K,
-    listener: (this: MIDIAccess, ev: MIDIAccessEventMap[K]) => any,
+    listener: (this: MIDIAccess, ev: MIDIAccessEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17613,7 +17768,7 @@ interface MIDIAccess extends EventTarget {
   ): void;
 }

-declare var MIDIAccess: {
+declare const MIDIAccess: {
   prototype: MIDIAccess;
   new (): MIDIAccess;
 };
@@ -17628,7 +17783,7 @@ interface MIDIConnectionEvent extends Event {
   readonly port: MIDIPort | null;
 }

-declare var MIDIConnectionEvent: {
+declare const MIDIConnectionEvent: {
   prototype: MIDIConnectionEvent;
   new (
     type: string,
@@ -17647,10 +17802,10 @@ interface MIDIInputEventMap extends MIDIPortEventMap {
  */
 interface MIDIInput extends MIDIPort {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIInput/midimessage_event) */
-  onmidimessage: ((this: MIDIInput, ev: MIDIMessageEvent) => any) | null;
+  onmidimessage: ((this: MIDIInput, ev: MIDIMessageEvent) => unknown) | null;
   addEventListener<K extends keyof MIDIInputEventMap>(
     type: K,
-    listener: (this: MIDIInput, ev: MIDIInputEventMap[K]) => any,
+    listener: (this: MIDIInput, ev: MIDIInputEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17660,7 +17815,7 @@ interface MIDIInput extends MIDIPort {
   ): void;
   removeEventListener<K extends keyof MIDIInputEventMap>(
     type: K,
-    listener: (this: MIDIInput, ev: MIDIInputEventMap[K]) => any,
+    listener: (this: MIDIInput, ev: MIDIInputEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17670,7 +17825,7 @@ interface MIDIInput extends MIDIPort {
   ): void;
 }

-declare var MIDIInput: {
+declare const MIDIInput: {
   prototype: MIDIInput;
   new (): MIDIInput;
 };
@@ -17683,11 +17838,11 @@ declare var MIDIInput: {
 interface MIDIInputMap {
   forEach(
     callbackfn: (value: MIDIInput, key: string, parent: MIDIInputMap) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }

-declare var MIDIInputMap: {
+declare const MIDIInputMap: {
   prototype: MIDIInputMap;
   new (): MIDIInputMap;
 };
@@ -17702,7 +17857,7 @@ interface MIDIMessageEvent extends Event {
   readonly data: Uint8Array | null;
 }

-declare var MIDIMessageEvent: {
+declare const MIDIMessageEvent: {
   prototype: MIDIMessageEvent;
   new (type: string, eventInitDict?: MIDIMessageEventInit): MIDIMessageEvent;
 };
@@ -17714,10 +17869,10 @@ declare var MIDIMessageEvent: {
  */
 interface MIDIOutput extends MIDIPort {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIOutput/send) */
-  send(data: number[], timestamp?: DOMHighResTimeStamp): void;
+  send(data: readonly number[], timestamp?: DOMHighResTimeStamp): void;
   addEventListener<K extends keyof MIDIPortEventMap>(
     type: K,
-    listener: (this: MIDIOutput, ev: MIDIPortEventMap[K]) => any,
+    listener: (this: MIDIOutput, ev: MIDIPortEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17727,7 +17882,7 @@ interface MIDIOutput extends MIDIPort {
   ): void;
   removeEventListener<K extends keyof MIDIPortEventMap>(
     type: K,
-    listener: (this: MIDIOutput, ev: MIDIPortEventMap[K]) => any,
+    listener: (this: MIDIOutput, ev: MIDIPortEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17737,7 +17892,7 @@ interface MIDIOutput extends MIDIPort {
   ): void;
 }

-declare var MIDIOutput: {
+declare const MIDIOutput: {
   prototype: MIDIOutput;
   new (): MIDIOutput;
 };
@@ -17750,11 +17905,11 @@ declare var MIDIOutput: {
 interface MIDIOutputMap {
   forEach(
     callbackfn: (value: MIDIOutput, key: string, parent: MIDIOutputMap) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }

-declare var MIDIOutputMap: {
+declare const MIDIOutputMap: {
   prototype: MIDIOutputMap;
   new (): MIDIOutputMap;
 };
@@ -17778,7 +17933,7 @@ interface MIDIPort extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/name) */
   readonly name: string | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/statechange_event) */
-  onstatechange: ((this: MIDIPort, ev: MIDIConnectionEvent) => any) | null;
+  onstatechange: ((this: MIDIPort, ev: MIDIConnectionEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/state) */
   readonly state: MIDIPortDeviceState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/type) */
@@ -17791,7 +17946,7 @@ interface MIDIPort extends EventTarget {
   open(): Promise<MIDIPort>;
   addEventListener<K extends keyof MIDIPortEventMap>(
     type: K,
-    listener: (this: MIDIPort, ev: MIDIPortEventMap[K]) => any,
+    listener: (this: MIDIPort, ev: MIDIPortEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17801,7 +17956,7 @@ interface MIDIPort extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MIDIPortEventMap>(
     type: K,
-    listener: (this: MIDIPort, ev: MIDIPortEventMap[K]) => any,
+    listener: (this: MIDIPort, ev: MIDIPortEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17811,7 +17966,7 @@ interface MIDIPort extends EventTarget {
   ): void;
 }

-declare var MIDIPort: {
+declare const MIDIPort: {
   prototype: MIDIPort;
   new (): MIDIPort;
 };
@@ -17828,7 +17983,7 @@ interface MathMLElement
     HTMLOrSVGElement {
   addEventListener<K extends keyof MathMLElementEventMap>(
     type: K,
-    listener: (this: MathMLElement, ev: MathMLElementEventMap[K]) => any,
+    listener: (this: MathMLElement, ev: MathMLElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17838,7 +17993,7 @@ interface MathMLElement
   ): void;
   removeEventListener<K extends keyof MathMLElementEventMap>(
     type: K,
-    listener: (this: MathMLElement, ev: MathMLElementEventMap[K]) => any,
+    listener: (this: MathMLElement, ev: MathMLElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17848,7 +18003,7 @@ interface MathMLElement
   ): void;
 }

-declare var MathMLElement: {
+declare const MathMLElement: {
   prototype: MathMLElement;
   new (): MathMLElement;
 };
@@ -17865,7 +18020,7 @@ interface MediaCapabilities {
   ): Promise<MediaCapabilitiesEncodingInfo>;
 }

-declare var MediaCapabilities: {
+declare const MediaCapabilities: {
   prototype: MediaCapabilities;
   new (): MediaCapabilities;
 };
@@ -17886,10 +18041,10 @@ interface MediaDeviceInfo {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDeviceInfo/label) */
   readonly label: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDeviceInfo/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
 }

-declare var MediaDeviceInfo: {
+declare const MediaDeviceInfo: {
   prototype: MediaDeviceInfo;
   new (): MediaDeviceInfo;
 };
@@ -17906,7 +18061,7 @@ interface MediaDevicesEventMap {
  */
 interface MediaDevices extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDevices/devicechange_event) */
-  ondevicechange: ((this: MediaDevices, ev: Event) => any) | null;
+  ondevicechange: ((this: MediaDevices, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDevices/enumerateDevices) */
   enumerateDevices(): Promise<MediaDeviceInfo[]>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDevices/getDisplayMedia) */
@@ -17917,7 +18072,7 @@ interface MediaDevices extends EventTarget {
   getUserMedia(constraints?: MediaStreamConstraints): Promise<MediaStream>;
   addEventListener<K extends keyof MediaDevicesEventMap>(
     type: K,
-    listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => any,
+    listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -17927,7 +18082,7 @@ interface MediaDevices extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MediaDevicesEventMap>(
     type: K,
-    listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => any,
+    listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -17937,7 +18092,7 @@ interface MediaDevices extends EventTarget {
   ): void;
 }

-declare var MediaDevices: {
+declare const MediaDevices: {
   prototype: MediaDevices;
   new (): MediaDevices;
 };
@@ -17952,7 +18107,7 @@ interface MediaElementAudioSourceNode extends AudioNode {
   readonly mediaElement: HTMLMediaElement;
 }

-declare var MediaElementAudioSourceNode: {
+declare const MediaElementAudioSourceNode: {
   prototype: MediaElementAudioSourceNode;
   new (
     context: AudioContext,
@@ -17968,7 +18123,7 @@ interface MediaEncryptedEvent extends Event {
   readonly initDataType: string;
 }

-declare var MediaEncryptedEvent: {
+declare const MediaEncryptedEvent: {
   prototype: MediaEncryptedEvent;
   new (
     type: string,
@@ -17992,7 +18147,7 @@ interface MediaError {
   readonly MEDIA_ERR_SRC_NOT_SUPPORTED: 4;
 }

-declare var MediaError: {
+declare const MediaError: {
   prototype: MediaError;
   new (): MediaError;
   readonly MEDIA_ERR_ABORTED: 1;
@@ -18014,7 +18169,7 @@ interface MediaKeyMessageEvent extends Event {
   readonly messageType: MediaKeyMessageType;
 }

-declare var MediaKeyMessageEvent: {
+declare const MediaKeyMessageEvent: {
   prototype: MediaKeyMessageEvent;
   new (
     type: string,
@@ -18041,9 +18196,11 @@ interface MediaKeySession extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/keyStatuses) */
   readonly keyStatuses: MediaKeyStatusMap;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/keystatuseschange_event) */
-  onkeystatuseschange: ((this: MediaKeySession, ev: Event) => any) | null;
+  onkeystatuseschange: ((this: MediaKeySession, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/message_event) */
-  onmessage: ((this: MediaKeySession, ev: MediaKeyMessageEvent) => any) | null;
+  onmessage:
+    | ((this: MediaKeySession, ev: MediaKeyMessageEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/sessionId) */
   readonly sessionId: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/close) */
@@ -18058,7 +18215,10 @@ interface MediaKeySession extends EventTarget {
   update(response: BufferSource): Promise<void>;
   addEventListener<K extends keyof MediaKeySessionEventMap>(
     type: K,
-    listener: (this: MediaKeySession, ev: MediaKeySessionEventMap[K]) => any,
+    listener: (
+      this: MediaKeySession,
+      ev: MediaKeySessionEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18068,7 +18228,10 @@ interface MediaKeySession extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MediaKeySessionEventMap>(
     type: K,
-    listener: (this: MediaKeySession, ev: MediaKeySessionEventMap[K]) => any,
+    listener: (
+      this: MediaKeySession,
+      ev: MediaKeySessionEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18078,7 +18241,7 @@ interface MediaKeySession extends EventTarget {
   ): void;
 }

-declare var MediaKeySession: {
+declare const MediaKeySession: {
   prototype: MediaKeySession;
   new (): MediaKeySession;
 };
@@ -18102,11 +18265,11 @@ interface MediaKeyStatusMap {
       key: BufferSource,
       parent: MediaKeyStatusMap,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }

-declare var MediaKeyStatusMap: {
+declare const MediaKeyStatusMap: {
   prototype: MediaKeyStatusMap;
   new (): MediaKeyStatusMap;
 };
@@ -18126,7 +18289,7 @@ interface MediaKeySystemAccess {
   getConfiguration(): MediaKeySystemConfiguration;
 }

-declare var MediaKeySystemAccess: {
+declare const MediaKeySystemAccess: {
   prototype: MediaKeySystemAccess;
   new (): MediaKeySystemAccess;
 };
@@ -18146,7 +18309,7 @@ interface MediaKeys {
   setServerCertificate(serverCertificate: BufferSource): Promise<boolean>;
 }

-declare var MediaKeys: {
+declare const MediaKeys: {
   prototype: MediaKeys;
   new (): MediaKeys;
 };
@@ -18167,7 +18330,7 @@ interface MediaList {
   [index: number]: string;
 }

-declare var MediaList: {
+declare const MediaList: {
   prototype: MediaList;
   new (): MediaList;
 };
@@ -18184,7 +18347,7 @@ interface MediaMetadata {
   title: string;
 }

-declare var MediaMetadata: {
+declare const MediaMetadata: {
   prototype: MediaMetadata;
   new (init?: MediaMetadataInit): MediaMetadata;
 };
@@ -18204,14 +18367,16 @@ interface MediaQueryList extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryList/media) */
   readonly media: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryList/change_event) */
-  onchange: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;
+  onchange: ((this: MediaQueryList, ev: MediaQueryListEvent) => unknown) | null;
   /**
    * @deprecated
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryList/addListener)
    */
   addListener(
-    callback: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null,
+    callback:
+      | ((this: MediaQueryList, ev: MediaQueryListEvent) => unknown)
+      | null,
   ): void;
   /**
    * @deprecated
@@ -18219,11 +18384,13 @@ interface MediaQueryList extends EventTarget {
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryList/removeListener)
    */
   removeListener(
-    callback: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null,
+    callback:
+      | ((this: MediaQueryList, ev: MediaQueryListEvent) => unknown)
+      | null,
   ): void;
   addEventListener<K extends keyof MediaQueryListEventMap>(
     type: K,
-    listener: (this: MediaQueryList, ev: MediaQueryListEventMap[K]) => any,
+    listener: (this: MediaQueryList, ev: MediaQueryListEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18233,7 +18400,7 @@ interface MediaQueryList extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MediaQueryListEventMap>(
     type: K,
-    listener: (this: MediaQueryList, ev: MediaQueryListEventMap[K]) => any,
+    listener: (this: MediaQueryList, ev: MediaQueryListEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18243,7 +18410,7 @@ interface MediaQueryList extends EventTarget {
   ): void;
 }

-declare var MediaQueryList: {
+declare const MediaQueryList: {
   prototype: MediaQueryList;
   new (): MediaQueryList;
 };
@@ -18256,7 +18423,7 @@ interface MediaQueryListEvent extends Event {
   readonly media: string;
 }

-declare var MediaQueryListEvent: {
+declare const MediaQueryListEvent: {
   prototype: MediaQueryListEvent;
   new (
     type: string,
@@ -18280,17 +18447,17 @@ interface MediaRecorder extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/mimeType) */
   readonly mimeType: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/dataavailable_event) */
-  ondataavailable: ((this: MediaRecorder, ev: BlobEvent) => any) | null;
+  ondataavailable: ((this: MediaRecorder, ev: BlobEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/error_event) */
-  onerror: ((this: MediaRecorder, ev: ErrorEvent) => any) | null;
+  onerror: ((this: MediaRecorder, ev: ErrorEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/pause_event) */
-  onpause: ((this: MediaRecorder, ev: Event) => any) | null;
+  onpause: ((this: MediaRecorder, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/resume_event) */
-  onresume: ((this: MediaRecorder, ev: Event) => any) | null;
+  onresume: ((this: MediaRecorder, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/start_event) */
-  onstart: ((this: MediaRecorder, ev: Event) => any) | null;
+  onstart: ((this: MediaRecorder, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/stop_event) */
-  onstop: ((this: MediaRecorder, ev: Event) => any) | null;
+  onstop: ((this: MediaRecorder, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/state) */
   readonly state: RecordingState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/stream) */
@@ -18309,7 +18476,7 @@ interface MediaRecorder extends EventTarget {
   stop(): void;
   addEventListener<K extends keyof MediaRecorderEventMap>(
     type: K,
-    listener: (this: MediaRecorder, ev: MediaRecorderEventMap[K]) => any,
+    listener: (this: MediaRecorder, ev: MediaRecorderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18319,7 +18486,7 @@ interface MediaRecorder extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MediaRecorderEventMap>(
     type: K,
-    listener: (this: MediaRecorder, ev: MediaRecorderEventMap[K]) => any,
+    listener: (this: MediaRecorder, ev: MediaRecorderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18329,7 +18496,7 @@ interface MediaRecorder extends EventTarget {
   ): void;
 }

-declare var MediaRecorder: {
+declare const MediaRecorder: {
   prototype: MediaRecorder;
   new (stream: MediaStream, options?: MediaRecorderOptions): MediaRecorder;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/isTypeSupported_static) */
@@ -18351,7 +18518,7 @@ interface MediaSession {
   setPositionState(state?: MediaPositionState): void;
 }

-declare var MediaSession: {
+declare const MediaSession: {
   prototype: MediaSession;
   new (): MediaSession;
 };
@@ -18372,9 +18539,9 @@ interface MediaSource extends EventTarget {
   readonly activeSourceBuffers: SourceBufferList;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/duration) */
   duration: number;
-  onsourceclose: ((this: MediaSource, ev: Event) => any) | null;
-  onsourceended: ((this: MediaSource, ev: Event) => any) | null;
-  onsourceopen: ((this: MediaSource, ev: Event) => any) | null;
+  onsourceclose: ((this: MediaSource, ev: Event) => unknown) | null;
+  onsourceended: ((this: MediaSource, ev: Event) => unknown) | null;
+  onsourceopen: ((this: MediaSource, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/readyState) */
   readonly readyState: ReadyState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/sourceBuffers) */
@@ -18391,7 +18558,7 @@ interface MediaSource extends EventTarget {
   setLiveSeekableRange(start: number, end: number): void;
   addEventListener<K extends keyof MediaSourceEventMap>(
     type: K,
-    listener: (this: MediaSource, ev: MediaSourceEventMap[K]) => any,
+    listener: (this: MediaSource, ev: MediaSourceEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18401,7 +18568,7 @@ interface MediaSource extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MediaSourceEventMap>(
     type: K,
-    listener: (this: MediaSource, ev: MediaSourceEventMap[K]) => any,
+    listener: (this: MediaSource, ev: MediaSourceEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18411,7 +18578,7 @@ interface MediaSource extends EventTarget {
   ): void;
 }

-declare var MediaSource: {
+declare const MediaSource: {
   prototype: MediaSource;
   new (): MediaSource;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/canConstructInDedicatedWorker_static) */
@@ -18423,7 +18590,7 @@ declare var MediaSource: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSourceHandle) */
 interface MediaSourceHandle {}

-declare var MediaSourceHandle: {
+declare const MediaSourceHandle: {
   prototype: MediaSourceHandle;
   new (): MediaSourceHandle;
 };
@@ -18444,9 +18611,13 @@ interface MediaStream extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/id) */
   readonly id: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/addtrack_event) */
-  onaddtrack: ((this: MediaStream, ev: MediaStreamTrackEvent) => any) | null;
+  onaddtrack:
+    | ((this: MediaStream, ev: MediaStreamTrackEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/removetrack_event) */
-  onremovetrack: ((this: MediaStream, ev: MediaStreamTrackEvent) => any) | null;
+  onremovetrack:
+    | ((this: MediaStream, ev: MediaStreamTrackEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/addTrack) */
   addTrack(track: MediaStreamTrack): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/clone) */
@@ -18463,7 +18634,7 @@ interface MediaStream extends EventTarget {
   removeTrack(track: MediaStreamTrack): void;
   addEventListener<K extends keyof MediaStreamEventMap>(
     type: K,
-    listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => any,
+    listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18473,7 +18644,7 @@ interface MediaStream extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MediaStreamEventMap>(
     type: K,
-    listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => any,
+    listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18483,11 +18654,11 @@ interface MediaStream extends EventTarget {
   ): void;
 }

-declare var MediaStream: {
+declare const MediaStream: {
   prototype: MediaStream;
   new (): MediaStream;
   new (stream: MediaStream): MediaStream;
-  new (tracks: MediaStreamTrack[]): MediaStream;
+  new (tracks: readonly MediaStreamTrack[]): MediaStream;
 };

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamAudioDestinationNode) */
@@ -18496,7 +18667,7 @@ interface MediaStreamAudioDestinationNode extends AudioNode {
   readonly stream: MediaStream;
 }

-declare var MediaStreamAudioDestinationNode: {
+declare const MediaStreamAudioDestinationNode: {
   prototype: MediaStreamAudioDestinationNode;
   new (
     context: AudioContext,
@@ -18514,7 +18685,7 @@ interface MediaStreamAudioSourceNode extends AudioNode {
   readonly mediaStream: MediaStream;
 }

-declare var MediaStreamAudioSourceNode: {
+declare const MediaStreamAudioSourceNode: {
   prototype: MediaStreamAudioSourceNode;
   new (
     context: AudioContext,
@@ -18547,11 +18718,11 @@ interface MediaStreamTrack extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/muted) */
   readonly muted: boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/ended_event) */
-  onended: ((this: MediaStreamTrack, ev: Event) => any) | null;
+  onended: ((this: MediaStreamTrack, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/mute_event) */
-  onmute: ((this: MediaStreamTrack, ev: Event) => any) | null;
+  onmute: ((this: MediaStreamTrack, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/unmute_event) */
-  onunmute: ((this: MediaStreamTrack, ev: Event) => any) | null;
+  onunmute: ((this: MediaStreamTrack, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/readyState) */
   readonly readyState: MediaStreamTrackState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/applyConstraints) */
@@ -18568,7 +18739,10 @@ interface MediaStreamTrack extends EventTarget {
   stop(): void;
   addEventListener<K extends keyof MediaStreamTrackEventMap>(
     type: K,
-    listener: (this: MediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any,
+    listener: (
+      this: MediaStreamTrack,
+      ev: MediaStreamTrackEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18578,7 +18752,10 @@ interface MediaStreamTrack extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MediaStreamTrackEventMap>(
     type: K,
-    listener: (this: MediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any,
+    listener: (
+      this: MediaStreamTrack,
+      ev: MediaStreamTrackEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18588,7 +18765,7 @@ interface MediaStreamTrack extends EventTarget {
   ): void;
 }

-declare var MediaStreamTrack: {
+declare const MediaStreamTrack: {
   prototype: MediaStreamTrack;
   new (): MediaStreamTrack;
 };
@@ -18603,7 +18780,7 @@ interface MediaStreamTrackEvent extends Event {
   readonly track: MediaStreamTrack;
 }

-declare var MediaStreamTrackEvent: {
+declare const MediaStreamTrackEvent: {
   prototype: MediaStreamTrackEvent;
   new (
     type: string,
@@ -18631,7 +18808,7 @@ interface MessageChannel {
   readonly port2: MessagePort;
 }

-declare var MessageChannel: {
+declare const MessageChannel: {
   prototype: MessageChannel;
   new (): MessageChannel;
 };
@@ -18641,7 +18818,7 @@ declare var MessageChannel: {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent)
  */
-interface MessageEvent<T = any> extends Event {
+interface MessageEvent<T = unknown> extends Event {
   /**
    * Returns the data of the message.
    *
@@ -18677,15 +18854,15 @@ interface MessageEvent<T = any> extends Event {
     type: string,
     bubbles?: boolean,
     cancelable?: boolean,
-    data?: any,
+    data?: unknown,
     origin?: string,
     lastEventId?: string,
     source?: MessageEventSource | null,
-    ports?: MessagePort[],
+    ports?: readonly MessagePort[],
   ): void;
 }

-declare var MessageEvent: {
+declare const MessageEvent: {
   prototype: MessageEvent;
   new <T>(type: string, eventInitDict?: MessageEventInit<T>): MessageEvent<T>;
 };
@@ -18702,9 +18879,9 @@ interface MessagePortEventMap {
  */
 interface MessagePort extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/message_event) */
-  onmessage: ((this: MessagePort, ev: MessageEvent) => any) | null;
+  onmessage: ((this: MessagePort, ev: MessageEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/messageerror_event) */
-  onmessageerror: ((this: MessagePort, ev: MessageEvent) => any) | null;
+  onmessageerror: ((this: MessagePort, ev: MessageEvent) => unknown) | null;
   /**
    * Disconnects the port, so that it is no longer active.
    *
@@ -18718,8 +18895,8 @@ interface MessagePort extends EventTarget {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/postMessage)
    */
-  postMessage(message: any, transfer: Transferable[]): void;
-  postMessage(message: any, options?: StructuredSerializeOptions): void;
+  postMessage(message: unknown, transfer: readonly Transferable[]): void;
+  postMessage(message: unknown, options?: StructuredSerializeOptions): void;
   /**
    * Begins dispatching messages received on the port.
    *
@@ -18728,7 +18905,7 @@ interface MessagePort extends EventTarget {
   start(): void;
   addEventListener<K extends keyof MessagePortEventMap>(
     type: K,
-    listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any,
+    listener: (this: MessagePort, ev: MessagePortEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -18738,7 +18915,7 @@ interface MessagePort extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MessagePortEventMap>(
     type: K,
-    listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any,
+    listener: (this: MessagePort, ev: MessagePortEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -18748,7 +18925,7 @@ interface MessagePort extends EventTarget {
   ): void;
 }

-declare var MessagePort: {
+declare const MessagePort: {
   prototype: MessagePort;
   new (): MessagePort;
 };
@@ -18783,7 +18960,7 @@ interface MimeType {
 }

 /** @deprecated */
-declare var MimeType: {
+declare const MimeType: {
   prototype: MimeType;
   new (): MimeType;
 };
@@ -18805,7 +18982,7 @@ interface MimeTypeArray {
 }

 /** @deprecated */
-declare var MimeTypeArray: {
+declare const MimeTypeArray: {
   prototype: MimeTypeArray;
   new (): MimeTypeArray;
 };
@@ -18884,7 +19061,7 @@ interface MouseEvent extends UIEvent {
   ): void;
 }

-declare var MouseEvent: {
+declare const MouseEvent: {
   prototype: MouseEvent;
   new (type: string, eventInitDict?: MouseEventInit): MouseEvent;
 };
@@ -18917,7 +19094,7 @@ interface MutationObserver {
   takeRecords(): MutationRecord[];
 }

-declare var MutationObserver: {
+declare const MutationObserver: {
   prototype: MutationObserver;
   new (callback: MutationCallback): MutationObserver;
 };
@@ -18984,7 +19161,7 @@ interface MutationRecord {
   readonly type: MutationRecordType;
 }

-declare var MutationRecord: {
+declare const MutationRecord: {
   prototype: MutationRecord;
   new (): MutationRecord;
 };
@@ -19014,7 +19191,7 @@ interface NamedNodeMap {
   [index: number]: Attr;
 }

-declare var NamedNodeMap: {
+declare const NamedNodeMap: {
   prototype: NamedNodeMap;
   new (): NamedNodeMap;
 };
@@ -19035,7 +19212,7 @@ interface NavigationPreloadManager {
   setHeaderValue(value: string): Promise<void>;
 }

-declare var NavigationPreloadManager: {
+declare const NavigationPreloadManager: {
   prototype: NavigationPreloadManager;
   new (): NavigationPreloadManager;
 };
@@ -19117,7 +19294,7 @@ interface Navigator
    */
   requestMediaKeySystemAccess(
     keySystem: string,
-    supportedConfigurations: MediaKeySystemConfiguration[],
+    supportedConfigurations: readonly MediaKeySystemConfiguration[],
   ): Promise<MediaKeySystemAccess>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/sendBeacon) */
   sendBeacon(url: string | URL, data?: BodyInit | null): boolean;
@@ -19131,7 +19308,7 @@ interface Navigator
   vibrate(pattern: VibratePattern): boolean;
 }

-declare var Navigator: {
+declare const Navigator: {
   prototype: Navigator;
   new (): Navigator;
 };
@@ -19441,7 +19618,7 @@ interface Node extends EventTarget {
   readonly DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: 0x20;
 }

-declare var Node: {
+declare const Node: {
   prototype: Node;
   new (): Node;
   /** node is an element. */
@@ -19505,7 +19682,7 @@ interface NodeIterator {
   previousNode(): Node | null;
 }

-declare var NodeIterator: {
+declare const NodeIterator: {
   prototype: NodeIterator;
   new (): NodeIterator;
 };
@@ -19535,12 +19712,12 @@ interface NodeList {
    */
   forEach(
     callbackfn: (value: Node, key: number, parent: NodeList) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: Node;
 }

-declare var NodeList: {
+declare const NodeList: {
   prototype: NodeList;
   new (): NodeList;
 };
@@ -19554,7 +19731,7 @@ interface NodeListOf<TNode extends Node> extends NodeList {
    */
   forEach(
     callbackfn: (value: TNode, key: number, parent: NodeListOf<TNode>) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: TNode;
 }
@@ -19601,7 +19778,7 @@ interface Notification extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/body) */
   readonly body: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/data) */
-  readonly data: any;
+  readonly data: unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/dir) */
   readonly dir: NotificationDirection;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/icon) */
@@ -19609,13 +19786,13 @@ interface Notification extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/lang) */
   readonly lang: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/click_event) */
-  onclick: ((this: Notification, ev: Event) => any) | null;
+  onclick: ((this: Notification, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/close_event) */
-  onclose: ((this: Notification, ev: Event) => any) | null;
+  onclose: ((this: Notification, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/error_event) */
-  onerror: ((this: Notification, ev: Event) => any) | null;
+  onerror: ((this: Notification, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/show_event) */
-  onshow: ((this: Notification, ev: Event) => any) | null;
+  onshow: ((this: Notification, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/requireInteraction) */
   readonly requireInteraction: boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/silent) */
@@ -19628,7 +19805,7 @@ interface Notification extends EventTarget {
   close(): void;
   addEventListener<K extends keyof NotificationEventMap>(
     type: K,
-    listener: (this: Notification, ev: NotificationEventMap[K]) => any,
+    listener: (this: Notification, ev: NotificationEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -19638,7 +19815,7 @@ interface Notification extends EventTarget {
   ): void;
   removeEventListener<K extends keyof NotificationEventMap>(
     type: K,
-    listener: (this: Notification, ev: NotificationEventMap[K]) => any,
+    listener: (this: Notification, ev: NotificationEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -19648,7 +19825,7 @@ interface Notification extends EventTarget {
   ): void;
 }

-declare var Notification: {
+declare const Notification: {
   prototype: Notification;
   new (title: string, options?: NotificationOptions): Notification;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/permission_static) */
@@ -19782,7 +19959,7 @@ interface OfflineAudioCompletionEvent extends Event {
   readonly renderedBuffer: AudioBuffer;
 }

-declare var OfflineAudioCompletionEvent: {
+declare const OfflineAudioCompletionEvent: {
   prototype: OfflineAudioCompletionEvent;
   new (
     type: string,
@@ -19804,7 +19981,7 @@ interface OfflineAudioContext extends BaseAudioContext {
   readonly length: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OfflineAudioContext/complete_event) */
   oncomplete:
-    | ((this: OfflineAudioContext, ev: OfflineAudioCompletionEvent) => any)
+    | ((this: OfflineAudioContext, ev: OfflineAudioCompletionEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OfflineAudioContext/resume) */
   resume(): Promise<void>;
@@ -19817,7 +19994,7 @@ interface OfflineAudioContext extends BaseAudioContext {
     listener: (
       this: OfflineAudioContext,
       ev: OfflineAudioContextEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -19830,7 +20007,7 @@ interface OfflineAudioContext extends BaseAudioContext {
     listener: (
       this: OfflineAudioContext,
       ev: OfflineAudioContextEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -19840,7 +20017,7 @@ interface OfflineAudioContext extends BaseAudioContext {
   ): void;
 }

-declare var OfflineAudioContext: {
+declare const OfflineAudioContext: {
   prototype: OfflineAudioContext;
   new (contextOptions: OfflineAudioContextOptions): OfflineAudioContext;
   new (
@@ -19866,9 +20043,9 @@ interface OffscreenCanvas extends EventTarget {
    */
   height: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/contextlost_event) */
-  oncontextlost: ((this: OffscreenCanvas, ev: Event) => any) | null;
+  oncontextlost: ((this: OffscreenCanvas, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/contextrestored_event) */
-  oncontextrestored: ((this: OffscreenCanvas, ev: Event) => any) | null;
+  oncontextrestored: ((this: OffscreenCanvas, ev: Event) => unknown) | null;
   /**
    * These attributes return the dimensions of the OffscreenCanvas object's bitmap.
    *
@@ -19896,17 +20073,23 @@ interface OffscreenCanvas extends EventTarget {
    */
   getContext(
     contextId: '2d',
-    options?: any,
+    options?: unknown,
   ): OffscreenCanvasRenderingContext2D | null;
   getContext(
     contextId: 'bitmaprenderer',
-    options?: any,
+    options?: unknown,
   ): ImageBitmapRenderingContext | null;
-  getContext(contextId: 'webgl', options?: any): WebGLRenderingContext | null;
-  getContext(contextId: 'webgl2', options?: any): WebGL2RenderingContext | null;
+  getContext(
+    contextId: 'webgl',
+    options?: unknown,
+  ): WebGLRenderingContext | null;
+  getContext(
+    contextId: 'webgl2',
+    options?: unknown,
+  ): WebGL2RenderingContext | null;
   getContext(
     contextId: OffscreenRenderingContextId,
-    options?: any,
+    options?: unknown,
   ): OffscreenRenderingContext | null;
   /**
    * Returns a newly created ImageBitmap object with the image in the OffscreenCanvas object. The image in the OffscreenCanvas object is replaced with a new blank image.
@@ -19916,7 +20099,10 @@ interface OffscreenCanvas extends EventTarget {
   transferToImageBitmap(): ImageBitmap;
   addEventListener<K extends keyof OffscreenCanvasEventMap>(
     type: K,
-    listener: (this: OffscreenCanvas, ev: OffscreenCanvasEventMap[K]) => any,
+    listener: (
+      this: OffscreenCanvas,
+      ev: OffscreenCanvasEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -19926,7 +20112,10 @@ interface OffscreenCanvas extends EventTarget {
   ): void;
   removeEventListener<K extends keyof OffscreenCanvasEventMap>(
     type: K,
-    listener: (this: OffscreenCanvas, ev: OffscreenCanvasEventMap[K]) => any,
+    listener: (
+      this: OffscreenCanvas,
+      ev: OffscreenCanvasEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -19936,7 +20125,7 @@ interface OffscreenCanvas extends EventTarget {
   ): void;
 }

-declare var OffscreenCanvas: {
+declare const OffscreenCanvas: {
   prototype: OffscreenCanvas;
   new (width: number, height: number): OffscreenCanvas;
 };
@@ -19962,7 +20151,7 @@ interface OffscreenCanvasRenderingContext2D
   readonly canvas: OffscreenCanvas;
 }

-declare var OffscreenCanvasRenderingContext2D: {
+declare const OffscreenCanvasRenderingContext2D: {
   prototype: OffscreenCanvasRenderingContext2D;
   new (): OffscreenCanvasRenderingContext2D;
 };
@@ -19986,7 +20175,7 @@ interface OscillatorNode extends AudioScheduledSourceNode {
     listener: (
       this: OscillatorNode,
       ev: AudioScheduledSourceNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -19999,7 +20188,7 @@ interface OscillatorNode extends AudioScheduledSourceNode {
     listener: (
       this: OscillatorNode,
       ev: AudioScheduledSourceNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -20009,7 +20198,7 @@ interface OscillatorNode extends AudioScheduledSourceNode {
   ): void;
 }

-declare var OscillatorNode: {
+declare const OscillatorNode: {
   prototype: OscillatorNode;
   new (context: BaseAudioContext, options?: OscillatorOptions): OscillatorNode;
 };
@@ -20020,7 +20209,7 @@ interface OverconstrainedError extends DOMException {
   readonly constraint: string;
 }

-declare var OverconstrainedError: {
+declare const OverconstrainedError: {
   prototype: OverconstrainedError;
   new (constraint: string, message?: string): OverconstrainedError;
 };
@@ -20048,7 +20237,7 @@ interface PageTransitionEvent extends Event {
   readonly persisted: boolean;
 }

-declare var PageTransitionEvent: {
+declare const PageTransitionEvent: {
   prototype: PageTransitionEvent;
   new (
     type: string,
@@ -20104,7 +20293,7 @@ interface PannerNode extends AudioNode {
   setPosition(x: number, y: number, z: number): void;
 }

-declare var PannerNode: {
+declare const PannerNode: {
   prototype: PannerNode;
   new (context: BaseAudioContext, options?: PannerOptions): PannerNode;
 };
@@ -20210,7 +20399,7 @@ interface Path2D extends CanvasPath {
   addPath(path: Path2D, transform?: DOMMatrix2DInit): void;
 }

-declare var Path2D: {
+declare const Path2D: {
   prototype: Path2D;
   new (path?: Path2D | string): Path2D;
 };
@@ -20238,10 +20427,10 @@ interface PaymentAddress {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/sortingCode) */
   readonly sortingCode: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
 }

-declare var PaymentAddress: {
+declare const PaymentAddress: {
   prototype: PaymentAddress;
   new (): PaymentAddress;
 };
@@ -20253,12 +20442,12 @@ declare var PaymentAddress: {
  */
 interface PaymentMethodChangeEvent extends PaymentRequestUpdateEvent {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentMethodChangeEvent/methodDetails) */
-  readonly methodDetails: any;
+  readonly methodDetails: unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentMethodChangeEvent/methodName) */
   readonly methodName: string;
 }

-declare var PaymentMethodChangeEvent: {
+declare const PaymentMethodChangeEvent: {
   prototype: PaymentMethodChangeEvent;
   new (
     type: string,
@@ -20283,7 +20472,7 @@ interface PaymentRequest extends EventTarget {
   readonly id: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/paymentmethodchange_event) */
   onpaymentmethodchange:
-    | ((this: PaymentRequest, ev: PaymentMethodChangeEvent) => any)
+    | ((this: PaymentRequest, ev: PaymentMethodChangeEvent) => unknown)
     | null;
   /**
    * @deprecated
@@ -20291,7 +20480,7 @@ interface PaymentRequest extends EventTarget {
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/shippingaddresschange_event)
    */
   onshippingaddresschange:
-    | ((this: PaymentRequest, ev: PaymentRequestUpdateEvent) => any)
+    | ((this: PaymentRequest, ev: PaymentRequestUpdateEvent) => unknown)
     | null;
   /**
    * @deprecated
@@ -20299,7 +20488,7 @@ interface PaymentRequest extends EventTarget {
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/shippingoptionchange_event)
    */
   onshippingoptionchange:
-    | ((this: PaymentRequest, ev: PaymentRequestUpdateEvent) => any)
+    | ((this: PaymentRequest, ev: PaymentRequestUpdateEvent) => unknown)
     | null;
   /**
    * @deprecated
@@ -20329,7 +20518,7 @@ interface PaymentRequest extends EventTarget {
   ): Promise<PaymentResponse>;
   addEventListener<K extends keyof PaymentRequestEventMap>(
     type: K,
-    listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => any,
+    listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -20339,7 +20528,7 @@ interface PaymentRequest extends EventTarget {
   ): void;
   removeEventListener<K extends keyof PaymentRequestEventMap>(
     type: K,
-    listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => any,
+    listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -20349,10 +20538,10 @@ interface PaymentRequest extends EventTarget {
   ): void;
 }

-declare var PaymentRequest: {
+declare const PaymentRequest: {
   prototype: PaymentRequest;
   new (
-    methodData: PaymentMethodData[],
+    methodData: readonly PaymentMethodData[],
     details: PaymentDetailsInit,
     options?: PaymentOptions,
   ): PaymentRequest;
@@ -20371,7 +20560,7 @@ interface PaymentRequestUpdateEvent extends Event {
   ): void;
 }

-declare var PaymentRequestUpdateEvent: {
+declare const PaymentRequestUpdateEvent: {
   prototype: PaymentRequestUpdateEvent;
   new (
     type: string,
@@ -20391,12 +20580,12 @@ interface PaymentResponseEventMap {
  */
 interface PaymentResponse extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/details) */
-  readonly details: any;
+  readonly details: unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/methodName) */
   readonly methodName: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/payerdetailchange_event) */
   onpayerdetailchange:
-    | ((this: PaymentResponse, ev: PaymentRequestUpdateEvent) => any)
+    | ((this: PaymentResponse, ev: PaymentRequestUpdateEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/payerEmail) */
   readonly payerEmail: string | null;
@@ -20415,10 +20604,13 @@ interface PaymentResponse extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/retry) */
   retry(errorFields?: PaymentValidationErrors): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
   addEventListener<K extends keyof PaymentResponseEventMap>(
     type: K,
-    listener: (this: PaymentResponse, ev: PaymentResponseEventMap[K]) => any,
+    listener: (
+      this: PaymentResponse,
+      ev: PaymentResponseEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -20428,7 +20620,10 @@ interface PaymentResponse extends EventTarget {
   ): void;
   removeEventListener<K extends keyof PaymentResponseEventMap>(
     type: K,
-    listener: (this: PaymentResponse, ev: PaymentResponseEventMap[K]) => any,
+    listener: (
+      this: PaymentResponse,
+      ev: PaymentResponseEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -20438,7 +20633,7 @@ interface PaymentResponse extends EventTarget {
   ): void;
 }

-declare var PaymentResponse: {
+declare const PaymentResponse: {
   prototype: PaymentResponse;
   new (): PaymentResponse;
 };
@@ -20462,7 +20657,9 @@ interface Performance extends EventTarget {
    */
   readonly navigation: PerformanceNavigation;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/resourcetimingbufferfull_event) */
-  onresourcetimingbufferfull: ((this: Performance, ev: Event) => any) | null;
+  onresourcetimingbufferfull:
+    | ((this: Performance, ev: Event) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/timeOrigin) */
   readonly timeOrigin: DOMHighResTimeStamp;
   /**
@@ -20496,10 +20693,10 @@ interface Performance extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/setResourceTimingBufferSize) */
   setResourceTimingBufferSize(maxSize: number): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
   addEventListener<K extends keyof PerformanceEventMap>(
     type: K,
-    listener: (this: Performance, ev: PerformanceEventMap[K]) => any,
+    listener: (this: Performance, ev: PerformanceEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -20509,7 +20706,7 @@ interface Performance extends EventTarget {
   ): void;
   removeEventListener<K extends keyof PerformanceEventMap>(
     type: K,
-    listener: (this: Performance, ev: PerformanceEventMap[K]) => any,
+    listener: (this: Performance, ev: PerformanceEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -20519,7 +20716,7 @@ interface Performance extends EventTarget {
   ): void;
 }

-declare var Performance: {
+declare const Performance: {
   prototype: Performance;
   new (): Performance;
 };
@@ -20539,10 +20736,10 @@ interface PerformanceEntry {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/startTime) */
   readonly startTime: DOMHighResTimeStamp;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
 }

-declare var PerformanceEntry: {
+declare const PerformanceEntry: {
   prototype: PerformanceEntry;
   new (): PerformanceEntry;
 };
@@ -20558,10 +20755,10 @@ interface PerformanceEventTiming extends PerformanceEntry {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEventTiming/target) */
   readonly target: Node | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEventTiming/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
 }

-declare var PerformanceEventTiming: {
+declare const PerformanceEventTiming: {
   prototype: PerformanceEventTiming;
   new (): PerformanceEventTiming;
 };
@@ -20573,10 +20770,10 @@ declare var PerformanceEventTiming: {
  */
 interface PerformanceMark extends PerformanceEntry {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMark/detail) */
-  readonly detail: any;
+  readonly detail: unknown;
 }

-declare var PerformanceMark: {
+declare const PerformanceMark: {
   prototype: PerformanceMark;
   new (markName: string, markOptions?: PerformanceMarkOptions): PerformanceMark;
 };
@@ -20588,10 +20785,10 @@ declare var PerformanceMark: {
  */
 interface PerformanceMeasure extends PerformanceEntry {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMeasure/detail) */
-  readonly detail: any;
+  readonly detail: unknown;
 }

-declare var PerformanceMeasure: {
+declare const PerformanceMeasure: {
   prototype: PerformanceMeasure;
   new (): PerformanceMeasure;
 };
@@ -20620,7 +20817,7 @@ interface PerformanceNavigation {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigation/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
   readonly TYPE_NAVIGATE: 0;
   readonly TYPE_RELOAD: 1;
   readonly TYPE_BACK_FORWARD: 2;
@@ -20628,7 +20825,7 @@ interface PerformanceNavigation {
 }

 /** @deprecated */
-declare var PerformanceNavigation: {
+declare const PerformanceNavigation: {
   prototype: PerformanceNavigation;
   new (): PerformanceNavigation;
   readonly TYPE_NAVIGATE: 0;
@@ -20664,10 +20861,10 @@ interface PerformanceNavigationTiming extends PerformanceResourceTiming {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/unloadEventStart) */
   readonly unloadEventStart: DOMHighResTimeStamp;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
 }

-declare var PerformanceNavigationTiming: {
+declare const PerformanceNavigationTiming: {
   prototype: PerformanceNavigationTiming;
   new (): PerformanceNavigationTiming;
 };
@@ -20682,7 +20879,7 @@ interface PerformanceObserver {
   takeRecords(): PerformanceEntryList;
 }

-declare var PerformanceObserver: {
+declare const PerformanceObserver: {
   prototype: PerformanceObserver;
   new (callback: PerformanceObserverCallback): PerformanceObserver;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserver/supportedEntryTypes_static) */
@@ -20699,7 +20896,7 @@ interface PerformanceObserverEntryList {
   getEntriesByType(type: string): PerformanceEntryList;
 }

-declare var PerformanceObserverEntryList: {
+declare const PerformanceObserverEntryList: {
   prototype: PerformanceObserverEntryList;
   new (): PerformanceObserverEntryList;
 };
@@ -20707,7 +20904,7 @@ declare var PerformanceObserverEntryList: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformancePaintTiming) */
 interface PerformancePaintTiming extends PerformanceEntry {}

-declare var PerformancePaintTiming: {
+declare const PerformancePaintTiming: {
   prototype: PerformancePaintTiming;
   new (): PerformancePaintTiming;
 };
@@ -20757,10 +20954,10 @@ interface PerformanceResourceTiming extends PerformanceEntry {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/workerStart) */
   readonly workerStart: DOMHighResTimeStamp;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
 }

-declare var PerformanceResourceTiming: {
+declare const PerformanceResourceTiming: {
   prototype: PerformanceResourceTiming;
   new (): PerformanceResourceTiming;
 };
@@ -20774,10 +20971,10 @@ interface PerformanceServerTiming {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/name) */
   readonly name: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
 }

-declare var PerformanceServerTiming: {
+declare const PerformanceServerTiming: {
   prototype: PerformanceServerTiming;
   new (): PerformanceServerTiming;
 };
@@ -20920,11 +21117,11 @@ interface PerformanceTiming {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/toJSON)
    */
-  toJSON(): any;
+  toJSON(): unknown;
 }

 /** @deprecated */
-declare var PerformanceTiming: {
+declare const PerformanceTiming: {
   prototype: PerformanceTiming;
   new (): PerformanceTiming;
 };
@@ -20936,7 +21133,7 @@ declare var PerformanceTiming: {
  */
 interface PeriodicWave {}

-declare var PeriodicWave: {
+declare const PeriodicWave: {
   prototype: PeriodicWave;
   new (context: BaseAudioContext, options?: PeriodicWaveOptions): PeriodicWave;
 };
@@ -20950,12 +21147,15 @@ interface PermissionStatus extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/name) */
   readonly name: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/change_event) */
-  onchange: ((this: PermissionStatus, ev: Event) => any) | null;
+  onchange: ((this: PermissionStatus, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/state) */
   readonly state: PermissionState;
   addEventListener<K extends keyof PermissionStatusEventMap>(
     type: K,
-    listener: (this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any,
+    listener: (
+      this: PermissionStatus,
+      ev: PermissionStatusEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -20965,7 +21165,10 @@ interface PermissionStatus extends EventTarget {
   ): void;
   removeEventListener<K extends keyof PermissionStatusEventMap>(
     type: K,
-    listener: (this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any,
+    listener: (
+      this: PermissionStatus,
+      ev: PermissionStatusEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -20975,7 +21178,7 @@ interface PermissionStatus extends EventTarget {
   ): void;
 }

-declare var PermissionStatus: {
+declare const PermissionStatus: {
   prototype: PermissionStatus;
   new (): PermissionStatus;
 };
@@ -20986,7 +21189,7 @@ interface Permissions {
   query(permissionDesc: PermissionDescriptor): Promise<PermissionStatus>;
 }

-declare var Permissions: {
+declare const Permissions: {
   prototype: Permissions;
   new (): Permissions;
 };
@@ -20997,7 +21200,7 @@ interface PictureInPictureEvent extends Event {
   readonly pictureInPictureWindow: PictureInPictureWindow;
 }

-declare var PictureInPictureEvent: {
+declare const PictureInPictureEvent: {
   prototype: PictureInPictureEvent;
   new (
     type: string,
@@ -21014,7 +21217,7 @@ interface PictureInPictureWindow extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PictureInPictureWindow/height) */
   readonly height: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PictureInPictureWindow/resize_event) */
-  onresize: ((this: PictureInPictureWindow, ev: Event) => any) | null;
+  onresize: ((this: PictureInPictureWindow, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PictureInPictureWindow/width) */
   readonly width: number;
   addEventListener<K extends keyof PictureInPictureWindowEventMap>(
@@ -21022,7 +21225,7 @@ interface PictureInPictureWindow extends EventTarget {
     listener: (
       this: PictureInPictureWindow,
       ev: PictureInPictureWindowEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -21035,7 +21238,7 @@ interface PictureInPictureWindow extends EventTarget {
     listener: (
       this: PictureInPictureWindow,
       ev: PictureInPictureWindowEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -21045,7 +21248,7 @@ interface PictureInPictureWindow extends EventTarget {
   ): void;
 }

-declare var PictureInPictureWindow: {
+declare const PictureInPictureWindow: {
   prototype: PictureInPictureWindow;
   new (): PictureInPictureWindow;
 };
@@ -21088,7 +21291,7 @@ interface Plugin {
 }

 /** @deprecated */
-declare var Plugin: {
+declare const Plugin: {
   prototype: Plugin;
   new (): Plugin;
 };
@@ -21112,7 +21315,7 @@ interface PluginArray {
 }

 /** @deprecated */
-declare var PluginArray: {
+declare const PluginArray: {
   prototype: PluginArray;
   new (): PluginArray;
 };
@@ -21157,7 +21360,7 @@ interface PointerEvent extends MouseEvent {
   getPredictedEvents(): PointerEvent[];
 }

-declare var PointerEvent: {
+declare const PointerEvent: {
   prototype: PointerEvent;
   new (type: string, eventInitDict?: PointerEventInit): PointerEvent;
 };
@@ -21174,10 +21377,10 @@ interface PopStateEvent extends Event {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PopStateEvent/state)
    */
-  readonly state: any;
+  readonly state: unknown;
 }

-declare var PopStateEvent: {
+declare const PopStateEvent: {
   prototype: PopStateEvent;
   new (type: string, eventInitDict?: PopStateEventInit): PopStateEvent;
 };
@@ -21200,7 +21403,7 @@ interface ProcessingInstruction extends CharacterData, LinkStyle {
   readonly target: string;
 }

-declare var ProcessingInstruction: {
+declare const ProcessingInstruction: {
   prototype: ProcessingInstruction;
   new (): ProcessingInstruction;
 };
@@ -21220,7 +21423,7 @@ interface ProgressEvent<T extends EventTarget = EventTarget> extends Event {
   readonly total: number;
 }

-declare var ProgressEvent: {
+declare const ProgressEvent: {
   prototype: ProgressEvent;
   new (type: string, eventInitDict?: ProgressEventInit): ProgressEvent;
 };
@@ -21228,12 +21431,12 @@ declare var ProgressEvent: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent) */
 interface PromiseRejectionEvent extends Event {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent/promise) */
-  readonly promise: Promise<any>;
+  readonly promise: Promise<unknown>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent/reason) */
-  readonly reason: any;
+  readonly reason: unknown;
 }

-declare var PromiseRejectionEvent: {
+declare const PromiseRejectionEvent: {
   prototype: PromiseRejectionEvent;
   new (
     type: string,
@@ -21259,7 +21462,7 @@ interface PublicKeyCredential extends Credential {
   toJSON(): PublicKeyCredentialJSON;
 }

-declare var PublicKeyCredential: {
+declare const PublicKeyCredential: {
   prototype: PublicKeyCredential;
   new (): PublicKeyCredential;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PublicKeyCredential/isConditionalMediationAvailable_static) */
@@ -21293,7 +21496,7 @@ interface PushManager {
   subscribe(options?: PushSubscriptionOptionsInit): Promise<PushSubscription>;
 }

-declare var PushManager: {
+declare const PushManager: {
   prototype: PushManager;
   new (): PushManager;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushManager/supportedContentEncodings_static) */
@@ -21321,7 +21524,7 @@ interface PushSubscription {
   unsubscribe(): Promise<boolean>;
 }

-declare var PushSubscription: {
+declare const PushSubscription: {
   prototype: PushSubscription;
   new (): PushSubscription;
 };
@@ -21338,7 +21541,7 @@ interface PushSubscriptionOptions {
   readonly userVisibleOnly: boolean;
 }

-declare var PushSubscriptionOptions: {
+declare const PushSubscriptionOptions: {
   prototype: PushSubscriptionOptions;
   new (): PushSubscriptionOptions;
 };
@@ -21351,7 +21554,7 @@ interface RTCCertificate {
   getFingerprints(): RTCDtlsFingerprint[];
 }

-declare var RTCCertificate: {
+declare const RTCCertificate: {
   prototype: RTCCertificate;
   new (): RTCCertificate;
 };
@@ -21366,7 +21569,7 @@ interface RTCDTMFSender extends EventTarget {
   readonly canInsertDTMF: boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDTMFSender/tonechange_event) */
   ontonechange:
-    | ((this: RTCDTMFSender, ev: RTCDTMFToneChangeEvent) => any)
+    | ((this: RTCDTMFSender, ev: RTCDTMFToneChangeEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDTMFSender/toneBuffer) */
   readonly toneBuffer: string;
@@ -21374,7 +21577,7 @@ interface RTCDTMFSender extends EventTarget {
   insertDTMF(tones: string, duration?: number, interToneGap?: number): void;
   addEventListener<K extends keyof RTCDTMFSenderEventMap>(
     type: K,
-    listener: (this: RTCDTMFSender, ev: RTCDTMFSenderEventMap[K]) => any,
+    listener: (this: RTCDTMFSender, ev: RTCDTMFSenderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -21384,7 +21587,7 @@ interface RTCDTMFSender extends EventTarget {
   ): void;
   removeEventListener<K extends keyof RTCDTMFSenderEventMap>(
     type: K,
-    listener: (this: RTCDTMFSender, ev: RTCDTMFSenderEventMap[K]) => any,
+    listener: (this: RTCDTMFSender, ev: RTCDTMFSenderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -21394,7 +21597,7 @@ interface RTCDTMFSender extends EventTarget {
   ): void;
 }

-declare var RTCDTMFSender: {
+declare const RTCDTMFSender: {
   prototype: RTCDTMFSender;
   new (): RTCDTMFSender;
 };
@@ -21409,7 +21612,7 @@ interface RTCDTMFToneChangeEvent extends Event {
   readonly tone: string;
 }

-declare var RTCDTMFToneChangeEvent: {
+declare const RTCDTMFToneChangeEvent: {
   prototype: RTCDTMFToneChangeEvent;
   new (
     type: string,
@@ -21445,17 +21648,17 @@ interface RTCDataChannel extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/negotiated) */
   readonly negotiated: boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/bufferedamountlow_event) */
-  onbufferedamountlow: ((this: RTCDataChannel, ev: Event) => any) | null;
+  onbufferedamountlow: ((this: RTCDataChannel, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/close_event) */
-  onclose: ((this: RTCDataChannel, ev: Event) => any) | null;
+  onclose: ((this: RTCDataChannel, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/closing_event) */
-  onclosing: ((this: RTCDataChannel, ev: Event) => any) | null;
+  onclosing: ((this: RTCDataChannel, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/error_event) */
-  onerror: ((this: RTCDataChannel, ev: RTCErrorEvent) => any) | null;
+  onerror: ((this: RTCDataChannel, ev: RTCErrorEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/message_event) */
-  onmessage: ((this: RTCDataChannel, ev: MessageEvent) => any) | null;
+  onmessage: ((this: RTCDataChannel, ev: MessageEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/open_event) */
-  onopen: ((this: RTCDataChannel, ev: Event) => any) | null;
+  onopen: ((this: RTCDataChannel, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/ordered) */
   readonly ordered: boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/protocol) */
@@ -21471,7 +21674,7 @@ interface RTCDataChannel extends EventTarget {
   send(data: ArrayBufferView): void;
   addEventListener<K extends keyof RTCDataChannelEventMap>(
     type: K,
-    listener: (this: RTCDataChannel, ev: RTCDataChannelEventMap[K]) => any,
+    listener: (this: RTCDataChannel, ev: RTCDataChannelEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -21481,7 +21684,7 @@ interface RTCDataChannel extends EventTarget {
   ): void;
   removeEventListener<K extends keyof RTCDataChannelEventMap>(
     type: K,
-    listener: (this: RTCDataChannel, ev: RTCDataChannelEventMap[K]) => any,
+    listener: (this: RTCDataChannel, ev: RTCDataChannelEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -21491,7 +21694,7 @@ interface RTCDataChannel extends EventTarget {
   ): void;
 }

-declare var RTCDataChannel: {
+declare const RTCDataChannel: {
   prototype: RTCDataChannel;
   new (): RTCDataChannel;
 };
@@ -21502,7 +21705,7 @@ interface RTCDataChannelEvent extends Event {
   readonly channel: RTCDataChannel;
 }

-declare var RTCDataChannelEvent: {
+declare const RTCDataChannelEvent: {
   prototype: RTCDataChannelEvent;
   new (
     type: string,
@@ -21520,14 +21723,17 @@ interface RTCDtlsTransport extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDtlsTransport/iceTransport) */
   readonly iceTransport: RTCIceTransport;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDtlsTransport/error_event) */
-  onerror: ((this: RTCDtlsTransport, ev: RTCErrorEvent) => any) | null;
-  onstatechange: ((this: RTCDtlsTransport, ev: Event) => any) | null;
+  onerror: ((this: RTCDtlsTransport, ev: RTCErrorEvent) => unknown) | null;
+  onstatechange: ((this: RTCDtlsTransport, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDtlsTransport/state) */
   readonly state: RTCDtlsTransportState;
   getRemoteCertificates(): ArrayBuffer[];
   addEventListener<K extends keyof RTCDtlsTransportEventMap>(
     type: K,
-    listener: (this: RTCDtlsTransport, ev: RTCDtlsTransportEventMap[K]) => any,
+    listener: (
+      this: RTCDtlsTransport,
+      ev: RTCDtlsTransportEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -21537,7 +21743,10 @@ interface RTCDtlsTransport extends EventTarget {
   ): void;
   removeEventListener<K extends keyof RTCDtlsTransportEventMap>(
     type: K,
-    listener: (this: RTCDtlsTransport, ev: RTCDtlsTransportEventMap[K]) => any,
+    listener: (
+      this: RTCDtlsTransport,
+      ev: RTCDtlsTransportEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -21547,7 +21756,7 @@ interface RTCDtlsTransport extends EventTarget {
   ): void;
 }

-declare var RTCDtlsTransport: {
+declare const RTCDtlsTransport: {
   prototype: RTCDtlsTransport;
   new (): RTCDtlsTransport;
 };
@@ -21562,7 +21771,7 @@ interface RTCEncodedAudioFrame {
   getMetadata(): RTCEncodedAudioFrameMetadata;
 }

-declare var RTCEncodedAudioFrame: {
+declare const RTCEncodedAudioFrame: {
   prototype: RTCEncodedAudioFrame;
   new (): RTCEncodedAudioFrame;
 };
@@ -21579,7 +21788,7 @@ interface RTCEncodedVideoFrame {
   getMetadata(): RTCEncodedVideoFrameMetadata;
 }

-declare var RTCEncodedVideoFrame: {
+declare const RTCEncodedVideoFrame: {
   prototype: RTCEncodedVideoFrame;
   new (): RTCEncodedVideoFrame;
 };
@@ -21598,7 +21807,7 @@ interface RTCError extends DOMException {
   readonly sentAlert: number | null;
 }

-declare var RTCError: {
+declare const RTCError: {
   prototype: RTCError;
   new (init: RTCErrorInit, message?: string): RTCError;
 };
@@ -21609,7 +21818,7 @@ interface RTCErrorEvent extends Event {
   readonly error: RTCError;
 }

-declare var RTCErrorEvent: {
+declare const RTCErrorEvent: {
   prototype: RTCErrorEvent;
   new (type: string, eventInitDict: RTCErrorEventInit): RTCErrorEvent;
 };
@@ -21652,7 +21861,7 @@ interface RTCIceCandidate {
   toJSON(): RTCIceCandidateInit;
 }

-declare var RTCIceCandidate: {
+declare const RTCIceCandidate: {
   prototype: RTCIceCandidate;
   new (candidateInitDict?: RTCIceCandidateInit): RTCIceCandidate;
 };
@@ -21677,20 +21886,25 @@ interface RTCIceTransport extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/gatheringState) */
   readonly gatheringState: RTCIceGathererState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/gatheringstatechange_event) */
-  ongatheringstatechange: ((this: RTCIceTransport, ev: Event) => any) | null;
+  ongatheringstatechange:
+    | ((this: RTCIceTransport, ev: Event) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/selectedcandidatepairchange_event) */
   onselectedcandidatepairchange:
-    | ((this: RTCIceTransport, ev: Event) => any)
+    | ((this: RTCIceTransport, ev: Event) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/statechange_event) */
-  onstatechange: ((this: RTCIceTransport, ev: Event) => any) | null;
+  onstatechange: ((this: RTCIceTransport, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/state) */
   readonly state: RTCIceTransportState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/getSelectedCandidatePair) */
   getSelectedCandidatePair(): RTCIceCandidatePair | null;
   addEventListener<K extends keyof RTCIceTransportEventMap>(
     type: K,
-    listener: (this: RTCIceTransport, ev: RTCIceTransportEventMap[K]) => any,
+    listener: (
+      this: RTCIceTransport,
+      ev: RTCIceTransportEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -21700,7 +21914,10 @@ interface RTCIceTransport extends EventTarget {
   ): void;
   removeEventListener<K extends keyof RTCIceTransportEventMap>(
     type: K,
-    listener: (this: RTCIceTransport, ev: RTCIceTransportEventMap[K]) => any,
+    listener: (
+      this: RTCIceTransport,
+      ev: RTCIceTransportEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -21710,7 +21927,7 @@ interface RTCIceTransport extends EventTarget {
   ): void;
 }

-declare var RTCIceTransport: {
+declare const RTCIceTransport: {
   prototype: RTCIceTransport;
   new (): RTCIceTransport;
 };
@@ -21748,33 +21965,37 @@ interface RTCPeerConnection extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/localDescription) */
   readonly localDescription: RTCSessionDescription | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/connectionstatechange_event) */
-  onconnectionstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;
+  onconnectionstatechange:
+    | ((this: RTCPeerConnection, ev: Event) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/datachannel_event) */
   ondatachannel:
-    | ((this: RTCPeerConnection, ev: RTCDataChannelEvent) => any)
+    | ((this: RTCPeerConnection, ev: RTCDataChannelEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/icecandidate_event) */
   onicecandidate:
-    | ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => any)
+    | ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/icecandidateerror_event) */
   onicecandidateerror:
-    | ((this: RTCPeerConnection, ev: RTCPeerConnectionIceErrorEvent) => any)
+    | ((this: RTCPeerConnection, ev: RTCPeerConnectionIceErrorEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/iceconnectionstatechange_event) */
   oniceconnectionstatechange:
-    | ((this: RTCPeerConnection, ev: Event) => any)
+    | ((this: RTCPeerConnection, ev: Event) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event) */
   onicegatheringstatechange:
-    | ((this: RTCPeerConnection, ev: Event) => any)
+    | ((this: RTCPeerConnection, ev: Event) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/negotiationneeded_event) */
-  onnegotiationneeded: ((this: RTCPeerConnection, ev: Event) => any) | null;
+  onnegotiationneeded: ((this: RTCPeerConnection, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/signalingstatechange_event) */
-  onsignalingstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;
+  onsignalingstatechange:
+    | ((this: RTCPeerConnection, ev: Event) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/track_event) */
-  ontrack: ((this: RTCPeerConnection, ev: RTCTrackEvent) => any) | null;
+  ontrack: ((this: RTCPeerConnection, ev: RTCTrackEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/pendingLocalDescription) */
   readonly pendingLocalDescription: RTCSessionDescription | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/pendingRemoteDescription) */
@@ -21794,7 +22015,10 @@ interface RTCPeerConnection extends EventTarget {
     failureCallback: RTCPeerConnectionErrorCallback,
   ): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/addTrack) */
-  addTrack(track: MediaStreamTrack, ...streams: MediaStream[]): RTCRtpSender;
+  addTrack(
+    track: MediaStreamTrack,
+    ...streams: readonly MediaStream[]
+  ): RTCRtpSender;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/addTransceiver) */
   addTransceiver(
     trackOrKind: MediaStreamTrack | string,
@@ -21861,7 +22085,7 @@ interface RTCPeerConnection extends EventTarget {
     listener: (
       this: RTCPeerConnection,
       ev: RTCPeerConnectionEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -21874,7 +22098,7 @@ interface RTCPeerConnection extends EventTarget {
     listener: (
       this: RTCPeerConnection,
       ev: RTCPeerConnectionEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -21884,7 +22108,7 @@ interface RTCPeerConnection extends EventTarget {
   ): void;
 }

-declare var RTCPeerConnection: {
+declare const RTCPeerConnection: {
   prototype: RTCPeerConnection;
   new (configuration?: RTCConfiguration): RTCPeerConnection;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/generateCertificate_static) */
@@ -21903,7 +22127,7 @@ interface RTCPeerConnectionIceErrorEvent extends Event {
   readonly url: string;
 }

-declare var RTCPeerConnectionIceErrorEvent: {
+declare const RTCPeerConnectionIceErrorEvent: {
   prototype: RTCPeerConnectionIceErrorEvent;
   new (
     type: string,
@@ -21921,7 +22145,7 @@ interface RTCPeerConnectionIceEvent extends Event {
   readonly candidate: RTCIceCandidate | null;
 }

-declare var RTCPeerConnectionIceEvent: {
+declare const RTCPeerConnectionIceEvent: {
   prototype: RTCPeerConnectionIceEvent;
   new (
     type: string,
@@ -21953,7 +22177,7 @@ interface RTCRtpReceiver {
   getSynchronizationSources(): RTCRtpSynchronizationSource[];
 }

-declare var RTCRtpReceiver: {
+declare const RTCRtpReceiver: {
   prototype: RTCRtpReceiver;
   new (): RTCRtpReceiver;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/getCapabilities_static) */
@@ -21963,9 +22187,13 @@ declare var RTCRtpReceiver: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpScriptTransform) */
 interface RTCRtpScriptTransform {}

-declare var RTCRtpScriptTransform: {
+declare const RTCRtpScriptTransform: {
   prototype: RTCRtpScriptTransform;
-  new (worker: Worker, options?: any, transfer?: any[]): RTCRtpScriptTransform;
+  new (
+    worker: Worker,
+    options?: unknown,
+    transfer?: readonly unknown[],
+  ): RTCRtpScriptTransform;
 };

 /**
@@ -21994,10 +22222,10 @@ interface RTCRtpSender {
     setParameterOptions?: RTCSetParameterOptions,
   ): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/setStreams) */
-  setStreams(...streams: MediaStream[]): void;
+  setStreams(...streams: readonly MediaStream[]): void;
 }

-declare var RTCRtpSender: {
+declare const RTCRtpSender: {
   prototype: RTCRtpSender;
   new (): RTCRtpSender;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/getCapabilities_static) */
@@ -22017,12 +22245,12 @@ interface RTCRtpTransceiver {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/sender) */
   readonly sender: RTCRtpSender;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/setCodecPreferences) */
-  setCodecPreferences(codecs: RTCRtpCodec[]): void;
+  setCodecPreferences(codecs: readonly RTCRtpCodec[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/stop) */
   stop(): void;
 }

-declare var RTCRtpTransceiver: {
+declare const RTCRtpTransceiver: {
   prototype: RTCRtpTransceiver;
   new (): RTCRtpTransceiver;
 };
@@ -22038,14 +22266,17 @@ interface RTCSctpTransport extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSctpTransport/maxMessageSize) */
   readonly maxMessageSize: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSctpTransport/statechange_event) */
-  onstatechange: ((this: RTCSctpTransport, ev: Event) => any) | null;
+  onstatechange: ((this: RTCSctpTransport, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSctpTransport/state) */
   readonly state: RTCSctpTransportState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSctpTransport/transport) */
   readonly transport: RTCDtlsTransport;
   addEventListener<K extends keyof RTCSctpTransportEventMap>(
     type: K,
-    listener: (this: RTCSctpTransport, ev: RTCSctpTransportEventMap[K]) => any,
+    listener: (
+      this: RTCSctpTransport,
+      ev: RTCSctpTransportEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -22055,7 +22286,10 @@ interface RTCSctpTransport extends EventTarget {
   ): void;
   removeEventListener<K extends keyof RTCSctpTransportEventMap>(
     type: K,
-    listener: (this: RTCSctpTransport, ev: RTCSctpTransportEventMap[K]) => any,
+    listener: (
+      this: RTCSctpTransport,
+      ev: RTCSctpTransportEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -22065,7 +22299,7 @@ interface RTCSctpTransport extends EventTarget {
   ): void;
 }

-declare var RTCSctpTransport: {
+declare const RTCSctpTransport: {
   prototype: RTCSctpTransport;
   new (): RTCSctpTransport;
 };
@@ -22084,7 +22318,7 @@ interface RTCSessionDescription {
   toJSON(): RTCSessionDescriptionInit;
 }

-declare var RTCSessionDescription: {
+declare const RTCSessionDescription: {
   prototype: RTCSessionDescription;
   new (descriptionInitDict: RTCSessionDescriptionInit): RTCSessionDescription;
 };
@@ -22092,12 +22326,12 @@ declare var RTCSessionDescription: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCStatsReport) */
 interface RTCStatsReport {
   forEach(
-    callbackfn: (value: any, key: string, parent: RTCStatsReport) => void,
-    thisArg?: any,
+    callbackfn: (value: unknown, key: string, parent: RTCStatsReport) => void,
+    thisArg?: unknown,
   ): void;
 }

-declare var RTCStatsReport: {
+declare const RTCStatsReport: {
   prototype: RTCStatsReport;
   new (): RTCStatsReport;
 };
@@ -22114,7 +22348,7 @@ interface RTCTrackEvent extends Event {
   readonly transceiver: RTCRtpTransceiver;
 }

-declare var RTCTrackEvent: {
+declare const RTCTrackEvent: {
   prototype: RTCTrackEvent;
   new (type: string, eventInitDict: RTCTrackEventInit): RTCTrackEvent;
 };
@@ -22125,7 +22359,7 @@ interface RadioNodeList extends NodeList {
   value: string;
 }

-declare var RadioNodeList: {
+declare const RadioNodeList: {
   prototype: RadioNodeList;
   new (): RadioNodeList;
 };
@@ -22203,7 +22437,7 @@ interface Range extends AbstractRange {
   readonly END_TO_START: 3;
 }

-declare var Range: {
+declare const Range: {
   prototype: Range;
   new (): Range;
   readonly START_TO_START: 0;
@@ -22223,10 +22457,10 @@ interface ReadableByteStreamController {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/enqueue) */
   enqueue(chunk: ArrayBufferView): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/error) */
-  error(e?: any): void;
+  error(e?: unknown): void;
 }

-declare var ReadableByteStreamController: {
+declare const ReadableByteStreamController: {
   prototype: ReadableByteStreamController;
   new (): ReadableByteStreamController;
 };
@@ -22236,11 +22470,11 @@ declare var ReadableByteStreamController: {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)
  */
-interface ReadableStream<R = any> {
+interface ReadableStream<R = unknown> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked) */
   readonly locked: boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/cancel) */
-  cancel(reason?: any): Promise<void>;
+  cancel(reason?: unknown): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/getReader) */
   getReader(options: { mode: 'byob' }): ReadableStreamBYOBReader;
   getReader(): ReadableStreamDefaultReader<R>;
@@ -22259,17 +22493,17 @@ interface ReadableStream<R = any> {
   tee(): [ReadableStream<R>, ReadableStream<R>];
 }

-declare var ReadableStream: {
+declare const ReadableStream: {
   prototype: ReadableStream;
   new (
     underlyingSource: UnderlyingByteSource,
     strategy?: { highWaterMark?: number },
   ): ReadableStream<Uint8Array>;
-  new <R = any>(
+  new <R = unknown>(
     underlyingSource: UnderlyingDefaultSource<R>,
     strategy?: QueuingStrategy<R>,
   ): ReadableStream<R>;
-  new <R = any>(
+  new <R = unknown>(
     underlyingSource?: UnderlyingSource<R>,
     strategy?: QueuingStrategy<R>,
   ): ReadableStream<R>;
@@ -22285,7 +22519,7 @@ interface ReadableStreamBYOBReader extends ReadableStreamGenericReader {
   releaseLock(): void;
 }

-declare var ReadableStreamBYOBReader: {
+declare const ReadableStreamBYOBReader: {
   prototype: ReadableStreamBYOBReader;
   new (stream: ReadableStream<Uint8Array>): ReadableStreamBYOBReader;
 };
@@ -22300,13 +22534,13 @@ interface ReadableStreamBYOBRequest {
   respondWithNewView(view: ArrayBufferView): void;
 }

-declare var ReadableStreamBYOBRequest: {
+declare const ReadableStreamBYOBRequest: {
   prototype: ReadableStreamBYOBRequest;
   new (): ReadableStreamBYOBRequest;
 };

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController) */
-interface ReadableStreamDefaultController<R = any> {
+interface ReadableStreamDefaultController<R = unknown> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/desiredSize) */
   readonly desiredSize: number | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/close) */
@@ -22314,16 +22548,16 @@ interface ReadableStreamDefaultController<R = any> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/enqueue) */
   enqueue(chunk?: R): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/error) */
-  error(e?: any): void;
+  error(e?: unknown): void;
 }

-declare var ReadableStreamDefaultController: {
+declare const ReadableStreamDefaultController: {
   prototype: ReadableStreamDefaultController;
   new (): ReadableStreamDefaultController;
 };

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultReader) */
-interface ReadableStreamDefaultReader<R = any>
+interface ReadableStreamDefaultReader<R = unknown>
   extends ReadableStreamGenericReader {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultReader/read) */
   read(): Promise<ReadableStreamReadResult<R>>;
@@ -22331,16 +22565,16 @@ interface ReadableStreamDefaultReader<R = any>
   releaseLock(): void;
 }

-declare var ReadableStreamDefaultReader: {
+declare const ReadableStreamDefaultReader: {
   prototype: ReadableStreamDefaultReader;
-  new <R = any>(stream: ReadableStream<R>): ReadableStreamDefaultReader<R>;
+  new <R = unknown>(stream: ReadableStream<R>): ReadableStreamDefaultReader<R>;
 };

 interface ReadableStreamGenericReader {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/closed) */
   readonly closed: Promise<undefined>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/cancel) */
-  cancel(reason?: any): Promise<void>;
+  cancel(reason?: unknown): Promise<void>;
 }

 interface RemotePlaybackEventMap {
@@ -22352,11 +22586,11 @@ interface RemotePlaybackEventMap {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback) */
 interface RemotePlayback extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/connect_event) */
-  onconnect: ((this: RemotePlayback, ev: Event) => any) | null;
+  onconnect: ((this: RemotePlayback, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/connecting_event) */
-  onconnecting: ((this: RemotePlayback, ev: Event) => any) | null;
+  onconnecting: ((this: RemotePlayback, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/disconnect_event) */
-  ondisconnect: ((this: RemotePlayback, ev: Event) => any) | null;
+  ondisconnect: ((this: RemotePlayback, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/state) */
   readonly state: RemotePlaybackState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/cancelWatchAvailability) */
@@ -22369,7 +22603,7 @@ interface RemotePlayback extends EventTarget {
   ): Promise<number>;
   addEventListener<K extends keyof RemotePlaybackEventMap>(
     type: K,
-    listener: (this: RemotePlayback, ev: RemotePlaybackEventMap[K]) => any,
+    listener: (this: RemotePlayback, ev: RemotePlaybackEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -22379,7 +22613,7 @@ interface RemotePlayback extends EventTarget {
   ): void;
   removeEventListener<K extends keyof RemotePlaybackEventMap>(
     type: K,
-    listener: (this: RemotePlayback, ev: RemotePlaybackEventMap[K]) => any,
+    listener: (this: RemotePlayback, ev: RemotePlaybackEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -22389,7 +22623,7 @@ interface RemotePlayback extends EventTarget {
   ): void;
 }

-declare var RemotePlayback: {
+declare const RemotePlayback: {
   prototype: RemotePlayback;
   new (): RemotePlayback;
 };
@@ -22402,10 +22636,10 @@ interface Report {
   readonly type: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Report/url) */
   readonly url: string;
-  toJSON(): any;
+  toJSON(): unknown;
 }

-declare var Report: {
+declare const Report: {
   prototype: Report;
   new (): Report;
 };
@@ -22413,10 +22647,10 @@ declare var Report: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportBody) */
 interface ReportBody {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportBody/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
 }

-declare var ReportBody: {
+declare const ReportBody: {
   prototype: ReportBody;
   new (): ReportBody;
 };
@@ -22431,7 +22665,7 @@ interface ReportingObserver {
   takeRecords(): ReportList;
 }

-declare var ReportingObserver: {
+declare const ReportingObserver: {
   prototype: ReportingObserver;
   new (
     callback: ReportingObserverCallback,
@@ -22482,7 +22716,7 @@ interface Request extends Body {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/method)
    */
-  readonly method: string;
+  readonly method: HTTPRequestMethod;
   /**
    * Returns the mode associated with request, which is a string indicating whether the request will use CORS, or will be restricted to same-origin URLs.
    *
@@ -22523,7 +22757,7 @@ interface Request extends Body {
   clone(): Request;
 }

-declare var Request: {
+declare const Request: {
   prototype: Request;
   new (input: RequestInfo | URL, init?: RequestInit): Request;
 };
@@ -22538,7 +22772,7 @@ interface ResizeObserver {
   unobserve(target: Element): void;
 }

-declare var ResizeObserver: {
+declare const ResizeObserver: {
   prototype: ResizeObserver;
   new (callback: ResizeObserverCallback): ResizeObserver;
 };
@@ -22557,7 +22791,7 @@ interface ResizeObserverEntry {
   readonly target: Element;
 }

-declare var ResizeObserverEntry: {
+declare const ResizeObserverEntry: {
   prototype: ResizeObserverEntry;
   new (): ResizeObserverEntry;
 };
@@ -22570,7 +22804,7 @@ interface ResizeObserverSize {
   readonly inlineSize: number;
 }

-declare var ResizeObserverSize: {
+declare const ResizeObserverSize: {
   prototype: ResizeObserverSize;
   new (): ResizeObserverSize;
 };
@@ -22599,13 +22833,13 @@ interface Response extends Body {
   clone(): Response;
 }

-declare var Response: {
+declare const Response: {
   prototype: Response;
   new (body?: BodyInit | null, init?: ResponseInit): Response;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/error_static) */
   error(): Response;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/json_static) */
-  json(data: any, init?: ResponseInit): Response;
+  json(data: unknown, init?: ResponseInit): Response;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/redirect_static) */
   redirect(url: string | URL, status?: number): Response;
 };
@@ -22622,7 +22856,7 @@ interface SVGAElement extends SVGGraphicsElement, SVGURIReference {
   readonly target: SVGAnimatedString;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -22632,7 +22866,7 @@ interface SVGAElement extends SVGGraphicsElement, SVGURIReference {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -22642,7 +22876,7 @@ interface SVGAElement extends SVGGraphicsElement, SVGURIReference {
   ): void;
 }

-declare var SVGAElement: {
+declare const SVGAElement: {
   prototype: SVGAElement;
   new (): SVGAElement;
 };
@@ -22666,7 +22900,7 @@ interface SVGAngle {
   readonly SVG_ANGLETYPE_GRAD: 4;
 }

-declare var SVGAngle: {
+declare const SVGAngle: {
   prototype: SVGAngle;
   new (): SVGAngle;
   readonly SVG_ANGLETYPE_UNKNOWN: 0;
@@ -22680,7 +22914,7 @@ declare var SVGAngle: {
 interface SVGAnimateElement extends SVGAnimationElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGAnimateElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGAnimateElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -22690,7 +22924,7 @@ interface SVGAnimateElement extends SVGAnimationElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGAnimateElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGAnimateElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -22700,7 +22934,7 @@ interface SVGAnimateElement extends SVGAnimationElement {
   ): void;
 }

-declare var SVGAnimateElement: {
+declare const SVGAnimateElement: {
   prototype: SVGAnimateElement;
   new (): SVGAnimateElement;
 };
@@ -22709,7 +22943,10 @@ declare var SVGAnimateElement: {
 interface SVGAnimateMotionElement extends SVGAnimationElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGAnimateMotionElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGAnimateMotionElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -22719,7 +22956,10 @@ interface SVGAnimateMotionElement extends SVGAnimationElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGAnimateMotionElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGAnimateMotionElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -22729,7 +22969,7 @@ interface SVGAnimateMotionElement extends SVGAnimationElement {
   ): void;
 }

-declare var SVGAnimateMotionElement: {
+declare const SVGAnimateMotionElement: {
   prototype: SVGAnimateMotionElement;
   new (): SVGAnimateMotionElement;
 };
@@ -22741,7 +22981,7 @@ interface SVGAnimateTransformElement extends SVGAnimationElement {
     listener: (
       this: SVGAnimateTransformElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -22754,7 +22994,7 @@ interface SVGAnimateTransformElement extends SVGAnimationElement {
     listener: (
       this: SVGAnimateTransformElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -22764,7 +23004,7 @@ interface SVGAnimateTransformElement extends SVGAnimationElement {
   ): void;
 }

-declare var SVGAnimateTransformElement: {
+declare const SVGAnimateTransformElement: {
   prototype: SVGAnimateTransformElement;
   new (): SVGAnimateTransformElement;
 };
@@ -22779,7 +23019,7 @@ interface SVGAnimatedAngle {
   readonly baseVal: SVGAngle;
 }

-declare var SVGAnimatedAngle: {
+declare const SVGAnimatedAngle: {
   prototype: SVGAnimatedAngle;
   new (): SVGAnimatedAngle;
 };
@@ -22794,7 +23034,7 @@ interface SVGAnimatedBoolean {
   baseVal: boolean;
 }

-declare var SVGAnimatedBoolean: {
+declare const SVGAnimatedBoolean: {
   prototype: SVGAnimatedBoolean;
   new (): SVGAnimatedBoolean;
 };
@@ -22811,7 +23051,7 @@ interface SVGAnimatedEnumeration {
   baseVal: number;
 }

-declare var SVGAnimatedEnumeration: {
+declare const SVGAnimatedEnumeration: {
   prototype: SVGAnimatedEnumeration;
   new (): SVGAnimatedEnumeration;
 };
@@ -22826,7 +23066,7 @@ interface SVGAnimatedInteger {
   baseVal: number;
 }

-declare var SVGAnimatedInteger: {
+declare const SVGAnimatedInteger: {
   prototype: SVGAnimatedInteger;
   new (): SVGAnimatedInteger;
 };
@@ -22843,7 +23083,7 @@ interface SVGAnimatedLength {
   readonly baseVal: SVGLength;
 }

-declare var SVGAnimatedLength: {
+declare const SVGAnimatedLength: {
   prototype: SVGAnimatedLength;
   new (): SVGAnimatedLength;
 };
@@ -22858,7 +23098,7 @@ interface SVGAnimatedLengthList {
   readonly baseVal: SVGLengthList;
 }

-declare var SVGAnimatedLengthList: {
+declare const SVGAnimatedLengthList: {
   prototype: SVGAnimatedLengthList;
   new (): SVGAnimatedLengthList;
 };
@@ -22873,7 +23113,7 @@ interface SVGAnimatedNumber {
   baseVal: number;
 }

-declare var SVGAnimatedNumber: {
+declare const SVGAnimatedNumber: {
   prototype: SVGAnimatedNumber;
   new (): SVGAnimatedNumber;
 };
@@ -22888,7 +23128,7 @@ interface SVGAnimatedNumberList {
   readonly baseVal: SVGNumberList;
 }

-declare var SVGAnimatedNumberList: {
+declare const SVGAnimatedNumberList: {
   prototype: SVGAnimatedNumberList;
   new (): SVGAnimatedNumberList;
 };
@@ -22908,7 +23148,7 @@ interface SVGAnimatedPreserveAspectRatio {
   readonly baseVal: SVGPreserveAspectRatio;
 }

-declare var SVGAnimatedPreserveAspectRatio: {
+declare const SVGAnimatedPreserveAspectRatio: {
   prototype: SVGAnimatedPreserveAspectRatio;
   new (): SVGAnimatedPreserveAspectRatio;
 };
@@ -22923,7 +23163,7 @@ interface SVGAnimatedRect {
   readonly baseVal: DOMRect;
 }

-declare var SVGAnimatedRect: {
+declare const SVGAnimatedRect: {
   prototype: SVGAnimatedRect;
   new (): SVGAnimatedRect;
 };
@@ -22940,7 +23180,7 @@ interface SVGAnimatedString {
   baseVal: string;
 }

-declare var SVGAnimatedString: {
+declare const SVGAnimatedString: {
   prototype: SVGAnimatedString;
   new (): SVGAnimatedString;
 };
@@ -22955,7 +23195,7 @@ interface SVGAnimatedTransformList {
   readonly baseVal: SVGTransformList;
 }

-declare var SVGAnimatedTransformList: {
+declare const SVGAnimatedTransformList: {
   prototype: SVGAnimatedTransformList;
   new (): SVGAnimatedTransformList;
 };
@@ -22973,7 +23213,7 @@ interface SVGAnimationElement extends SVGElement, SVGTests {
   getStartTime(): number;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGAnimationElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGAnimationElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -22983,7 +23223,7 @@ interface SVGAnimationElement extends SVGElement, SVGTests {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGAnimationElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGAnimationElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -22993,7 +23233,7 @@ interface SVGAnimationElement extends SVGElement, SVGTests {
   ): void;
 }

-declare var SVGAnimationElement: {
+declare const SVGAnimationElement: {
   prototype: SVGAnimationElement;
   new (): SVGAnimationElement;
 };
@@ -23012,7 +23252,7 @@ interface SVGCircleElement extends SVGGeometryElement {
   readonly r: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23022,7 +23262,7 @@ interface SVGCircleElement extends SVGGeometryElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23032,7 +23272,7 @@ interface SVGCircleElement extends SVGGeometryElement {
   ): void;
 }

-declare var SVGCircleElement: {
+declare const SVGCircleElement: {
   prototype: SVGCircleElement;
   new (): SVGCircleElement;
 };
@@ -23049,7 +23289,7 @@ interface SVGClipPathElement extends SVGElement {
   readonly transform: SVGAnimatedTransformList;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23059,7 +23299,7 @@ interface SVGClipPathElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23069,7 +23309,7 @@ interface SVGClipPathElement extends SVGElement {
   ): void;
 }

-declare var SVGClipPathElement: {
+declare const SVGClipPathElement: {
   prototype: SVGClipPathElement;
   new (): SVGClipPathElement;
 };
@@ -23098,7 +23338,7 @@ interface SVGComponentTransferFunctionElement extends SVGElement {
     listener: (
       this: SVGComponentTransferFunctionElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23111,7 +23351,7 @@ interface SVGComponentTransferFunctionElement extends SVGElement {
     listener: (
       this: SVGComponentTransferFunctionElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23121,7 +23361,7 @@ interface SVGComponentTransferFunctionElement extends SVGElement {
   ): void;
 }

-declare var SVGComponentTransferFunctionElement: {
+declare const SVGComponentTransferFunctionElement: {
   prototype: SVGComponentTransferFunctionElement;
   new (): SVGComponentTransferFunctionElement;
   readonly SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: 0;
@@ -23140,7 +23380,7 @@ declare var SVGComponentTransferFunctionElement: {
 interface SVGDefsElement extends SVGGraphicsElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23150,7 +23390,7 @@ interface SVGDefsElement extends SVGGraphicsElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23160,7 +23400,7 @@ interface SVGDefsElement extends SVGGraphicsElement {
   ): void;
 }

-declare var SVGDefsElement: {
+declare const SVGDefsElement: {
   prototype: SVGDefsElement;
   new (): SVGDefsElement;
 };
@@ -23173,7 +23413,7 @@ declare var SVGDefsElement: {
 interface SVGDescElement extends SVGElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23183,7 +23423,7 @@ interface SVGDescElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23193,7 +23433,7 @@ interface SVGDescElement extends SVGElement {
   ): void;
 }

-declare var SVGDescElement: {
+declare const SVGDescElement: {
   prototype: SVGDescElement;
   new (): SVGDescElement;
 };
@@ -23213,12 +23453,12 @@ interface SVGElement
     GlobalEventHandlers,
     HTMLOrSVGElement {
   /** @deprecated */
-  readonly className: any;
+  // readonly className: unknown;
   readonly ownerSVGElement: SVGSVGElement | null;
   readonly viewportElement: SVGElement | null;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23228,7 +23468,7 @@ interface SVGElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23238,7 +23478,7 @@ interface SVGElement
   ): void;
 }

-declare var SVGElement: {
+declare const SVGElement: {
   prototype: SVGElement;
   new (): SVGElement;
 };
@@ -23255,7 +23495,7 @@ interface SVGEllipseElement extends SVGGeometryElement {
   readonly ry: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23265,7 +23505,7 @@ interface SVGEllipseElement extends SVGGeometryElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23275,7 +23515,7 @@ interface SVGEllipseElement extends SVGGeometryElement {
   ): void;
 }

-declare var SVGEllipseElement: {
+declare const SVGEllipseElement: {
   prototype: SVGEllipseElement;
   new (): SVGEllipseElement;
 };
@@ -23310,7 +23550,7 @@ interface SVGFEBlendElement
   readonly SVG_FEBLEND_MODE_LUMINOSITY: 16;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23320,7 +23560,7 @@ interface SVGFEBlendElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23330,7 +23570,7 @@ interface SVGFEBlendElement
   ): void;
 }

-declare var SVGFEBlendElement: {
+declare const SVGFEBlendElement: {
   prototype: SVGFEBlendElement;
   new (): SVGFEBlendElement;
   readonly SVG_FEBLEND_MODE_UNKNOWN: 0;
@@ -23370,7 +23610,10 @@ interface SVGFEColorMatrixElement
   readonly SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: 4;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEColorMatrixElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEColorMatrixElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23380,7 +23623,10 @@ interface SVGFEColorMatrixElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEColorMatrixElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEColorMatrixElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23390,7 +23636,7 @@ interface SVGFEColorMatrixElement
   ): void;
 }

-declare var SVGFEColorMatrixElement: {
+declare const SVGFEColorMatrixElement: {
   prototype: SVGFEColorMatrixElement;
   new (): SVGFEColorMatrixElement;
   readonly SVG_FECOLORMATRIX_TYPE_UNKNOWN: 0;
@@ -23414,7 +23660,7 @@ interface SVGFEComponentTransferElement
     listener: (
       this: SVGFEComponentTransferElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23427,7 +23673,7 @@ interface SVGFEComponentTransferElement
     listener: (
       this: SVGFEComponentTransferElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23437,7 +23683,7 @@ interface SVGFEComponentTransferElement
   ): void;
 }

-declare var SVGFEComponentTransferElement: {
+declare const SVGFEComponentTransferElement: {
   prototype: SVGFEComponentTransferElement;
   new (): SVGFEComponentTransferElement;
 };
@@ -23466,7 +23712,10 @@ interface SVGFECompositeElement
   readonly SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: 6;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFECompositeElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFECompositeElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23476,7 +23725,10 @@ interface SVGFECompositeElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFECompositeElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFECompositeElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23486,7 +23738,7 @@ interface SVGFECompositeElement
   ): void;
 }

-declare var SVGFECompositeElement: {
+declare const SVGFECompositeElement: {
   prototype: SVGFECompositeElement;
   new (): SVGFECompositeElement;
   readonly SVG_FECOMPOSITE_OPERATOR_UNKNOWN: 0;
@@ -23527,7 +23779,7 @@ interface SVGFEConvolveMatrixElement
     listener: (
       this: SVGFEConvolveMatrixElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23540,7 +23792,7 @@ interface SVGFEConvolveMatrixElement
     listener: (
       this: SVGFEConvolveMatrixElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23550,7 +23802,7 @@ interface SVGFEConvolveMatrixElement
   ): void;
 }

-declare var SVGFEConvolveMatrixElement: {
+declare const SVGFEConvolveMatrixElement: {
   prototype: SVGFEConvolveMatrixElement;
   new (): SVGFEConvolveMatrixElement;
   readonly SVG_EDGEMODE_UNKNOWN: 0;
@@ -23577,7 +23829,7 @@ interface SVGFEDiffuseLightingElement
     listener: (
       this: SVGFEDiffuseLightingElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23590,7 +23842,7 @@ interface SVGFEDiffuseLightingElement
     listener: (
       this: SVGFEDiffuseLightingElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23600,7 +23852,7 @@ interface SVGFEDiffuseLightingElement
   ): void;
 }

-declare var SVGFEDiffuseLightingElement: {
+declare const SVGFEDiffuseLightingElement: {
   prototype: SVGFEDiffuseLightingElement;
   new (): SVGFEDiffuseLightingElement;
 };
@@ -23628,7 +23880,7 @@ interface SVGFEDisplacementMapElement
     listener: (
       this: SVGFEDisplacementMapElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23641,7 +23893,7 @@ interface SVGFEDisplacementMapElement
     listener: (
       this: SVGFEDisplacementMapElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23651,7 +23903,7 @@ interface SVGFEDisplacementMapElement
   ): void;
 }

-declare var SVGFEDisplacementMapElement: {
+declare const SVGFEDisplacementMapElement: {
   prototype: SVGFEDisplacementMapElement;
   new (): SVGFEDisplacementMapElement;
   readonly SVG_CHANNEL_UNKNOWN: 0;
@@ -23674,7 +23926,7 @@ interface SVGFEDistantLightElement extends SVGElement {
     listener: (
       this: SVGFEDistantLightElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23687,7 +23939,7 @@ interface SVGFEDistantLightElement extends SVGElement {
     listener: (
       this: SVGFEDistantLightElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23697,7 +23949,7 @@ interface SVGFEDistantLightElement extends SVGElement {
   ): void;
 }

-declare var SVGFEDistantLightElement: {
+declare const SVGFEDistantLightElement: {
   prototype: SVGFEDistantLightElement;
   new (): SVGFEDistantLightElement;
 };
@@ -23714,7 +23966,10 @@ interface SVGFEDropShadowElement
   setStdDeviation(stdDeviationX: number, stdDeviationY: number): void;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEDropShadowElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEDropShadowElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23724,7 +23979,10 @@ interface SVGFEDropShadowElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEDropShadowElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEDropShadowElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23734,7 +23992,7 @@ interface SVGFEDropShadowElement
   ): void;
 }

-declare var SVGFEDropShadowElement: {
+declare const SVGFEDropShadowElement: {
   prototype: SVGFEDropShadowElement;
   new (): SVGFEDropShadowElement;
 };
@@ -23749,7 +24007,7 @@ interface SVGFEFloodElement
     SVGFilterPrimitiveStandardAttributes {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23759,7 +24017,7 @@ interface SVGFEFloodElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23769,7 +24027,7 @@ interface SVGFEFloodElement
   ): void;
 }

-declare var SVGFEFloodElement: {
+declare const SVGFEFloodElement: {
   prototype: SVGFEFloodElement;
   new (): SVGFEFloodElement;
 };
@@ -23782,7 +24040,7 @@ declare var SVGFEFloodElement: {
 interface SVGFEFuncAElement extends SVGComponentTransferFunctionElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23792,7 +24050,7 @@ interface SVGFEFuncAElement extends SVGComponentTransferFunctionElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23802,7 +24060,7 @@ interface SVGFEFuncAElement extends SVGComponentTransferFunctionElement {
   ): void;
 }

-declare var SVGFEFuncAElement: {
+declare const SVGFEFuncAElement: {
   prototype: SVGFEFuncAElement;
   new (): SVGFEFuncAElement;
 };
@@ -23815,7 +24073,7 @@ declare var SVGFEFuncAElement: {
 interface SVGFEFuncBElement extends SVGComponentTransferFunctionElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23825,7 +24083,7 @@ interface SVGFEFuncBElement extends SVGComponentTransferFunctionElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23835,7 +24093,7 @@ interface SVGFEFuncBElement extends SVGComponentTransferFunctionElement {
   ): void;
 }

-declare var SVGFEFuncBElement: {
+declare const SVGFEFuncBElement: {
   prototype: SVGFEFuncBElement;
   new (): SVGFEFuncBElement;
 };
@@ -23848,7 +24106,7 @@ declare var SVGFEFuncBElement: {
 interface SVGFEFuncGElement extends SVGComponentTransferFunctionElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23858,7 +24116,7 @@ interface SVGFEFuncGElement extends SVGComponentTransferFunctionElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23868,7 +24126,7 @@ interface SVGFEFuncGElement extends SVGComponentTransferFunctionElement {
   ): void;
 }

-declare var SVGFEFuncGElement: {
+declare const SVGFEFuncGElement: {
   prototype: SVGFEFuncGElement;
   new (): SVGFEFuncGElement;
 };
@@ -23881,7 +24139,7 @@ declare var SVGFEFuncGElement: {
 interface SVGFEFuncRElement extends SVGComponentTransferFunctionElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23891,7 +24149,7 @@ interface SVGFEFuncRElement extends SVGComponentTransferFunctionElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23901,7 +24159,7 @@ interface SVGFEFuncRElement extends SVGComponentTransferFunctionElement {
   ): void;
 }

-declare var SVGFEFuncRElement: {
+declare const SVGFEFuncRElement: {
   prototype: SVGFEFuncRElement;
   new (): SVGFEFuncRElement;
 };
@@ -23923,7 +24181,7 @@ interface SVGFEGaussianBlurElement
     listener: (
       this: SVGFEGaussianBlurElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23936,7 +24194,7 @@ interface SVGFEGaussianBlurElement
     listener: (
       this: SVGFEGaussianBlurElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23946,7 +24204,7 @@ interface SVGFEGaussianBlurElement
   ): void;
 }

-declare var SVGFEGaussianBlurElement: {
+declare const SVGFEGaussianBlurElement: {
   prototype: SVGFEGaussianBlurElement;
   new (): SVGFEGaussianBlurElement;
 };
@@ -23963,7 +24221,7 @@ interface SVGFEImageElement
   readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -23973,7 +24231,7 @@ interface SVGFEImageElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -23983,7 +24241,7 @@ interface SVGFEImageElement
   ): void;
 }

-declare var SVGFEImageElement: {
+declare const SVGFEImageElement: {
   prototype: SVGFEImageElement;
   new (): SVGFEImageElement;
 };
@@ -23998,7 +24256,7 @@ interface SVGFEMergeElement
     SVGFilterPrimitiveStandardAttributes {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24008,7 +24266,7 @@ interface SVGFEMergeElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24018,7 +24276,7 @@ interface SVGFEMergeElement
   ): void;
 }

-declare var SVGFEMergeElement: {
+declare const SVGFEMergeElement: {
   prototype: SVGFEMergeElement;
   new (): SVGFEMergeElement;
 };
@@ -24032,7 +24290,10 @@ interface SVGFEMergeNodeElement extends SVGElement {
   readonly in1: SVGAnimatedString;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEMergeNodeElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEMergeNodeElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24042,7 +24303,10 @@ interface SVGFEMergeNodeElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEMergeNodeElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEMergeNodeElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24052,7 +24316,7 @@ interface SVGFEMergeNodeElement extends SVGElement {
   ): void;
 }

-declare var SVGFEMergeNodeElement: {
+declare const SVGFEMergeNodeElement: {
   prototype: SVGFEMergeNodeElement;
   new (): SVGFEMergeNodeElement;
 };
@@ -24074,7 +24338,10 @@ interface SVGFEMorphologyElement
   readonly SVG_MORPHOLOGY_OPERATOR_DILATE: 2;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEMorphologyElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEMorphologyElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24084,7 +24351,10 @@ interface SVGFEMorphologyElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEMorphologyElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEMorphologyElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24094,7 +24364,7 @@ interface SVGFEMorphologyElement
   ): void;
 }

-declare var SVGFEMorphologyElement: {
+declare const SVGFEMorphologyElement: {
   prototype: SVGFEMorphologyElement;
   new (): SVGFEMorphologyElement;
   readonly SVG_MORPHOLOGY_OPERATOR_UNKNOWN: 0;
@@ -24115,7 +24385,7 @@ interface SVGFEOffsetElement
   readonly in1: SVGAnimatedString;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24125,7 +24395,7 @@ interface SVGFEOffsetElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24135,7 +24405,7 @@ interface SVGFEOffsetElement
   ): void;
 }

-declare var SVGFEOffsetElement: {
+declare const SVGFEOffsetElement: {
   prototype: SVGFEOffsetElement;
   new (): SVGFEOffsetElement;
 };
@@ -24151,7 +24421,10 @@ interface SVGFEPointLightElement extends SVGElement {
   readonly z: SVGAnimatedNumber;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEPointLightElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEPointLightElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24161,7 +24434,10 @@ interface SVGFEPointLightElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFEPointLightElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFEPointLightElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24171,7 +24447,7 @@ interface SVGFEPointLightElement extends SVGElement {
   ): void;
 }

-declare var SVGFEPointLightElement: {
+declare const SVGFEPointLightElement: {
   prototype: SVGFEPointLightElement;
   new (): SVGFEPointLightElement;
 };
@@ -24195,7 +24471,7 @@ interface SVGFESpecularLightingElement
     listener: (
       this: SVGFESpecularLightingElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24208,7 +24484,7 @@ interface SVGFESpecularLightingElement
     listener: (
       this: SVGFESpecularLightingElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24218,7 +24494,7 @@ interface SVGFESpecularLightingElement
   ): void;
 }

-declare var SVGFESpecularLightingElement: {
+declare const SVGFESpecularLightingElement: {
   prototype: SVGFESpecularLightingElement;
   new (): SVGFESpecularLightingElement;
 };
@@ -24239,7 +24515,10 @@ interface SVGFESpotLightElement extends SVGElement {
   readonly z: SVGAnimatedNumber;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFESpotLightElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFESpotLightElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24249,7 +24528,10 @@ interface SVGFESpotLightElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFESpotLightElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFESpotLightElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24259,7 +24541,7 @@ interface SVGFESpotLightElement extends SVGElement {
   ): void;
 }

-declare var SVGFESpotLightElement: {
+declare const SVGFESpotLightElement: {
   prototype: SVGFESpotLightElement;
   new (): SVGFESpotLightElement;
 };
@@ -24275,7 +24557,7 @@ interface SVGFETileElement
   readonly in1: SVGAnimatedString;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24285,7 +24567,7 @@ interface SVGFETileElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24295,7 +24577,7 @@ interface SVGFETileElement
   ): void;
 }

-declare var SVGFETileElement: {
+declare const SVGFETileElement: {
   prototype: SVGFETileElement;
   new (): SVGFETileElement;
 };
@@ -24322,7 +24604,10 @@ interface SVGFETurbulenceElement
   readonly SVG_STITCHTYPE_NOSTITCH: 2;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFETurbulenceElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFETurbulenceElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24332,7 +24617,10 @@ interface SVGFETurbulenceElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFETurbulenceElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGFETurbulenceElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24342,7 +24630,7 @@ interface SVGFETurbulenceElement
   ): void;
 }

-declare var SVGFETurbulenceElement: {
+declare const SVGFETurbulenceElement: {
   prototype: SVGFETurbulenceElement;
   new (): SVGFETurbulenceElement;
   readonly SVG_TURBULENCE_TYPE_UNKNOWN: 0;
@@ -24367,7 +24655,7 @@ interface SVGFilterElement extends SVGElement, SVGURIReference {
   readonly y: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24377,7 +24665,7 @@ interface SVGFilterElement extends SVGElement, SVGURIReference {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24387,7 +24675,7 @@ interface SVGFilterElement extends SVGElement, SVGURIReference {
   ): void;
 }

-declare var SVGFilterElement: {
+declare const SVGFilterElement: {
   prototype: SVGFilterElement;
   new (): SVGFilterElement;
 };
@@ -24419,7 +24707,10 @@ interface SVGForeignObjectElement extends SVGGraphicsElement {
   readonly y: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGForeignObjectElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGForeignObjectElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24429,7 +24720,10 @@ interface SVGForeignObjectElement extends SVGGraphicsElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGForeignObjectElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGForeignObjectElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24439,7 +24733,7 @@ interface SVGForeignObjectElement extends SVGGraphicsElement {
   ): void;
 }

-declare var SVGForeignObjectElement: {
+declare const SVGForeignObjectElement: {
   prototype: SVGForeignObjectElement;
   new (): SVGForeignObjectElement;
 };
@@ -24452,7 +24746,7 @@ declare var SVGForeignObjectElement: {
 interface SVGGElement extends SVGGraphicsElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24462,7 +24756,7 @@ interface SVGGElement extends SVGGraphicsElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24472,7 +24766,7 @@ interface SVGGElement extends SVGGraphicsElement {
   ): void;
 }

-declare var SVGGElement: {
+declare const SVGGElement: {
   prototype: SVGGElement;
   new (): SVGGElement;
 };
@@ -24491,7 +24785,7 @@ interface SVGGeometryElement extends SVGGraphicsElement {
   isPointInStroke(point?: DOMPointInit): boolean;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGGeometryElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGGeometryElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24501,7 +24795,7 @@ interface SVGGeometryElement extends SVGGraphicsElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGGeometryElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGGeometryElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24511,7 +24805,7 @@ interface SVGGeometryElement extends SVGGraphicsElement {
   ): void;
 }

-declare var SVGGeometryElement: {
+declare const SVGGeometryElement: {
   prototype: SVGGeometryElement;
   new (): SVGGeometryElement;
 };
@@ -24531,7 +24825,7 @@ interface SVGGradientElement extends SVGElement, SVGURIReference {
   readonly SVG_SPREADMETHOD_REPEAT: 3;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24541,7 +24835,7 @@ interface SVGGradientElement extends SVGElement, SVGURIReference {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24551,7 +24845,7 @@ interface SVGGradientElement extends SVGElement, SVGURIReference {
   ): void;
 }

-declare var SVGGradientElement: {
+declare const SVGGradientElement: {
   prototype: SVGGradientElement;
   new (): SVGGradientElement;
   readonly SVG_SPREADMETHOD_UNKNOWN: 0;
@@ -24573,7 +24867,7 @@ interface SVGGraphicsElement extends SVGElement, SVGTests {
   getScreenCTM(): DOMMatrix | null;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24583,7 +24877,7 @@ interface SVGGraphicsElement extends SVGElement, SVGTests {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24593,7 +24887,7 @@ interface SVGGraphicsElement extends SVGElement, SVGTests {
   ): void;
 }

-declare var SVGGraphicsElement: {
+declare const SVGGraphicsElement: {
   prototype: SVGGraphicsElement;
   new (): SVGGraphicsElement;
 };
@@ -24617,7 +24911,7 @@ interface SVGImageElement extends SVGGraphicsElement, SVGURIReference {
   readonly y: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24627,7 +24921,7 @@ interface SVGImageElement extends SVGGraphicsElement, SVGURIReference {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24637,7 +24931,7 @@ interface SVGImageElement extends SVGGraphicsElement, SVGURIReference {
   ): void;
 }

-declare var SVGImageElement: {
+declare const SVGImageElement: {
   prototype: SVGImageElement;
   new (): SVGImageElement;
 };
@@ -24667,7 +24961,7 @@ interface SVGLength {
   readonly SVG_LENGTHTYPE_PC: 10;
 }

-declare var SVGLength: {
+declare const SVGLength: {
   prototype: SVGLength;
   new (): SVGLength;
   readonly SVG_LENGTHTYPE_UNKNOWN: 0;
@@ -24710,7 +25004,7 @@ interface SVGLengthList {
   [index: number]: SVGLength;
 }

-declare var SVGLengthList: {
+declare const SVGLengthList: {
   prototype: SVGLengthList;
   new (): SVGLengthList;
 };
@@ -24727,7 +25021,7 @@ interface SVGLineElement extends SVGGeometryElement {
   readonly y2: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24737,7 +25031,7 @@ interface SVGLineElement extends SVGGeometryElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24747,7 +25041,7 @@ interface SVGLineElement extends SVGGeometryElement {
   ): void;
 }

-declare var SVGLineElement: {
+declare const SVGLineElement: {
   prototype: SVGLineElement;
   new (): SVGLineElement;
 };
@@ -24767,7 +25061,7 @@ interface SVGLinearGradientElement extends SVGGradientElement {
     listener: (
       this: SVGLinearGradientElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24780,7 +25074,7 @@ interface SVGLinearGradientElement extends SVGGradientElement {
     listener: (
       this: SVGLinearGradientElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24790,7 +25084,7 @@ interface SVGLinearGradientElement extends SVGGradientElement {
   ): void;
 }

-declare var SVGLinearGradientElement: {
+declare const SVGLinearGradientElement: {
   prototype: SVGLinearGradientElement;
   new (): SVGLinearGradientElement;
 };
@@ -24799,7 +25093,7 @@ declare var SVGLinearGradientElement: {
 interface SVGMPathElement extends SVGElement, SVGURIReference {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGMPathElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGMPathElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24809,7 +25103,7 @@ interface SVGMPathElement extends SVGElement, SVGURIReference {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGMPathElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGMPathElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24819,7 +25113,7 @@ interface SVGMPathElement extends SVGElement, SVGURIReference {
   ): void;
 }

-declare var SVGMPathElement: {
+declare const SVGMPathElement: {
   prototype: SVGMPathElement;
   new (): SVGMPathElement;
 };
@@ -24852,7 +25146,7 @@ interface SVGMarkerElement extends SVGElement, SVGFitToViewBox {
   readonly SVG_MARKER_ORIENT_ANGLE: 2;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24862,7 +25156,7 @@ interface SVGMarkerElement extends SVGElement, SVGFitToViewBox {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24872,7 +25166,7 @@ interface SVGMarkerElement extends SVGElement, SVGFitToViewBox {
   ): void;
 }

-declare var SVGMarkerElement: {
+declare const SVGMarkerElement: {
   prototype: SVGMarkerElement;
   new (): SVGMarkerElement;
   readonly SVG_MARKERUNITS_UNKNOWN: 0;
@@ -24903,7 +25197,7 @@ interface SVGMaskElement extends SVGElement {
   readonly y: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24913,7 +25207,7 @@ interface SVGMaskElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24923,7 +25217,7 @@ interface SVGMaskElement extends SVGElement {
   ): void;
 }

-declare var SVGMaskElement: {
+declare const SVGMaskElement: {
   prototype: SVGMaskElement;
   new (): SVGMaskElement;
 };
@@ -24936,7 +25230,7 @@ declare var SVGMaskElement: {
 interface SVGMetadataElement extends SVGElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -24946,7 +25240,7 @@ interface SVGMetadataElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -24956,7 +25250,7 @@ interface SVGMetadataElement extends SVGElement {
   ): void;
 }

-declare var SVGMetadataElement: {
+declare const SVGMetadataElement: {
   prototype: SVGMetadataElement;
   new (): SVGMetadataElement;
 };
@@ -24970,7 +25264,7 @@ interface SVGNumber {
   value: number;
 }

-declare var SVGNumber: {
+declare const SVGNumber: {
   prototype: SVGNumber;
   new (): SVGNumber;
 };
@@ -24993,7 +25287,7 @@ interface SVGNumberList {
   [index: number]: SVGNumber;
 }

-declare var SVGNumberList: {
+declare const SVGNumberList: {
   prototype: SVGNumberList;
   new (): SVGNumberList;
 };
@@ -25006,7 +25300,7 @@ declare var SVGNumberList: {
 interface SVGPathElement extends SVGGeometryElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25016,7 +25310,7 @@ interface SVGPathElement extends SVGGeometryElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25026,7 +25320,7 @@ interface SVGPathElement extends SVGGeometryElement {
   ): void;
 }

-declare var SVGPathElement: {
+declare const SVGPathElement: {
   prototype: SVGPathElement;
   new (): SVGPathElement;
 };
@@ -25049,7 +25343,7 @@ interface SVGPatternElement
   readonly y: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25059,7 +25353,7 @@ interface SVGPatternElement
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25069,7 +25363,7 @@ interface SVGPatternElement
   ): void;
 }

-declare var SVGPatternElement: {
+declare const SVGPatternElement: {
   prototype: SVGPatternElement;
   new (): SVGPatternElement;
 };
@@ -25097,7 +25391,7 @@ interface SVGPointList {
   [index: number]: DOMPoint;
 }

-declare var SVGPointList: {
+declare const SVGPointList: {
   prototype: SVGPointList;
   new (): SVGPointList;
 };
@@ -25110,7 +25404,7 @@ declare var SVGPointList: {
 interface SVGPolygonElement extends SVGGeometryElement, SVGAnimatedPoints {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25120,7 +25414,7 @@ interface SVGPolygonElement extends SVGGeometryElement, SVGAnimatedPoints {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25130,7 +25424,7 @@ interface SVGPolygonElement extends SVGGeometryElement, SVGAnimatedPoints {
   ): void;
 }

-declare var SVGPolygonElement: {
+declare const SVGPolygonElement: {
   prototype: SVGPolygonElement;
   new (): SVGPolygonElement;
 };
@@ -25143,7 +25437,7 @@ declare var SVGPolygonElement: {
 interface SVGPolylineElement extends SVGGeometryElement, SVGAnimatedPoints {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25153,7 +25447,7 @@ interface SVGPolylineElement extends SVGGeometryElement, SVGAnimatedPoints {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25163,7 +25457,7 @@ interface SVGPolylineElement extends SVGGeometryElement, SVGAnimatedPoints {
   ): void;
 }

-declare var SVGPolylineElement: {
+declare const SVGPolylineElement: {
   prototype: SVGPolylineElement;
   new (): SVGPolylineElement;
 };
@@ -25192,7 +25486,7 @@ interface SVGPreserveAspectRatio {
   readonly SVG_MEETORSLICE_SLICE: 2;
 }

-declare var SVGPreserveAspectRatio: {
+declare const SVGPreserveAspectRatio: {
   prototype: SVGPreserveAspectRatio;
   new (): SVGPreserveAspectRatio;
   readonly SVG_PRESERVEASPECTRATIO_UNKNOWN: 0;
@@ -25228,7 +25522,7 @@ interface SVGRadialGradientElement extends SVGGradientElement {
     listener: (
       this: SVGRadialGradientElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25241,7 +25535,7 @@ interface SVGRadialGradientElement extends SVGGradientElement {
     listener: (
       this: SVGRadialGradientElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25251,7 +25545,7 @@ interface SVGRadialGradientElement extends SVGGradientElement {
   ): void;
 }

-declare var SVGRadialGradientElement: {
+declare const SVGRadialGradientElement: {
   prototype: SVGRadialGradientElement;
   new (): SVGRadialGradientElement;
 };
@@ -25270,7 +25564,7 @@ interface SVGRectElement extends SVGGeometryElement {
   readonly y: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25280,7 +25574,7 @@ interface SVGRectElement extends SVGGeometryElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25290,7 +25584,7 @@ interface SVGRectElement extends SVGGeometryElement {
   ): void;
 }

-declare var SVGRectElement: {
+declare const SVGRectElement: {
   prototype: SVGRectElement;
   new (): SVGRectElement;
 };
@@ -25371,7 +25665,7 @@ interface SVGSVGElement
   unsuspendRedrawAll(): void;
   addEventListener<K extends keyof SVGSVGElementEventMap>(
     type: K,
-    listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => any,
+    listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25381,7 +25675,7 @@ interface SVGSVGElement
   ): void;
   removeEventListener<K extends keyof SVGSVGElementEventMap>(
     type: K,
-    listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => any,
+    listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25391,7 +25685,7 @@ interface SVGSVGElement
   ): void;
 }

-declare var SVGSVGElement: {
+declare const SVGSVGElement: {
   prototype: SVGSVGElement;
   new (): SVGSVGElement;
 };
@@ -25405,7 +25699,7 @@ interface SVGScriptElement extends SVGElement, SVGURIReference {
   type: string;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25415,7 +25709,7 @@ interface SVGScriptElement extends SVGElement, SVGURIReference {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25425,7 +25719,7 @@ interface SVGScriptElement extends SVGElement, SVGURIReference {
   ): void;
 }

-declare var SVGScriptElement: {
+declare const SVGScriptElement: {
   prototype: SVGScriptElement;
   new (): SVGScriptElement;
 };
@@ -25434,7 +25728,7 @@ declare var SVGScriptElement: {
 interface SVGSetElement extends SVGAnimationElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGSetElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGSetElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25444,7 +25738,7 @@ interface SVGSetElement extends SVGAnimationElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGSetElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGSetElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25454,7 +25748,7 @@ interface SVGSetElement extends SVGAnimationElement {
   ): void;
 }

-declare var SVGSetElement: {
+declare const SVGSetElement: {
   prototype: SVGSetElement;
   new (): SVGSetElement;
 };
@@ -25468,7 +25762,7 @@ interface SVGStopElement extends SVGElement {
   readonly offset: SVGAnimatedNumber;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25478,7 +25772,7 @@ interface SVGStopElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25488,7 +25782,7 @@ interface SVGStopElement extends SVGElement {
   ): void;
 }

-declare var SVGStopElement: {
+declare const SVGStopElement: {
   prototype: SVGStopElement;
   new (): SVGStopElement;
 };
@@ -25511,7 +25805,7 @@ interface SVGStringList {
   [index: number]: string;
 }

-declare var SVGStringList: {
+declare const SVGStringList: {
   prototype: SVGStringList;
   new (): SVGStringList;
 };
@@ -25535,7 +25829,7 @@ interface SVGStyleElement extends SVGElement, LinkStyle {
   type: string;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25545,7 +25839,7 @@ interface SVGStyleElement extends SVGElement, LinkStyle {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25555,7 +25849,7 @@ interface SVGStyleElement extends SVGElement, LinkStyle {
   ): void;
 }

-declare var SVGStyleElement: {
+declare const SVGStyleElement: {
   prototype: SVGStyleElement;
   new (): SVGStyleElement;
 };
@@ -25568,7 +25862,7 @@ declare var SVGStyleElement: {
 interface SVGSwitchElement extends SVGGraphicsElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25578,7 +25872,7 @@ interface SVGSwitchElement extends SVGGraphicsElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25588,7 +25882,7 @@ interface SVGSwitchElement extends SVGGraphicsElement {
   ): void;
 }

-declare var SVGSwitchElement: {
+declare const SVGSwitchElement: {
   prototype: SVGSwitchElement;
   new (): SVGSwitchElement;
 };
@@ -25601,7 +25895,7 @@ declare var SVGSwitchElement: {
 interface SVGSymbolElement extends SVGElement, SVGFitToViewBox {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25611,7 +25905,7 @@ interface SVGSymbolElement extends SVGElement, SVGFitToViewBox {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25621,7 +25915,7 @@ interface SVGSymbolElement extends SVGElement, SVGFitToViewBox {
   ): void;
 }

-declare var SVGSymbolElement: {
+declare const SVGSymbolElement: {
   prototype: SVGSymbolElement;
   new (): SVGSymbolElement;
 };
@@ -25634,7 +25928,7 @@ declare var SVGSymbolElement: {
 interface SVGTSpanElement extends SVGTextPositioningElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25644,7 +25938,7 @@ interface SVGTSpanElement extends SVGTextPositioningElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25654,7 +25948,7 @@ interface SVGTSpanElement extends SVGTextPositioningElement {
   ): void;
 }

-declare var SVGTSpanElement: {
+declare const SVGTSpanElement: {
   prototype: SVGTSpanElement;
   new (): SVGTSpanElement;
 };
@@ -25687,7 +25981,10 @@ interface SVGTextContentElement extends SVGGraphicsElement {
   readonly LENGTHADJUST_SPACINGANDGLYPHS: 2;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTextContentElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGTextContentElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25697,7 +25994,10 @@ interface SVGTextContentElement extends SVGGraphicsElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTextContentElement, ev: SVGElementEventMap[K]) => any,
+    listener: (
+      this: SVGTextContentElement,
+      ev: SVGElementEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25707,7 +26007,7 @@ interface SVGTextContentElement extends SVGGraphicsElement {
   ): void;
 }

-declare var SVGTextContentElement: {
+declare const SVGTextContentElement: {
   prototype: SVGTextContentElement;
   new (): SVGTextContentElement;
   readonly LENGTHADJUST_UNKNOWN: 0;
@@ -25723,7 +26023,7 @@ declare var SVGTextContentElement: {
 interface SVGTextElement extends SVGTextPositioningElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25733,7 +26033,7 @@ interface SVGTextElement extends SVGTextPositioningElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25743,7 +26043,7 @@ interface SVGTextElement extends SVGTextPositioningElement {
   ): void;
 }

-declare var SVGTextElement: {
+declare const SVGTextElement: {
   prototype: SVGTextElement;
   new (): SVGTextElement;
 };
@@ -25765,7 +26065,7 @@ interface SVGTextPathElement extends SVGTextContentElement, SVGURIReference {
   readonly TEXTPATH_SPACINGTYPE_EXACT: 2;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25775,7 +26075,7 @@ interface SVGTextPathElement extends SVGTextContentElement, SVGURIReference {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25785,7 +26085,7 @@ interface SVGTextPathElement extends SVGTextContentElement, SVGURIReference {
   ): void;
 }

-declare var SVGTextPathElement: {
+declare const SVGTextPathElement: {
   prototype: SVGTextPathElement;
   new (): SVGTextPathElement;
   readonly TEXTPATH_METHODTYPE_UNKNOWN: 0;
@@ -25812,7 +26112,7 @@ interface SVGTextPositioningElement extends SVGTextContentElement {
     listener: (
       this: SVGTextPositioningElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25825,7 +26125,7 @@ interface SVGTextPositioningElement extends SVGTextContentElement {
     listener: (
       this: SVGTextPositioningElement,
       ev: SVGElementEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25835,7 +26135,7 @@ interface SVGTextPositioningElement extends SVGTextContentElement {
   ): void;
 }

-declare var SVGTextPositioningElement: {
+declare const SVGTextPositioningElement: {
   prototype: SVGTextPositioningElement;
   new (): SVGTextPositioningElement;
 };
@@ -25848,7 +26148,7 @@ declare var SVGTextPositioningElement: {
 interface SVGTitleElement extends SVGElement {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25858,7 +26158,7 @@ interface SVGTitleElement extends SVGElement {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25868,7 +26168,7 @@ interface SVGTitleElement extends SVGElement {
   ): void;
 }

-declare var SVGTitleElement: {
+declare const SVGTitleElement: {
   prototype: SVGTitleElement;
   new (): SVGTitleElement;
 };
@@ -25897,7 +26197,7 @@ interface SVGTransform {
   readonly SVG_TRANSFORM_SKEWY: 6;
 }

-declare var SVGTransform: {
+declare const SVGTransform: {
   prototype: SVGTransform;
   new (): SVGTransform;
   readonly SVG_TRANSFORM_UNKNOWN: 0;
@@ -25929,7 +26229,7 @@ interface SVGTransformList {
   [index: number]: SVGTransform;
 }

-declare var SVGTransformList: {
+declare const SVGTransformList: {
   prototype: SVGTransformList;
   new (): SVGTransformList;
 };
@@ -25949,7 +26249,7 @@ interface SVGUnitTypes {
   readonly SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: 2;
 }

-declare var SVGUnitTypes: {
+declare const SVGUnitTypes: {
   prototype: SVGUnitTypes;
   new (): SVGUnitTypes;
   readonly SVG_UNIT_TYPE_UNKNOWN: 0;
@@ -25969,7 +26269,7 @@ interface SVGUseElement extends SVGGraphicsElement, SVGURIReference {
   readonly y: SVGAnimatedLength;
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -25979,7 +26279,7 @@ interface SVGUseElement extends SVGGraphicsElement, SVGURIReference {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -25989,7 +26289,7 @@ interface SVGUseElement extends SVGGraphicsElement, SVGURIReference {
   ): void;
 }

-declare var SVGUseElement: {
+declare const SVGUseElement: {
   prototype: SVGUseElement;
   new (): SVGUseElement;
 };
@@ -26002,7 +26302,7 @@ declare var SVGUseElement: {
 interface SVGViewElement extends SVGElement, SVGFitToViewBox {
   addEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -26012,7 +26312,7 @@ interface SVGViewElement extends SVGElement, SVGFitToViewBox {
   ): void;
   removeEventListener<K extends keyof SVGElementEventMap>(
     type: K,
-    listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => any,
+    listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -26022,7 +26322,7 @@ interface SVGViewElement extends SVGElement, SVGFitToViewBox {
   ): void;
 }

-declare var SVGViewElement: {
+declare const SVGViewElement: {
   prototype: SVGViewElement;
   new (): SVGViewElement;
 };
@@ -26049,7 +26349,7 @@ interface Screen {
   readonly width: number;
 }

-declare var Screen: {
+declare const Screen: {
   prototype: Screen;
   new (): Screen;
 };
@@ -26063,7 +26363,7 @@ interface ScreenOrientation extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ScreenOrientation/angle) */
   readonly angle: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ScreenOrientation/change_event) */
-  onchange: ((this: ScreenOrientation, ev: Event) => any) | null;
+  onchange: ((this: ScreenOrientation, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ScreenOrientation/type) */
   readonly type: OrientationType;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ScreenOrientation/unlock) */
@@ -26073,7 +26373,7 @@ interface ScreenOrientation extends EventTarget {
     listener: (
       this: ScreenOrientation,
       ev: ScreenOrientationEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -26086,7 +26386,7 @@ interface ScreenOrientation extends EventTarget {
     listener: (
       this: ScreenOrientation,
       ev: ScreenOrientationEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -26096,7 +26396,7 @@ interface ScreenOrientation extends EventTarget {
   ): void;
 }

-declare var ScreenOrientation: {
+declare const ScreenOrientation: {
   prototype: ScreenOrientation;
   new (): ScreenOrientation;
 };
@@ -26124,14 +26424,14 @@ interface ScriptProcessorNode extends AudioNode {
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ScriptProcessorNode/audioprocess_event)
    */
   onaudioprocess:
-    | ((this: ScriptProcessorNode, ev: AudioProcessingEvent) => any)
+    | ((this: ScriptProcessorNode, ev: AudioProcessingEvent) => unknown)
     | null;
   addEventListener<K extends keyof ScriptProcessorNodeEventMap>(
     type: K,
     listener: (
       this: ScriptProcessorNode,
       ev: ScriptProcessorNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -26144,7 +26444,7 @@ interface ScriptProcessorNode extends AudioNode {
     listener: (
       this: ScriptProcessorNode,
       ev: ScriptProcessorNodeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -26155,7 +26455,7 @@ interface ScriptProcessorNode extends AudioNode {
 }

 /** @deprecated */
-declare var ScriptProcessorNode: {
+declare const ScriptProcessorNode: {
   prototype: ScriptProcessorNode;
   new (): ScriptProcessorNode;
 };
@@ -26192,7 +26492,7 @@ interface SecurityPolicyViolationEvent extends Event {
   readonly violatedDirective: string;
 }

-declare var SecurityPolicyViolationEvent: {
+declare const SecurityPolicyViolationEvent: {
   prototype: SecurityPolicyViolationEvent;
   new (
     type: string,
@@ -26260,7 +26560,7 @@ interface Selection {
   toString(): string;
 }

-declare var Selection: {
+declare const Selection: {
   prototype: Selection;
   new (): Selection;
 };
@@ -26277,17 +26577,17 @@ interface ServiceWorkerEventMap extends AbstractWorkerEventMap {
  */
 interface ServiceWorker extends EventTarget, AbstractWorker {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/statechange_event) */
-  onstatechange: ((this: ServiceWorker, ev: Event) => any) | null;
+  onstatechange: ((this: ServiceWorker, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/scriptURL) */
   readonly scriptURL: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/state) */
   readonly state: ServiceWorkerState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/postMessage) */
-  postMessage(message: any, transfer: Transferable[]): void;
-  postMessage(message: any, options?: StructuredSerializeOptions): void;
+  postMessage(message: unknown, transfer: readonly Transferable[]): void;
+  postMessage(message: unknown, options?: StructuredSerializeOptions): void;
   addEventListener<K extends keyof ServiceWorkerEventMap>(
     type: K,
-    listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any,
+    listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -26297,7 +26597,7 @@ interface ServiceWorker extends EventTarget, AbstractWorker {
   ): void;
   removeEventListener<K extends keyof ServiceWorkerEventMap>(
     type: K,
-    listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any,
+    listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -26307,7 +26607,7 @@ interface ServiceWorker extends EventTarget, AbstractWorker {
   ): void;
 }

-declare var ServiceWorker: {
+declare const ServiceWorker: {
   prototype: ServiceWorker;
   new (): ServiceWorker;
 };
@@ -26328,12 +26628,16 @@ interface ServiceWorkerContainer extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/controller) */
   readonly controller: ServiceWorker | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/controllerchange_event) */
-  oncontrollerchange: ((this: ServiceWorkerContainer, ev: Event) => any) | null;
+  oncontrollerchange:
+    | ((this: ServiceWorkerContainer, ev: Event) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/message_event) */
-  onmessage: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;
+  onmessage:
+    | ((this: ServiceWorkerContainer, ev: MessageEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/messageerror_event) */
   onmessageerror:
-    | ((this: ServiceWorkerContainer, ev: MessageEvent) => any)
+    | ((this: ServiceWorkerContainer, ev: MessageEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/ready) */
   readonly ready: Promise<ServiceWorkerRegistration>;
@@ -26355,7 +26659,7 @@ interface ServiceWorkerContainer extends EventTarget {
     listener: (
       this: ServiceWorkerContainer,
       ev: ServiceWorkerContainerEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -26368,7 +26672,7 @@ interface ServiceWorkerContainer extends EventTarget {
     listener: (
       this: ServiceWorkerContainer,
       ev: ServiceWorkerContainerEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -26378,7 +26682,7 @@ interface ServiceWorkerContainer extends EventTarget {
   ): void;
 }

-declare var ServiceWorkerContainer: {
+declare const ServiceWorkerContainer: {
   prototype: ServiceWorkerContainer;
   new (): ServiceWorkerContainer;
 };
@@ -26401,7 +26705,9 @@ interface ServiceWorkerRegistration extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/navigationPreload) */
   readonly navigationPreload: NavigationPreloadManager;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/updatefound_event) */
-  onupdatefound: ((this: ServiceWorkerRegistration, ev: Event) => any) | null;
+  onupdatefound:
+    | ((this: ServiceWorkerRegistration, ev: Event) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/pushManager) */
   readonly pushManager: PushManager;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/scope) */
@@ -26423,7 +26729,7 @@ interface ServiceWorkerRegistration extends EventTarget {
     listener: (
       this: ServiceWorkerRegistration,
       ev: ServiceWorkerRegistrationEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -26436,7 +26742,7 @@ interface ServiceWorkerRegistration extends EventTarget {
     listener: (
       this: ServiceWorkerRegistration,
       ev: ServiceWorkerRegistrationEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -26446,7 +26752,7 @@ interface ServiceWorkerRegistration extends EventTarget {
   ): void;
 }

-declare var ServiceWorkerRegistration: {
+declare const ServiceWorkerRegistration: {
   prototype: ServiceWorkerRegistration;
   new (): ServiceWorkerRegistration;
 };
@@ -26467,7 +26773,7 @@ interface ShadowRoot extends DocumentFragment, DocumentOrShadowRoot {
   innerHTML: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/mode) */
   readonly mode: ShadowRootMode;
-  onslotchange: ((this: ShadowRoot, ev: Event) => any) | null;
+  onslotchange: ((this: ShadowRoot, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/serializable) */
   readonly serializable: boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/slotAssignment) */
@@ -26479,7 +26785,7 @@ interface ShadowRoot extends DocumentFragment, DocumentOrShadowRoot {
   /** Throws a "NotSupportedError" DOMException if context object is a shadow root. */
   addEventListener<K extends keyof ShadowRootEventMap>(
     type: K,
-    listener: (this: ShadowRoot, ev: ShadowRootEventMap[K]) => any,
+    listener: (this: ShadowRoot, ev: ShadowRootEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -26489,7 +26795,7 @@ interface ShadowRoot extends DocumentFragment, DocumentOrShadowRoot {
   ): void;
   removeEventListener<K extends keyof ShadowRootEventMap>(
     type: K,
-    listener: (this: ShadowRoot, ev: ShadowRootEventMap[K]) => any,
+    listener: (this: ShadowRoot, ev: ShadowRootEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -26499,7 +26805,7 @@ interface ShadowRoot extends DocumentFragment, DocumentOrShadowRoot {
   ): void;
 }

-declare var ShadowRoot: {
+declare const ShadowRoot: {
   prototype: ShadowRoot;
   new (): ShadowRoot;
 };
@@ -26514,7 +26820,7 @@ interface SharedWorker extends EventTarget, AbstractWorker {
   readonly port: MessagePort;
   addEventListener<K extends keyof AbstractWorkerEventMap>(
     type: K,
-    listener: (this: SharedWorker, ev: AbstractWorkerEventMap[K]) => any,
+    listener: (this: SharedWorker, ev: AbstractWorkerEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -26524,7 +26830,7 @@ interface SharedWorker extends EventTarget, AbstractWorker {
   ): void;
   removeEventListener<K extends keyof AbstractWorkerEventMap>(
     type: K,
-    listener: (this: SharedWorker, ev: AbstractWorkerEventMap[K]) => any,
+    listener: (this: SharedWorker, ev: AbstractWorkerEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -26534,7 +26840,7 @@ interface SharedWorker extends EventTarget, AbstractWorker {
   ): void;
 }

-declare var SharedWorker: {
+declare const SharedWorker: {
   prototype: SharedWorker;
   new (scriptURL: string | URL, options?: string | WorkerOptions): SharedWorker;
 };
@@ -26566,11 +26872,11 @@ interface SourceBuffer extends EventTarget {
   readonly buffered: TimeRanges;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/mode) */
   mode: AppendMode;
-  onabort: ((this: SourceBuffer, ev: Event) => any) | null;
-  onerror: ((this: SourceBuffer, ev: Event) => any) | null;
-  onupdate: ((this: SourceBuffer, ev: Event) => any) | null;
-  onupdateend: ((this: SourceBuffer, ev: Event) => any) | null;
-  onupdatestart: ((this: SourceBuffer, ev: Event) => any) | null;
+  onabort: ((this: SourceBuffer, ev: Event) => unknown) | null;
+  onerror: ((this: SourceBuffer, ev: Event) => unknown) | null;
+  onupdate: ((this: SourceBuffer, ev: Event) => unknown) | null;
+  onupdateend: ((this: SourceBuffer, ev: Event) => unknown) | null;
+  onupdatestart: ((this: SourceBuffer, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/timestampOffset) */
   timestampOffset: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/updating) */
@@ -26585,7 +26891,7 @@ interface SourceBuffer extends EventTarget {
   remove(start: number, end: number): void;
   addEventListener<K extends keyof SourceBufferEventMap>(
     type: K,
-    listener: (this: SourceBuffer, ev: SourceBufferEventMap[K]) => any,
+    listener: (this: SourceBuffer, ev: SourceBufferEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -26595,7 +26901,7 @@ interface SourceBuffer extends EventTarget {
   ): void;
   removeEventListener<K extends keyof SourceBufferEventMap>(
     type: K,
-    listener: (this: SourceBuffer, ev: SourceBufferEventMap[K]) => any,
+    listener: (this: SourceBuffer, ev: SourceBufferEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -26605,7 +26911,7 @@ interface SourceBuffer extends EventTarget {
   ): void;
 }

-declare var SourceBuffer: {
+declare const SourceBuffer: {
   prototype: SourceBuffer;
   new (): SourceBuffer;
 };
@@ -26623,11 +26929,14 @@ interface SourceBufferListEventMap {
 interface SourceBufferList extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBufferList/length) */
   readonly length: number;
-  onaddsourcebuffer: ((this: SourceBufferList, ev: Event) => any) | null;
-  onremovesourcebuffer: ((this: SourceBufferList, ev: Event) => any) | null;
+  onaddsourcebuffer: ((this: SourceBufferList, ev: Event) => unknown) | null;
+  onremovesourcebuffer: ((this: SourceBufferList, ev: Event) => unknown) | null;
   addEventListener<K extends keyof SourceBufferListEventMap>(
     type: K,
-    listener: (this: SourceBufferList, ev: SourceBufferListEventMap[K]) => any,
+    listener: (
+      this: SourceBufferList,
+      ev: SourceBufferListEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -26637,7 +26946,10 @@ interface SourceBufferList extends EventTarget {
   ): void;
   removeEventListener<K extends keyof SourceBufferListEventMap>(
     type: K,
-    listener: (this: SourceBufferList, ev: SourceBufferListEventMap[K]) => any,
+    listener: (
+      this: SourceBufferList,
+      ev: SourceBufferListEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -26648,7 +26960,7 @@ interface SourceBufferList extends EventTarget {
   [index: number]: SourceBuffer;
 }

-declare var SourceBufferList: {
+declare const SourceBufferList: {
   prototype: SourceBufferList;
   new (): SourceBufferList;
 };
@@ -26661,7 +26973,7 @@ interface SpeechRecognitionAlternative {
   readonly transcript: string;
 }

-declare var SpeechRecognitionAlternative: {
+declare const SpeechRecognitionAlternative: {
   prototype: SpeechRecognitionAlternative;
   new (): SpeechRecognitionAlternative;
 };
@@ -26677,7 +26989,7 @@ interface SpeechRecognitionResult {
   [index: number]: SpeechRecognitionAlternative;
 }

-declare var SpeechRecognitionResult: {
+declare const SpeechRecognitionResult: {
   prototype: SpeechRecognitionResult;
   new (): SpeechRecognitionResult;
 };
@@ -26691,7 +27003,7 @@ interface SpeechRecognitionResultList {
   [index: number]: SpeechRecognitionResult;
 }

-declare var SpeechRecognitionResultList: {
+declare const SpeechRecognitionResultList: {
   prototype: SpeechRecognitionResultList;
   new (): SpeechRecognitionResultList;
 };
@@ -26707,7 +27019,7 @@ interface SpeechSynthesisEventMap {
  */
 interface SpeechSynthesis extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/voiceschanged_event) */
-  onvoiceschanged: ((this: SpeechSynthesis, ev: Event) => any) | null;
+  onvoiceschanged: ((this: SpeechSynthesis, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/paused) */
   readonly paused: boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/pending) */
@@ -26726,7 +27038,10 @@ interface SpeechSynthesis extends EventTarget {
   speak(utterance: SpeechSynthesisUtterance): void;
   addEventListener<K extends keyof SpeechSynthesisEventMap>(
     type: K,
-    listener: (this: SpeechSynthesis, ev: SpeechSynthesisEventMap[K]) => any,
+    listener: (
+      this: SpeechSynthesis,
+      ev: SpeechSynthesisEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -26736,7 +27051,10 @@ interface SpeechSynthesis extends EventTarget {
   ): void;
   removeEventListener<K extends keyof SpeechSynthesisEventMap>(
     type: K,
-    listener: (this: SpeechSynthesis, ev: SpeechSynthesisEventMap[K]) => any,
+    listener: (
+      this: SpeechSynthesis,
+      ev: SpeechSynthesisEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -26746,7 +27064,7 @@ interface SpeechSynthesis extends EventTarget {
   ): void;
 }

-declare var SpeechSynthesis: {
+declare const SpeechSynthesis: {
   prototype: SpeechSynthesis;
   new (): SpeechSynthesis;
 };
@@ -26757,7 +27075,7 @@ interface SpeechSynthesisErrorEvent extends SpeechSynthesisEvent {
   readonly error: SpeechSynthesisErrorCode;
 }

-declare var SpeechSynthesisErrorEvent: {
+declare const SpeechSynthesisErrorEvent: {
   prototype: SpeechSynthesisErrorEvent;
   new (
     type: string,
@@ -26783,7 +27101,7 @@ interface SpeechSynthesisEvent extends Event {
   readonly utterance: SpeechSynthesisUtterance;
 }

-declare var SpeechSynthesisEvent: {
+declare const SpeechSynthesisEvent: {
   prototype: SpeechSynthesisEvent;
   new (
     type: string,
@@ -26811,31 +27129,34 @@ interface SpeechSynthesisUtterance extends EventTarget {
   lang: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/boundary_event) */
   onboundary:
-    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any)
+    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/end_event) */
   onend:
-    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any)
+    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/error_event) */
   onerror:
-    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisErrorEvent) => any)
+    | ((
+        this: SpeechSynthesisUtterance,
+        ev: SpeechSynthesisErrorEvent,
+      ) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/mark_event) */
   onmark:
-    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any)
+    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/pause_event) */
   onpause:
-    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any)
+    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/resume_event) */
   onresume:
-    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any)
+    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/start_event) */
   onstart:
-    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any)
+    | ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/pitch) */
   pitch: number;
@@ -26852,7 +27173,7 @@ interface SpeechSynthesisUtterance extends EventTarget {
     listener: (
       this: SpeechSynthesisUtterance,
       ev: SpeechSynthesisUtteranceEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -26865,7 +27186,7 @@ interface SpeechSynthesisUtterance extends EventTarget {
     listener: (
       this: SpeechSynthesisUtterance,
       ev: SpeechSynthesisUtteranceEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -26875,7 +27196,7 @@ interface SpeechSynthesisUtterance extends EventTarget {
   ): void;
 }

-declare var SpeechSynthesisUtterance: {
+declare const SpeechSynthesisUtterance: {
   prototype: SpeechSynthesisUtterance;
   new (text?: string): SpeechSynthesisUtterance;
 };
@@ -26898,7 +27219,7 @@ interface SpeechSynthesisVoice {
   readonly voiceURI: string;
 }

-declare var SpeechSynthesisVoice: {
+declare const SpeechSynthesisVoice: {
   prototype: SpeechSynthesisVoice;
   new (): SpeechSynthesisVoice;
 };
@@ -26906,7 +27227,7 @@ declare var SpeechSynthesisVoice: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StaticRange) */
 interface StaticRange extends AbstractRange {}

-declare var StaticRange: {
+declare const StaticRange: {
   prototype: StaticRange;
   new (init: StaticRangeInit): StaticRange;
 };
@@ -26921,7 +27242,7 @@ interface StereoPannerNode extends AudioNode {
   readonly pan: AudioParam;
 }

-declare var StereoPannerNode: {
+declare const StereoPannerNode: {
   prototype: StereoPannerNode;
   new (
     context: BaseAudioContext,
@@ -26979,10 +27300,10 @@ interface Storage {
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/setItem)
    */
   setItem(key: string, value: string): void;
-  [name: string]: any;
+  [name: string]: unknown;
 }

-declare var Storage: {
+declare const Storage: {
   prototype: Storage;
   new (): Storage;
 };
@@ -27040,7 +27361,7 @@ interface StorageEvent extends Event {
   ): void;
 }

-declare var StorageEvent: {
+declare const StorageEvent: {
   prototype: StorageEvent;
   new (type: string, eventInitDict?: StorageEventInit): StorageEvent;
 };
@@ -27061,7 +27382,7 @@ interface StorageManager {
   persisted(): Promise<boolean>;
 }

-declare var StorageManager: {
+declare const StorageManager: {
   prototype: StorageManager;
   new (): StorageManager;
 };
@@ -27084,7 +27405,7 @@ interface StylePropertyMap extends StylePropertyMapReadOnly {
   set(property: string, ...values: (CSSStyleValue | string)[]): void;
 }

-declare var StylePropertyMap: {
+declare const StylePropertyMap: {
   prototype: StylePropertyMap;
   new (): StylePropertyMap;
 };
@@ -27101,15 +27422,15 @@ interface StylePropertyMapReadOnly {
   has(property: string): boolean;
   forEach(
     callbackfn: (
-      value: CSSStyleValue[],
+      value: readonly CSSStyleValue[],
       key: string,
       parent: StylePropertyMapReadOnly,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }

-declare var StylePropertyMapReadOnly: {
+declare const StylePropertyMapReadOnly: {
   prototype: StylePropertyMapReadOnly;
   new (): StylePropertyMapReadOnly;
 };
@@ -27136,7 +27457,7 @@ interface StyleSheet {
   readonly type: string;
 }

-declare var StyleSheet: {
+declare const StyleSheet: {
   prototype: StyleSheet;
   new (): StyleSheet;
 };
@@ -27154,7 +27475,7 @@ interface StyleSheetList {
   [index: number]: CSSStyleSheet;
 }

-declare var StyleSheetList: {
+declare const StyleSheetList: {
   prototype: StyleSheetList;
   new (): StyleSheetList;
 };
@@ -27169,7 +27490,7 @@ interface SubmitEvent extends Event {
   readonly submitter: HTMLElement | null;
 }

-declare var SubmitEvent: {
+declare const SubmitEvent: {
   prototype: SubmitEvent;
   new (type: string, eventInitDict?: SubmitEventInit): SubmitEvent;
 };
@@ -27217,7 +27538,7 @@ interface SubtleCrypto {
       | HkdfParams
       | Pbkdf2Params,
     extractable: boolean,
-    keyUsages: KeyUsage[],
+    keyUsages: readonly KeyUsage[],
   ): Promise<CryptoKey>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/digest) */
   digest(
@@ -27264,7 +27585,7 @@ interface SubtleCrypto {
   generateKey(
     algorithm: AlgorithmIdentifier,
     extractable: boolean,
-    keyUsages: KeyUsage[],
+    keyUsages: readonly KeyUsage[],
   ): Promise<CryptoKeyPair | CryptoKey>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/importKey) */
   importKey(
@@ -27289,7 +27610,7 @@ interface SubtleCrypto {
       | HmacImportParams
       | AesKeyAlgorithm,
     extractable: boolean,
-    keyUsages: KeyUsage[],
+    keyUsages: readonly KeyUsage[],
   ): Promise<CryptoKey>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/sign) */
   sign(
@@ -27315,7 +27636,7 @@ interface SubtleCrypto {
       | HmacImportParams
       | AesKeyAlgorithm,
     extractable: boolean,
-    keyUsages: KeyUsage[],
+    keyUsages: readonly KeyUsage[],
   ): Promise<CryptoKey>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/verify) */
   verify(
@@ -27338,7 +27659,7 @@ interface SubtleCrypto {
   ): Promise<ArrayBuffer>;
 }

-declare var SubtleCrypto: {
+declare const SubtleCrypto: {
   prototype: SubtleCrypto;
   new (): SubtleCrypto;
 };
@@ -27363,7 +27684,7 @@ interface Text extends CharacterData, Slottable {
   splitText(offset: number): Text;
 }

-declare var Text: {
+declare const Text: {
   prototype: Text;
   new (data?: string): Text;
 };
@@ -27392,7 +27713,7 @@ interface TextDecoder extends TextDecoderCommon {
   decode(input?: AllowSharedBufferSource, options?: TextDecodeOptions): string;
 }

-declare var TextDecoder: {
+declare const TextDecoder: {
   prototype: TextDecoder;
   new (label?: string, options?: TextDecoderOptions): TextDecoder;
 };
@@ -27424,7 +27745,7 @@ interface TextDecoderStream extends GenericTransformStream, TextDecoderCommon {
   readonly writable: WritableStream<BufferSource>;
 }

-declare var TextDecoderStream: {
+declare const TextDecoderStream: {
   prototype: TextDecoderStream;
   new (label?: string, options?: TextDecoderOptions): TextDecoderStream;
 };
@@ -27452,7 +27773,7 @@ interface TextEncoder extends TextEncoderCommon {
   ): TextEncoderEncodeIntoResult;
 }

-declare var TextEncoder: {
+declare const TextEncoder: {
   prototype: TextEncoder;
   new (): TextEncoder;
 };
@@ -27472,7 +27793,7 @@ interface TextEncoderStream extends GenericTransformStream, TextEncoderCommon {
   readonly writable: WritableStream<string>;
 }

-declare var TextEncoderStream: {
+declare const TextEncoderStream: {
   prototype: TextEncoderStream;
   new (): TextEncoderStream;
 };
@@ -27504,7 +27825,7 @@ interface TextEvent extends UIEvent {
 }

 /** @deprecated */
-declare var TextEvent: {
+declare const TextEvent: {
   prototype: TextEvent;
   new (): TextEvent;
 };
@@ -27589,7 +27910,7 @@ interface TextMetrics {
   readonly width: number;
 }

-declare var TextMetrics: {
+declare const TextMetrics: {
   prototype: TextMetrics;
   new (): TextMetrics;
 };
@@ -27659,7 +27980,7 @@ interface TextTrack extends EventTarget {
    */
   mode: TextTrackMode;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/cuechange_event) */
-  oncuechange: ((this: TextTrack, ev: Event) => any) | null;
+  oncuechange: ((this: TextTrack, ev: Event) => unknown) | null;
   /**
    * Adds the given cue to textTrack's text track list of cues.
    *
@@ -27674,7 +27995,7 @@ interface TextTrack extends EventTarget {
   removeCue(cue: TextTrackCue): void;
   addEventListener<K extends keyof TextTrackEventMap>(
     type: K,
-    listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any,
+    listener: (this: TextTrack, ev: TextTrackEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -27684,7 +28005,7 @@ interface TextTrack extends EventTarget {
   ): void;
   removeEventListener<K extends keyof TextTrackEventMap>(
     type: K,
-    listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any,
+    listener: (this: TextTrack, ev: TextTrackEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -27694,7 +28015,7 @@ interface TextTrack extends EventTarget {
   ): void;
 }

-declare var TextTrack: {
+declare const TextTrack: {
   prototype: TextTrack;
   new (): TextTrack;
 };
@@ -27727,9 +28048,9 @@ interface TextTrackCue extends EventTarget {
    */
   id: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/enter_event) */
-  onenter: ((this: TextTrackCue, ev: Event) => any) | null;
+  onenter: ((this: TextTrackCue, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/exit_event) */
-  onexit: ((this: TextTrackCue, ev: Event) => any) | null;
+  onexit: ((this: TextTrackCue, ev: Event) => unknown) | null;
   /**
    * Returns true if the text track cue pause-on-exit flag is set, false otherwise.
    *
@@ -27754,7 +28075,7 @@ interface TextTrackCue extends EventTarget {
   readonly track: TextTrack | null;
   addEventListener<K extends keyof TextTrackCueEventMap>(
     type: K,
-    listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => any,
+    listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -27764,7 +28085,7 @@ interface TextTrackCue extends EventTarget {
   ): void;
   removeEventListener<K extends keyof TextTrackCueEventMap>(
     type: K,
-    listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => any,
+    listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -27774,7 +28095,7 @@ interface TextTrackCue extends EventTarget {
   ): void;
 }

-declare var TextTrackCue: {
+declare const TextTrackCue: {
   prototype: TextTrackCue;
   new (): TextTrackCue;
 };
@@ -27798,7 +28119,7 @@ interface TextTrackCueList {
   [index: number]: TextTrackCue;
 }

-declare var TextTrackCueList: {
+declare const TextTrackCueList: {
   prototype: TextTrackCueList;
   new (): TextTrackCueList;
 };
@@ -27814,16 +28135,16 @@ interface TextTrackList extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/length) */
   readonly length: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/addtrack_event) */
-  onaddtrack: ((this: TextTrackList, ev: TrackEvent) => any) | null;
+  onaddtrack: ((this: TextTrackList, ev: TrackEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/change_event) */
-  onchange: ((this: TextTrackList, ev: Event) => any) | null;
+  onchange: ((this: TextTrackList, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/removetrack_event) */
-  onremovetrack: ((this: TextTrackList, ev: TrackEvent) => any) | null;
+  onremovetrack: ((this: TextTrackList, ev: TrackEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/getTrackById) */
   getTrackById(id: string): TextTrack | null;
   addEventListener<K extends keyof TextTrackListEventMap>(
     type: K,
-    listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => any,
+    listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -27833,7 +28154,7 @@ interface TextTrackList extends EventTarget {
   ): void;
   removeEventListener<K extends keyof TextTrackListEventMap>(
     type: K,
-    listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => any,
+    listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -27844,7 +28165,7 @@ interface TextTrackList extends EventTarget {
   [index: number]: TextTrack;
 }

-declare var TextTrackList: {
+declare const TextTrackList: {
   prototype: TextTrackList;
   new (): TextTrackList;
 };
@@ -27879,7 +28200,7 @@ interface TimeRanges {
   start(index: number): number;
 }

-declare var TimeRanges: {
+declare const TimeRanges: {
   prototype: TimeRanges;
   new (): TimeRanges;
 };
@@ -27892,7 +28213,7 @@ interface ToggleEvent extends Event {
   readonly oldState: string;
 }

-declare var ToggleEvent: {
+declare const ToggleEvent: {
   prototype: ToggleEvent;
   new (type: string, eventInitDict?: ToggleEventInit): ToggleEvent;
 };
@@ -27929,7 +28250,7 @@ interface Touch {
   readonly target: EventTarget;
 }

-declare var Touch: {
+declare const Touch: {
   prototype: Touch;
   new (touchInitDict: TouchInit): Touch;
 };
@@ -27956,7 +28277,7 @@ interface TouchEvent extends UIEvent {
   readonly touches: TouchList;
 }

-declare var TouchEvent: {
+declare const TouchEvent: {
   prototype: TouchEvent;
   new (type: string, eventInitDict?: TouchEventInit): TouchEvent;
 };
@@ -27974,7 +28295,7 @@ interface TouchList {
   [index: number]: Touch;
 }

-declare var TouchList: {
+declare const TouchList: {
   prototype: TouchList;
   new (): TouchList;
 };
@@ -27993,22 +28314,22 @@ interface TrackEvent extends Event {
   readonly track: TextTrack | null;
 }

-declare var TrackEvent: {
+declare const TrackEvent: {
   prototype: TrackEvent;
   new (type: string, eventInitDict?: TrackEventInit): TrackEvent;
 };

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStream) */
-interface TransformStream<I = any, O = any> {
+interface TransformStream<I = unknown, O = unknown> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStream/readable) */
   readonly readable: ReadableStream<O>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStream/writable) */
   readonly writable: WritableStream<I>;
 }

-declare var TransformStream: {
+declare const TransformStream: {
   prototype: TransformStream;
-  new <I = any, O = any>(
+  new <I = unknown, O = unknown>(
     transformer?: Transformer<I, O>,
     writableStrategy?: QueuingStrategy<I>,
     readableStrategy?: QueuingStrategy<O>,
@@ -28016,18 +28337,18 @@ declare var TransformStream: {
 };

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController) */
-interface TransformStreamDefaultController<O = any> {
+interface TransformStreamDefaultController<O = unknown> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/desiredSize) */
   readonly desiredSize: number | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/enqueue) */
   enqueue(chunk?: O): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/error) */
-  error(reason?: any): void;
+  error(reason?: unknown): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/terminate) */
   terminate(): void;
 }

-declare var TransformStreamDefaultController: {
+declare const TransformStreamDefaultController: {
   prototype: TransformStreamDefaultController;
   new (): TransformStreamDefaultController;
 };
@@ -28046,7 +28367,7 @@ interface TransitionEvent extends Event {
   readonly pseudoElement: string;
 }

-declare var TransitionEvent: {
+declare const TransitionEvent: {
   prototype: TransitionEvent;
   new (
     type: string,
@@ -28084,7 +28405,7 @@ interface TreeWalker {
   previousSibling(): Node | null;
 }

-declare var TreeWalker: {
+declare const TreeWalker: {
   prototype: TreeWalker;
   new (): TreeWalker;
 };
@@ -28119,7 +28440,7 @@ interface UIEvent extends Event {
   ): void;
 }

-declare var UIEvent: {
+declare const UIEvent: {
   prototype: UIEvent;
   new (type: string, eventInitDict?: UIEventInit): UIEvent;
 };
@@ -28159,7 +28480,7 @@ interface URL {
   toJSON(): string;
 }

-declare var URL: {
+declare const URL: {
   prototype: URL;
   new (url: string | URL, base?: string | URL): URL;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/canParse_static) */
@@ -28173,7 +28494,7 @@ declare var URL: {
 };

 type webkitURL = URL;
-declare var webkitURL: typeof URL;
+declare const webkitURL: typeof URL;

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams) */
 interface URLSearchParams {
@@ -28221,14 +28542,18 @@ interface URLSearchParams {
   toString(): string;
   forEach(
     callbackfn: (value: string, key: string, parent: URLSearchParams) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }

-declare var URLSearchParams: {
+declare const URLSearchParams: {
   prototype: URLSearchParams;
   new (
-    init?: string[][] | Record<string, string> | string | URLSearchParams,
+    init?:
+      | readonly (readonly string[])[]
+      | Record<string, string>
+      | string
+      | URLSearchParams,
   ): URLSearchParams;
 };

@@ -28240,7 +28565,7 @@ interface UserActivation {
   readonly isActive: boolean;
 }

-declare var UserActivation: {
+declare const UserActivation: {
   prototype: UserActivation;
   new (): UserActivation;
 };
@@ -28271,7 +28596,7 @@ interface VTTCue extends TextTrackCue {
   getCueAsHTML(): DocumentFragment;
   addEventListener<K extends keyof TextTrackCueEventMap>(
     type: K,
-    listener: (this: VTTCue, ev: TextTrackCueEventMap[K]) => any,
+    listener: (this: VTTCue, ev: TextTrackCueEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -28281,7 +28606,7 @@ interface VTTCue extends TextTrackCue {
   ): void;
   removeEventListener<K extends keyof TextTrackCueEventMap>(
     type: K,
-    listener: (this: VTTCue, ev: TextTrackCueEventMap[K]) => any,
+    listener: (this: VTTCue, ev: TextTrackCueEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -28291,7 +28616,7 @@ interface VTTCue extends TextTrackCue {
   ): void;
 }

-declare var VTTCue: {
+declare const VTTCue: {
   prototype: VTTCue;
   new (startTime: number, endTime: number, text: string): VTTCue;
 };
@@ -28308,7 +28633,7 @@ interface VTTRegion {
   width: number;
 }

-declare var VTTRegion: {
+declare const VTTRegion: {
   prototype: VTTRegion;
   new (): VTTRegion;
 };
@@ -28343,7 +28668,7 @@ interface ValidityState {
   readonly valueMissing: boolean;
 }

-declare var ValidityState: {
+declare const ValidityState: {
   prototype: ValidityState;
   new (): ValidityState;
 };
@@ -28362,7 +28687,7 @@ interface VideoColorSpace {
   toJSON(): VideoColorSpaceInit;
 }

-declare var VideoColorSpace: {
+declare const VideoColorSpace: {
   prototype: VideoColorSpace;
   new (init?: VideoColorSpaceInit): VideoColorSpace;
 };
@@ -28380,7 +28705,7 @@ interface VideoDecoder extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/decodeQueueSize) */
   readonly decodeQueueSize: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/dequeue_event) */
-  ondequeue: ((this: VideoDecoder, ev: Event) => any) | null;
+  ondequeue: ((this: VideoDecoder, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/state) */
   readonly state: CodecState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/close) */
@@ -28395,7 +28720,7 @@ interface VideoDecoder extends EventTarget {
   reset(): void;
   addEventListener<K extends keyof VideoDecoderEventMap>(
     type: K,
-    listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => any,
+    listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -28405,7 +28730,7 @@ interface VideoDecoder extends EventTarget {
   ): void;
   removeEventListener<K extends keyof VideoDecoderEventMap>(
     type: K,
-    listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => any,
+    listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -28415,7 +28740,7 @@ interface VideoDecoder extends EventTarget {
   ): void;
 }

-declare var VideoDecoder: {
+declare const VideoDecoder: {
   prototype: VideoDecoder;
   new (init: VideoDecoderInit): VideoDecoder;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/isConfigSupported_static) */
@@ -28435,7 +28760,7 @@ interface VideoEncoder extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/encodeQueueSize) */
   readonly encodeQueueSize: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/dequeue_event) */
-  ondequeue: ((this: VideoEncoder, ev: Event) => any) | null;
+  ondequeue: ((this: VideoEncoder, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/state) */
   readonly state: CodecState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/close) */
@@ -28450,7 +28775,7 @@ interface VideoEncoder extends EventTarget {
   reset(): void;
   addEventListener<K extends keyof VideoEncoderEventMap>(
     type: K,
-    listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => any,
+    listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -28460,7 +28785,7 @@ interface VideoEncoder extends EventTarget {
   ): void;
   removeEventListener<K extends keyof VideoEncoderEventMap>(
     type: K,
-    listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => any,
+    listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -28470,7 +28795,7 @@ interface VideoEncoder extends EventTarget {
   ): void;
 }

-declare var VideoEncoder: {
+declare const VideoEncoder: {
   prototype: VideoEncoder;
   new (init: VideoEncoderInit): VideoEncoder;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/isConfigSupported_static) */
@@ -28512,7 +28837,7 @@ interface VideoFrame {
   ): Promise<PlaneLayout[]>;
 }

-declare var VideoFrame: {
+declare const VideoFrame: {
   prototype: VideoFrame;
   new (image: CanvasImageSource, init?: VideoFrameInit): VideoFrame;
   new (data: AllowSharedBufferSource, init: VideoFrameBufferInit): VideoFrame;
@@ -28538,7 +28863,7 @@ interface VideoPlaybackQuality {
   readonly totalVideoFrames: number;
 }

-declare var VideoPlaybackQuality: {
+declare const VideoPlaybackQuality: {
   prototype: VideoPlaybackQuality;
   new (): VideoPlaybackQuality;
 };
@@ -28555,7 +28880,7 @@ interface ViewTransition {
   skipTransition(): void;
 }

-declare var ViewTransition: {
+declare const ViewTransition: {
   prototype: ViewTransition;
   new (): ViewTransition;
 };
@@ -28574,9 +28899,9 @@ interface VisualViewport extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/offsetTop) */
   readonly offsetTop: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/resize_event) */
-  onresize: ((this: VisualViewport, ev: Event) => any) | null;
+  onresize: ((this: VisualViewport, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/scroll_event) */
-  onscroll: ((this: VisualViewport, ev: Event) => any) | null;
+  onscroll: ((this: VisualViewport, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/pageLeft) */
   readonly pageLeft: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/pageTop) */
@@ -28587,7 +28912,7 @@ interface VisualViewport extends EventTarget {
   readonly width: number;
   addEventListener<K extends keyof VisualViewportEventMap>(
     type: K,
-    listener: (this: VisualViewport, ev: VisualViewportEventMap[K]) => any,
+    listener: (this: VisualViewport, ev: VisualViewportEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -28597,7 +28922,7 @@ interface VisualViewport extends EventTarget {
   ): void;
   removeEventListener<K extends keyof VisualViewportEventMap>(
     type: K,
-    listener: (this: VisualViewport, ev: VisualViewportEventMap[K]) => any,
+    listener: (this: VisualViewport, ev: VisualViewportEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -28607,7 +28932,7 @@ interface VisualViewport extends EventTarget {
   ): void;
 }

-declare var VisualViewport: {
+declare const VisualViewport: {
   prototype: VisualViewport;
   new (): VisualViewport;
 };
@@ -28728,7 +29053,7 @@ interface WEBGL_depth_texture {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_draw_buffers) */
 interface WEBGL_draw_buffers {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_draw_buffers/drawBuffersWEBGL) */
-  drawBuffersWEBGL(buffers: GLenum[]): void;
+  drawBuffersWEBGL(buffers: readonly GLenum[]): void;
   readonly COLOR_ATTACHMENT0_WEBGL: 0x8ce0;
   readonly COLOR_ATTACHMENT1_WEBGL: 0x8ce1;
   readonly COLOR_ATTACHMENT2_WEBGL: 0x8ce2;
@@ -28778,42 +29103,42 @@ interface WEBGL_multi_draw {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawArraysInstancedWEBGL) */
   multiDrawArraysInstancedWEBGL(
     mode: GLenum,
-    firstsList: Int32Array | GLint[],
+    firstsList: Int32Array | readonly GLint[],
     firstsOffset: number,
-    countsList: Int32Array | GLsizei[],
+    countsList: Int32Array | readonly GLsizei[],
     countsOffset: number,
-    instanceCountsList: Int32Array | GLsizei[],
+    instanceCountsList: Int32Array | readonly GLsizei[],
     instanceCountsOffset: number,
     drawcount: GLsizei,
   ): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawArraysWEBGL) */
   multiDrawArraysWEBGL(
     mode: GLenum,
-    firstsList: Int32Array | GLint[],
+    firstsList: Int32Array | readonly GLint[],
     firstsOffset: number,
-    countsList: Int32Array | GLsizei[],
+    countsList: Int32Array | readonly GLsizei[],
     countsOffset: number,
     drawcount: GLsizei,
   ): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawElementsInstancedWEBGL) */
   multiDrawElementsInstancedWEBGL(
     mode: GLenum,
-    countsList: Int32Array | GLsizei[],
+    countsList: Int32Array | readonly GLsizei[],
     countsOffset: number,
     type: GLenum,
-    offsetsList: Int32Array | GLsizei[],
+    offsetsList: Int32Array | readonly GLsizei[],
     offsetsOffset: number,
-    instanceCountsList: Int32Array | GLsizei[],
+    instanceCountsList: Int32Array | readonly GLsizei[],
     instanceCountsOffset: number,
     drawcount: GLsizei,
   ): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawElementsWEBGL) */
   multiDrawElementsWEBGL(
     mode: GLenum,
-    countsList: Int32Array | GLsizei[],
+    countsList: Int32Array | readonly GLsizei[],
     countsOffset: number,
     type: GLenum,
-    offsetsList: Int32Array | GLsizei[],
+    offsetsList: Int32Array | readonly GLsizei[],
     offsetsOffset: number,
     drawcount: GLsizei,
   ): void;
@@ -28829,7 +29154,7 @@ interface WakeLock {
   request(type?: WakeLockType): Promise<WakeLockSentinel>;
 }

-declare var WakeLock: {
+declare const WakeLock: {
   prototype: WakeLock;
   new (): WakeLock;
 };
@@ -28845,7 +29170,7 @@ interface WakeLockSentinelEventMap {
  */
 interface WakeLockSentinel extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WakeLockSentinel/release_event) */
-  onrelease: ((this: WakeLockSentinel, ev: Event) => any) | null;
+  onrelease: ((this: WakeLockSentinel, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WakeLockSentinel/released) */
   readonly released: boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WakeLockSentinel/type) */
@@ -28854,7 +29179,10 @@ interface WakeLockSentinel extends EventTarget {
   release(): Promise<void>;
   addEventListener<K extends keyof WakeLockSentinelEventMap>(
     type: K,
-    listener: (this: WakeLockSentinel, ev: WakeLockSentinelEventMap[K]) => any,
+    listener: (
+      this: WakeLockSentinel,
+      ev: WakeLockSentinelEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -28864,7 +29192,10 @@ interface WakeLockSentinel extends EventTarget {
   ): void;
   removeEventListener<K extends keyof WakeLockSentinelEventMap>(
     type: K,
-    listener: (this: WakeLockSentinel, ev: WakeLockSentinelEventMap[K]) => any,
+    listener: (
+      this: WakeLockSentinel,
+      ev: WakeLockSentinelEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -28874,7 +29205,7 @@ interface WakeLockSentinel extends EventTarget {
   ): void;
 }

-declare var WakeLockSentinel: {
+declare const WakeLockSentinel: {
   prototype: WakeLockSentinel;
   new (): WakeLockSentinel;
 };
@@ -28891,7 +29222,7 @@ interface WaveShaperNode extends AudioNode {
   oversample: OverSampleType;
 }

-declare var WaveShaperNode: {
+declare const WaveShaperNode: {
   prototype: WaveShaperNode;
   new (context: BaseAudioContext, options?: WaveShaperOptions): WaveShaperNode;
 };
@@ -28902,7 +29233,7 @@ interface WebGL2RenderingContext
     WebGL2RenderingContextOverloads,
     WebGLRenderingContextBase {}

-declare var WebGL2RenderingContext: {
+declare const WebGL2RenderingContext: {
   prototype: WebGL2RenderingContext;
   new (): WebGL2RenderingContext;
   readonly READ_BUFFER: 0x0c02;
@@ -29635,7 +29966,7 @@ interface WebGL2RenderingContextBase {
     instanceCount: GLsizei,
   ): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawBuffers) */
-  drawBuffers(buffers: GLenum[]): void;
+  drawBuffers(buffers: readonly GLenum[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawElementsInstanced) */
   drawElementsInstanced(
     mode: GLenum,
@@ -29677,13 +30008,13 @@ interface WebGL2RenderingContextBase {
     program: WebGLProgram,
     uniformBlockIndex: GLuint,
     pname: GLenum,
-  ): any;
+  ): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getActiveUniforms) */
   getActiveUniforms(
     program: WebGLProgram,
-    uniformIndices: GLuint[],
+    uniformIndices: readonly GLuint[],
     pname: GLenum,
-  ): any;
+  ): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getBufferSubData) */
   getBufferSubData(
     target: GLenum,
@@ -29695,21 +30026,21 @@ interface WebGL2RenderingContextBase {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getFragDataLocation) */
   getFragDataLocation(program: WebGLProgram, name: string): GLint;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getIndexedParameter) */
-  getIndexedParameter(target: GLenum, index: GLuint): any;
+  getIndexedParameter(target: GLenum, index: GLuint): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getInternalformatParameter) */
   getInternalformatParameter(
     target: GLenum,
     internalformat: GLenum,
     pname: GLenum,
-  ): any;
+  ): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getQuery) */
   getQuery(target: GLenum, pname: GLenum): WebGLQuery | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getQueryParameter) */
-  getQueryParameter(query: WebGLQuery, pname: GLenum): any;
+  getQueryParameter(query: WebGLQuery, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getSamplerParameter) */
-  getSamplerParameter(sampler: WebGLSampler, pname: GLenum): any;
+  getSamplerParameter(sampler: WebGLSampler, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getSyncParameter) */
-  getSyncParameter(sync: WebGLSync, pname: GLenum): any;
+  getSyncParameter(sync: WebGLSync, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getTransformFeedbackVarying) */
   getTransformFeedbackVarying(
     program: WebGLProgram,
@@ -29720,14 +30051,14 @@ interface WebGL2RenderingContextBase {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getUniformIndices) */
   getUniformIndices(
     program: WebGLProgram,
-    uniformNames: string[],
+    uniformNames: readonly string[],
   ): GLuint[] | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateFramebuffer) */
-  invalidateFramebuffer(target: GLenum, attachments: GLenum[]): void;
+  invalidateFramebuffer(target: GLenum, attachments: readonly GLenum[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateSubFramebuffer) */
   invalidateSubFramebuffer(
     target: GLenum,
-    attachments: GLenum[],
+    attachments: readonly GLenum[],
     x: GLint,
     y: GLint,
     width: GLsizei,
@@ -29872,7 +30203,7 @@ interface WebGL2RenderingContextBase {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/transformFeedbackVaryings) */
   transformFeedbackVaryings(
     program: WebGLProgram,
-    varyings: string[],
+    varyings: readonly string[],
     bufferMode: GLenum,
   ): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */
@@ -30578,7 +30909,7 @@ interface WebGLActiveInfo {
   readonly type: GLenum;
 }

-declare var WebGLActiveInfo: {
+declare const WebGLActiveInfo: {
   prototype: WebGLActiveInfo;
   new (): WebGLActiveInfo;
 };
@@ -30590,7 +30921,7 @@ declare var WebGLActiveInfo: {
  */
 interface WebGLBuffer {}

-declare var WebGLBuffer: {
+declare const WebGLBuffer: {
   prototype: WebGLBuffer;
   new (): WebGLBuffer;
 };
@@ -30605,7 +30936,7 @@ interface WebGLContextEvent extends Event {
   readonly statusMessage: string;
 }

-declare var WebGLContextEvent: {
+declare const WebGLContextEvent: {
   prototype: WebGLContextEvent;
   new (type: string, eventInit?: WebGLContextEventInit): WebGLContextEvent;
 };
@@ -30617,7 +30948,7 @@ declare var WebGLContextEvent: {
  */
 interface WebGLFramebuffer {}

-declare var WebGLFramebuffer: {
+declare const WebGLFramebuffer: {
   prototype: WebGLFramebuffer;
   new (): WebGLFramebuffer;
 };
@@ -30629,7 +30960,7 @@ declare var WebGLFramebuffer: {
  */
 interface WebGLProgram {}

-declare var WebGLProgram: {
+declare const WebGLProgram: {
   prototype: WebGLProgram;
   new (): WebGLProgram;
 };
@@ -30637,7 +30968,7 @@ declare var WebGLProgram: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLQuery) */
 interface WebGLQuery {}

-declare var WebGLQuery: {
+declare const WebGLQuery: {
   prototype: WebGLQuery;
   new (): WebGLQuery;
 };
@@ -30649,7 +30980,7 @@ declare var WebGLQuery: {
  */
 interface WebGLRenderbuffer {}

-declare var WebGLRenderbuffer: {
+declare const WebGLRenderbuffer: {
   prototype: WebGLRenderbuffer;
   new (): WebGLRenderbuffer;
 };
@@ -30663,7 +30994,7 @@ interface WebGLRenderingContext
   extends WebGLRenderingContextBase,
     WebGLRenderingContextOverloads {}

-declare var WebGLRenderingContext: {
+declare const WebGLRenderingContext: {
   prototype: WebGLRenderingContext;
   new (): WebGLRenderingContext;
   readonly DEPTH_BUFFER_BIT: 0x00000100;
@@ -31143,7 +31474,7 @@ interface WebGLRenderingContextBase {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getAttribLocation) */
   getAttribLocation(program: WebGLProgram, name: string): GLint;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getBufferParameter) */
-  getBufferParameter(target: GLenum, pname: GLenum): any;
+  getBufferParameter(target: GLenum, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getContextAttributes) */
   getContextAttributes(): WebGLContextAttributes | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getError) */
@@ -31233,25 +31564,25 @@ interface WebGLRenderingContextBase {
   getExtension(extensionName: 'WEBGL_draw_buffers'): WEBGL_draw_buffers | null;
   getExtension(extensionName: 'WEBGL_lose_context'): WEBGL_lose_context | null;
   getExtension(extensionName: 'WEBGL_multi_draw'): WEBGL_multi_draw | null;
-  getExtension(name: string): any;
+  getExtension(name: string): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getFramebufferAttachmentParameter) */
   getFramebufferAttachmentParameter(
     target: GLenum,
     attachment: GLenum,
     pname: GLenum,
-  ): any;
+  ): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getParameter) */
-  getParameter(pname: GLenum): any;
+  getParameter(pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getProgramInfoLog) */
   getProgramInfoLog(program: WebGLProgram): string | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getProgramParameter) */
-  getProgramParameter(program: WebGLProgram, pname: GLenum): any;
+  getProgramParameter(program: WebGLProgram, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getRenderbufferParameter) */
-  getRenderbufferParameter(target: GLenum, pname: GLenum): any;
+  getRenderbufferParameter(target: GLenum, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderInfoLog) */
   getShaderInfoLog(shader: WebGLShader): string | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderParameter) */
-  getShaderParameter(shader: WebGLShader, pname: GLenum): any;
+  getShaderParameter(shader: WebGLShader, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderPrecisionFormat) */
   getShaderPrecisionFormat(
     shadertype: GLenum,
@@ -31262,16 +31593,16 @@ interface WebGLRenderingContextBase {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getSupportedExtensions) */
   getSupportedExtensions(): string[] | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getTexParameter) */
-  getTexParameter(target: GLenum, pname: GLenum): any;
+  getTexParameter(target: GLenum, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getUniform) */
-  getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;
+  getUniform(program: WebGLProgram, location: WebGLUniformLocation): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getUniformLocation) */
   getUniformLocation(
     program: WebGLProgram,
     name: string,
   ): WebGLUniformLocation | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getVertexAttrib) */
-  getVertexAttrib(index: GLuint, pname: GLenum): any;
+  getVertexAttrib(index: GLuint, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getVertexAttribOffset) */
   getVertexAttribOffset(index: GLuint, pname: GLenum): GLintptr;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/hint) */
@@ -31841,7 +32172,7 @@ interface WebGLRenderingContextOverloads {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLSampler) */
 interface WebGLSampler {}

-declare var WebGLSampler: {
+declare const WebGLSampler: {
   prototype: WebGLSampler;
   new (): WebGLSampler;
 };
@@ -31853,7 +32184,7 @@ declare var WebGLSampler: {
  */
 interface WebGLShader {}

-declare var WebGLShader: {
+declare const WebGLShader: {
   prototype: WebGLShader;
   new (): WebGLShader;
 };
@@ -31872,7 +32203,7 @@ interface WebGLShaderPrecisionFormat {
   readonly rangeMin: GLint;
 }

-declare var WebGLShaderPrecisionFormat: {
+declare const WebGLShaderPrecisionFormat: {
   prototype: WebGLShaderPrecisionFormat;
   new (): WebGLShaderPrecisionFormat;
 };
@@ -31880,7 +32211,7 @@ declare var WebGLShaderPrecisionFormat: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLSync) */
 interface WebGLSync {}

-declare var WebGLSync: {
+declare const WebGLSync: {
   prototype: WebGLSync;
   new (): WebGLSync;
 };
@@ -31892,7 +32223,7 @@ declare var WebGLSync: {
  */
 interface WebGLTexture {}

-declare var WebGLTexture: {
+declare const WebGLTexture: {
   prototype: WebGLTexture;
   new (): WebGLTexture;
 };
@@ -31900,7 +32231,7 @@ declare var WebGLTexture: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLTransformFeedback) */
 interface WebGLTransformFeedback {}

-declare var WebGLTransformFeedback: {
+declare const WebGLTransformFeedback: {
   prototype: WebGLTransformFeedback;
   new (): WebGLTransformFeedback;
 };
@@ -31912,7 +32243,7 @@ declare var WebGLTransformFeedback: {
  */
 interface WebGLUniformLocation {}

-declare var WebGLUniformLocation: {
+declare const WebGLUniformLocation: {
   prototype: WebGLUniformLocation;
   new (): WebGLUniformLocation;
 };
@@ -31920,7 +32251,7 @@ declare var WebGLUniformLocation: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLVertexArrayObject) */
 interface WebGLVertexArrayObject {}

-declare var WebGLVertexArrayObject: {
+declare const WebGLVertexArrayObject: {
   prototype: WebGLVertexArrayObject;
   new (): WebGLVertexArrayObject;
 };
@@ -31964,13 +32295,13 @@ interface WebSocket extends EventTarget {
    */
   readonly extensions: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/close_event) */
-  onclose: ((this: WebSocket, ev: CloseEvent) => any) | null;
+  onclose: ((this: WebSocket, ev: CloseEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/error_event) */
-  onerror: ((this: WebSocket, ev: Event) => any) | null;
+  onerror: ((this: WebSocket, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/message_event) */
-  onmessage: ((this: WebSocket, ev: MessageEvent) => any) | null;
+  onmessage: ((this: WebSocket, ev: MessageEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/open_event) */
-  onopen: ((this: WebSocket, ev: Event) => any) | null;
+  onopen: ((this: WebSocket, ev: Event) => unknown) | null;
   /**
    * Returns the subprotocol selected by the server, if any. It can be used in conjunction with the array form of the constructor's second argument to perform subprotocol negotiation.
    *
@@ -32007,7 +32338,7 @@ interface WebSocket extends EventTarget {
   readonly CLOSED: 3;
   addEventListener<K extends keyof WebSocketEventMap>(
     type: K,
-    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any,
+    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32017,7 +32348,7 @@ interface WebSocket extends EventTarget {
   ): void;
   removeEventListener<K extends keyof WebSocketEventMap>(
     type: K,
-    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any,
+    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32027,9 +32358,9 @@ interface WebSocket extends EventTarget {
   ): void;
 }

-declare var WebSocket: {
+declare const WebSocket: {
   prototype: WebSocket;
-  new (url: string | URL, protocols?: string | string[]): WebSocket;
+  new (url: string | URL, protocols?: string | readonly string[]): WebSocket;
   readonly CONNECTING: 0;
   readonly OPEN: 1;
   readonly CLOSING: 2;
@@ -32064,7 +32395,7 @@ interface WebTransport {
   ): Promise<WritableStream>;
 }

-declare var WebTransport: {
+declare const WebTransport: {
   prototype: WebTransport;
   new (url: string | URL, options?: WebTransportOptions): WebTransport;
 };
@@ -32081,7 +32412,7 @@ interface WebTransportBidirectionalStream {
   readonly writable: WritableStream;
 }

-declare var WebTransportBidirectionalStream: {
+declare const WebTransportBidirectionalStream: {
   prototype: WebTransportBidirectionalStream;
   new (): WebTransportBidirectionalStream;
 };
@@ -32108,7 +32439,7 @@ interface WebTransportDatagramDuplexStream {
   readonly writable: WritableStream;
 }

-declare var WebTransportDatagramDuplexStream: {
+declare const WebTransportDatagramDuplexStream: {
   prototype: WebTransportDatagramDuplexStream;
   new (): WebTransportDatagramDuplexStream;
 };
@@ -32125,7 +32456,7 @@ interface WebTransportError extends DOMException {
   readonly streamErrorCode: number | null;
 }

-declare var WebTransportError: {
+declare const WebTransportError: {
   prototype: WebTransportError;
   new (message?: string, options?: WebTransportErrorOptions): WebTransportError;
 };
@@ -32149,7 +32480,7 @@ interface WheelEvent extends MouseEvent {
   readonly DOM_DELTA_PAGE: 0x02;
 }

-declare var WheelEvent: {
+declare const WheelEvent: {
   prototype: WheelEvent;
   new (type: string, eventInitDict?: WheelEventInit): WheelEvent;
   readonly DOM_DELTA_PIXEL: 0x00;
@@ -32252,14 +32583,14 @@ interface Window
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/devicemotion_event)
    */
-  ondevicemotion: ((this: Window, ev: DeviceMotionEvent) => any) | null;
+  ondevicemotion: ((this: Window, ev: DeviceMotionEvent) => unknown) | null;
   /**
    * Available only in secure contexts.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/deviceorientation_event)
    */
   ondeviceorientation:
-    | ((this: Window, ev: DeviceOrientationEvent) => any)
+    | ((this: Window, ev: DeviceOrientationEvent) => unknown)
     | null;
   /**
    * Available only in secure contexts.
@@ -32267,16 +32598,16 @@ interface Window
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/deviceorientationabsolute_event)
    */
   ondeviceorientationabsolute:
-    | ((this: Window, ev: DeviceOrientationEvent) => any)
+    | ((this: Window, ev: DeviceOrientationEvent) => unknown)
     | null;
   /**
    * @deprecated
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/orientationchange_event)
    */
-  onorientationchange: ((this: Window, ev: Event) => any) | null;
+  onorientationchange: ((this: Window, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/opener) */
-  opener: any;
+  opener: unknown;
   /**
    * @deprecated
    *
@@ -32362,7 +32693,7 @@ interface Window
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/window) */
   readonly window: Window & typeof globalThis;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/alert) */
-  alert(message?: any): void;
+  alert(message?: unknown): void;
   /**
    * @deprecated
    *
@@ -32424,11 +32755,11 @@ interface Window
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/postMessage)
    */
   postMessage(
-    message: any,
+    message: unknown,
     targetOrigin: string,
-    transfer?: Transferable[],
+    transfer?: readonly Transferable[],
   ): void;
-  postMessage(message: any, options?: WindowPostMessageOptions): void;
+  postMessage(message: unknown, options?: WindowPostMessageOptions): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/print) */
   print(): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/prompt) */
@@ -32465,7 +32796,7 @@ interface Window
   stop(): void;
   addEventListener<K extends keyof WindowEventMap>(
     type: K,
-    listener: (this: Window, ev: WindowEventMap[K]) => any,
+    listener: (this: Window, ev: WindowEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32475,7 +32806,7 @@ interface Window
   ): void;
   removeEventListener<K extends keyof WindowEventMap>(
     type: K,
-    listener: (this: Window, ev: WindowEventMap[K]) => any,
+    listener: (this: Window, ev: WindowEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32486,7 +32817,7 @@ interface Window
   [index: number]: Window;
 }

-declare var Window: {
+declare const Window: {
   prototype: Window;
   new (): Window;
 };
@@ -32514,67 +32845,71 @@ interface WindowEventHandlersEventMap {

 interface WindowEventHandlers {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/afterprint_event) */
-  onafterprint: ((this: WindowEventHandlers, ev: Event) => any) | null;
+  onafterprint: ((this: WindowEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/beforeprint_event) */
-  onbeforeprint: ((this: WindowEventHandlers, ev: Event) => any) | null;
+  onbeforeprint: ((this: WindowEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/beforeunload_event) */
   onbeforeunload:
-    | ((this: WindowEventHandlers, ev: BeforeUnloadEvent) => any)
+    | ((this: WindowEventHandlers, ev: BeforeUnloadEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/gamepadconnected_event) */
   ongamepadconnected:
-    | ((this: WindowEventHandlers, ev: GamepadEvent) => any)
+    | ((this: WindowEventHandlers, ev: GamepadEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/gamepaddisconnected_event) */
   ongamepaddisconnected:
-    | ((this: WindowEventHandlers, ev: GamepadEvent) => any)
+    | ((this: WindowEventHandlers, ev: GamepadEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/hashchange_event) */
   onhashchange:
-    | ((this: WindowEventHandlers, ev: HashChangeEvent) => any)
+    | ((this: WindowEventHandlers, ev: HashChangeEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/languagechange_event) */
-  onlanguagechange: ((this: WindowEventHandlers, ev: Event) => any) | null;
+  onlanguagechange: ((this: WindowEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/message_event) */
-  onmessage: ((this: WindowEventHandlers, ev: MessageEvent) => any) | null;
+  onmessage: ((this: WindowEventHandlers, ev: MessageEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/messageerror_event) */
-  onmessageerror: ((this: WindowEventHandlers, ev: MessageEvent) => any) | null;
+  onmessageerror:
+    | ((this: WindowEventHandlers, ev: MessageEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/offline_event) */
-  onoffline: ((this: WindowEventHandlers, ev: Event) => any) | null;
+  onoffline: ((this: WindowEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/online_event) */
-  ononline: ((this: WindowEventHandlers, ev: Event) => any) | null;
+  ononline: ((this: WindowEventHandlers, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/pagehide_event) */
   onpagehide:
-    | ((this: WindowEventHandlers, ev: PageTransitionEvent) => any)
+    | ((this: WindowEventHandlers, ev: PageTransitionEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/pageshow_event) */
   onpageshow:
-    | ((this: WindowEventHandlers, ev: PageTransitionEvent) => any)
+    | ((this: WindowEventHandlers, ev: PageTransitionEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/popstate_event) */
-  onpopstate: ((this: WindowEventHandlers, ev: PopStateEvent) => any) | null;
+  onpopstate:
+    | ((this: WindowEventHandlers, ev: PopStateEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/rejectionhandled_event) */
   onrejectionhandled:
-    | ((this: WindowEventHandlers, ev: PromiseRejectionEvent) => any)
+    | ((this: WindowEventHandlers, ev: PromiseRejectionEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/storage_event) */
-  onstorage: ((this: WindowEventHandlers, ev: StorageEvent) => any) | null;
+  onstorage: ((this: WindowEventHandlers, ev: StorageEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/unhandledrejection_event) */
   onunhandledrejection:
-    | ((this: WindowEventHandlers, ev: PromiseRejectionEvent) => any)
+    | ((this: WindowEventHandlers, ev: PromiseRejectionEvent) => unknown)
     | null;
   /**
    * @deprecated
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/unload_event)
    */
-  onunload: ((this: WindowEventHandlers, ev: Event) => any) | null;
+  onunload: ((this: WindowEventHandlers, ev: Event) => unknown) | null;
   addEventListener<K extends keyof WindowEventHandlersEventMap>(
     type: K,
     listener: (
       this: WindowEventHandlers,
       ev: WindowEventHandlersEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32587,7 +32922,7 @@ interface WindowEventHandlers {
     listener: (
       this: WindowEventHandlers,
       ev: WindowEventHandlersEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32647,21 +32982,24 @@ interface WindowOrWorkerGlobalScope {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/queueMicrotask) */
   queueMicrotask(callback: VoidFunction): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/reportError) */
-  reportError(e: any): void;
+  reportError(e: unknown): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/setInterval) */
   setInterval(
     handler: TimerHandler,
     timeout?: number,
-    ...arguments: any[]
+    ...arguments: readonly unknown[]
   ): number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/setTimeout) */
   setTimeout(
     handler: TimerHandler,
     timeout?: number,
-    ...arguments: any[]
+    ...arguments: readonly unknown[]
   ): number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/structuredClone) */
-  structuredClone<T = any>(value: T, options?: StructuredSerializeOptions): T;
+  structuredClone<T = unknown>(
+    value: T,
+    options?: StructuredSerializeOptions,
+  ): T;
 }

 interface WindowSessionStorage {
@@ -32681,16 +33019,16 @@ interface WorkerEventMap extends AbstractWorkerEventMap {
  */
 interface Worker extends EventTarget, AbstractWorker {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Worker/message_event) */
-  onmessage: ((this: Worker, ev: MessageEvent) => any) | null;
+  onmessage: ((this: Worker, ev: MessageEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Worker/messageerror_event) */
-  onmessageerror: ((this: Worker, ev: MessageEvent) => any) | null;
+  onmessageerror: ((this: Worker, ev: MessageEvent) => unknown) | null;
   /**
    * Clones message and transmits it to worker's global environment. transfer can be passed as a list of objects that are to be transferred rather than cloned.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Worker/postMessage)
    */
-  postMessage(message: any, transfer: Transferable[]): void;
-  postMessage(message: any, options?: StructuredSerializeOptions): void;
+  postMessage(message: unknown, transfer: readonly Transferable[]): void;
+  postMessage(message: unknown, options?: StructuredSerializeOptions): void;
   /**
    * Aborts worker's associated global environment.
    *
@@ -32699,7 +33037,7 @@ interface Worker extends EventTarget, AbstractWorker {
   terminate(): void;
   addEventListener<K extends keyof WorkerEventMap>(
     type: K,
-    listener: (this: Worker, ev: WorkerEventMap[K]) => any,
+    listener: (this: Worker, ev: WorkerEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32709,7 +33047,7 @@ interface Worker extends EventTarget, AbstractWorker {
   ): void;
   removeEventListener<K extends keyof WorkerEventMap>(
     type: K,
-    listener: (this: Worker, ev: WorkerEventMap[K]) => any,
+    listener: (this: Worker, ev: WorkerEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32719,7 +33057,7 @@ interface Worker extends EventTarget, AbstractWorker {
   ): void;
 }

-declare var Worker: {
+declare const Worker: {
   prototype: Worker;
   new (scriptURL: string | URL, options?: WorkerOptions): Worker;
 };
@@ -32742,7 +33080,7 @@ interface Worklet {
   addModule(moduleURL: string | URL, options?: WorkletOptions): Promise<void>;
 }

-declare var Worklet: {
+declare const Worklet: {
   prototype: Worklet;
   new (): Worklet;
 };
@@ -32752,20 +33090,20 @@ declare var Worklet: {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream)
  */
-interface WritableStream<W = any> {
+interface WritableStream<W = unknown> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/locked) */
   readonly locked: boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/abort) */
-  abort(reason?: any): Promise<void>;
+  abort(reason?: unknown): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/close) */
   close(): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/getWriter) */
   getWriter(): WritableStreamDefaultWriter<W>;
 }

-declare var WritableStream: {
+declare const WritableStream: {
   prototype: WritableStream;
-  new <W = any>(
+  new <W = unknown>(
     underlyingSink?: UnderlyingSink<W>,
     strategy?: QueuingStrategy<W>,
   ): WritableStream<W>;
@@ -32780,10 +33118,10 @@ interface WritableStreamDefaultController {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultController/signal) */
   readonly signal: AbortSignal;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultController/error) */
-  error(e?: any): void;
+  error(e?: unknown): void;
 }

-declare var WritableStreamDefaultController: {
+declare const WritableStreamDefaultController: {
   prototype: WritableStreamDefaultController;
   new (): WritableStreamDefaultController;
 };
@@ -32793,7 +33131,7 @@ declare var WritableStreamDefaultController: {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter)
  */
-interface WritableStreamDefaultWriter<W = any> {
+interface WritableStreamDefaultWriter<W = unknown> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/closed) */
   readonly closed: Promise<undefined>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/desiredSize) */
@@ -32801,7 +33139,7 @@ interface WritableStreamDefaultWriter<W = any> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/ready) */
   readonly ready: Promise<undefined>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/abort) */
-  abort(reason?: any): Promise<void>;
+  abort(reason?: unknown): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/close) */
   close(): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/releaseLock) */
@@ -32810,9 +33148,9 @@ interface WritableStreamDefaultWriter<W = any> {
   write(chunk?: W): Promise<void>;
 }

-declare var WritableStreamDefaultWriter: {
+declare const WritableStreamDefaultWriter: {
   prototype: WritableStreamDefaultWriter;
-  new <W = any>(stream: WritableStream<W>): WritableStreamDefaultWriter<W>;
+  new <W = unknown>(stream: WritableStream<W>): WritableStreamDefaultWriter<W>;
 };

 /**
@@ -32823,7 +33161,7 @@ declare var WritableStreamDefaultWriter: {
 interface XMLDocument extends Document {
   addEventListener<K extends keyof DocumentEventMap>(
     type: K,
-    listener: (this: XMLDocument, ev: DocumentEventMap[K]) => any,
+    listener: (this: XMLDocument, ev: DocumentEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -32833,7 +33171,7 @@ interface XMLDocument extends Document {
   ): void;
   removeEventListener<K extends keyof DocumentEventMap>(
     type: K,
-    listener: (this: XMLDocument, ev: DocumentEventMap[K]) => any,
+    listener: (this: XMLDocument, ev: DocumentEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -32843,7 +33181,7 @@ interface XMLDocument extends Document {
   ): void;
 }

-declare var XMLDocument: {
+declare const XMLDocument: {
   prototype: XMLDocument;
   new (): XMLDocument;
 };
@@ -32859,7 +33197,7 @@ interface XMLHttpRequestEventMap extends XMLHttpRequestEventTargetEventMap {
  */
 interface XMLHttpRequest extends XMLHttpRequestEventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/readystatechange_event) */
-  onreadystatechange: ((this: XMLHttpRequest, ev: Event) => any) | null;
+  onreadystatechange: ((this: XMLHttpRequest, ev: Event) => unknown) | null;
   /**
    * Returns client's state.
    *
@@ -32871,7 +33209,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/response)
    */
-  readonly response: any;
+  readonly response: unknown;
   /**
    * Returns response as text.
    *
@@ -32951,9 +33289,9 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/open)
    */
-  open(method: string, url: string | URL): void;
+  open(method: 'post' | 'get' | 'dialog', url: string | URL): void;
   open(
-    method: string,
+    method: 'post' | 'get' | 'dialog',
     url: string | URL,
     async: boolean,
     username?: string | null,
@@ -32992,7 +33330,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
   readonly DONE: 4;
   addEventListener<K extends keyof XMLHttpRequestEventMap>(
     type: K,
-    listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any,
+    listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -33002,7 +33340,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
   ): void;
   removeEventListener<K extends keyof XMLHttpRequestEventMap>(
     type: K,
-    listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any,
+    listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -33012,7 +33350,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
   ): void;
 }

-declare var XMLHttpRequest: {
+declare const XMLHttpRequest: {
   prototype: XMLHttpRequest;
   new (): XMLHttpRequest;
   readonly UNSENT: 0;
@@ -33034,19 +33372,19 @@ interface XMLHttpRequestEventTargetEventMap {

 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequestEventTarget) */
 interface XMLHttpRequestEventTarget extends EventTarget {
-  onabort: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onerror: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onload: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onloadstart: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
+  onabort: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onerror: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onload: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onloadstart: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
   addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(
     type: K,
     listener: (
       this: XMLHttpRequestEventTarget,
       ev: XMLHttpRequestEventTargetEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -33059,7 +33397,7 @@ interface XMLHttpRequestEventTarget extends EventTarget {
     listener: (
       this: XMLHttpRequestEventTarget,
       ev: XMLHttpRequestEventTargetEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -33069,7 +33407,7 @@ interface XMLHttpRequestEventTarget extends EventTarget {
   ): void;
 }

-declare var XMLHttpRequestEventTarget: {
+declare const XMLHttpRequestEventTarget: {
   prototype: XMLHttpRequestEventTarget;
   new (): XMLHttpRequestEventTarget;
 };
@@ -33081,7 +33419,7 @@ interface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {
     listener: (
       this: XMLHttpRequestUpload,
       ev: XMLHttpRequestEventTargetEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -33094,7 +33432,7 @@ interface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {
     listener: (
       this: XMLHttpRequestUpload,
       ev: XMLHttpRequestEventTargetEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -33104,7 +33442,7 @@ interface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {
   ): void;
 }

-declare var XMLHttpRequestUpload: {
+declare const XMLHttpRequestUpload: {
   prototype: XMLHttpRequestUpload;
   new (): XMLHttpRequestUpload;
 };
@@ -33119,7 +33457,7 @@ interface XMLSerializer {
   serializeToString(root: Node): string;
 }

-declare var XMLSerializer: {
+declare const XMLSerializer: {
   prototype: XMLSerializer;
   new (): XMLSerializer;
 };
@@ -33131,7 +33469,7 @@ declare var XMLSerializer: {
  */
 interface XPathEvaluator extends XPathEvaluatorBase {}

-declare var XPathEvaluator: {
+declare const XPathEvaluator: {
   prototype: XPathEvaluator;
   new (): XPathEvaluator;
 };
@@ -33172,7 +33510,7 @@ interface XPathExpression {
   ): XPathResult;
 }

-declare var XPathExpression: {
+declare const XPathExpression: {
   prototype: XPathExpression;
   new (): XPathExpression;
 };
@@ -33213,7 +33551,7 @@ interface XPathResult {
   readonly FIRST_ORDERED_NODE_TYPE: 9;
 }

-declare var XPathResult: {
+declare const XPathResult: {
   prototype: XPathResult;
   new (): XPathResult;
   readonly ANY_TYPE: 0;
@@ -33237,7 +33575,7 @@ interface XSLTProcessor {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/clearParameters) */
   clearParameters(): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/getParameter) */
-  getParameter(namespaceURI: string | null, localName: string): any;
+  getParameter(namespaceURI: string | null, localName: string): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/importStylesheet) */
   importStylesheet(style: Node): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/removeParameter) */
@@ -33248,7 +33586,7 @@ interface XSLTProcessor {
   setParameter(
     namespaceURI: string | null,
     localName: string,
-    value: any,
+    value: unknown,
   ): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/transformToDocument) */
   transformToDocument(source: Node): Document;
@@ -33256,7 +33594,7 @@ interface XSLTProcessor {
   transformToFragment(source: Node, output: Document): DocumentFragment;
 }

-declare var XSLTProcessor: {
+declare const XSLTProcessor: {
   prototype: XSLTProcessor;
   new (): XSLTProcessor;
 };
@@ -33264,7 +33602,7 @@ declare var XSLTProcessor: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console) */
 interface Console {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/assert_static) */
-  assert(condition?: boolean, ...data: any[]): void;
+  assert(condition?: boolean, ...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/clear_static) */
   clear(): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/count_static) */
@@ -33272,44 +33610,44 @@ interface Console {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/countReset_static) */
   countReset(label?: string): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/debug_static) */
-  debug(...data: any[]): void;
+  debug(...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/dir_static) */
-  dir(item?: any, options?: any): void;
+  dir(item?: unknown, options?: unknown): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/dirxml_static) */
-  dirxml(...data: any[]): void;
+  dirxml(...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/error_static) */
-  error(...data: any[]): void;
+  error(...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/group_static) */
-  group(...data: any[]): void;
+  group(...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/groupCollapsed_static) */
-  groupCollapsed(...data: any[]): void;
+  groupCollapsed(...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/groupEnd_static) */
   groupEnd(): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/info_static) */
-  info(...data: any[]): void;
+  info(...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/log_static) */
-  log(...data: any[]): void;
+  log(...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/table_static) */
-  table(tabularData?: any, properties?: string[]): void;
+  table(tabularData?: unknown, properties?: readonly string[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/time_static) */
   time(label?: string): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/timeEnd_static) */
   timeEnd(label?: string): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/timeLog_static) */
-  timeLog(label?: string, ...data: any[]): void;
+  timeLog(label?: string, ...data: readonly unknown[]): void;
   timeStamp(label?: string): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/trace_static) */
-  trace(...data: any[]): void;
+  trace(...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/warn_static) */
-  warn(...data: any[]): void;
+  warn(...data: readonly unknown[]): void;
 }

-declare var console: Console;
+declare const console: Console;

 /** Holds useful CSS-related methods. No object with this interface are implemented: it contains only static methods and therefore is a utilitarian interface. */
 declare namespace CSS {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/highlights_static) */
-  var highlights: HighlightRegistry;
+  const highlights: HighlightRegistry;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */
   function Hz(value: number): CSSUnitValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */
@@ -33438,7 +33776,7 @@ declare namespace CSS {
 declare namespace WebAssembly {
   interface CompileError extends Error {}

-  var CompileError: {
+  const CompileError: {
     prototype: CompileError;
     new (message?: string): CompileError;
     (message?: string): CompileError;
@@ -33450,7 +33788,7 @@ declare namespace WebAssembly {
     valueOf(): ValueTypeMap[T];
   }

-  var Global: {
+  const Global: {
     prototype: Global;
     new <T extends ValueType = ValueType>(
       descriptor: GlobalDescriptor<T>,
@@ -33464,14 +33802,14 @@ declare namespace WebAssembly {
     readonly exports: Exports;
   }

-  var Instance: {
+  const Instance: {
     prototype: Instance;
     new (module: Module, importObject?: Imports): Instance;
   };

   interface LinkError extends Error {}

-  var LinkError: {
+  const LinkError: {
     prototype: LinkError;
     new (message?: string): LinkError;
     (message?: string): LinkError;
@@ -33485,7 +33823,7 @@ declare namespace WebAssembly {
     grow(delta: number): number;
   }

-  var Memory: {
+  const Memory: {
     prototype: Memory;
     new (descriptor: MemoryDescriptor): Memory;
   };
@@ -33493,7 +33831,7 @@ declare namespace WebAssembly {
   /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module) */
   interface Module {}

-  var Module: {
+  const Module: {
     prototype: Module;
     new (bytes: BufferSource): Module;
     /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module/customSections_static) */
@@ -33506,7 +33844,7 @@ declare namespace WebAssembly {

   interface RuntimeError extends Error {}

-  var RuntimeError: {
+  const RuntimeError: {
     prototype: RuntimeError;
     new (message?: string): RuntimeError;
     (message?: string): RuntimeError;
@@ -33517,16 +33855,16 @@ declare namespace WebAssembly {
     /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/length) */
     readonly length: number;
     /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/get) */
-    get(index: number): any;
+    get(index: number): unknown;
     /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/grow) */
-    grow(delta: number, value?: any): number;
+    grow(delta: number, value?: unknown): number;
     /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/set) */
-    set(index: number, value?: any): void;
+    set(index: number, value?: unknown): void;
   }

-  var Table: {
+  const Table: {
     prototype: Table;
-    new (descriptor: TableDescriptor, value?: any): Table;
+    new (descriptor: TableDescriptor, value?: unknown): Table;
   };

   interface GlobalDescriptor<T extends ValueType = ValueType> {
@@ -33559,7 +33897,7 @@ declare namespace WebAssembly {

   interface ValueTypeMap {
     anyfunc: Function;
-    externref: any;
+    externref: unknown;
     f32: number;
     f64: number;
     i32: number;
@@ -33613,7 +33951,7 @@ interface BlobCallback {
 }

 interface CustomElementConstructor {
-  new (...params: any[]): HTMLElement;
+  new (...params: readonly unknown[]): HTMLElement;
 }

 interface DecodeErrorCallback {
@@ -33641,7 +33979,7 @@ interface FileCallback {
 }

 interface FileSystemEntriesCallback {
-  (entries: FileSystemEntry[]): void;
+  (entries: readonly FileSystemEntry[]): void;
 }

 interface FileSystemEntryCallback {
@@ -33661,11 +33999,14 @@ interface IdleRequestCallback {
 }

 interface IntersectionObserverCallback {
-  (entries: IntersectionObserverEntry[], observer: IntersectionObserver): void;
+  (
+    entries: readonly IntersectionObserverEntry[],
+    observer: IntersectionObserver,
+  ): void;
 }

 interface LockGrantedCallback {
-  (lock: Lock | null): any;
+  (lock: Lock | null): unknown;
 }

 interface MediaSessionActionHandler {
@@ -33673,7 +34014,7 @@ interface MediaSessionActionHandler {
 }

 interface MutationCallback {
-  (mutations: MutationRecord[], observer: MutationObserver): void;
+  (mutations: readonly MutationRecord[], observer: MutationObserver): void;
 }

 interface NotificationPermissionCallback {
@@ -33691,7 +34032,7 @@ interface OnErrorEventHandlerNonNull {
     lineno?: number,
     colno?: number,
     error?: Error,
-  ): any;
+  ): unknown;
 }

 interface PerformanceObserverCallback {
@@ -33706,7 +34047,7 @@ interface PositionErrorCallback {
   (positionError: GeolocationPositionError): void;
 }

-interface QueuingStrategySize<T = any> {
+interface QueuingStrategySize<T = unknown> {
   (chunk: T): number;
 }

@@ -33723,11 +34064,11 @@ interface RemotePlaybackAvailabilityCallback {
 }

 interface ReportingObserverCallback {
-  (reports: Report[], observer: ReportingObserver): void;
+  (reports: readonly Report[], observer: ReportingObserver): void;
 }

 interface ResizeObserverCallback {
-  (entries: ResizeObserverEntry[], observer: ResizeObserver): void;
+  (entries: readonly ResizeObserverEntry[], observer: ResizeObserver): void;
 }

 interface TransformerFlushCallback<O> {
@@ -33735,7 +34076,7 @@ interface TransformerFlushCallback<O> {
 }

 interface TransformerStartCallback<O> {
-  (controller: TransformStreamDefaultController<O>): any;
+  (controller: TransformStreamDefaultController<O>): unknown;
 }

 interface TransformerTransformCallback<I, O> {
@@ -33746,7 +34087,7 @@ interface TransformerTransformCallback<I, O> {
 }

 interface UnderlyingSinkAbortCallback {
-  (reason?: any): void | PromiseLike<void>;
+  (reason?: unknown): void | PromiseLike<void>;
 }

 interface UnderlyingSinkCloseCallback {
@@ -33754,7 +34095,7 @@ interface UnderlyingSinkCloseCallback {
 }

 interface UnderlyingSinkStartCallback {
-  (controller: WritableStreamDefaultController): any;
+  (controller: WritableStreamDefaultController): unknown;
 }

 interface UnderlyingSinkWriteCallback<W> {
@@ -33765,7 +34106,7 @@ interface UnderlyingSinkWriteCallback<W> {
 }

 interface UnderlyingSourceCancelCallback {
-  (reason?: any): void | PromiseLike<void>;
+  (reason?: unknown): void | PromiseLike<void>;
 }

 interface UnderlyingSourcePullCallback<R> {
@@ -33773,7 +34114,7 @@ interface UnderlyingSourcePullCallback<R> {
 }

 interface UnderlyingSourceStartCallback<R> {
-  (controller: ReadableStreamController<R>): any;
+  (controller: ReadableStreamController<R>): unknown;
 }

 interface VideoFrameOutputCallback {
@@ -33785,7 +34126,7 @@ interface VideoFrameRequestCallback {
 }

 interface ViewTransitionUpdateCallback {
-  (): any;
+  (): unknown;
 }

 interface VoidFunction {
@@ -34046,16 +34387,16 @@ interface MathMLElementTagNameMap {
 type ElementTagNameMap = HTMLElementTagNameMap &
   Pick<
     SVGElementTagNameMap,
-    Exclude<keyof SVGElementTagNameMap, keyof HTMLElementTagNameMap>
+    RelaxedExclude<keyof SVGElementTagNameMap, keyof HTMLElementTagNameMap>
   >;

-declare var Audio: {
+declare const Audio: {
   new (src?: string): HTMLAudioElement;
 };
-declare var Image: {
+declare const Image: {
   new (width?: number, height?: number): HTMLImageElement;
 };
-declare var Option: {
+declare const Option: {
   new (
     text?: string,
     value?: string,
@@ -34068,120 +34409,122 @@ declare var Option: {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/navigator)
  */
-declare var clientInformation: Navigator;
+declare const clientInformation: Navigator;
 /**
  * Returns true if the window has been closed, false otherwise.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/closed)
  */
-declare var closed: boolean;
+declare const closed: boolean;
 /**
  * Defines a new custom element, mapping the given name to the given constructor as an autonomous custom element.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/customElements)
  */
-declare var customElements: CustomElementRegistry;
+declare const customElements: CustomElementRegistry;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/devicePixelRatio) */
-declare var devicePixelRatio: number;
+declare const devicePixelRatio: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/document) */
-declare var document: Document;
+declare const document: Document;
 /**
  * @deprecated
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/event)
  */
-declare var event: Event | undefined;
+declare const event: Event | undefined;
 /**
  * @deprecated
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/external)
  */
-declare var external: External;
+declare const external: External;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/frameElement) */
-declare var frameElement: Element | null;
+declare const frameElement: Element | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/frames) */
-declare var frames: WindowProxy;
+declare const frames: WindowProxy;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/history) */
-declare var history: History;
+declare const history: History;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/innerHeight) */
-declare var innerHeight: number;
+declare const innerHeight: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/innerWidth) */
-declare var innerWidth: number;
+declare const innerWidth: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/length) */
-declare var length: number;
+declare const length: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/location) */
-declare var location: Location;
+declare const location: Location;
 /**
  * Returns true if the location bar is visible; otherwise, returns false.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/locationbar)
  */
-declare var locationbar: BarProp;
+declare const locationbar: BarProp;
 /**
  * Returns true if the menu bar is visible; otherwise, returns false.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/menubar)
  */
-declare var menubar: BarProp;
+declare const menubar: BarProp;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/name) */
 /** @deprecated */
 declare const name: void;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/navigator) */
-declare var navigator: Navigator;
+declare const navigator: Navigator;
 /**
  * Available only in secure contexts.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/devicemotion_event)
  */
-declare var ondevicemotion:
-  | ((this: Window, ev: DeviceMotionEvent) => any)
+declare const ondevicemotion:
+  | ((this: Window, ev: DeviceMotionEvent) => unknown)
   | null;
 /**
  * Available only in secure contexts.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/deviceorientation_event)
  */
-declare var ondeviceorientation:
-  | ((this: Window, ev: DeviceOrientationEvent) => any)
+declare const ondeviceorientation:
+  | ((this: Window, ev: DeviceOrientationEvent) => unknown)
   | null;
 /**
  * Available only in secure contexts.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/deviceorientationabsolute_event)
  */
-declare var ondeviceorientationabsolute:
-  | ((this: Window, ev: DeviceOrientationEvent) => any)
+declare const ondeviceorientationabsolute:
+  | ((this: Window, ev: DeviceOrientationEvent) => unknown)
   | null;
 /**
  * @deprecated
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/orientationchange_event)
  */
-declare var onorientationchange: ((this: Window, ev: Event) => any) | null;
+declare const onorientationchange:
+  | ((this: Window, ev: Event) => unknown)
+  | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/opener) */
-declare var opener: any;
+declare const opener: unknown;
 /**
  * @deprecated
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/orientation)
  */
-declare var orientation: number;
+declare const orientation: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/outerHeight) */
-declare var outerHeight: number;
+declare const outerHeight: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/outerWidth) */
-declare var outerWidth: number;
+declare const outerWidth: number;
 /**
  * @deprecated This is a legacy alias of `scrollX`.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollX)
  */
-declare var pageXOffset: number;
+declare const pageXOffset: number;
 /**
  * @deprecated This is a legacy alias of `scrollY`.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollY)
  */
-declare var pageYOffset: number;
+declare const pageYOffset: number;
 /**
  * Refers to either the parent WindowProxy, or itself.
  *
@@ -34189,63 +34532,63 @@ declare var pageYOffset: number;
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/parent)
  */
-declare var parent: WindowProxy;
+declare const parent: WindowProxy;
 /**
  * Returns true if the personal bar is visible; otherwise, returns false.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/personalbar)
  */
-declare var personalbar: BarProp;
+declare const personalbar: BarProp;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screen) */
-declare var screen: Screen;
+declare const screen: Screen;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenLeft) */
-declare var screenLeft: number;
+declare const screenLeft: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenTop) */
-declare var screenTop: number;
+declare const screenTop: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenX) */
-declare var screenX: number;
+declare const screenX: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenY) */
-declare var screenY: number;
+declare const screenY: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollX) */
-declare var scrollX: number;
+declare const scrollX: number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollY) */
-declare var scrollY: number;
+declare const scrollY: number;
 /**
  * Returns true if the scrollbars are visible; otherwise, returns false.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollbars)
  */
-declare var scrollbars: BarProp;
+declare const scrollbars: BarProp;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/self) */
-declare var self: Window & typeof globalThis;
+declare const self: Window & typeof globalThis;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/speechSynthesis) */
-declare var speechSynthesis: SpeechSynthesis;
+declare const speechSynthesis: SpeechSynthesis;
 /**
  * @deprecated
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/status)
  */
-declare var status: string;
+declare const status: string;
 /**
  * Returns true if the status bar is visible; otherwise, returns false.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/statusbar)
  */
-declare var statusbar: BarProp;
+declare const statusbar: BarProp;
 /**
  * Returns true if the toolbar is visible; otherwise, returns false.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/toolbar)
  */
-declare var toolbar: BarProp;
+declare const toolbar: BarProp;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/top) */
-declare var top: WindowProxy | null;
+declare const top: WindowProxy | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/visualViewport) */
-declare var visualViewport: VisualViewport | null;
+declare const visualViewport: VisualViewport | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/window) */
-declare var window: Window & typeof globalThis;
+declare const window: Window & typeof globalThis;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/alert) */
-declare function alert(message?: any): void;
+declare function alert(message?: unknown): void;
 /**
  * @deprecated
  *
@@ -34307,12 +34650,12 @@ declare function open(
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/postMessage)
  */
 declare function postMessage(
-  message: any,
+  message: unknown,
   targetOrigin: string,
-  transfer?: Transferable[],
+  transfer?: readonly Transferable[],
 ): void;
 declare function postMessage(
-  message: any,
+  message: unknown,
   options?: WindowPostMessageOptions,
 ): void;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/print) */
@@ -34366,181 +34709,183 @@ declare function requestAnimationFrame(callback: FrameRequestCallback): number;
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/abort_event)
  */
-declare var onabort: ((this: Window, ev: UIEvent) => any) | null;
+declare const onabort: ((this: Window, ev: UIEvent) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationcancel_event) */
-declare var onanimationcancel:
-  | ((this: Window, ev: AnimationEvent) => any)
+declare const onanimationcancel:
+  | ((this: Window, ev: AnimationEvent) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event) */
-declare var onanimationend: ((this: Window, ev: AnimationEvent) => any) | null;
+declare const onanimationend:
+  | ((this: Window, ev: AnimationEvent) => unknown)
+  | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event) */
-declare var onanimationiteration:
-  | ((this: Window, ev: AnimationEvent) => any)
+declare const onanimationiteration:
+  | ((this: Window, ev: AnimationEvent) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event) */
-declare var onanimationstart:
-  | ((this: Window, ev: AnimationEvent) => any)
+declare const onanimationstart:
+  | ((this: Window, ev: AnimationEvent) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/auxclick_event) */
-declare var onauxclick: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onauxclick: ((this: Window, ev: MouseEvent) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/beforeinput_event) */
-declare var onbeforeinput: ((this: Window, ev: InputEvent) => any) | null;
+declare const onbeforeinput: ((this: Window, ev: InputEvent) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/beforetoggle_event) */
-declare var onbeforetoggle: ((this: Window, ev: Event) => any) | null;
+declare const onbeforetoggle: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Fires when the object loses the input focus.
  * @param ev The focus event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/blur_event)
  */
-declare var onblur: ((this: Window, ev: FocusEvent) => any) | null;
+declare const onblur: ((this: Window, ev: FocusEvent) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/cancel_event) */
-declare var oncancel: ((this: Window, ev: Event) => any) | null;
+declare const oncancel: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when playback is possible, but would require further buffering.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplay_event)
  */
-declare var oncanplay: ((this: Window, ev: Event) => any) | null;
+declare const oncanplay: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplaythrough_event) */
-declare var oncanplaythrough: ((this: Window, ev: Event) => any) | null;
+declare const oncanplaythrough: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Fires when the contents of the object or selection have changed.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/change_event)
  */
-declare var onchange: ((this: Window, ev: Event) => any) | null;
+declare const onchange: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Fires when the user clicks the left mouse button on the object
  * @param ev The mouse event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/click_event)
  */
-declare var onclick: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onclick: ((this: Window, ev: MouseEvent) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/close_event) */
-declare var onclose: ((this: Window, ev: Event) => any) | null;
+declare const onclose: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/webglcontextlost_event) */
-declare var oncontextlost: ((this: Window, ev: Event) => any) | null;
+declare const oncontextlost: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Fires when the user clicks the right mouse button in the client area, opening the context menu.
  * @param ev The mouse event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/contextmenu_event)
  */
-declare var oncontextmenu: ((this: Window, ev: MouseEvent) => any) | null;
+declare const oncontextmenu: ((this: Window, ev: MouseEvent) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextrestored_event) */
-declare var oncontextrestored: ((this: Window, ev: Event) => any) | null;
+declare const oncontextrestored: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/copy_event) */
-declare var oncopy: ((this: Window, ev: ClipboardEvent) => any) | null;
+declare const oncopy: ((this: Window, ev: ClipboardEvent) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/cuechange_event) */
-declare var oncuechange: ((this: Window, ev: Event) => any) | null;
+declare const oncuechange: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/cut_event) */
-declare var oncut: ((this: Window, ev: ClipboardEvent) => any) | null;
+declare const oncut: ((this: Window, ev: ClipboardEvent) => unknown) | null;
 /**
  * Fires when the user double-clicks the object.
  * @param ev The mouse event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/dblclick_event)
  */
-declare var ondblclick: ((this: Window, ev: MouseEvent) => any) | null;
+declare const ondblclick: ((this: Window, ev: MouseEvent) => unknown) | null;
 /**
  * Fires on the source object continuously during a drag operation.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drag_event)
  */
-declare var ondrag: ((this: Window, ev: DragEvent) => any) | null;
+declare const ondrag: ((this: Window, ev: DragEvent) => unknown) | null;
 /**
  * Fires on the source object when the user releases the mouse at the close of a drag operation.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragend_event)
  */
-declare var ondragend: ((this: Window, ev: DragEvent) => any) | null;
+declare const ondragend: ((this: Window, ev: DragEvent) => unknown) | null;
 /**
  * Fires on the target element when the user drags the object to a valid drop target.
  * @param ev The drag event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragenter_event)
  */
-declare var ondragenter: ((this: Window, ev: DragEvent) => any) | null;
+declare const ondragenter: ((this: Window, ev: DragEvent) => unknown) | null;
 /**
  * Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.
  * @param ev The drag event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragleave_event)
  */
-declare var ondragleave: ((this: Window, ev: DragEvent) => any) | null;
+declare const ondragleave: ((this: Window, ev: DragEvent) => unknown) | null;
 /**
  * Fires on the target element continuously while the user drags the object over a valid drop target.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragover_event)
  */
-declare var ondragover: ((this: Window, ev: DragEvent) => any) | null;
+declare const ondragover: ((this: Window, ev: DragEvent) => unknown) | null;
 /**
  * Fires on the source object when the user starts to drag a text selection or selected object.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragstart_event)
  */
-declare var ondragstart: ((this: Window, ev: DragEvent) => any) | null;
+declare const ondragstart: ((this: Window, ev: DragEvent) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drop_event) */
-declare var ondrop: ((this: Window, ev: DragEvent) => any) | null;
+declare const ondrop: ((this: Window, ev: DragEvent) => unknown) | null;
 /**
  * Occurs when the duration attribute is updated.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/durationchange_event)
  */
-declare var ondurationchange: ((this: Window, ev: Event) => any) | null;
+declare const ondurationchange: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when the media element is reset to its initial state.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/emptied_event)
  */
-declare var onemptied: ((this: Window, ev: Event) => any) | null;
+declare const onemptied: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when the end of playback is reached.
  * @param ev The event
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ended_event)
  */
-declare var onended: ((this: Window, ev: Event) => any) | null;
+declare const onended: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Fires when an error occurs during object loading.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/error_event)
  */
-declare var onerror: OnErrorEventHandler;
+declare const onerror: OnErrorEventHandler;
 /**
  * Fires when the object receives focus.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/focus_event)
  */
-declare var onfocus: ((this: Window, ev: FocusEvent) => any) | null;
+declare const onfocus: ((this: Window, ev: FocusEvent) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/formdata_event) */
-declare var onformdata: ((this: Window, ev: FormDataEvent) => any) | null;
+declare const onformdata: ((this: Window, ev: FormDataEvent) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/gotpointercapture_event) */
-declare var ongotpointercapture:
-  | ((this: Window, ev: PointerEvent) => any)
+declare const ongotpointercapture:
+  | ((this: Window, ev: PointerEvent) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/input_event) */
-declare var oninput: ((this: Window, ev: Event) => any) | null;
+declare const oninput: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/invalid_event) */
-declare var oninvalid: ((this: Window, ev: Event) => any) | null;
+declare const oninvalid: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Fires when the user presses a key.
  * @param ev The keyboard event
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keydown_event)
  */
-declare var onkeydown: ((this: Window, ev: KeyboardEvent) => any) | null;
+declare const onkeydown: ((this: Window, ev: KeyboardEvent) => unknown) | null;
 /**
  * Fires when the user presses an alphanumeric key.
  * @param ev The event.
@@ -34548,45 +34893,45 @@ declare var onkeydown: ((this: Window, ev: KeyboardEvent) => any) | null;
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keypress_event)
  */
-declare var onkeypress: ((this: Window, ev: KeyboardEvent) => any) | null;
+declare const onkeypress: ((this: Window, ev: KeyboardEvent) => unknown) | null;
 /**
  * Fires when the user releases a key.
  * @param ev The keyboard event
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keyup_event)
  */
-declare var onkeyup: ((this: Window, ev: KeyboardEvent) => any) | null;
+declare const onkeyup: ((this: Window, ev: KeyboardEvent) => unknown) | null;
 /**
  * Fires immediately after the browser loads the object.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGElement/load_event)
  */
-declare var onload: ((this: Window, ev: Event) => any) | null;
+declare const onload: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when media data is loaded at the current playback position.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadeddata_event)
  */
-declare var onloadeddata: ((this: Window, ev: Event) => any) | null;
+declare const onloadeddata: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when the duration and dimensions of the media have been determined.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadedmetadata_event)
  */
-declare var onloadedmetadata: ((this: Window, ev: Event) => any) | null;
+declare const onloadedmetadata: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when Internet Explorer begins looking for media data.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadstart_event)
  */
-declare var onloadstart: ((this: Window, ev: Event) => any) | null;
+declare const onloadstart: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/lostpointercapture_event) */
-declare var onlostpointercapture:
-  | ((this: Window, ev: PointerEvent) => any)
+declare const onlostpointercapture:
+  | ((this: Window, ev: PointerEvent) => unknown)
   | null;
 /**
  * Fires when the user clicks the object with either mouse button.
@@ -34594,113 +34939,127 @@ declare var onlostpointercapture:
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mousedown_event)
  */
-declare var onmousedown: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onmousedown: ((this: Window, ev: MouseEvent) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseenter_event) */
-declare var onmouseenter: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onmouseenter: ((this: Window, ev: MouseEvent) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseleave_event) */
-declare var onmouseleave: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onmouseleave: ((this: Window, ev: MouseEvent) => unknown) | null;
 /**
  * Fires when the user moves the mouse over the object.
  * @param ev The mouse event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mousemove_event)
  */
-declare var onmousemove: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onmousemove: ((this: Window, ev: MouseEvent) => unknown) | null;
 /**
  * Fires when the user moves the mouse pointer outside the boundaries of the object.
  * @param ev The mouse event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseout_event)
  */
-declare var onmouseout: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onmouseout: ((this: Window, ev: MouseEvent) => unknown) | null;
 /**
  * Fires when the user moves the mouse pointer into the object.
  * @param ev The mouse event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseover_event)
  */
-declare var onmouseover: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onmouseover: ((this: Window, ev: MouseEvent) => unknown) | null;
 /**
  * Fires when the user releases a mouse button while the mouse is over the object.
  * @param ev The mouse event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseup_event)
  */
-declare var onmouseup: ((this: Window, ev: MouseEvent) => any) | null;
+declare const onmouseup: ((this: Window, ev: MouseEvent) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/paste_event) */
-declare var onpaste: ((this: Window, ev: ClipboardEvent) => any) | null;
+declare const onpaste: ((this: Window, ev: ClipboardEvent) => unknown) | null;
 /**
  * Occurs when playback is paused.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/pause_event)
  */
-declare var onpause: ((this: Window, ev: Event) => any) | null;
+declare const onpause: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when the play method is requested.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/play_event)
  */
-declare var onplay: ((this: Window, ev: Event) => any) | null;
+declare const onplay: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when the audio or video has started playing.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/playing_event)
  */
-declare var onplaying: ((this: Window, ev: Event) => any) | null;
+declare const onplaying: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointercancel_event) */
-declare var onpointercancel: ((this: Window, ev: PointerEvent) => any) | null;
+declare const onpointercancel:
+  | ((this: Window, ev: PointerEvent) => unknown)
+  | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerdown_event) */
-declare var onpointerdown: ((this: Window, ev: PointerEvent) => any) | null;
+declare const onpointerdown:
+  | ((this: Window, ev: PointerEvent) => unknown)
+  | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerenter_event) */
-declare var onpointerenter: ((this: Window, ev: PointerEvent) => any) | null;
+declare const onpointerenter:
+  | ((this: Window, ev: PointerEvent) => unknown)
+  | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerleave_event) */
-declare var onpointerleave: ((this: Window, ev: PointerEvent) => any) | null;
+declare const onpointerleave:
+  | ((this: Window, ev: PointerEvent) => unknown)
+  | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointermove_event) */
-declare var onpointermove: ((this: Window, ev: PointerEvent) => any) | null;
+declare const onpointermove:
+  | ((this: Window, ev: PointerEvent) => unknown)
+  | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerout_event) */
-declare var onpointerout: ((this: Window, ev: PointerEvent) => any) | null;
+declare const onpointerout:
+  | ((this: Window, ev: PointerEvent) => unknown)
+  | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerover_event) */
-declare var onpointerover: ((this: Window, ev: PointerEvent) => any) | null;
+declare const onpointerover:
+  | ((this: Window, ev: PointerEvent) => unknown)
+  | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerup_event) */
-declare var onpointerup: ((this: Window, ev: PointerEvent) => any) | null;
+declare const onpointerup: ((this: Window, ev: PointerEvent) => unknown) | null;
 /**
  * Occurs to indicate progress while downloading media data.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/progress_event)
  */
-declare var onprogress: ((this: Window, ev: ProgressEvent) => any) | null;
+declare const onprogress: ((this: Window, ev: ProgressEvent) => unknown) | null;
 /**
  * Occurs when the playback rate is increased or decreased.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ratechange_event)
  */
-declare var onratechange: ((this: Window, ev: Event) => any) | null;
+declare const onratechange: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Fires when the user resets a form.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/reset_event)
  */
-declare var onreset: ((this: Window, ev: Event) => any) | null;
+declare const onreset: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/resize_event) */
-declare var onresize: ((this: Window, ev: UIEvent) => any) | null;
+declare const onresize: ((this: Window, ev: UIEvent) => unknown) | null;
 /**
  * Fires when the user repositions the scroll box in the scroll bar on the object.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scroll_event)
  */
-declare var onscroll: ((this: Window, ev: Event) => any) | null;
+declare const onscroll: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scrollend_event) */
-declare var onscrollend: ((this: Window, ev: Event) => any) | null;
+declare const onscrollend: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/securitypolicyviolation_event) */
-declare var onsecuritypolicyviolation:
-  | ((this: Window, ev: SecurityPolicyViolationEvent) => any)
+declare const onsecuritypolicyviolation:
+  | ((this: Window, ev: SecurityPolicyViolationEvent) => unknown)
   | null;
 /**
  * Occurs when the seek operation ends.
@@ -34708,87 +35067,87 @@ declare var onsecuritypolicyviolation:
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeked_event)
  */
-declare var onseeked: ((this: Window, ev: Event) => any) | null;
+declare const onseeked: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when the current playback position is moved.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeking_event)
  */
-declare var onseeking: ((this: Window, ev: Event) => any) | null;
+declare const onseeking: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Fires when the current selection changes.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/select_event)
  */
-declare var onselect: ((this: Window, ev: Event) => any) | null;
+declare const onselect: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/selectionchange_event) */
-declare var onselectionchange: ((this: Window, ev: Event) => any) | null;
+declare const onselectionchange: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/selectstart_event) */
-declare var onselectstart: ((this: Window, ev: Event) => any) | null;
+declare const onselectstart: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/slotchange_event) */
-declare var onslotchange: ((this: Window, ev: Event) => any) | null;
+declare const onslotchange: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when the download has stopped.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/stalled_event)
  */
-declare var onstalled: ((this: Window, ev: Event) => any) | null;
+declare const onstalled: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/submit_event) */
-declare var onsubmit: ((this: Window, ev: SubmitEvent) => any) | null;
+declare const onsubmit: ((this: Window, ev: SubmitEvent) => unknown) | null;
 /**
  * Occurs if the load operation has been intentionally halted.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/suspend_event)
  */
-declare var onsuspend: ((this: Window, ev: Event) => any) | null;
+declare const onsuspend: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs to indicate the current playback position.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/timeupdate_event)
  */
-declare var ontimeupdate: ((this: Window, ev: Event) => any) | null;
+declare const ontimeupdate: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDetailsElement/toggle_event) */
-declare var ontoggle: ((this: Window, ev: Event) => any) | null;
+declare const ontoggle: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchcancel_event) */
-declare var ontouchcancel:
-  | ((this: Window, ev: TouchEvent) => any)
+declare const ontouchcancel:
+  | ((this: Window, ev: TouchEvent) => unknown)
   | null
   | undefined;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchend_event) */
-declare var ontouchend:
-  | ((this: Window, ev: TouchEvent) => any)
+declare const ontouchend:
+  | ((this: Window, ev: TouchEvent) => unknown)
   | null
   | undefined;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchmove_event) */
-declare var ontouchmove:
-  | ((this: Window, ev: TouchEvent) => any)
+declare const ontouchmove:
+  | ((this: Window, ev: TouchEvent) => unknown)
   | null
   | undefined;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchstart_event) */
-declare var ontouchstart:
-  | ((this: Window, ev: TouchEvent) => any)
+declare const ontouchstart:
+  | ((this: Window, ev: TouchEvent) => unknown)
   | null
   | undefined;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitioncancel_event) */
-declare var ontransitioncancel:
-  | ((this: Window, ev: TransitionEvent) => any)
+declare const ontransitioncancel:
+  | ((this: Window, ev: TransitionEvent) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event) */
-declare var ontransitionend:
-  | ((this: Window, ev: TransitionEvent) => any)
+declare const ontransitionend:
+  | ((this: Window, ev: TransitionEvent) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionrun_event) */
-declare var ontransitionrun:
-  | ((this: Window, ev: TransitionEvent) => any)
+declare const ontransitionrun:
+  | ((this: Window, ev: TransitionEvent) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionstart_event) */
-declare var ontransitionstart:
-  | ((this: Window, ev: TransitionEvent) => any)
+declare const ontransitionstart:
+  | ((this: Window, ev: TransitionEvent) => unknown)
   | null;
 /**
  * Occurs when the volume is changed, or playback is muted or unmuted.
@@ -34796,112 +35155,126 @@ declare var ontransitionstart:
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/volumechange_event)
  */
-declare var onvolumechange: ((this: Window, ev: Event) => any) | null;
+declare const onvolumechange: ((this: Window, ev: Event) => unknown) | null;
 /**
  * Occurs when playback stops because the next frame of a video resource is not available.
  * @param ev The event.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/waiting_event)
  */
-declare var onwaiting: ((this: Window, ev: Event) => any) | null;
+declare const onwaiting: ((this: Window, ev: Event) => unknown) | null;
 /**
  * @deprecated This is a legacy alias of `onanimationend`.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event)
  */
-declare var onwebkitanimationend: ((this: Window, ev: Event) => any) | null;
+declare const onwebkitanimationend:
+  | ((this: Window, ev: Event) => unknown)
+  | null;
 /**
  * @deprecated This is a legacy alias of `onanimationiteration`.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event)
  */
-declare var onwebkitanimationiteration:
-  | ((this: Window, ev: Event) => any)
+declare const onwebkitanimationiteration:
+  | ((this: Window, ev: Event) => unknown)
   | null;
 /**
  * @deprecated This is a legacy alias of `onanimationstart`.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event)
  */
-declare var onwebkitanimationstart: ((this: Window, ev: Event) => any) | null;
+declare const onwebkitanimationstart:
+  | ((this: Window, ev: Event) => unknown)
+  | null;
 /**
  * @deprecated This is a legacy alias of `ontransitionend`.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)
  */
-declare var onwebkittransitionend: ((this: Window, ev: Event) => any) | null;
+declare const onwebkittransitionend:
+  | ((this: Window, ev: Event) => unknown)
+  | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/wheel_event) */
-declare var onwheel: ((this: Window, ev: WheelEvent) => any) | null;
+declare const onwheel: ((this: Window, ev: WheelEvent) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/afterprint_event) */
-declare var onafterprint: ((this: Window, ev: Event) => any) | null;
+declare const onafterprint: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/beforeprint_event) */
-declare var onbeforeprint: ((this: Window, ev: Event) => any) | null;
+declare const onbeforeprint: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/beforeunload_event) */
-declare var onbeforeunload:
-  | ((this: Window, ev: BeforeUnloadEvent) => any)
+declare const onbeforeunload:
+  | ((this: Window, ev: BeforeUnloadEvent) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/gamepadconnected_event) */
-declare var ongamepadconnected:
-  | ((this: Window, ev: GamepadEvent) => any)
+declare const ongamepadconnected:
+  | ((this: Window, ev: GamepadEvent) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/gamepaddisconnected_event) */
-declare var ongamepaddisconnected:
-  | ((this: Window, ev: GamepadEvent) => any)
+declare const ongamepaddisconnected:
+  | ((this: Window, ev: GamepadEvent) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/hashchange_event) */
-declare var onhashchange: ((this: Window, ev: HashChangeEvent) => any) | null;
+declare const onhashchange:
+  | ((this: Window, ev: HashChangeEvent) => unknown)
+  | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/languagechange_event) */
-declare var onlanguagechange: ((this: Window, ev: Event) => any) | null;
+declare const onlanguagechange: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/message_event) */
-declare var onmessage: ((this: Window, ev: MessageEvent) => any) | null;
+declare const onmessage: ((this: Window, ev: MessageEvent) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/messageerror_event) */
-declare var onmessageerror: ((this: Window, ev: MessageEvent) => any) | null;
+declare const onmessageerror:
+  | ((this: Window, ev: MessageEvent) => unknown)
+  | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/offline_event) */
-declare var onoffline: ((this: Window, ev: Event) => any) | null;
+declare const onoffline: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/online_event) */
-declare var ononline: ((this: Window, ev: Event) => any) | null;
+declare const ononline: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/pagehide_event) */
-declare var onpagehide: ((this: Window, ev: PageTransitionEvent) => any) | null;
+declare const onpagehide:
+  | ((this: Window, ev: PageTransitionEvent) => unknown)
+  | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/pageshow_event) */
-declare var onpageshow: ((this: Window, ev: PageTransitionEvent) => any) | null;
+declare const onpageshow:
+  | ((this: Window, ev: PageTransitionEvent) => unknown)
+  | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/popstate_event) */
-declare var onpopstate: ((this: Window, ev: PopStateEvent) => any) | null;
+declare const onpopstate: ((this: Window, ev: PopStateEvent) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/rejectionhandled_event) */
-declare var onrejectionhandled:
-  | ((this: Window, ev: PromiseRejectionEvent) => any)
+declare const onrejectionhandled:
+  | ((this: Window, ev: PromiseRejectionEvent) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/storage_event) */
-declare var onstorage: ((this: Window, ev: StorageEvent) => any) | null;
+declare const onstorage: ((this: Window, ev: StorageEvent) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/unhandledrejection_event) */
-declare var onunhandledrejection:
-  | ((this: Window, ev: PromiseRejectionEvent) => any)
+declare const onunhandledrejection:
+  | ((this: Window, ev: PromiseRejectionEvent) => unknown)
   | null;
 /**
  * @deprecated
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/unload_event)
  */
-declare var onunload: ((this: Window, ev: Event) => any) | null;
+declare const onunload: ((this: Window, ev: Event) => unknown) | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/localStorage) */
-declare var localStorage: Storage;
+declare const localStorage: Storage;
 /**
  * Available only in secure contexts.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/caches)
  */
-declare var caches: CacheStorage;
+declare const caches: CacheStorage;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/crossOriginIsolated) */
-declare var crossOriginIsolated: boolean;
+declare const crossOriginIsolated: boolean;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/crypto) */
-declare var crypto: Crypto;
+declare const crypto: Crypto;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/indexedDB) */
-declare var indexedDB: IDBFactory;
+declare const indexedDB: IDBFactory;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/isSecureContext) */
-declare var isSecureContext: boolean;
+declare const isSecureContext: boolean;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/origin) */
-declare var origin: string;
+declare const origin: string;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/performance) */
-declare var performance: Performance;
+declare const performance: Performance;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/atob) */
 declare function atob(data: string): string;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/btoa) */
@@ -34931,29 +35304,29 @@ declare function fetch(
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/queueMicrotask) */
 declare function queueMicrotask(callback: VoidFunction): void;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/reportError) */
-declare function reportError(e: any): void;
+declare function reportError(e: unknown): void;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/setInterval) */
 declare function setInterval(
   handler: TimerHandler,
   timeout?: number,
-  ...arguments: any[]
+  ...arguments: readonly unknown[]
 ): number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/setTimeout) */
 declare function setTimeout(
   handler: TimerHandler,
   timeout?: number,
-  ...arguments: any[]
+  ...arguments: readonly unknown[]
 ): number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/structuredClone) */
-declare function structuredClone<T = any>(
+declare function structuredClone<T = unknown>(
   value: T,
   options?: StructuredSerializeOptions,
 ): T;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/sessionStorage) */
-declare var sessionStorage: Storage;
+declare const sessionStorage: Storage;
 declare function addEventListener<K extends keyof WindowEventMap>(
   type: K,
-  listener: (this: Window, ev: WindowEventMap[K]) => any,
+  listener: (this: Window, ev: WindowEventMap[K]) => unknown,
   options?: boolean | AddEventListenerOptions,
 ): void;
 declare function addEventListener(
@@ -34963,7 +35336,7 @@ declare function addEventListener(
 ): void;
 declare function removeEventListener<K extends keyof WindowEventMap>(
   type: K,
-  listener: (this: Window, ev: WindowEventMap[K]) => any,
+  listener: (this: Window, ev: WindowEventMap[K]) => unknown,
   options?: boolean | EventListenerOptions,
 ): void;
 declare function removeEventListener(
@@ -34998,16 +35371,19 @@ type CanvasImageSource =
   | OffscreenCanvas
   | VideoFrame;
 type ClipboardItemData = Promise<string | Blob>;
-type ClipboardItems = ClipboardItem[];
+type ClipboardItems = readonly ClipboardItem[];
 type ConstrainBoolean = boolean | ConstrainBooleanParameters;
-type ConstrainDOMString = string | string[] | ConstrainDOMStringParameters;
+type ConstrainDOMString =
+  | string
+  | readonly string[]
+  | ConstrainDOMStringParameters;
 type ConstrainDouble = number | ConstrainDoubleRange;
 type ConstrainULong = number | ConstrainULongRange;
 type DOMHighResTimeStamp = number;
 type EpochTimeStamp = number;
 type EventListenerOrEventListenerObject = EventListener | EventListenerObject;
 type FileSystemWriteChunkType = BufferSource | Blob | string | WriteParams;
-type Float32List = Float32Array | GLfloat[];
+type Float32List = Float32Array | readonly GLfloat[];
 type FormDataEntryValue = File | string;
 type GLbitfield = number;
 type GLboolean = boolean;
@@ -35024,10 +35400,18 @@ type GLuint64 = number;
 type HTMLOrSVGImageElement = HTMLImageElement | SVGImageElement;
 type HTMLOrSVGScriptElement = HTMLScriptElement | SVGScriptElement;
 type HashAlgorithmIdentifier = AlgorithmIdentifier;
-type HeadersInit = [string, string][] | Record<string, string> | Headers;
-type IDBValidKey = number | string | Date | BufferSource | IDBValidKey[];
+type HeadersInit =
+  | readonly (readonly [string, string])[]
+  | Record<string, string>
+  | Headers;
+type IDBValidKey =
+  | number
+  | string
+  | Date
+  | BufferSource
+  | readonly IDBValidKey[];
 type ImageBitmapSource = CanvasImageSource | Blob | ImageData;
-type Int32List = Int32Array | GLint[];
+type Int32List = Int32Array | readonly GLint[];
 type LineAndPositionSetting = number | AutoKeyword;
 type MediaProvider = MediaStream | MediaSource | Blob;
 type MessageEventSource = WindowProxy | MessagePort | ServiceWorker;
@@ -35042,8 +35426,8 @@ type OnBeforeUnloadEventHandler = OnBeforeUnloadEventHandlerNonNull | null;
 type OnErrorEventHandler = OnErrorEventHandlerNonNull | null;
 type OptionalPostfixToken<T extends string> = ` ${T}` | '';
 type OptionalPrefixToken<T extends string> = `${T} ` | '';
-type PerformanceEntryList = PerformanceEntry[];
-type PublicKeyCredentialJSON = any;
+type PerformanceEntryList = readonly PerformanceEntry[];
+type PublicKeyCredentialJSON = unknown;
 type RTCRtpTransform = RTCRtpScriptTransform;
 type ReadableStreamController<T> =
   | ReadableStreamDefaultController<T>
@@ -35059,7 +35443,7 @@ type RenderingContext =
   | ImageBitmapRenderingContext
   | WebGLRenderingContext
   | WebGL2RenderingContext;
-type ReportList = Report[];
+type ReportList = readonly Report[];
 type RequestInfo = Request | string;
 type TexImageSource =
   | ImageBitmap
@@ -35081,8 +35465,8 @@ type Transferable =
   | AudioData
   | VideoFrame
   | ArrayBuffer;
-type Uint32List = Uint32Array | GLuint[];
-type VibratePattern = number | number[];
+type Uint32List = Uint32Array | readonly GLuint[];
+type VibratePattern = number | readonly number[];
 type WindowProxy = Window;
 type XMLHttpRequestBodyInit =
   | Blob
