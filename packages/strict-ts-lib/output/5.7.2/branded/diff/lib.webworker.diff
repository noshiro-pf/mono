@@ -1,19 +1,5 @@
-/*! *****************************************************************************
-Copyright (c) Microsoft Corporation. All rights reserved.
-Licensed under the Apache License, Version 2.0 (the "License"); you may not use
-this file except in compliance with the License. You may obtain a copy of the
-License at http://www.apache.org/licenses/LICENSE-2.0
-
-THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
-WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
-MERCHANTABLITY OR NON-INFRINGEMENT.
-
-See the Apache Version 2.0 License for specific language governing permissions
-and limitations under the License.
-***************************************************************************** */
-
 /// <reference no-default-lib="true"/>
+/// <reference types="@noshiro/ts-type-utils" />
 
 /////////////////////////////
 /// Worker APIs
@@ -78,7 +64,7 @@ interface AudioDataInit {
   numberOfFrames: number;
   sampleRate: number;
   timestamp: number;
-  transfer?: ArrayBuffer[];
+  transfer?: readonly ArrayBuffer[];
 }
 
 interface AudioDecoderConfig {
@@ -163,7 +149,7 @@ interface CryptoKeyPair {
   publicKey: CryptoKey;
 }
 
-interface CustomEventInit<T = any> extends EventInit {
+interface CustomEventInit<T = unknown> extends EventInit {
   detail?: T;
 }
 
@@ -237,7 +223,7 @@ interface EncodedAudioChunkInit {
   data: AllowSharedBufferSource;
   duration?: number;
   timestamp: number;
-  transfer?: ArrayBuffer[];
+  transfer?: readonly ArrayBuffer[];
   type: EncodedAudioChunkType;
 }
 
@@ -258,7 +244,7 @@ interface EncodedVideoChunkMetadata {
 
 interface ErrorEventInit extends EventInit {
   colno?: number;
-  error?: any;
+  error?: unknown;
   filename?: string;
   lineno?: number;
   message?: string;
@@ -281,17 +267,17 @@ interface EventSourceInit {
 interface ExtendableEventInit extends EventInit {}
 
 interface ExtendableMessageEventInit extends ExtendableEventInit {
-  data?: any;
+  data?: unknown;
   lastEventId?: string;
   origin?: string;
-  ports?: MessagePort[];
+  ports?: readonly MessagePort[];
   source?: Client | ServiceWorker | MessagePort | null;
 }
 
 interface FetchEventInit extends ExtendableEventInit {
   clientId?: string;
   handled?: Promise<undefined>;
-  preloadResponse?: Promise<any>;
+  preloadResponse?: Promise<unknown>;
   replacesClientId?: string;
   request: Request;
   resultingClientId?: string;
@@ -334,7 +320,7 @@ interface FontFaceDescriptors {
 }
 
 interface FontFaceSetLoadEventInit extends EventInit {
-  fontfaces?: FontFace[];
+  fontfaces?: readonly FontFace[];
 }
 
 interface GetNotificationOptions {
@@ -369,7 +355,7 @@ interface IDBIndexParameters {
 
 interface IDBObjectStoreParameters {
   autoIncrement?: boolean;
-  keyPath?: string | string[] | null;
+  keyPath?: string | readonly string[] | null;
 }
 
 interface IDBTransactionOptions {
@@ -412,10 +398,10 @@ interface JsonWebKey {
   e?: string;
   ext?: boolean;
   k?: string;
-  key_ops?: string[];
+  key_ops?: readonly string[];
   kty?: string;
   n?: string;
-  oth?: RsaOtherPrimesInfo[];
+  oth?: readonly RsaOtherPrimesInfo[];
   p?: string;
   q?: string;
   qi?: string;
@@ -435,8 +421,8 @@ interface LockInfo {
 }
 
 interface LockManagerSnapshot {
-  held?: LockInfo[];
-  pending?: LockInfo[];
+  held?: readonly LockInfo[];
+  pending?: readonly LockInfo[];
 }
 
 interface LockOptions {
@@ -477,11 +463,11 @@ interface MediaStreamTrackProcessorInit {
   maxBufferSize?: number;
 }
 
-interface MessageEventInit<T = any> extends EventInit {
+interface MessageEventInit<T = unknown> extends EventInit {
   data?: T;
   lastEventId?: string;
   origin?: string;
-  ports?: MessagePort[];
+  ports?: readonly MessagePort[];
   source?: MessageEventSource | null;
 }
 
@@ -502,7 +488,7 @@ interface NotificationEventInit extends ExtendableEventInit {
 interface NotificationOptions {
   badge?: string;
   body?: string;
-  data?: any;
+  data?: unknown;
   dir?: NotificationDirection;
   icon?: string;
   lang?: string;
@@ -527,12 +513,12 @@ interface Pbkdf2Params extends Algorithm {
 }
 
 interface PerformanceMarkOptions {
-  detail?: any;
+  detail?: unknown;
   startTime?: DOMHighResTimeStamp;
 }
 
 interface PerformanceMeasureOptions {
-  detail?: any;
+  detail?: unknown;
   duration?: DOMHighResTimeStamp;
   end?: string | DOMHighResTimeStamp;
   start?: string | DOMHighResTimeStamp;
@@ -540,7 +526,7 @@ interface PerformanceMeasureOptions {
 
 interface PerformanceObserverInit {
   buffered?: boolean;
-  entryTypes?: string[];
+  entryTypes?: readonly string[];
   type?: string;
 }
 
@@ -560,8 +546,8 @@ interface ProgressEventInit extends EventInit {
 }
 
 interface PromiseRejectionEventInit extends EventInit {
-  promise: Promise<any>;
-  reason?: any;
+  promise: Promise<unknown>;
+  reason?: unknown;
 }
 
 interface PushEventInit extends ExtendableEventInit {
@@ -579,7 +565,7 @@ interface PushSubscriptionOptionsInit {
   userVisibleOnly?: boolean;
 }
 
-interface QueuingStrategy<T = any> {
+interface QueuingStrategy<T = unknown> {
   highWaterMark?: number;
   size?: QueuingStrategySize<T>;
 }
@@ -594,15 +580,15 @@ interface QueuingStrategyInit {
 }
 
 interface RTCEncodedAudioFrameMetadata {
-  contributingSources?: number[];
+  contributingSources?: readonly number[];
   payloadType?: number;
   sequenceNumber?: number;
   synchronizationSource?: number;
 }
 
 interface RTCEncodedVideoFrameMetadata {
-  contributingSources?: number[];
-  dependencies?: number[];
+  contributingSources?: readonly number[];
+  dependencies?: readonly number[];
   frameId?: number;
   height?: number;
   payloadType?: number;
@@ -643,7 +629,7 @@ interface ReadableStreamReadValueResult<T> {
   value: T;
 }
 
-interface ReadableWritablePair<R = any, W = any> {
+interface ReadableWritablePair<R = unknown, W = unknown> {
   readable: ReadableStream<R>;
   /**
    * Provides a convenient, chainable way of piping this readable stream through a transform stream (or any other { writable, readable } pair). It simply pipes the stream into the writable side of the supplied pair, and returns the readable side for further use.
@@ -661,7 +647,7 @@ interface RegistrationOptions {
 
 interface ReportingObserverOptions {
   buffered?: boolean;
-  types?: string[];
+  types?: readonly string[];
 }
 
 interface RequestInit {
@@ -772,7 +758,7 @@ interface StreamPipeOptions {
 }
 
 interface StructuredSerializeOptions {
-  transfer?: Transferable[];
+  transfer?: readonly Transferable[];
 }
 
 interface TextDecodeOptions {
@@ -789,7 +775,7 @@ interface TextEncoderEncodeIntoResult {
   written: number;
 }
 
-interface Transformer<I = any, O = any> {
+interface Transformer<I = unknown, O = unknown> {
   flush?: TransformerFlushCallback<O>;
   readableType?: undefined;
   start?: TransformerStartCallback<O>;
@@ -801,20 +787,20 @@ interface UnderlyingByteSource {
   autoAllocateChunkSize?: number;
   cancel?: UnderlyingSourceCancelCallback;
   pull?: (controller: ReadableByteStreamController) => void | PromiseLike<void>;
-  start?: (controller: ReadableByteStreamController) => any;
+  start?: (controller: ReadableByteStreamController) => unknown;
   type: 'bytes';
 }
 
-interface UnderlyingDefaultSource<R = any> {
+interface UnderlyingDefaultSource<R = unknown> {
   cancel?: UnderlyingSourceCancelCallback;
   pull?: (
     controller: ReadableStreamDefaultController<R>,
   ) => void | PromiseLike<void>;
-  start?: (controller: ReadableStreamDefaultController<R>) => any;
+  start?: (controller: ReadableStreamDefaultController<R>) => unknown;
   type?: undefined;
 }
 
-interface UnderlyingSink<W = any> {
+interface UnderlyingSink<W = unknown> {
   abort?: UnderlyingSinkAbortCallback;
   close?: UnderlyingSinkCloseCallback;
   start?: UnderlyingSinkStartCallback;
@@ -822,7 +808,7 @@ interface UnderlyingSink<W = any> {
   write?: UnderlyingSinkWriteCallback<W>;
 }
 
-interface UnderlyingSource<R = any> {
+interface UnderlyingSource<R = unknown> {
   autoAllocateChunkSize?: number;
   cancel?: UnderlyingSourceCancelCallback;
   pull?: UnderlyingSourcePullCallback<R>;
@@ -916,7 +902,7 @@ interface VideoFrameBufferInit {
   displayWidth?: number;
   duration?: number;
   format: VideoPixelFormat;
-  layout?: PlaneLayout[];
+  layout?: readonly PlaneLayout[];
   timestamp: number;
   visibleRect?: DOMRectInit;
 }
@@ -924,7 +910,7 @@ interface VideoFrameBufferInit {
 interface VideoFrameCopyToOptions {
   colorSpace?: PredefinedColorSpace;
   format?: VideoPixelFormat;
-  layout?: PlaneLayout[];
+  layout?: readonly PlaneLayout[];
   rect?: DOMRectInit;
 }
 
@@ -972,7 +958,7 @@ interface WebTransportOptions {
   allowPooling?: boolean;
   congestionControl?: WebTransportCongestionControl;
   requireUnreliable?: boolean;
-  serverCertificateHashes?: WebTransportHash[];
+  serverCertificateHashes?: readonly WebTransportHash[];
 }
 
 interface WebTransportSendStreamOptions {
@@ -1035,10 +1021,10 @@ interface AbortController {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortController/abort)
    */
-  abort(reason?: any): void;
+  abort(reason?: unknown): void;
 }
 
-declare var AbortController: {
+declare const AbortController: {
   prototype: AbortController;
   new (): AbortController;
 };
@@ -1060,14 +1046,14 @@ interface AbortSignal extends EventTarget {
    */
   readonly aborted: boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_event) */
-  onabort: ((this: AbortSignal, ev: Event) => any) | null;
+  onabort: ((this: AbortSignal, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/reason) */
-  readonly reason: any;
+  readonly reason: unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/throwIfAborted) */
   throwIfAborted(): void;
   addEventListener<K extends keyof AbortSignalEventMap>(
     type: K,
-    listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any,
+    listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -1077,7 +1063,7 @@ interface AbortSignal extends EventTarget {
   ): void;
   removeEventListener<K extends keyof AbortSignalEventMap>(
     type: K,
-    listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any,
+    listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -1087,13 +1073,13 @@ interface AbortSignal extends EventTarget {
   ): void;
 }
 
-declare var AbortSignal: {
+declare const AbortSignal: {
   prototype: AbortSignal;
   new (): AbortSignal;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_static) */
-  abort(reason?: any): AbortSignal;
+  abort(reason?: unknown): AbortSignal;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/any_static) */
-  any(signals: AbortSignal[]): AbortSignal;
+  any(signals: readonly AbortSignal[]): AbortSignal;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/timeout_static) */
   timeout(milliseconds: number): AbortSignal;
 };
@@ -1104,10 +1090,10 @@ interface AbstractWorkerEventMap {
 
 interface AbstractWorker {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/error_event) */
-  onerror: ((this: AbstractWorker, ev: ErrorEvent) => any) | null;
+  onerror: ((this: AbstractWorker, ev: ErrorEvent) => unknown) | null;
   addEventListener<K extends keyof AbstractWorkerEventMap>(
     type: K,
-    listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any,
+    listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -1117,7 +1103,7 @@ interface AbstractWorker {
   ): void;
   removeEventListener<K extends keyof AbstractWorkerEventMap>(
     type: K,
-    listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any,
+    listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -1161,7 +1147,7 @@ interface AudioData {
   ): void;
 }
 
-declare var AudioData: {
+declare const AudioData: {
   prototype: AudioData;
   new (init: AudioDataInit): AudioData;
 };
@@ -1179,7 +1165,7 @@ interface AudioDecoder extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/decodeQueueSize) */
   readonly decodeQueueSize: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/dequeue_event) */
-  ondequeue: ((this: AudioDecoder, ev: Event) => any) | null;
+  ondequeue: ((this: AudioDecoder, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/state) */
   readonly state: CodecState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/close) */
@@ -1194,7 +1180,7 @@ interface AudioDecoder extends EventTarget {
   reset(): void;
   addEventListener<K extends keyof AudioDecoderEventMap>(
     type: K,
-    listener: (this: AudioDecoder, ev: AudioDecoderEventMap[K]) => any,
+    listener: (this: AudioDecoder, ev: AudioDecoderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -1204,7 +1190,7 @@ interface AudioDecoder extends EventTarget {
   ): void;
   removeEventListener<K extends keyof AudioDecoderEventMap>(
     type: K,
-    listener: (this: AudioDecoder, ev: AudioDecoderEventMap[K]) => any,
+    listener: (this: AudioDecoder, ev: AudioDecoderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -1214,7 +1200,7 @@ interface AudioDecoder extends EventTarget {
   ): void;
 }
 
-declare var AudioDecoder: {
+declare const AudioDecoder: {
   prototype: AudioDecoder;
   new (init: AudioDecoderInit): AudioDecoder;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/isConfigSupported_static) */
@@ -1234,7 +1220,7 @@ interface AudioEncoder extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/encodeQueueSize) */
   readonly encodeQueueSize: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/dequeue_event) */
-  ondequeue: ((this: AudioEncoder, ev: Event) => any) | null;
+  ondequeue: ((this: AudioEncoder, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/state) */
   readonly state: CodecState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/close) */
@@ -1249,7 +1235,7 @@ interface AudioEncoder extends EventTarget {
   reset(): void;
   addEventListener<K extends keyof AudioEncoderEventMap>(
     type: K,
-    listener: (this: AudioEncoder, ev: AudioEncoderEventMap[K]) => any,
+    listener: (this: AudioEncoder, ev: AudioEncoderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -1259,7 +1245,7 @@ interface AudioEncoder extends EventTarget {
   ): void;
   removeEventListener<K extends keyof AudioEncoderEventMap>(
     type: K,
-    listener: (this: AudioEncoder, ev: AudioEncoderEventMap[K]) => any,
+    listener: (this: AudioEncoder, ev: AudioEncoderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -1269,7 +1255,7 @@ interface AudioEncoder extends EventTarget {
   ): void;
 }
 
-declare var AudioEncoder: {
+declare const AudioEncoder: {
   prototype: AudioEncoder;
   new (init: AudioEncoderInit): AudioEncoder;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/isConfigSupported_static) */
@@ -1298,9 +1284,9 @@ interface Blob {
   text(): Promise<string>;
 }
 
-declare var Blob: {
+declare const Blob: {
   prototype: Blob;
-  new (blobParts?: BlobPart[], options?: BlobPropertyBag): Blob;
+  new (blobParts?: readonly BlobPart[], options?: BlobPropertyBag): Blob;
 };
 
 interface Body {
@@ -1317,7 +1303,7 @@ interface Body {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/formData) */
   formData(): Promise<FormData>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/json) */
-  json(): Promise<any>;
+  json(): Promise<JsonValue>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/text) */
   text(): Promise<string>;
 }
@@ -1336,9 +1322,11 @@ interface BroadcastChannel extends EventTarget {
    */
   readonly name: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/message_event) */
-  onmessage: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;
+  onmessage: ((this: BroadcastChannel, ev: MessageEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/messageerror_event) */
-  onmessageerror: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;
+  onmessageerror:
+    | ((this: BroadcastChannel, ev: MessageEvent) => unknown)
+    | null;
   /**
    * Closes the BroadcastChannel object, opening it up to garbage collection.
    *
@@ -1350,10 +1338,13 @@ interface BroadcastChannel extends EventTarget {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/postMessage)
    */
-  postMessage(message: any): void;
+  postMessage(message: unknown): void;
   addEventListener<K extends keyof BroadcastChannelEventMap>(
     type: K,
-    listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any,
+    listener: (
+      this: BroadcastChannel,
+      ev: BroadcastChannelEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -1363,7 +1354,10 @@ interface BroadcastChannel extends EventTarget {
   ): void;
   removeEventListener<K extends keyof BroadcastChannelEventMap>(
     type: K,
-    listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any,
+    listener: (
+      this: BroadcastChannel,
+      ev: BroadcastChannelEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -1373,7 +1367,7 @@ interface BroadcastChannel extends EventTarget {
   ): void;
 }
 
-declare var BroadcastChannel: {
+declare const BroadcastChannel: {
   prototype: BroadcastChannel;
   new (name: string): BroadcastChannel;
 };
@@ -1390,7 +1384,7 @@ interface ByteLengthQueuingStrategy extends QueuingStrategy<ArrayBufferView> {
   readonly size: QueuingStrategySize<ArrayBufferView>;
 }
 
-declare var ByteLengthQueuingStrategy: {
+declare const ByteLengthQueuingStrategy: {
   prototype: ByteLengthQueuingStrategy;
   new (init: QueuingStrategyInit): ByteLengthQueuingStrategy;
 };
@@ -1398,7 +1392,7 @@ declare var ByteLengthQueuingStrategy: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSImageValue) */
 interface CSSImageValue extends CSSStyleValue {}
 
-declare var CSSImageValue: {
+declare const CSSImageValue: {
   prototype: CSSImageValue;
   new (): CSSImageValue;
 };
@@ -1409,7 +1403,7 @@ interface CSSKeywordValue extends CSSStyleValue {
   value: string;
 }
 
-declare var CSSKeywordValue: {
+declare const CSSKeywordValue: {
   prototype: CSSKeywordValue;
   new (value: string): CSSKeywordValue;
 };
@@ -1420,7 +1414,7 @@ interface CSSMathClamp extends CSSMathValue {
   readonly value: CSSNumericValue;
 }
 
-declare var CSSMathClamp: {
+declare const CSSMathClamp: {
   prototype: CSSMathClamp;
   new (
     lower: CSSNumberish,
@@ -1435,7 +1429,7 @@ interface CSSMathInvert extends CSSMathValue {
   readonly value: CSSNumericValue;
 }
 
-declare var CSSMathInvert: {
+declare const CSSMathInvert: {
   prototype: CSSMathInvert;
   new (arg: CSSNumberish): CSSMathInvert;
 };
@@ -1446,9 +1440,9 @@ interface CSSMathMax extends CSSMathValue {
   readonly values: CSSNumericArray;
 }
 
-declare var CSSMathMax: {
+declare const CSSMathMax: {
   prototype: CSSMathMax;
-  new (...args: CSSNumberish[]): CSSMathMax;
+  new (...args: readonly CSSNumberish[]): CSSMathMax;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathMin) */
@@ -1457,9 +1451,9 @@ interface CSSMathMin extends CSSMathValue {
   readonly values: CSSNumericArray;
 }
 
-declare var CSSMathMin: {
+declare const CSSMathMin: {
   prototype: CSSMathMin;
-  new (...args: CSSNumberish[]): CSSMathMin;
+  new (...args: readonly CSSNumberish[]): CSSMathMin;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathNegate) */
@@ -1468,7 +1462,7 @@ interface CSSMathNegate extends CSSMathValue {
   readonly value: CSSNumericValue;
 }
 
-declare var CSSMathNegate: {
+declare const CSSMathNegate: {
   prototype: CSSMathNegate;
   new (arg: CSSNumberish): CSSMathNegate;
 };
@@ -1479,9 +1473,9 @@ interface CSSMathProduct extends CSSMathValue {
   readonly values: CSSNumericArray;
 }
 
-declare var CSSMathProduct: {
+declare const CSSMathProduct: {
   prototype: CSSMathProduct;
-  new (...args: CSSNumberish[]): CSSMathProduct;
+  new (...args: readonly CSSNumberish[]): CSSMathProduct;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathSum) */
@@ -1490,9 +1484,9 @@ interface CSSMathSum extends CSSMathValue {
   readonly values: CSSNumericArray;
 }
 
-declare var CSSMathSum: {
+declare const CSSMathSum: {
   prototype: CSSMathSum;
-  new (...args: CSSNumberish[]): CSSMathSum;
+  new (...args: readonly CSSNumberish[]): CSSMathSum;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathValue) */
@@ -1501,7 +1495,7 @@ interface CSSMathValue extends CSSNumericValue {
   readonly operator: CSSMathOperator;
 }
 
-declare var CSSMathValue: {
+declare const CSSMathValue: {
   prototype: CSSMathValue;
   new (): CSSMathValue;
 };
@@ -1512,7 +1506,7 @@ interface CSSMatrixComponent extends CSSTransformComponent {
   matrix: DOMMatrix;
 }
 
-declare var CSSMatrixComponent: {
+declare const CSSMatrixComponent: {
   prototype: CSSMatrixComponent;
   new (
     matrix: DOMMatrixReadOnly,
@@ -1530,12 +1524,12 @@ interface CSSNumericArray {
       key: number,
       parent: CSSNumericArray,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: CSSNumericValue;
 }
 
-declare var CSSNumericArray: {
+declare const CSSNumericArray: {
   prototype: CSSNumericArray;
   new (): CSSNumericArray;
 };
@@ -1543,28 +1537,28 @@ declare var CSSNumericArray: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue) */
 interface CSSNumericValue extends CSSStyleValue {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/add) */
-  add(...values: CSSNumberish[]): CSSNumericValue;
+  add(...values: readonly CSSNumberish[]): CSSNumericValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/div) */
-  div(...values: CSSNumberish[]): CSSNumericValue;
+  div(...values: readonly CSSNumberish[]): CSSNumericValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/equals) */
-  equals(...value: CSSNumberish[]): boolean;
+  equals(...value: readonly CSSNumberish[]): boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/max) */
-  max(...values: CSSNumberish[]): CSSNumericValue;
+  max(...values: readonly CSSNumberish[]): CSSNumericValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/min) */
-  min(...values: CSSNumberish[]): CSSNumericValue;
+  min(...values: readonly CSSNumberish[]): CSSNumericValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/mul) */
-  mul(...values: CSSNumberish[]): CSSNumericValue;
+  mul(...values: readonly CSSNumberish[]): CSSNumericValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/sub) */
-  sub(...values: CSSNumberish[]): CSSNumericValue;
+  sub(...values: readonly CSSNumberish[]): CSSNumericValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/to) */
   to(unit: string): CSSUnitValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/toSum) */
-  toSum(...units: string[]): CSSMathSum;
+  toSum(...units: readonly string[]): CSSMathSum;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/type) */
   type(): CSSNumericType;
 }
 
-declare var CSSNumericValue: {
+declare const CSSNumericValue: {
   prototype: CSSNumericValue;
   new (): CSSNumericValue;
 };
@@ -1575,7 +1569,7 @@ interface CSSPerspective extends CSSTransformComponent {
   length: CSSPerspectiveValue;
 }
 
-declare var CSSPerspective: {
+declare const CSSPerspective: {
   prototype: CSSPerspective;
   new (length: CSSPerspectiveValue): CSSPerspective;
 };
@@ -1592,7 +1586,7 @@ interface CSSRotate extends CSSTransformComponent {
   z: CSSNumberish;
 }
 
-declare var CSSRotate: {
+declare const CSSRotate: {
   prototype: CSSRotate;
   new (angle: CSSNumericValue): CSSRotate;
   new (
@@ -1613,7 +1607,7 @@ interface CSSScale extends CSSTransformComponent {
   z: CSSNumberish;
 }
 
-declare var CSSScale: {
+declare const CSSScale: {
   prototype: CSSScale;
   new (x: CSSNumberish, y: CSSNumberish, z?: CSSNumberish): CSSScale;
 };
@@ -1626,7 +1620,7 @@ interface CSSSkew extends CSSTransformComponent {
   ay: CSSNumericValue;
 }
 
-declare var CSSSkew: {
+declare const CSSSkew: {
   prototype: CSSSkew;
   new (ax: CSSNumericValue, ay: CSSNumericValue): CSSSkew;
 };
@@ -1637,7 +1631,7 @@ interface CSSSkewX extends CSSTransformComponent {
   ax: CSSNumericValue;
 }
 
-declare var CSSSkewX: {
+declare const CSSSkewX: {
   prototype: CSSSkewX;
   new (ax: CSSNumericValue): CSSSkewX;
 };
@@ -1648,7 +1642,7 @@ interface CSSSkewY extends CSSTransformComponent {
   ay: CSSNumericValue;
 }
 
-declare var CSSSkewY: {
+declare const CSSSkewY: {
   prototype: CSSSkewY;
   new (ay: CSSNumericValue): CSSSkewY;
 };
@@ -1658,7 +1652,7 @@ interface CSSStyleValue {
   toString(): string;
 }
 
-declare var CSSStyleValue: {
+declare const CSSStyleValue: {
   prototype: CSSStyleValue;
   new (): CSSStyleValue;
 };
@@ -1672,7 +1666,7 @@ interface CSSTransformComponent {
   toString(): string;
 }
 
-declare var CSSTransformComponent: {
+declare const CSSTransformComponent: {
   prototype: CSSTransformComponent;
   new (): CSSTransformComponent;
 };
@@ -1691,14 +1685,14 @@ interface CSSTransformValue extends CSSStyleValue {
       key: number,
       parent: CSSTransformValue,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: CSSTransformComponent;
 }
 
-declare var CSSTransformValue: {
+declare const CSSTransformValue: {
   prototype: CSSTransformValue;
-  new (transforms: CSSTransformComponent[]): CSSTransformValue;
+  new (transforms: readonly CSSTransformComponent[]): CSSTransformValue;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTranslate) */
@@ -1711,7 +1705,7 @@ interface CSSTranslate extends CSSTransformComponent {
   z: CSSNumericValue;
 }
 
-declare var CSSTranslate: {
+declare const CSSTranslate: {
   prototype: CSSTranslate;
   new (
     x: CSSNumericValue,
@@ -1728,7 +1722,7 @@ interface CSSUnitValue extends CSSNumericValue {
   value: number;
 }
 
-declare var CSSUnitValue: {
+declare const CSSUnitValue: {
   prototype: CSSUnitValue;
   new (value: number, unit: string): CSSUnitValue;
 };
@@ -1743,14 +1737,14 @@ interface CSSUnparsedValue extends CSSStyleValue {
       key: number,
       parent: CSSUnparsedValue,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   [index: number]: CSSUnparsedSegment;
 }
 
-declare var CSSUnparsedValue: {
+declare const CSSUnparsedValue: {
   prototype: CSSUnparsedValue;
-  new (members: CSSUnparsedSegment[]): CSSUnparsedValue;
+  new (members: readonly CSSUnparsedSegment[]): CSSUnparsedValue;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSVariableReferenceValue) */
@@ -1761,7 +1755,7 @@ interface CSSVariableReferenceValue {
   variable: string;
 }
 
-declare var CSSVariableReferenceValue: {
+declare const CSSVariableReferenceValue: {
   prototype: CSSVariableReferenceValue;
   new (
     variable: string,
@@ -1779,7 +1773,7 @@ interface Cache {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/add) */
   add(request: RequestInfo | URL): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/addAll) */
-  addAll(requests: RequestInfo[]): Promise<void>;
+  addAll(requests: readonly RequestInfo[]): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/delete) */
   delete(
     request: RequestInfo | URL,
@@ -1804,7 +1798,7 @@ interface Cache {
   put(request: RequestInfo | URL, response: Response): Promise<void>;
 }
 
-declare var Cache: {
+declare const Cache: {
   prototype: Cache;
   new (): Cache;
 };
@@ -1821,7 +1815,7 @@ interface CacheStorage {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/has) */
   has(cacheName: string): Promise<boolean>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/keys) */
-  keys(): Promise<string[]>;
+  keys(): Promise<readonly string[]>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/match) */
   match(
     request: RequestInfo | URL,
@@ -1831,7 +1825,7 @@ interface CacheStorage {
   open(cacheName: string): Promise<Cache>;
 }
 
-declare var CacheStorage: {
+declare const CacheStorage: {
   prototype: CacheStorage;
   new (): CacheStorage;
 };
@@ -1942,7 +1936,7 @@ interface CanvasGradient {
   addColorStop(offset: number, color: string): void;
 }
 
-declare var CanvasGradient: {
+declare const CanvasGradient: {
   prototype: CanvasGradient;
   new (): CanvasGradient;
 };
@@ -2047,9 +2041,9 @@ interface CanvasPathDrawingStyles {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/miterLimit) */
   miterLimit: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/getLineDash) */
-  getLineDash(): number[];
+  getLineDash(): readonly number[];
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/setLineDash) */
-  setLineDash(segments: number[]): void;
+  setLineDash(segments: readonly number[]): void;
 }
 
 /**
@@ -2066,7 +2060,7 @@ interface CanvasPattern {
   setTransform(transform?: DOMMatrix2DInit): void;
 }
 
-declare var CanvasPattern: {
+declare const CanvasPattern: {
   prototype: CanvasPattern;
   new (): CanvasPattern;
 };
@@ -2181,11 +2175,11 @@ interface Client {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Client/url) */
   readonly url: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Client/postMessage) */
-  postMessage(message: any, transfer: Transferable[]): void;
-  postMessage(message: any, options?: StructuredSerializeOptions): void;
+  postMessage(message: unknown, transfer: readonly Transferable[]): void;
+  postMessage(message: unknown, options?: StructuredSerializeOptions): void;
 }
 
-declare var Client: {
+declare const Client: {
   prototype: Client;
   new (): Client;
 };
@@ -2208,7 +2202,7 @@ interface Clients {
   openWindow(url: string | URL): Promise<WindowClient | null>;
 }
 
-declare var Clients: {
+declare const Clients: {
   prototype: Clients;
   new (): Clients;
 };
@@ -2239,7 +2233,7 @@ interface CloseEvent extends Event {
   readonly wasClean: boolean;
 }
 
-declare var CloseEvent: {
+declare const CloseEvent: {
   prototype: CloseEvent;
   new (type: string, eventInitDict?: CloseEventInit): CloseEvent;
 };
@@ -2250,7 +2244,7 @@ interface CompressionStream extends GenericTransformStream {
   readonly writable: WritableStream<BufferSource>;
 }
 
-declare var CompressionStream: {
+declare const CompressionStream: {
   prototype: CompressionStream;
   new (format: CompressionFormat): CompressionStream;
 };
@@ -2267,7 +2261,7 @@ interface CountQueuingStrategy extends QueuingStrategy {
   readonly size: QueuingStrategySize;
 }
 
-declare var CountQueuingStrategy: {
+declare const CountQueuingStrategy: {
   prototype: CountQueuingStrategy;
   new (init: QueuingStrategyInit): CountQueuingStrategy;
 };
@@ -2294,7 +2288,7 @@ interface Crypto {
   randomUUID(): `${string}-${string}-${string}-${string}-${string}`;
 }
 
-declare var Crypto: {
+declare const Crypto: {
   prototype: Crypto;
   new (): Crypto;
 };
@@ -2313,16 +2307,16 @@ interface CryptoKey {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/type) */
   readonly type: KeyType;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/usages) */
-  readonly usages: KeyUsage[];
+  readonly usages: readonly KeyUsage[];
 }
 
-declare var CryptoKey: {
+declare const CryptoKey: {
   prototype: CryptoKey;
   new (): CryptoKey;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomEvent) */
-interface CustomEvent<T = any> extends Event {
+interface CustomEvent<T = unknown> extends Event {
   /**
    * Returns any custom data event was created with. Typically used for synthetic events.
    *
@@ -2342,7 +2336,7 @@ interface CustomEvent<T = any> extends Event {
   ): void;
 }
 
-declare var CustomEvent: {
+declare const CustomEvent: {
   prototype: CustomEvent;
   new <T>(type: string, eventInitDict?: CustomEventInit<T>): CustomEvent<T>;
 };
@@ -2390,7 +2384,7 @@ interface DOMException extends Error {
   readonly DATA_CLONE_ERR: 25;
 }
 
-declare var DOMException: {
+declare const DOMException: {
   prototype: DOMException;
   new (message?: string, name?: string): DOMException;
   readonly INDEX_SIZE_ERR: 1;
@@ -2496,9 +2490,9 @@ interface DOMMatrix extends DOMMatrixReadOnly {
   translateSelf(tx?: number, ty?: number, tz?: number): DOMMatrix;
 }
 
-declare var DOMMatrix: {
+declare const DOMMatrix: {
   prototype: DOMMatrix;
-  new (init?: string | number[]): DOMMatrix;
+  new (init?: string | readonly number[]): DOMMatrix;
   fromFloat32Array(array32: Float32Array): DOMMatrix;
   fromFloat64Array(array64: Float64Array): DOMMatrix;
   fromMatrix(other?: DOMMatrixInit): DOMMatrix;
@@ -2586,15 +2580,15 @@ interface DOMMatrixReadOnly {
   skewY(sy?: number): DOMMatrix;
   toFloat32Array(): Float32Array;
   toFloat64Array(): Float64Array;
-  toJSON(): any;
+  toJSON(): unknown;
   transformPoint(point?: DOMPointInit): DOMPoint;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/translate) */
   translate(tx?: number, ty?: number, tz?: number): DOMMatrix;
 }
 
-declare var DOMMatrixReadOnly: {
+declare const DOMMatrixReadOnly: {
   prototype: DOMMatrixReadOnly;
-  new (init?: string | number[]): DOMMatrixReadOnly;
+  new (init?: string | readonly number[]): DOMMatrixReadOnly;
   fromFloat32Array(array32: Float32Array): DOMMatrixReadOnly;
   fromFloat64Array(array64: Float64Array): DOMMatrixReadOnly;
   fromMatrix(other?: DOMMatrixInit): DOMMatrixReadOnly;
@@ -2612,7 +2606,7 @@ interface DOMPoint extends DOMPointReadOnly {
   z: number;
 }
 
-declare var DOMPoint: {
+declare const DOMPoint: {
   prototype: DOMPoint;
   new (x?: number, y?: number, z?: number, w?: number): DOMPoint;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint/fromPoint_static) */
@@ -2631,10 +2625,10 @@ interface DOMPointReadOnly {
   readonly z: number;
   matrixTransform(matrix?: DOMMatrixInit): DOMPoint;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var DOMPointReadOnly: {
+declare const DOMPointReadOnly: {
   prototype: DOMPointReadOnly;
   new (x?: number, y?: number, z?: number, w?: number): DOMPointReadOnly;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/fromPoint_static) */
@@ -2648,10 +2642,10 @@ interface DOMQuad {
   readonly p3: DOMPoint;
   readonly p4: DOMPoint;
   getBounds(): DOMRect;
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var DOMQuad: {
+declare const DOMQuad: {
   prototype: DOMQuad;
   new (
     p1?: DOMPointInit,
@@ -2671,7 +2665,7 @@ interface DOMRect extends DOMRectReadOnly {
   y: number;
 }
 
-declare var DOMRect: {
+declare const DOMRect: {
   prototype: DOMRect;
   new (x?: number, y?: number, width?: number, height?: number): DOMRect;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect/fromRect_static) */
@@ -2696,10 +2690,10 @@ interface DOMRectReadOnly {
   readonly x: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/y) */
   readonly y: number;
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var DOMRectReadOnly: {
+declare const DOMRectReadOnly: {
   prototype: DOMRectReadOnly;
   new (
     x?: number,
@@ -2738,7 +2732,7 @@ interface DOMStringList {
   [index: number]: string;
 }
 
-declare var DOMStringList: {
+declare const DOMStringList: {
   prototype: DOMStringList;
   new (): DOMStringList;
 };
@@ -2749,7 +2743,7 @@ interface DecompressionStream extends GenericTransformStream {
   readonly writable: WritableStream<BufferSource>;
 }
 
-declare var DecompressionStream: {
+declare const DecompressionStream: {
   prototype: DecompressionStream;
   new (format: CompressionFormat): DecompressionStream;
 };
@@ -2776,15 +2770,15 @@ interface DedicatedWorkerGlobalScope
   readonly name: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/message_event) */
   onmessage:
-    | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any)
+    | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/messageerror_event) */
   onmessageerror:
-    | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any)
+    | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/rtctransform_event) */
   onrtctransform:
-    | ((this: DedicatedWorkerGlobalScope, ev: RTCTransformEvent) => any)
+    | ((this: DedicatedWorkerGlobalScope, ev: RTCTransformEvent) => unknown)
     | null;
   /**
    * Aborts dedicatedWorkerGlobal.
@@ -2797,14 +2791,14 @@ interface DedicatedWorkerGlobalScope
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/postMessage)
    */
-  postMessage(message: any, transfer: Transferable[]): void;
-  postMessage(message: any, options?: StructuredSerializeOptions): void;
+  postMessage(message: unknown, transfer: readonly Transferable[]): void;
+  postMessage(message: unknown, options?: StructuredSerializeOptions): void;
   addEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(
     type: K,
     listener: (
       this: DedicatedWorkerGlobalScope,
       ev: DedicatedWorkerGlobalScopeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -2817,7 +2811,7 @@ interface DedicatedWorkerGlobalScope
     listener: (
       this: DedicatedWorkerGlobalScope,
       ev: DedicatedWorkerGlobalScopeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -2827,7 +2821,7 @@ interface DedicatedWorkerGlobalScope
   ): void;
 }
 
-declare var DedicatedWorkerGlobalScope: {
+declare const DedicatedWorkerGlobalScope: {
   prototype: DedicatedWorkerGlobalScope;
   new (): DedicatedWorkerGlobalScope;
 };
@@ -2922,7 +2916,7 @@ interface EncodedAudioChunk {
   copyTo(destination: AllowSharedBufferSource): void;
 }
 
-declare var EncodedAudioChunk: {
+declare const EncodedAudioChunk: {
   prototype: EncodedAudioChunk;
   new (init: EncodedAudioChunkInit): EncodedAudioChunk;
 };
@@ -2941,7 +2935,7 @@ interface EncodedVideoChunk {
   copyTo(destination: AllowSharedBufferSource): void;
 }
 
-declare var EncodedVideoChunk: {
+declare const EncodedVideoChunk: {
   prototype: EncodedVideoChunk;
   new (init: EncodedVideoChunkInit): EncodedVideoChunk;
 };
@@ -2953,13 +2947,13 @@ declare var EncodedVideoChunk: {
  */
 interface ErrorEvent extends Event {
   readonly colno: number;
-  readonly error: any;
+  readonly error: unknown;
   readonly filename: string;
   readonly lineno: number;
   readonly message: string;
 }
 
-declare var ErrorEvent: {
+declare const ErrorEvent: {
   prototype: ErrorEvent;
   new (type: string, eventInitDict?: ErrorEventInit): ErrorEvent;
 };
@@ -3053,7 +3047,7 @@ interface Event {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/composedPath)
    */
-  composedPath(): EventTarget[];
+  composedPath(): readonly EventTarget[];
   /**
    * @deprecated
    *
@@ -3084,7 +3078,7 @@ interface Event {
   readonly BUBBLING_PHASE: 3;
 }
 
-declare var Event: {
+declare const Event: {
   prototype: Event;
   new (type: string, eventInitDict?: EventInit): Event;
   readonly NONE: 0;
@@ -3110,11 +3104,11 @@ interface EventSourceEventMap {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource) */
 interface EventSource extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/error_event) */
-  onerror: ((this: EventSource, ev: Event) => any) | null;
+  onerror: ((this: EventSource, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/message_event) */
-  onmessage: ((this: EventSource, ev: MessageEvent) => any) | null;
+  onmessage: ((this: EventSource, ev: MessageEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/open_event) */
-  onopen: ((this: EventSource, ev: Event) => any) | null;
+  onopen: ((this: EventSource, ev: Event) => unknown) | null;
   /**
    * Returns the state of this EventSource object's connection. It can have the values described below.
    *
@@ -3144,12 +3138,12 @@ interface EventSource extends EventTarget {
   readonly CLOSED: 2;
   addEventListener<K extends keyof EventSourceEventMap>(
     type: K,
-    listener: (this: EventSource, ev: EventSourceEventMap[K]) => any,
+    listener: (this: EventSource, ev: EventSourceEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
     type: string,
-    listener: (this: EventSource, event: MessageEvent) => any,
+    listener: (this: EventSource, event: MessageEvent) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3159,12 +3153,12 @@ interface EventSource extends EventTarget {
   ): void;
   removeEventListener<K extends keyof EventSourceEventMap>(
     type: K,
-    listener: (this: EventSource, ev: EventSourceEventMap[K]) => any,
+    listener: (this: EventSource, ev: EventSourceEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
     type: string,
-    listener: (this: EventSource, event: MessageEvent) => any,
+    listener: (this: EventSource, event: MessageEvent) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3174,7 +3168,7 @@ interface EventSource extends EventTarget {
   ): void;
 }
 
-declare var EventSource: {
+declare const EventSource: {
   prototype: EventSource;
   new (url: string | URL, eventSourceInitDict?: EventSourceInit): EventSource;
   readonly CONNECTING: 0;
@@ -3228,7 +3222,7 @@ interface EventTarget {
   ): void;
 }
 
-declare var EventTarget: {
+declare const EventTarget: {
   prototype: EventTarget;
   new (): EventTarget;
 };
@@ -3240,10 +3234,10 @@ declare var EventTarget: {
  */
 interface ExtendableEvent extends Event {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ExtendableEvent/waitUntil) */
-  waitUntil(f: Promise<any>): void;
+  waitUntil(f: Promise<unknown>): void;
 }
 
-declare var ExtendableEvent: {
+declare const ExtendableEvent: {
   prototype: ExtendableEvent;
   new (type: string, eventInitDict?: ExtendableEventInit): ExtendableEvent;
 };
@@ -3255,7 +3249,7 @@ declare var ExtendableEvent: {
  */
 interface ExtendableMessageEvent extends ExtendableEvent {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ExtendableMessageEvent/data) */
-  readonly data: any;
+  readonly data: unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ExtendableMessageEvent/lastEventId) */
   readonly lastEventId: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ExtendableMessageEvent/origin) */
@@ -3266,7 +3260,7 @@ interface ExtendableMessageEvent extends ExtendableEvent {
   readonly source: Client | ServiceWorker | MessagePort | null;
 }
 
-declare var ExtendableMessageEvent: {
+declare const ExtendableMessageEvent: {
   prototype: ExtendableMessageEvent;
   new (
     type: string,
@@ -3285,7 +3279,7 @@ interface FetchEvent extends ExtendableEvent {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FetchEvent/handled) */
   readonly handled: Promise<undefined>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FetchEvent/preloadResponse) */
-  readonly preloadResponse: Promise<any>;
+  readonly preloadResponse: Promise<unknown>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FetchEvent/request) */
   readonly request: Request;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FetchEvent/resultingClientId) */
@@ -3294,7 +3288,7 @@ interface FetchEvent extends ExtendableEvent {
   respondWith(r: Response | PromiseLike<Response>): void;
 }
 
-declare var FetchEvent: {
+declare const FetchEvent: {
   prototype: FetchEvent;
   new (type: string, eventInitDict: FetchEventInit): FetchEvent;
 };
@@ -3313,9 +3307,13 @@ interface File extends Blob {
   readonly webkitRelativePath: string;
 }
 
-declare var File: {
+declare const File: {
   prototype: File;
-  new (fileBits: BlobPart[], fileName: string, options?: FilePropertyBag): File;
+  new (
+    fileBits: readonly BlobPart[],
+    fileName: string,
+    options?: FilePropertyBag,
+  ): File;
 };
 
 /**
@@ -3331,7 +3329,7 @@ interface FileList {
   [index: number]: File;
 }
 
-declare var FileList: {
+declare const FileList: {
   prototype: FileList;
   new (): FileList;
 };
@@ -3354,19 +3352,27 @@ interface FileReader extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/error) */
   readonly error: DOMException | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/abort_event) */
-  onabort: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onabort:
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/error_event) */
-  onerror: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onerror:
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/load_event) */
-  onload: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onload: ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/loadend_event) */
-  onloadend: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onloadend:
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/loadstart_event) */
   onloadstart:
-    | ((this: FileReader, ev: ProgressEvent<FileReader>) => any)
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/progress_event) */
-  onprogress: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;
+  onprogress:
+    | ((this: FileReader, ev: ProgressEvent<FileReader>) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readyState) */
   readonly readyState:
     | typeof FileReader.EMPTY
@@ -3393,7 +3399,7 @@ interface FileReader extends EventTarget {
   readonly DONE: 2;
   addEventListener<K extends keyof FileReaderEventMap>(
     type: K,
-    listener: (this: FileReader, ev: FileReaderEventMap[K]) => any,
+    listener: (this: FileReader, ev: FileReaderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3403,7 +3409,7 @@ interface FileReader extends EventTarget {
   ): void;
   removeEventListener<K extends keyof FileReaderEventMap>(
     type: K,
-    listener: (this: FileReader, ev: FileReaderEventMap[K]) => any,
+    listener: (this: FileReader, ev: FileReaderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3413,7 +3419,7 @@ interface FileReader extends EventTarget {
   ): void;
 }
 
-declare var FileReader: {
+declare const FileReader: {
   prototype: FileReader;
   new (): FileReader;
   readonly EMPTY: 0;
@@ -3441,7 +3447,7 @@ interface FileReaderSync {
   readAsText(blob: Blob, encoding?: string): string;
 }
 
-declare var FileReaderSync: {
+declare const FileReaderSync: {
   prototype: FileReaderSync;
   new (): FileReaderSync;
 };
@@ -3466,10 +3472,12 @@ interface FileSystemDirectoryHandle extends FileSystemHandle {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryHandle/removeEntry) */
   removeEntry(name: string, options?: FileSystemRemoveOptions): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryHandle/resolve) */
-  resolve(possibleDescendant: FileSystemHandle): Promise<string[] | null>;
+  resolve(
+    possibleDescendant: FileSystemHandle,
+  ): Promise<readonly string[] | null>;
 }
 
-declare var FileSystemDirectoryHandle: {
+declare const FileSystemDirectoryHandle: {
   prototype: FileSystemDirectoryHandle;
   new (): FileSystemDirectoryHandle;
 };
@@ -3491,7 +3499,7 @@ interface FileSystemFileHandle extends FileSystemHandle {
   getFile(): Promise<File>;
 }
 
-declare var FileSystemFileHandle: {
+declare const FileSystemFileHandle: {
   prototype: FileSystemFileHandle;
   new (): FileSystemFileHandle;
 };
@@ -3510,7 +3518,7 @@ interface FileSystemHandle {
   isSameEntry(other: FileSystemHandle): Promise<boolean>;
 }
 
-declare var FileSystemHandle: {
+declare const FileSystemHandle: {
   prototype: FileSystemHandle;
   new (): FileSystemHandle;
 };
@@ -3541,7 +3549,7 @@ interface FileSystemSyncAccessHandle {
   ): number;
 }
 
-declare var FileSystemSyncAccessHandle: {
+declare const FileSystemSyncAccessHandle: {
   prototype: FileSystemSyncAccessHandle;
   new (): FileSystemSyncAccessHandle;
 };
@@ -3560,7 +3568,7 @@ interface FileSystemWritableFileStream extends WritableStream {
   write(data: FileSystemWriteChunkType): Promise<void>;
 }
 
-declare var FileSystemWritableFileStream: {
+declare const FileSystemWritableFileStream: {
   prototype: FileSystemWritableFileStream;
   new (): FileSystemWritableFileStream;
 };
@@ -3595,7 +3603,7 @@ interface FontFace {
   load(): Promise<FontFace>;
 }
 
-declare var FontFace: {
+declare const FontFace: {
   prototype: FontFace;
   new (
     family: string,
@@ -3613,11 +3621,15 @@ interface FontFaceSetEventMap {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet) */
 interface FontFaceSet extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loading_event) */
-  onloading: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => any) | null;
+  onloading: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loadingdone_event) */
-  onloadingdone: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => any) | null;
+  onloadingdone:
+    | ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loadingerror_event) */
-  onloadingerror: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => any) | null;
+  onloadingerror:
+    | ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/ready) */
   readonly ready: Promise<FontFaceSet>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/status) */
@@ -3625,14 +3637,14 @@ interface FontFaceSet extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/check) */
   check(font: string, text?: string): boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/load) */
-  load(font: string, text?: string): Promise<FontFace[]>;
+  load(font: string, text?: string): Promise<readonly FontFace[]>;
   forEach(
     callbackfn: (value: FontFace, key: FontFace, parent: FontFaceSet) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
   addEventListener<K extends keyof FontFaceSetEventMap>(
     type: K,
-    listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any,
+    listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3642,7 +3654,7 @@ interface FontFaceSet extends EventTarget {
   ): void;
   removeEventListener<K extends keyof FontFaceSetEventMap>(
     type: K,
-    listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any,
+    listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3652,7 +3664,7 @@ interface FontFaceSet extends EventTarget {
   ): void;
 }
 
-declare var FontFaceSet: {
+declare const FontFaceSet: {
   prototype: FontFaceSet;
   new (): FontFaceSet;
 };
@@ -3663,7 +3675,7 @@ interface FontFaceSetLoadEvent extends Event {
   readonly fontfaces: ReadonlyArray<FontFace>;
 }
 
-declare var FontFaceSetLoadEvent: {
+declare const FontFaceSetLoadEvent: {
   prototype: FontFaceSetLoadEvent;
   new (
     type: string,
@@ -3691,7 +3703,7 @@ interface FormData {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/get) */
   get(name: string): FormDataEntryValue | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/getAll) */
-  getAll(name: string): FormDataEntryValue[];
+  getAll(name: string): readonly FormDataEntryValue[];
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/has) */
   has(name: string): boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/set) */
@@ -3704,11 +3716,11 @@ interface FormData {
       key: string,
       parent: FormData,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var FormData: {
+declare const FormData: {
   prototype: FormData;
   new (): FormData;
 };
@@ -3733,18 +3745,18 @@ interface Headers {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/get) */
   get(name: string): string | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/getSetCookie) */
-  getSetCookie(): string[];
+  getSetCookie(): readonly string[];
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/has) */
   has(name: string): boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/set) */
   set(name: string, value: string): void;
   forEach(
     callbackfn: (value: string, key: string, parent: Headers) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var Headers: {
+declare const Headers: {
   prototype: Headers;
   new (init?: HeadersInit): Headers;
 };
@@ -3816,10 +3828,10 @@ interface IDBCursor {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/update)
    */
-  update(value: any): IDBRequest<IDBValidKey>;
+  update(value: unknown): IDBRequest<IDBValidKey>;
 }
 
-declare var IDBCursor: {
+declare const IDBCursor: {
   prototype: IDBCursor;
   new (): IDBCursor;
 };
@@ -3835,10 +3847,10 @@ interface IDBCursorWithValue extends IDBCursor {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursorWithValue/value)
    */
-  readonly value: any;
+  readonly value: unknown;
 }
 
-declare var IDBCursorWithValue: {
+declare const IDBCursorWithValue: {
   prototype: IDBCursorWithValue;
   new (): IDBCursorWithValue;
 };
@@ -3868,13 +3880,13 @@ interface IDBDatabase extends EventTarget {
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/objectStoreNames)
    */
   readonly objectStoreNames: DOMStringList;
-  onabort: ((this: IDBDatabase, ev: Event) => any) | null;
+  onabort: ((this: IDBDatabase, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/close_event) */
-  onclose: ((this: IDBDatabase, ev: Event) => any) | null;
-  onerror: ((this: IDBDatabase, ev: Event) => any) | null;
+  onclose: ((this: IDBDatabase, ev: Event) => unknown) | null;
+  onerror: ((this: IDBDatabase, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/versionchange_event) */
   onversionchange:
-    | ((this: IDBDatabase, ev: IDBVersionChangeEvent) => any)
+    | ((this: IDBDatabase, ev: IDBVersionChangeEvent) => unknown)
     | null;
   /**
    * Returns the version of the database.
@@ -3913,13 +3925,13 @@ interface IDBDatabase extends EventTarget {
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/transaction)
    */
   transaction(
-    storeNames: string | string[],
+    storeNames: string | readonly string[],
     mode?: IDBTransactionMode,
     options?: IDBTransactionOptions,
   ): IDBTransaction;
   addEventListener<K extends keyof IDBDatabaseEventMap>(
     type: K,
-    listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any,
+    listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -3929,7 +3941,7 @@ interface IDBDatabase extends EventTarget {
   ): void;
   removeEventListener<K extends keyof IDBDatabaseEventMap>(
     type: K,
-    listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any,
+    listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -3939,7 +3951,7 @@ interface IDBDatabase extends EventTarget {
   ): void;
 }
 
-declare var IDBDatabase: {
+declare const IDBDatabase: {
   prototype: IDBDatabase;
   new (): IDBDatabase;
 };
@@ -3957,9 +3969,9 @@ interface IDBFactory {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/cmp)
    */
-  cmp(first: any, second: any): number;
+  cmp(first: unknown, second: unknown): number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/databases) */
-  databases(): Promise<IDBDatabaseInfo[]>;
+  databases(): Promise<readonly IDBDatabaseInfo[]>;
   /**
    * Attempts to delete the named database. If the database already exists and there are open connections that don't close in response to a versionchange event, the request will be blocked until all they close. If the request is successful request's result will be null.
    *
@@ -3974,7 +3986,7 @@ interface IDBFactory {
   open(name: string, version?: number): IDBOpenDBRequest;
 }
 
-declare var IDBFactory: {
+declare const IDBFactory: {
   prototype: IDBFactory;
   new (): IDBFactory;
 };
@@ -3986,7 +3998,7 @@ declare var IDBFactory: {
  */
 interface IDBIndex {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/keyPath) */
-  readonly keyPath: string | string[];
+  readonly keyPath: string | readonly string[];
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/multiEntry) */
   readonly multiEntry: boolean;
   /**
@@ -4018,7 +4030,7 @@ interface IDBIndex {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/get)
    */
-  get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;
+  get(query: IDBValidKey | IDBKeyRange): IDBRequest<unknown>;
   /**
    * Retrieves the values of the records matching the given key or key range in query (up to count if given).
    *
@@ -4029,7 +4041,7 @@ interface IDBIndex {
   getAll(
     query?: IDBValidKey | IDBKeyRange | null,
     count?: number,
-  ): IDBRequest<any[]>;
+  ): IDBRequest<readonly unknown[]>;
   /**
    * Retrieves the keys of records matching the given key or key range in query (up to count if given).
    *
@@ -4040,7 +4052,7 @@ interface IDBIndex {
   getAllKeys(
     query?: IDBValidKey | IDBKeyRange | null,
     count?: number,
-  ): IDBRequest<IDBValidKey[]>;
+  ): IDBRequest<readonly IDBValidKey[]>;
   /**
    * Retrieves the key of the first record matching the given key or key range in query.
    *
@@ -4073,7 +4085,7 @@ interface IDBIndex {
   ): IDBRequest<IDBCursor | null>;
 }
 
-declare var IDBIndex: {
+declare const IDBIndex: {
   prototype: IDBIndex;
   new (): IDBIndex;
 };
@@ -4089,7 +4101,7 @@ interface IDBKeyRange {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/lower)
    */
-  readonly lower: any;
+  readonly lower: unknown;
   /**
    * Returns true if the lower open flag is set, and false otherwise.
    *
@@ -4101,7 +4113,7 @@ interface IDBKeyRange {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/upper)
    */
-  readonly upper: any;
+  readonly upper: unknown;
   /**
    * Returns true if the upper open flag is set, and false otherwise.
    *
@@ -4113,10 +4125,10 @@ interface IDBKeyRange {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/includes)
    */
-  includes(key: any): boolean;
+  includes(key: unknown): boolean;
 }
 
-declare var IDBKeyRange: {
+declare const IDBKeyRange: {
   prototype: IDBKeyRange;
   new (): IDBKeyRange;
   /**
@@ -4125,8 +4137,8 @@ declare var IDBKeyRange: {
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/bound_static)
    */
   bound(
-    lower: any,
-    upper: any,
+    lower: unknown,
+    upper: unknown,
     lowerOpen?: boolean,
     upperOpen?: boolean,
   ): IDBKeyRange;
@@ -4135,19 +4147,19 @@ declare var IDBKeyRange: {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/lowerBound_static)
    */
-  lowerBound(lower: any, open?: boolean): IDBKeyRange;
+  lowerBound(lower: unknown, open?: boolean): IDBKeyRange;
   /**
    * Returns a new IDBKeyRange spanning only key.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/only_static)
    */
-  only(value: any): IDBKeyRange;
+  only(value: unknown): IDBKeyRange;
   /**
    * Returns a new IDBKeyRange with no lower bound and ending at key. If open is true, key is not included in the range.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/upperBound_static)
    */
-  upperBound(upper: any, open?: boolean): IDBKeyRange;
+  upperBound(upper: unknown, open?: boolean): IDBKeyRange;
 };
 
 /**
@@ -4173,7 +4185,7 @@ interface IDBObjectStore {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/keyPath)
    */
-  readonly keyPath: string | string[];
+  readonly keyPath: string | readonly string[];
   /**
    * Returns the name of the store.
    *
@@ -4197,7 +4209,7 @@ interface IDBObjectStore {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/add)
    */
-  add(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;
+  add(value: unknown, key?: IDBValidKey): IDBRequest<IDBValidKey>;
   /**
    * Deletes all records in store.
    *
@@ -4223,7 +4235,7 @@ interface IDBObjectStore {
    */
   createIndex(
     name: string,
-    keyPath: string | string[],
+    keyPath: string | readonly string[],
     options?: IDBIndexParameters,
   ): IDBIndex;
   /**
@@ -4249,7 +4261,7 @@ interface IDBObjectStore {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/get)
    */
-  get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;
+  get(query: IDBValidKey | IDBKeyRange): IDBRequest<unknown>;
   /**
    * Retrieves the values of the records matching the given key or key range in query (up to count if given).
    *
@@ -4260,7 +4272,7 @@ interface IDBObjectStore {
   getAll(
     query?: IDBValidKey | IDBKeyRange | null,
     count?: number,
-  ): IDBRequest<any[]>;
+  ): IDBRequest<readonly unknown[]>;
   /**
    * Retrieves the keys of records matching the given key or key range in query (up to count if given).
    *
@@ -4271,7 +4283,7 @@ interface IDBObjectStore {
   getAllKeys(
     query?: IDBValidKey | IDBKeyRange | null,
     count?: number,
-  ): IDBRequest<IDBValidKey[]>;
+  ): IDBRequest<readonly IDBValidKey[]>;
   /**
    * Retrieves the key of the first record matching the given key or key range in query.
    *
@@ -4315,10 +4327,10 @@ interface IDBObjectStore {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/put)
    */
-  put(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;
+  put(value: unknown, key?: IDBValidKey): IDBRequest<IDBValidKey>;
 }
 
-declare var IDBObjectStore: {
+declare const IDBObjectStore: {
   prototype: IDBObjectStore;
   new (): IDBObjectStore;
 };
@@ -4336,15 +4348,18 @@ interface IDBOpenDBRequestEventMap extends IDBRequestEventMap {
 interface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBOpenDBRequest/blocked_event) */
   onblocked:
-    | ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any)
+    | ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBOpenDBRequest/upgradeneeded_event) */
   onupgradeneeded:
-    | ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any)
+    | ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => unknown)
     | null;
   addEventListener<K extends keyof IDBOpenDBRequestEventMap>(
     type: K,
-    listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any,
+    listener: (
+      this: IDBOpenDBRequest,
+      ev: IDBOpenDBRequestEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -4354,7 +4369,10 @@ interface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {
   ): void;
   removeEventListener<K extends keyof IDBOpenDBRequestEventMap>(
     type: K,
-    listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any,
+    listener: (
+      this: IDBOpenDBRequest,
+      ev: IDBOpenDBRequestEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -4364,7 +4382,7 @@ interface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {
   ): void;
 }
 
-declare var IDBOpenDBRequest: {
+declare const IDBOpenDBRequest: {
   prototype: IDBOpenDBRequest;
   new (): IDBOpenDBRequest;
 };
@@ -4379,7 +4397,7 @@ interface IDBRequestEventMap {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest)
  */
-interface IDBRequest<T = any> extends EventTarget {
+interface IDBRequest<T = unknown> extends EventTarget {
   /**
    * When a request is completed, returns the error (a DOMException), or null if the request succeeded. Throws a "InvalidStateError" DOMException if the request is still pending.
    *
@@ -4387,9 +4405,9 @@ interface IDBRequest<T = any> extends EventTarget {
    */
   readonly error: DOMException | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/error_event) */
-  onerror: ((this: IDBRequest<T>, ev: Event) => any) | null;
+  onerror: ((this: IDBRequest<T>, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/success_event) */
-  onsuccess: ((this: IDBRequest<T>, ev: Event) => any) | null;
+  onsuccess: ((this: IDBRequest<T>, ev: Event) => unknown) | null;
   /**
    * Returns "pending" until a request is complete, then returns "done".
    *
@@ -4416,7 +4434,7 @@ interface IDBRequest<T = any> extends EventTarget {
   readonly transaction: IDBTransaction | null;
   addEventListener<K extends keyof IDBRequestEventMap>(
     type: K,
-    listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any,
+    listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -4426,7 +4444,7 @@ interface IDBRequest<T = any> extends EventTarget {
   ): void;
   removeEventListener<K extends keyof IDBRequestEventMap>(
     type: K,
-    listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any,
+    listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -4436,7 +4454,7 @@ interface IDBRequest<T = any> extends EventTarget {
   ): void;
 }
 
-declare var IDBRequest: {
+declare const IDBRequest: {
   prototype: IDBRequest;
   new (): IDBRequest;
 };
@@ -4476,11 +4494,11 @@ interface IDBTransaction extends EventTarget {
    */
   readonly objectStoreNames: DOMStringList;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/abort_event) */
-  onabort: ((this: IDBTransaction, ev: Event) => any) | null;
+  onabort: ((this: IDBTransaction, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/complete_event) */
-  oncomplete: ((this: IDBTransaction, ev: Event) => any) | null;
+  oncomplete: ((this: IDBTransaction, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/error_event) */
-  onerror: ((this: IDBTransaction, ev: Event) => any) | null;
+  onerror: ((this: IDBTransaction, ev: Event) => unknown) | null;
   /**
    * Aborts the transaction. All pending requests will fail with a "AbortError" DOMException and all changes made to the database will be reverted.
    *
@@ -4497,7 +4515,7 @@ interface IDBTransaction extends EventTarget {
   objectStore(name: string): IDBObjectStore;
   addEventListener<K extends keyof IDBTransactionEventMap>(
     type: K,
-    listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any,
+    listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -4507,7 +4525,7 @@ interface IDBTransaction extends EventTarget {
   ): void;
   removeEventListener<K extends keyof IDBTransactionEventMap>(
     type: K,
-    listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any,
+    listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -4517,7 +4535,7 @@ interface IDBTransaction extends EventTarget {
   ): void;
 }
 
-declare var IDBTransaction: {
+declare const IDBTransaction: {
   prototype: IDBTransaction;
   new (): IDBTransaction;
 };
@@ -4534,7 +4552,7 @@ interface IDBVersionChangeEvent extends Event {
   readonly oldVersion: number;
 }
 
-declare var IDBVersionChangeEvent: {
+declare const IDBVersionChangeEvent: {
   prototype: IDBVersionChangeEvent;
   new (
     type: string,
@@ -4564,7 +4582,7 @@ interface ImageBitmap {
   close(): void;
 }
 
-declare var ImageBitmap: {
+declare const ImageBitmap: {
   prototype: ImageBitmap;
   new (): ImageBitmap;
 };
@@ -4579,7 +4597,7 @@ interface ImageBitmapRenderingContext {
   transferFromImageBitmap(bitmap: ImageBitmap | null): void;
 }
 
-declare var ImageBitmapRenderingContext: {
+declare const ImageBitmapRenderingContext: {
   prototype: ImageBitmapRenderingContext;
   new (): ImageBitmapRenderingContext;
 };
@@ -4612,7 +4630,7 @@ interface ImageData {
   readonly width: number;
 }
 
-declare var ImageData: {
+declare const ImageData: {
   prototype: ImageData;
   new (sw: number, sh: number, settings?: ImageDataSettings): ImageData;
   new (
@@ -4645,7 +4663,7 @@ interface Lock {
   readonly name: string;
 }
 
-declare var Lock: {
+declare const Lock: {
   prototype: Lock;
   new (): Lock;
 };
@@ -4659,15 +4677,15 @@ interface LockManager {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LockManager/query) */
   query(): Promise<LockManagerSnapshot>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LockManager/request) */
-  request(name: string, callback: LockGrantedCallback): Promise<any>;
+  request(name: string, callback: LockGrantedCallback): Promise<unknown>;
   request(
     name: string,
     options: LockOptions,
     callback: LockGrantedCallback,
-  ): Promise<any>;
+  ): Promise<unknown>;
 }
 
-declare var LockManager: {
+declare const LockManager: {
   prototype: LockManager;
   new (): LockManager;
 };
@@ -4684,7 +4702,7 @@ interface MediaCapabilities {
   ): Promise<MediaCapabilitiesEncodingInfo>;
 }
 
-declare var MediaCapabilities: {
+declare const MediaCapabilities: {
   prototype: MediaCapabilities;
   new (): MediaCapabilities;
 };
@@ -4692,7 +4710,7 @@ declare var MediaCapabilities: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSourceHandle) */
 interface MediaSourceHandle {}
 
-declare var MediaSourceHandle: {
+declare const MediaSourceHandle: {
   prototype: MediaSourceHandle;
   new (): MediaSourceHandle;
 };
@@ -4703,7 +4721,7 @@ interface MediaStreamTrackProcessor {
   readonly readable: ReadableStream;
 }
 
-declare var MediaStreamTrackProcessor: {
+declare const MediaStreamTrackProcessor: {
   prototype: MediaStreamTrackProcessor;
   new (init: MediaStreamTrackProcessorInit): MediaStreamTrackProcessor;
 };
@@ -4728,7 +4746,7 @@ interface MessageChannel {
   readonly port2: MessagePort;
 }
 
-declare var MessageChannel: {
+declare const MessageChannel: {
   prototype: MessageChannel;
   new (): MessageChannel;
 };
@@ -4738,7 +4756,7 @@ declare var MessageChannel: {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent)
  */
-interface MessageEvent<T = any> extends Event {
+interface MessageEvent<T = unknown> extends Event {
   /**
    * Returns the data of the message.
    *
@@ -4774,15 +4792,15 @@ interface MessageEvent<T = any> extends Event {
     type: string,
     bubbles?: boolean,
     cancelable?: boolean,
-    data?: any,
+    data?: unknown,
     origin?: string,
     lastEventId?: string,
     source?: MessageEventSource | null,
-    ports?: MessagePort[],
+    ports?: readonly MessagePort[],
   ): void;
 }
 
-declare var MessageEvent: {
+declare const MessageEvent: {
   prototype: MessageEvent;
   new <T>(type: string, eventInitDict?: MessageEventInit<T>): MessageEvent<T>;
 };
@@ -4799,9 +4817,9 @@ interface MessagePortEventMap {
  */
 interface MessagePort extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/message_event) */
-  onmessage: ((this: MessagePort, ev: MessageEvent) => any) | null;
+  onmessage: ((this: MessagePort, ev: MessageEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/messageerror_event) */
-  onmessageerror: ((this: MessagePort, ev: MessageEvent) => any) | null;
+  onmessageerror: ((this: MessagePort, ev: MessageEvent) => unknown) | null;
   /**
    * Disconnects the port, so that it is no longer active.
    *
@@ -4815,8 +4833,8 @@ interface MessagePort extends EventTarget {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/postMessage)
    */
-  postMessage(message: any, transfer: Transferable[]): void;
-  postMessage(message: any, options?: StructuredSerializeOptions): void;
+  postMessage(message: unknown, transfer: readonly Transferable[]): void;
+  postMessage(message: unknown, options?: StructuredSerializeOptions): void;
   /**
    * Begins dispatching messages received on the port.
    *
@@ -4825,7 +4843,7 @@ interface MessagePort extends EventTarget {
   start(): void;
   addEventListener<K extends keyof MessagePortEventMap>(
     type: K,
-    listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any,
+    listener: (this: MessagePort, ev: MessagePortEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -4835,7 +4853,7 @@ interface MessagePort extends EventTarget {
   ): void;
   removeEventListener<K extends keyof MessagePortEventMap>(
     type: K,
-    listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any,
+    listener: (this: MessagePort, ev: MessagePortEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -4845,7 +4863,7 @@ interface MessagePort extends EventTarget {
   ): void;
 }
 
-declare var MessagePort: {
+declare const MessagePort: {
   prototype: MessagePort;
   new (): MessagePort;
 };
@@ -4866,7 +4884,7 @@ interface NavigationPreloadManager {
   setHeaderValue(value: string): Promise<void>;
 }
 
-declare var NavigationPreloadManager: {
+declare const NavigationPreloadManager: {
   prototype: NavigationPreloadManager;
   new (): NavigationPreloadManager;
 };
@@ -4961,7 +4979,7 @@ interface Notification extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/body) */
   readonly body: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/data) */
-  readonly data: any;
+  readonly data: unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/dir) */
   readonly dir: NotificationDirection;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/icon) */
@@ -4969,13 +4987,13 @@ interface Notification extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/lang) */
   readonly lang: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/click_event) */
-  onclick: ((this: Notification, ev: Event) => any) | null;
+  onclick: ((this: Notification, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/close_event) */
-  onclose: ((this: Notification, ev: Event) => any) | null;
+  onclose: ((this: Notification, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/error_event) */
-  onerror: ((this: Notification, ev: Event) => any) | null;
+  onerror: ((this: Notification, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/show_event) */
-  onshow: ((this: Notification, ev: Event) => any) | null;
+  onshow: ((this: Notification, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/requireInteraction) */
   readonly requireInteraction: boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/silent) */
@@ -4988,7 +5006,7 @@ interface Notification extends EventTarget {
   close(): void;
   addEventListener<K extends keyof NotificationEventMap>(
     type: K,
-    listener: (this: Notification, ev: NotificationEventMap[K]) => any,
+    listener: (this: Notification, ev: NotificationEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -4998,7 +5016,7 @@ interface Notification extends EventTarget {
   ): void;
   removeEventListener<K extends keyof NotificationEventMap>(
     type: K,
-    listener: (this: Notification, ev: NotificationEventMap[K]) => any,
+    listener: (this: Notification, ev: NotificationEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -5008,7 +5026,7 @@ interface Notification extends EventTarget {
   ): void;
 }
 
-declare var Notification: {
+declare const Notification: {
   prototype: Notification;
   new (title: string, options?: NotificationOptions): Notification;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/permission_static) */
@@ -5027,7 +5045,7 @@ interface NotificationEvent extends ExtendableEvent {
   readonly notification: Notification;
 }
 
-declare var NotificationEvent: {
+declare const NotificationEvent: {
   prototype: NotificationEvent;
   new (type: string, eventInitDict: NotificationEventInit): NotificationEvent;
 };
@@ -5161,9 +5179,9 @@ interface OffscreenCanvas extends EventTarget {
    */
   height: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/contextlost_event) */
-  oncontextlost: ((this: OffscreenCanvas, ev: Event) => any) | null;
+  oncontextlost: ((this: OffscreenCanvas, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/contextrestored_event) */
-  oncontextrestored: ((this: OffscreenCanvas, ev: Event) => any) | null;
+  oncontextrestored: ((this: OffscreenCanvas, ev: Event) => unknown) | null;
   /**
    * These attributes return the dimensions of the OffscreenCanvas object's bitmap.
    *
@@ -5191,17 +5209,23 @@ interface OffscreenCanvas extends EventTarget {
    */
   getContext(
     contextId: '2d',
-    options?: any,
+    options?: unknown,
   ): OffscreenCanvasRenderingContext2D | null;
   getContext(
     contextId: 'bitmaprenderer',
-    options?: any,
+    options?: unknown,
   ): ImageBitmapRenderingContext | null;
-  getContext(contextId: 'webgl', options?: any): WebGLRenderingContext | null;
-  getContext(contextId: 'webgl2', options?: any): WebGL2RenderingContext | null;
+  getContext(
+    contextId: 'webgl',
+    options?: unknown,
+  ): WebGLRenderingContext | null;
+  getContext(
+    contextId: 'webgl2',
+    options?: unknown,
+  ): WebGL2RenderingContext | null;
   getContext(
     contextId: OffscreenRenderingContextId,
-    options?: any,
+    options?: unknown,
   ): OffscreenRenderingContext | null;
   /**
    * Returns a newly created ImageBitmap object with the image in the OffscreenCanvas object. The image in the OffscreenCanvas object is replaced with a new blank image.
@@ -5211,7 +5235,10 @@ interface OffscreenCanvas extends EventTarget {
   transferToImageBitmap(): ImageBitmap;
   addEventListener<K extends keyof OffscreenCanvasEventMap>(
     type: K,
-    listener: (this: OffscreenCanvas, ev: OffscreenCanvasEventMap[K]) => any,
+    listener: (
+      this: OffscreenCanvas,
+      ev: OffscreenCanvasEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -5221,7 +5248,10 @@ interface OffscreenCanvas extends EventTarget {
   ): void;
   removeEventListener<K extends keyof OffscreenCanvasEventMap>(
     type: K,
-    listener: (this: OffscreenCanvas, ev: OffscreenCanvasEventMap[K]) => any,
+    listener: (
+      this: OffscreenCanvas,
+      ev: OffscreenCanvasEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -5231,7 +5261,7 @@ interface OffscreenCanvas extends EventTarget {
   ): void;
 }
 
-declare var OffscreenCanvas: {
+declare const OffscreenCanvas: {
   prototype: OffscreenCanvas;
   new (width: number, height: number): OffscreenCanvas;
 };
@@ -5257,7 +5287,7 @@ interface OffscreenCanvasRenderingContext2D
   readonly canvas: OffscreenCanvas;
 }
 
-declare var OffscreenCanvasRenderingContext2D: {
+declare const OffscreenCanvasRenderingContext2D: {
   prototype: OffscreenCanvasRenderingContext2D;
   new (): OffscreenCanvasRenderingContext2D;
 };
@@ -5276,7 +5306,7 @@ interface Path2D extends CanvasPath {
   addPath(path: Path2D, transform?: DOMMatrix2DInit): void;
 }
 
-declare var Path2D: {
+declare const Path2D: {
   prototype: Path2D;
   new (path?: Path2D | string): Path2D;
 };
@@ -5292,7 +5322,9 @@ interface PerformanceEventMap {
  */
 interface Performance extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/resourcetimingbufferfull_event) */
-  onresourcetimingbufferfull: ((this: Performance, ev: Event) => any) | null;
+  onresourcetimingbufferfull:
+    | ((this: Performance, ev: Event) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/timeOrigin) */
   readonly timeOrigin: DOMHighResTimeStamp;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/clearMarks) */
@@ -5320,10 +5352,10 @@ interface Performance extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/setResourceTimingBufferSize) */
   setResourceTimingBufferSize(maxSize: number): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
   addEventListener<K extends keyof PerformanceEventMap>(
     type: K,
-    listener: (this: Performance, ev: PerformanceEventMap[K]) => any,
+    listener: (this: Performance, ev: PerformanceEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -5333,7 +5365,7 @@ interface Performance extends EventTarget {
   ): void;
   removeEventListener<K extends keyof PerformanceEventMap>(
     type: K,
-    listener: (this: Performance, ev: PerformanceEventMap[K]) => any,
+    listener: (this: Performance, ev: PerformanceEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -5343,7 +5375,7 @@ interface Performance extends EventTarget {
   ): void;
 }
 
-declare var Performance: {
+declare const Performance: {
   prototype: Performance;
   new (): Performance;
 };
@@ -5363,10 +5395,10 @@ interface PerformanceEntry {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/startTime) */
   readonly startTime: DOMHighResTimeStamp;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var PerformanceEntry: {
+declare const PerformanceEntry: {
   prototype: PerformanceEntry;
   new (): PerformanceEntry;
 };
@@ -5378,10 +5410,10 @@ declare var PerformanceEntry: {
  */
 interface PerformanceMark extends PerformanceEntry {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMark/detail) */
-  readonly detail: any;
+  readonly detail: unknown;
 }
 
-declare var PerformanceMark: {
+declare const PerformanceMark: {
   prototype: PerformanceMark;
   new (markName: string, markOptions?: PerformanceMarkOptions): PerformanceMark;
 };
@@ -5393,10 +5425,10 @@ declare var PerformanceMark: {
  */
 interface PerformanceMeasure extends PerformanceEntry {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMeasure/detail) */
-  readonly detail: any;
+  readonly detail: unknown;
 }
 
-declare var PerformanceMeasure: {
+declare const PerformanceMeasure: {
   prototype: PerformanceMeasure;
   new (): PerformanceMeasure;
 };
@@ -5411,7 +5443,7 @@ interface PerformanceObserver {
   takeRecords(): PerformanceEntryList;
 }
 
-declare var PerformanceObserver: {
+declare const PerformanceObserver: {
   prototype: PerformanceObserver;
   new (callback: PerformanceObserverCallback): PerformanceObserver;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserver/supportedEntryTypes_static) */
@@ -5428,7 +5460,7 @@ interface PerformanceObserverEntryList {
   getEntriesByType(type: string): PerformanceEntryList;
 }
 
-declare var PerformanceObserverEntryList: {
+declare const PerformanceObserverEntryList: {
   prototype: PerformanceObserverEntryList;
   new (): PerformanceObserverEntryList;
 };
@@ -5478,10 +5510,10 @@ interface PerformanceResourceTiming extends PerformanceEntry {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/workerStart) */
   readonly workerStart: DOMHighResTimeStamp;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var PerformanceResourceTiming: {
+declare const PerformanceResourceTiming: {
   prototype: PerformanceResourceTiming;
   new (): PerformanceResourceTiming;
 };
@@ -5495,10 +5527,10 @@ interface PerformanceServerTiming {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/name) */
   readonly name: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var PerformanceServerTiming: {
+declare const PerformanceServerTiming: {
   prototype: PerformanceServerTiming;
   new (): PerformanceServerTiming;
 };
@@ -5512,12 +5544,15 @@ interface PermissionStatus extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/name) */
   readonly name: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/change_event) */
-  onchange: ((this: PermissionStatus, ev: Event) => any) | null;
+  onchange: ((this: PermissionStatus, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/state) */
   readonly state: PermissionState;
   addEventListener<K extends keyof PermissionStatusEventMap>(
     type: K,
-    listener: (this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any,
+    listener: (
+      this: PermissionStatus,
+      ev: PermissionStatusEventMap[K],
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -5527,7 +5562,10 @@ interface PermissionStatus extends EventTarget {
   ): void;
   removeEventListener<K extends keyof PermissionStatusEventMap>(
     type: K,
-    listener: (this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any,
+    listener: (
+      this: PermissionStatus,
+      ev: PermissionStatusEventMap[K],
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -5537,7 +5575,7 @@ interface PermissionStatus extends EventTarget {
   ): void;
 }
 
-declare var PermissionStatus: {
+declare const PermissionStatus: {
   prototype: PermissionStatus;
   new (): PermissionStatus;
 };
@@ -5548,7 +5586,7 @@ interface Permissions {
   query(permissionDesc: PermissionDescriptor): Promise<PermissionStatus>;
 }
 
-declare var Permissions: {
+declare const Permissions: {
   prototype: Permissions;
   new (): Permissions;
 };
@@ -5568,7 +5606,7 @@ interface ProgressEvent<T extends EventTarget = EventTarget> extends Event {
   readonly total: number;
 }
 
-declare var ProgressEvent: {
+declare const ProgressEvent: {
   prototype: ProgressEvent;
   new (type: string, eventInitDict?: ProgressEventInit): ProgressEvent;
 };
@@ -5576,12 +5614,12 @@ declare var ProgressEvent: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent) */
 interface PromiseRejectionEvent extends Event {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent/promise) */
-  readonly promise: Promise<any>;
+  readonly promise: Promise<unknown>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent/reason) */
-  readonly reason: any;
+  readonly reason: unknown;
 }
 
-declare var PromiseRejectionEvent: {
+declare const PromiseRejectionEvent: {
   prototype: PromiseRejectionEvent;
   new (
     type: string,
@@ -5600,7 +5638,7 @@ interface PushEvent extends ExtendableEvent {
   readonly data: PushMessageData | null;
 }
 
-declare var PushEvent: {
+declare const PushEvent: {
   prototype: PushEvent;
   new (type: string, eventInitDict?: PushEventInit): PushEvent;
 };
@@ -5622,7 +5660,7 @@ interface PushManager {
   subscribe(options?: PushSubscriptionOptionsInit): Promise<PushSubscription>;
 }
 
-declare var PushManager: {
+declare const PushManager: {
   prototype: PushManager;
   new (): PushManager;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushManager/supportedContentEncodings_static) */
@@ -5643,12 +5681,12 @@ interface PushMessageData {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushMessageData/bytes) */
   bytes(): Uint8Array;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushMessageData/json) */
-  json(): any;
+  json(): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushMessageData/text) */
   text(): string;
 }
 
-declare var PushMessageData: {
+declare const PushMessageData: {
   prototype: PushMessageData;
   new (): PushMessageData;
 };
@@ -5674,7 +5712,7 @@ interface PushSubscription {
   unsubscribe(): Promise<boolean>;
 }
 
-declare var PushSubscription: {
+declare const PushSubscription: {
   prototype: PushSubscription;
   new (): PushSubscription;
 };
@@ -5691,7 +5729,7 @@ interface PushSubscriptionOptions {
   readonly userVisibleOnly: boolean;
 }
 
-declare var PushSubscriptionOptions: {
+declare const PushSubscriptionOptions: {
   prototype: PushSubscriptionOptions;
   new (): PushSubscriptionOptions;
 };
@@ -5706,7 +5744,7 @@ interface RTCEncodedAudioFrame {
   getMetadata(): RTCEncodedAudioFrameMetadata;
 }
 
-declare var RTCEncodedAudioFrame: {
+declare const RTCEncodedAudioFrame: {
   prototype: RTCEncodedAudioFrame;
   new (): RTCEncodedAudioFrame;
 };
@@ -5723,7 +5761,7 @@ interface RTCEncodedVideoFrame {
   getMetadata(): RTCEncodedVideoFrameMetadata;
 }
 
-declare var RTCEncodedVideoFrame: {
+declare const RTCEncodedVideoFrame: {
   prototype: RTCEncodedVideoFrame;
   new (): RTCEncodedVideoFrame;
 };
@@ -5731,7 +5769,7 @@ declare var RTCEncodedVideoFrame: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpScriptTransformer) */
 interface RTCRtpScriptTransformer extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpScriptTransformer/options) */
-  readonly options: any;
+  readonly options: unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpScriptTransformer/readable) */
   readonly readable: ReadableStream;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpScriptTransformer/writable) */
@@ -5742,7 +5780,7 @@ interface RTCRtpScriptTransformer extends EventTarget {
   sendKeyFrameRequest(): Promise<void>;
 }
 
-declare var RTCRtpScriptTransformer: {
+declare const RTCRtpScriptTransformer: {
   prototype: RTCRtpScriptTransformer;
   new (): RTCRtpScriptTransformer;
 };
@@ -5753,7 +5791,7 @@ interface RTCTransformEvent extends Event {
   readonly transformer: RTCRtpScriptTransformer;
 }
 
-declare var RTCTransformEvent: {
+declare const RTCTransformEvent: {
   prototype: RTCTransformEvent;
   new (): RTCTransformEvent;
 };
@@ -5769,10 +5807,10 @@ interface ReadableByteStreamController {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/enqueue) */
   enqueue(chunk: ArrayBufferView): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/error) */
-  error(e?: any): void;
+  error(e?: unknown): void;
 }
 
-declare var ReadableByteStreamController: {
+declare const ReadableByteStreamController: {
   prototype: ReadableByteStreamController;
   new (): ReadableByteStreamController;
 };
@@ -5782,11 +5820,11 @@ declare var ReadableByteStreamController: {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)
  */
-interface ReadableStream<R = any> {
+interface ReadableStream<R = unknown> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked) */
   readonly locked: boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/cancel) */
-  cancel(reason?: any): Promise<void>;
+  cancel(reason?: unknown): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/getReader) */
   getReader(options: { mode: 'byob' }): ReadableStreamBYOBReader;
   getReader(): ReadableStreamDefaultReader<R>;
@@ -5805,17 +5843,17 @@ interface ReadableStream<R = any> {
   tee(): [ReadableStream<R>, ReadableStream<R>];
 }
 
-declare var ReadableStream: {
+declare const ReadableStream: {
   prototype: ReadableStream;
   new (
     underlyingSource: UnderlyingByteSource,
     strategy?: { highWaterMark?: number },
   ): ReadableStream<Uint8Array>;
-  new <R = any>(
+  new <R = unknown>(
     underlyingSource: UnderlyingDefaultSource<R>,
     strategy?: QueuingStrategy<R>,
   ): ReadableStream<R>;
-  new <R = any>(
+  new <R = unknown>(
     underlyingSource?: UnderlyingSource<R>,
     strategy?: QueuingStrategy<R>,
   ): ReadableStream<R>;
@@ -5831,7 +5869,7 @@ interface ReadableStreamBYOBReader extends ReadableStreamGenericReader {
   releaseLock(): void;
 }
 
-declare var ReadableStreamBYOBReader: {
+declare const ReadableStreamBYOBReader: {
   prototype: ReadableStreamBYOBReader;
   new (stream: ReadableStream<Uint8Array>): ReadableStreamBYOBReader;
 };
@@ -5846,13 +5884,13 @@ interface ReadableStreamBYOBRequest {
   respondWithNewView(view: ArrayBufferView): void;
 }
 
-declare var ReadableStreamBYOBRequest: {
+declare const ReadableStreamBYOBRequest: {
   prototype: ReadableStreamBYOBRequest;
   new (): ReadableStreamBYOBRequest;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController) */
-interface ReadableStreamDefaultController<R = any> {
+interface ReadableStreamDefaultController<R = unknown> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/desiredSize) */
   readonly desiredSize: number | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/close) */
@@ -5860,16 +5898,16 @@ interface ReadableStreamDefaultController<R = any> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/enqueue) */
   enqueue(chunk?: R): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/error) */
-  error(e?: any): void;
+  error(e?: unknown): void;
 }
 
-declare var ReadableStreamDefaultController: {
+declare const ReadableStreamDefaultController: {
   prototype: ReadableStreamDefaultController;
   new (): ReadableStreamDefaultController;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultReader) */
-interface ReadableStreamDefaultReader<R = any>
+interface ReadableStreamDefaultReader<R = unknown>
   extends ReadableStreamGenericReader {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultReader/read) */
   read(): Promise<ReadableStreamReadResult<R>>;
@@ -5877,16 +5915,16 @@ interface ReadableStreamDefaultReader<R = any>
   releaseLock(): void;
 }
 
-declare var ReadableStreamDefaultReader: {
+declare const ReadableStreamDefaultReader: {
   prototype: ReadableStreamDefaultReader;
-  new <R = any>(stream: ReadableStream<R>): ReadableStreamDefaultReader<R>;
+  new <R = unknown>(stream: ReadableStream<R>): ReadableStreamDefaultReader<R>;
 };
 
 interface ReadableStreamGenericReader {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/closed) */
   readonly closed: Promise<undefined>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/cancel) */
-  cancel(reason?: any): Promise<void>;
+  cancel(reason?: unknown): Promise<void>;
 }
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Report) */
@@ -5897,10 +5935,10 @@ interface Report {
   readonly type: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Report/url) */
   readonly url: string;
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var Report: {
+declare const Report: {
   prototype: Report;
   new (): Report;
 };
@@ -5908,10 +5946,10 @@ declare var Report: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportBody) */
 interface ReportBody {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportBody/toJSON) */
-  toJSON(): any;
+  toJSON(): unknown;
 }
 
-declare var ReportBody: {
+declare const ReportBody: {
   prototype: ReportBody;
   new (): ReportBody;
 };
@@ -5926,7 +5964,7 @@ interface ReportingObserver {
   takeRecords(): ReportList;
 }
 
-declare var ReportingObserver: {
+declare const ReportingObserver: {
   prototype: ReportingObserver;
   new (
     callback: ReportingObserverCallback,
@@ -5977,7 +6015,7 @@ interface Request extends Body {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/method)
    */
-  readonly method: string;
+  readonly method: HTTPRequestMethod;
   /**
    * Returns the mode associated with request, which is a string indicating whether the request will use CORS, or will be restricted to same-origin URLs.
    *
@@ -6018,7 +6056,7 @@ interface Request extends Body {
   clone(): Request;
 }
 
-declare var Request: {
+declare const Request: {
   prototype: Request;
   new (input: RequestInfo | URL, init?: RequestInit): Request;
 };
@@ -6047,13 +6085,13 @@ interface Response extends Body {
   clone(): Response;
 }
 
-declare var Response: {
+declare const Response: {
   prototype: Response;
   new (body?: BodyInit | null, init?: ResponseInit): Response;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/error_static) */
   error(): Response;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/json_static) */
-  json(data: any, init?: ResponseInit): Response;
+  json(data: unknown, init?: ResponseInit): Response;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/redirect_static) */
   redirect(url: string | URL, status?: number): Response;
 };
@@ -6090,7 +6128,7 @@ interface SecurityPolicyViolationEvent extends Event {
   readonly violatedDirective: string;
 }
 
-declare var SecurityPolicyViolationEvent: {
+declare const SecurityPolicyViolationEvent: {
   prototype: SecurityPolicyViolationEvent;
   new (
     type: string,
@@ -6110,17 +6148,17 @@ interface ServiceWorkerEventMap extends AbstractWorkerEventMap {
  */
 interface ServiceWorker extends EventTarget, AbstractWorker {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/statechange_event) */
-  onstatechange: ((this: ServiceWorker, ev: Event) => any) | null;
+  onstatechange: ((this: ServiceWorker, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/scriptURL) */
   readonly scriptURL: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/state) */
   readonly state: ServiceWorkerState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/postMessage) */
-  postMessage(message: any, transfer: Transferable[]): void;
-  postMessage(message: any, options?: StructuredSerializeOptions): void;
+  postMessage(message: unknown, transfer: readonly Transferable[]): void;
+  postMessage(message: unknown, options?: StructuredSerializeOptions): void;
   addEventListener<K extends keyof ServiceWorkerEventMap>(
     type: K,
-    listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any,
+    listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -6130,7 +6168,7 @@ interface ServiceWorker extends EventTarget, AbstractWorker {
   ): void;
   removeEventListener<K extends keyof ServiceWorkerEventMap>(
     type: K,
-    listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any,
+    listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -6140,7 +6178,7 @@ interface ServiceWorker extends EventTarget, AbstractWorker {
   ): void;
 }
 
-declare var ServiceWorker: {
+declare const ServiceWorker: {
   prototype: ServiceWorker;
   new (): ServiceWorker;
 };
@@ -6161,12 +6199,16 @@ interface ServiceWorkerContainer extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/controller) */
   readonly controller: ServiceWorker | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/controllerchange_event) */
-  oncontrollerchange: ((this: ServiceWorkerContainer, ev: Event) => any) | null;
+  oncontrollerchange:
+    | ((this: ServiceWorkerContainer, ev: Event) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/message_event) */
-  onmessage: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;
+  onmessage:
+    | ((this: ServiceWorkerContainer, ev: MessageEvent) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/messageerror_event) */
   onmessageerror:
-    | ((this: ServiceWorkerContainer, ev: MessageEvent) => any)
+    | ((this: ServiceWorkerContainer, ev: MessageEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/ready) */
   readonly ready: Promise<ServiceWorkerRegistration>;
@@ -6188,7 +6230,7 @@ interface ServiceWorkerContainer extends EventTarget {
     listener: (
       this: ServiceWorkerContainer,
       ev: ServiceWorkerContainerEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -6201,7 +6243,7 @@ interface ServiceWorkerContainer extends EventTarget {
     listener: (
       this: ServiceWorkerContainer,
       ev: ServiceWorkerContainerEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -6211,7 +6253,7 @@ interface ServiceWorkerContainer extends EventTarget {
   ): void;
 }
 
-declare var ServiceWorkerContainer: {
+declare const ServiceWorkerContainer: {
   prototype: ServiceWorkerContainer;
   new (): ServiceWorkerContainer;
 };
@@ -6239,35 +6281,35 @@ interface ServiceWorkerGlobalScope extends WorkerGlobalScope {
   readonly clients: Clients;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/activate_event) */
   onactivate:
-    | ((this: ServiceWorkerGlobalScope, ev: ExtendableEvent) => any)
+    | ((this: ServiceWorkerGlobalScope, ev: ExtendableEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/fetch_event) */
-  onfetch: ((this: ServiceWorkerGlobalScope, ev: FetchEvent) => any) | null;
+  onfetch: ((this: ServiceWorkerGlobalScope, ev: FetchEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/install_event) */
   oninstall:
-    | ((this: ServiceWorkerGlobalScope, ev: ExtendableEvent) => any)
+    | ((this: ServiceWorkerGlobalScope, ev: ExtendableEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/message_event) */
   onmessage:
-    | ((this: ServiceWorkerGlobalScope, ev: ExtendableMessageEvent) => any)
+    | ((this: ServiceWorkerGlobalScope, ev: ExtendableMessageEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/messageerror_event) */
   onmessageerror:
-    | ((this: ServiceWorkerGlobalScope, ev: MessageEvent) => any)
+    | ((this: ServiceWorkerGlobalScope, ev: MessageEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/notificationclick_event) */
   onnotificationclick:
-    | ((this: ServiceWorkerGlobalScope, ev: NotificationEvent) => any)
+    | ((this: ServiceWorkerGlobalScope, ev: NotificationEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/notificationclose_event) */
   onnotificationclose:
-    | ((this: ServiceWorkerGlobalScope, ev: NotificationEvent) => any)
+    | ((this: ServiceWorkerGlobalScope, ev: NotificationEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/push_event) */
-  onpush: ((this: ServiceWorkerGlobalScope, ev: PushEvent) => any) | null;
+  onpush: ((this: ServiceWorkerGlobalScope, ev: PushEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/pushsubscriptionchange_event) */
   onpushsubscriptionchange:
-    | ((this: ServiceWorkerGlobalScope, ev: Event) => any)
+    | ((this: ServiceWorkerGlobalScope, ev: Event) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/registration) */
   readonly registration: ServiceWorkerRegistration;
@@ -6280,7 +6322,7 @@ interface ServiceWorkerGlobalScope extends WorkerGlobalScope {
     listener: (
       this: ServiceWorkerGlobalScope,
       ev: ServiceWorkerGlobalScopeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -6293,7 +6335,7 @@ interface ServiceWorkerGlobalScope extends WorkerGlobalScope {
     listener: (
       this: ServiceWorkerGlobalScope,
       ev: ServiceWorkerGlobalScopeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -6303,7 +6345,7 @@ interface ServiceWorkerGlobalScope extends WorkerGlobalScope {
   ): void;
 }
 
-declare var ServiceWorkerGlobalScope: {
+declare const ServiceWorkerGlobalScope: {
   prototype: ServiceWorkerGlobalScope;
   new (): ServiceWorkerGlobalScope;
 };
@@ -6326,7 +6368,9 @@ interface ServiceWorkerRegistration extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/navigationPreload) */
   readonly navigationPreload: NavigationPreloadManager;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/updatefound_event) */
-  onupdatefound: ((this: ServiceWorkerRegistration, ev: Event) => any) | null;
+  onupdatefound:
+    | ((this: ServiceWorkerRegistration, ev: Event) => unknown)
+    | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/pushManager) */
   readonly pushManager: PushManager;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/scope) */
@@ -6336,7 +6380,9 @@ interface ServiceWorkerRegistration extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/waiting) */
   readonly waiting: ServiceWorker | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/getNotifications) */
-  getNotifications(filter?: GetNotificationOptions): Promise<Notification[]>;
+  getNotifications(
+    filter?: GetNotificationOptions,
+  ): Promise<readonly Notification[]>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/showNotification) */
   showNotification(title: string, options?: NotificationOptions): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/unregister) */
@@ -6348,7 +6394,7 @@ interface ServiceWorkerRegistration extends EventTarget {
     listener: (
       this: ServiceWorkerRegistration,
       ev: ServiceWorkerRegistrationEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -6361,7 +6407,7 @@ interface ServiceWorkerRegistration extends EventTarget {
     listener: (
       this: ServiceWorkerRegistration,
       ev: ServiceWorkerRegistrationEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -6371,7 +6417,7 @@ interface ServiceWorkerRegistration extends EventTarget {
   ): void;
 }
 
-declare var ServiceWorkerRegistration: {
+declare const ServiceWorkerRegistration: {
   prototype: ServiceWorkerRegistration;
   new (): ServiceWorkerRegistration;
 };
@@ -6389,7 +6435,9 @@ interface SharedWorkerGlobalScope extends WorkerGlobalScope {
    */
   readonly name: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SharedWorkerGlobalScope/connect_event) */
-  onconnect: ((this: SharedWorkerGlobalScope, ev: MessageEvent) => any) | null;
+  onconnect:
+    | ((this: SharedWorkerGlobalScope, ev: MessageEvent) => unknown)
+    | null;
   /**
    * Aborts sharedWorkerGlobal.
    *
@@ -6401,7 +6449,7 @@ interface SharedWorkerGlobalScope extends WorkerGlobalScope {
     listener: (
       this: SharedWorkerGlobalScope,
       ev: SharedWorkerGlobalScopeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -6414,7 +6462,7 @@ interface SharedWorkerGlobalScope extends WorkerGlobalScope {
     listener: (
       this: SharedWorkerGlobalScope,
       ev: SharedWorkerGlobalScopeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -6424,7 +6472,7 @@ interface SharedWorkerGlobalScope extends WorkerGlobalScope {
   ): void;
 }
 
-declare var SharedWorkerGlobalScope: {
+declare const SharedWorkerGlobalScope: {
   prototype: SharedWorkerGlobalScope;
   new (): SharedWorkerGlobalScope;
 };
@@ -6443,7 +6491,7 @@ interface StorageManager {
   persisted(): Promise<boolean>;
 }
 
-declare var StorageManager: {
+declare const StorageManager: {
   prototype: StorageManager;
   new (): StorageManager;
 };
@@ -6455,20 +6503,20 @@ interface StylePropertyMapReadOnly {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly/get) */
   get(property: string): undefined | CSSStyleValue;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly/getAll) */
-  getAll(property: string): CSSStyleValue[];
+  getAll(property: string): readonly CSSStyleValue[];
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly/has) */
   has(property: string): boolean;
   forEach(
     callbackfn: (
-      value: CSSStyleValue[],
+      value: readonly CSSStyleValue[],
       key: string,
       parent: StylePropertyMapReadOnly,
     ) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var StylePropertyMapReadOnly: {
+declare const StylePropertyMapReadOnly: {
   prototype: StylePropertyMapReadOnly;
   new (): StylePropertyMapReadOnly;
 };
@@ -6516,7 +6564,7 @@ interface SubtleCrypto {
       | HkdfParams
       | Pbkdf2Params,
     extractable: boolean,
-    keyUsages: KeyUsage[],
+    keyUsages: readonly KeyUsage[],
   ): Promise<CryptoKey>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/digest) */
   digest(
@@ -6563,7 +6611,7 @@ interface SubtleCrypto {
   generateKey(
     algorithm: AlgorithmIdentifier,
     extractable: boolean,
-    keyUsages: KeyUsage[],
+    keyUsages: readonly KeyUsage[],
   ): Promise<CryptoKeyPair | CryptoKey>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/importKey) */
   importKey(
@@ -6588,7 +6636,7 @@ interface SubtleCrypto {
       | HmacImportParams
       | AesKeyAlgorithm,
     extractable: boolean,
-    keyUsages: KeyUsage[],
+    keyUsages: readonly KeyUsage[],
   ): Promise<CryptoKey>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/sign) */
   sign(
@@ -6614,7 +6662,7 @@ interface SubtleCrypto {
       | HmacImportParams
       | AesKeyAlgorithm,
     extractable: boolean,
-    keyUsages: KeyUsage[],
+    keyUsages: readonly KeyUsage[],
   ): Promise<CryptoKey>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/verify) */
   verify(
@@ -6637,7 +6685,7 @@ interface SubtleCrypto {
   ): Promise<ArrayBuffer>;
 }
 
-declare var SubtleCrypto: {
+declare const SubtleCrypto: {
   prototype: SubtleCrypto;
   new (): SubtleCrypto;
 };
@@ -6666,7 +6714,7 @@ interface TextDecoder extends TextDecoderCommon {
   decode(input?: AllowSharedBufferSource, options?: TextDecodeOptions): string;
 }
 
-declare var TextDecoder: {
+declare const TextDecoder: {
   prototype: TextDecoder;
   new (label?: string, options?: TextDecoderOptions): TextDecoder;
 };
@@ -6698,7 +6746,7 @@ interface TextDecoderStream extends GenericTransformStream, TextDecoderCommon {
   readonly writable: WritableStream<BufferSource>;
 }
 
-declare var TextDecoderStream: {
+declare const TextDecoderStream: {
   prototype: TextDecoderStream;
   new (label?: string, options?: TextDecoderOptions): TextDecoderStream;
 };
@@ -6726,7 +6774,7 @@ interface TextEncoder extends TextEncoderCommon {
   ): TextEncoderEncodeIntoResult;
 }
 
-declare var TextEncoder: {
+declare const TextEncoder: {
   prototype: TextEncoder;
   new (): TextEncoder;
 };
@@ -6746,7 +6794,7 @@ interface TextEncoderStream extends GenericTransformStream, TextEncoderCommon {
   readonly writable: WritableStream<string>;
 }
 
-declare var TextEncoderStream: {
+declare const TextEncoderStream: {
   prototype: TextEncoderStream;
   new (): TextEncoderStream;
 };
@@ -6831,22 +6879,22 @@ interface TextMetrics {
   readonly width: number;
 }
 
-declare var TextMetrics: {
+declare const TextMetrics: {
   prototype: TextMetrics;
   new (): TextMetrics;
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStream) */
-interface TransformStream<I = any, O = any> {
+interface TransformStream<I = unknown, O = unknown> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStream/readable) */
   readonly readable: ReadableStream<O>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStream/writable) */
   readonly writable: WritableStream<I>;
 }
 
-declare var TransformStream: {
+declare const TransformStream: {
   prototype: TransformStream;
-  new <I = any, O = any>(
+  new <I = unknown, O = unknown>(
     transformer?: Transformer<I, O>,
     writableStrategy?: QueuingStrategy<I>,
     readableStrategy?: QueuingStrategy<O>,
@@ -6854,18 +6902,18 @@ declare var TransformStream: {
 };
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController) */
-interface TransformStreamDefaultController<O = any> {
+interface TransformStreamDefaultController<O = unknown> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/desiredSize) */
   readonly desiredSize: number | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/enqueue) */
   enqueue(chunk?: O): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/error) */
-  error(reason?: any): void;
+  error(reason?: unknown): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/terminate) */
   terminate(): void;
 }
 
-declare var TransformStreamDefaultController: {
+declare const TransformStreamDefaultController: {
   prototype: TransformStreamDefaultController;
   new (): TransformStreamDefaultController;
 };
@@ -6905,7 +6953,7 @@ interface URL {
   toJSON(): string;
 }
 
-declare var URL: {
+declare const URL: {
   prototype: URL;
   new (url: string | URL, base?: string | URL): URL;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/canParse_static) */
@@ -6945,7 +6993,7 @@ interface URLSearchParams {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/getAll)
    */
-  getAll(name: string): string[];
+  getAll(name: string): readonly string[];
   /**
    * Returns a Boolean indicating if such a search parameter exists.
    *
@@ -6964,14 +7012,18 @@ interface URLSearchParams {
   toString(): string;
   forEach(
     callbackfn: (value: string, key: string, parent: URLSearchParams) => void,
-    thisArg?: any,
+    thisArg?: unknown,
   ): void;
 }
 
-declare var URLSearchParams: {
+declare const URLSearchParams: {
   prototype: URLSearchParams;
   new (
-    init?: string[][] | Record<string, string> | string | URLSearchParams,
+    init?:
+      | readonly (readonly string[])[]
+      | Record<string, string>
+      | string
+      | URLSearchParams,
   ): URLSearchParams;
 };
 
@@ -6989,7 +7041,7 @@ interface VideoColorSpace {
   toJSON(): VideoColorSpaceInit;
 }
 
-declare var VideoColorSpace: {
+declare const VideoColorSpace: {
   prototype: VideoColorSpace;
   new (init?: VideoColorSpaceInit): VideoColorSpace;
 };
@@ -7007,7 +7059,7 @@ interface VideoDecoder extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/decodeQueueSize) */
   readonly decodeQueueSize: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/dequeue_event) */
-  ondequeue: ((this: VideoDecoder, ev: Event) => any) | null;
+  ondequeue: ((this: VideoDecoder, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/state) */
   readonly state: CodecState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/close) */
@@ -7022,7 +7074,7 @@ interface VideoDecoder extends EventTarget {
   reset(): void;
   addEventListener<K extends keyof VideoDecoderEventMap>(
     type: K,
-    listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => any,
+    listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -7032,7 +7084,7 @@ interface VideoDecoder extends EventTarget {
   ): void;
   removeEventListener<K extends keyof VideoDecoderEventMap>(
     type: K,
-    listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => any,
+    listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -7042,7 +7094,7 @@ interface VideoDecoder extends EventTarget {
   ): void;
 }
 
-declare var VideoDecoder: {
+declare const VideoDecoder: {
   prototype: VideoDecoder;
   new (init: VideoDecoderInit): VideoDecoder;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/isConfigSupported_static) */
@@ -7062,7 +7114,7 @@ interface VideoEncoder extends EventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/encodeQueueSize) */
   readonly encodeQueueSize: number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/dequeue_event) */
-  ondequeue: ((this: VideoEncoder, ev: Event) => any) | null;
+  ondequeue: ((this: VideoEncoder, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/state) */
   readonly state: CodecState;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/close) */
@@ -7077,7 +7129,7 @@ interface VideoEncoder extends EventTarget {
   reset(): void;
   addEventListener<K extends keyof VideoEncoderEventMap>(
     type: K,
-    listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => any,
+    listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -7087,7 +7139,7 @@ interface VideoEncoder extends EventTarget {
   ): void;
   removeEventListener<K extends keyof VideoEncoderEventMap>(
     type: K,
-    listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => any,
+    listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -7097,7 +7149,7 @@ interface VideoEncoder extends EventTarget {
   ): void;
 }
 
-declare var VideoEncoder: {
+declare const VideoEncoder: {
   prototype: VideoEncoder;
   new (init: VideoEncoderInit): VideoEncoder;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/isConfigSupported_static) */
@@ -7136,10 +7188,10 @@ interface VideoFrame {
   copyTo(
     destination: AllowSharedBufferSource,
     options?: VideoFrameCopyToOptions,
-  ): Promise<PlaneLayout[]>;
+  ): Promise<readonly PlaneLayout[]>;
 }
 
-declare var VideoFrame: {
+declare const VideoFrame: {
   prototype: VideoFrame;
   new (image: CanvasImageSource, init?: VideoFrameInit): VideoFrame;
   new (data: AllowSharedBufferSource, init: VideoFrameBufferInit): VideoFrame;
@@ -7155,7 +7207,7 @@ interface WEBGL_color_buffer_float {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_astc) */
 interface WEBGL_compressed_texture_astc {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_astc/getSupportedProfiles) */
-  getSupportedProfiles(): string[];
+  getSupportedProfiles(): readonly string[];
   readonly COMPRESSED_RGBA_ASTC_4x4_KHR: 0x93b0;
   readonly COMPRESSED_RGBA_ASTC_5x4_KHR: 0x93b1;
   readonly COMPRESSED_RGBA_ASTC_5x5_KHR: 0x93b2;
@@ -7261,7 +7313,7 @@ interface WEBGL_depth_texture {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_draw_buffers) */
 interface WEBGL_draw_buffers {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_draw_buffers/drawBuffersWEBGL) */
-  drawBuffersWEBGL(buffers: GLenum[]): void;
+  drawBuffersWEBGL(buffers: readonly GLenum[]): void;
   readonly COLOR_ATTACHMENT0_WEBGL: 0x8ce0;
   readonly COLOR_ATTACHMENT1_WEBGL: 0x8ce1;
   readonly COLOR_ATTACHMENT2_WEBGL: 0x8ce2;
@@ -7311,42 +7363,42 @@ interface WEBGL_multi_draw {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawArraysInstancedWEBGL) */
   multiDrawArraysInstancedWEBGL(
     mode: GLenum,
-    firstsList: Int32Array | GLint[],
+    firstsList: Int32Array | readonly GLint[],
     firstsOffset: number,
-    countsList: Int32Array | GLsizei[],
+    countsList: Int32Array | readonly GLsizei[],
     countsOffset: number,
-    instanceCountsList: Int32Array | GLsizei[],
+    instanceCountsList: Int32Array | readonly GLsizei[],
     instanceCountsOffset: number,
     drawcount: GLsizei,
   ): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawArraysWEBGL) */
   multiDrawArraysWEBGL(
     mode: GLenum,
-    firstsList: Int32Array | GLint[],
+    firstsList: Int32Array | readonly GLint[],
     firstsOffset: number,
-    countsList: Int32Array | GLsizei[],
+    countsList: Int32Array | readonly GLsizei[],
     countsOffset: number,
     drawcount: GLsizei,
   ): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawElementsInstancedWEBGL) */
   multiDrawElementsInstancedWEBGL(
     mode: GLenum,
-    countsList: Int32Array | GLsizei[],
+    countsList: Int32Array | readonly GLsizei[],
     countsOffset: number,
     type: GLenum,
-    offsetsList: Int32Array | GLsizei[],
+    offsetsList: Int32Array | readonly GLsizei[],
     offsetsOffset: number,
-    instanceCountsList: Int32Array | GLsizei[],
+    instanceCountsList: Int32Array | readonly GLsizei[],
     instanceCountsOffset: number,
     drawcount: GLsizei,
   ): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawElementsWEBGL) */
   multiDrawElementsWEBGL(
     mode: GLenum,
-    countsList: Int32Array | GLsizei[],
+    countsList: Int32Array | readonly GLsizei[],
     countsOffset: number,
     type: GLenum,
-    offsetsList: Int32Array | GLsizei[],
+    offsetsList: Int32Array | readonly GLsizei[],
     offsetsOffset: number,
     drawcount: GLsizei,
   ): void;
@@ -7358,7 +7410,7 @@ interface WebGL2RenderingContext
     WebGL2RenderingContextOverloads,
     WebGLRenderingContextBase {}
 
-declare var WebGL2RenderingContext: {
+declare const WebGL2RenderingContext: {
   prototype: WebGL2RenderingContext;
   new (): WebGL2RenderingContext;
   readonly READ_BUFFER: 0x0c02;
@@ -8091,7 +8143,7 @@ interface WebGL2RenderingContextBase {
     instanceCount: GLsizei,
   ): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawBuffers) */
-  drawBuffers(buffers: GLenum[]): void;
+  drawBuffers(buffers: readonly GLenum[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawElementsInstanced) */
   drawElementsInstanced(
     mode: GLenum,
@@ -8133,13 +8185,13 @@ interface WebGL2RenderingContextBase {
     program: WebGLProgram,
     uniformBlockIndex: GLuint,
     pname: GLenum,
-  ): any;
+  ): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getActiveUniforms) */
   getActiveUniforms(
     program: WebGLProgram,
-    uniformIndices: GLuint[],
+    uniformIndices: readonly GLuint[],
     pname: GLenum,
-  ): any;
+  ): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getBufferSubData) */
   getBufferSubData(
     target: GLenum,
@@ -8151,21 +8203,21 @@ interface WebGL2RenderingContextBase {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getFragDataLocation) */
   getFragDataLocation(program: WebGLProgram, name: string): GLint;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getIndexedParameter) */
-  getIndexedParameter(target: GLenum, index: GLuint): any;
+  getIndexedParameter(target: GLenum, index: GLuint): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getInternalformatParameter) */
   getInternalformatParameter(
     target: GLenum,
     internalformat: GLenum,
     pname: GLenum,
-  ): any;
+  ): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getQuery) */
   getQuery(target: GLenum, pname: GLenum): WebGLQuery | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getQueryParameter) */
-  getQueryParameter(query: WebGLQuery, pname: GLenum): any;
+  getQueryParameter(query: WebGLQuery, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getSamplerParameter) */
-  getSamplerParameter(sampler: WebGLSampler, pname: GLenum): any;
+  getSamplerParameter(sampler: WebGLSampler, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getSyncParameter) */
-  getSyncParameter(sync: WebGLSync, pname: GLenum): any;
+  getSyncParameter(sync: WebGLSync, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getTransformFeedbackVarying) */
   getTransformFeedbackVarying(
     program: WebGLProgram,
@@ -8176,14 +8228,14 @@ interface WebGL2RenderingContextBase {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getUniformIndices) */
   getUniformIndices(
     program: WebGLProgram,
-    uniformNames: string[],
-  ): GLuint[] | null;
+    uniformNames: readonly string[],
+  ): readonly GLuint[] | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateFramebuffer) */
-  invalidateFramebuffer(target: GLenum, attachments: GLenum[]): void;
+  invalidateFramebuffer(target: GLenum, attachments: readonly GLenum[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateSubFramebuffer) */
   invalidateSubFramebuffer(
     target: GLenum,
-    attachments: GLenum[],
+    attachments: readonly GLenum[],
     x: GLint,
     y: GLint,
     width: GLsizei,
@@ -8328,7 +8380,7 @@ interface WebGL2RenderingContextBase {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/transformFeedbackVaryings) */
   transformFeedbackVaryings(
     program: WebGLProgram,
-    varyings: string[],
+    varyings: readonly string[],
     bufferMode: GLenum,
   ): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */
@@ -9034,7 +9086,7 @@ interface WebGLActiveInfo {
   readonly type: GLenum;
 }
 
-declare var WebGLActiveInfo: {
+declare const WebGLActiveInfo: {
   prototype: WebGLActiveInfo;
   new (): WebGLActiveInfo;
 };
@@ -9046,7 +9098,7 @@ declare var WebGLActiveInfo: {
  */
 interface WebGLBuffer {}
 
-declare var WebGLBuffer: {
+declare const WebGLBuffer: {
   prototype: WebGLBuffer;
   new (): WebGLBuffer;
 };
@@ -9061,7 +9113,7 @@ interface WebGLContextEvent extends Event {
   readonly statusMessage: string;
 }
 
-declare var WebGLContextEvent: {
+declare const WebGLContextEvent: {
   prototype: WebGLContextEvent;
   new (type: string, eventInit?: WebGLContextEventInit): WebGLContextEvent;
 };
@@ -9073,7 +9125,7 @@ declare var WebGLContextEvent: {
  */
 interface WebGLFramebuffer {}
 
-declare var WebGLFramebuffer: {
+declare const WebGLFramebuffer: {
   prototype: WebGLFramebuffer;
   new (): WebGLFramebuffer;
 };
@@ -9085,7 +9137,7 @@ declare var WebGLFramebuffer: {
  */
 interface WebGLProgram {}
 
-declare var WebGLProgram: {
+declare const WebGLProgram: {
   prototype: WebGLProgram;
   new (): WebGLProgram;
 };
@@ -9093,7 +9145,7 @@ declare var WebGLProgram: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLQuery) */
 interface WebGLQuery {}
 
-declare var WebGLQuery: {
+declare const WebGLQuery: {
   prototype: WebGLQuery;
   new (): WebGLQuery;
 };
@@ -9105,7 +9157,7 @@ declare var WebGLQuery: {
  */
 interface WebGLRenderbuffer {}
 
-declare var WebGLRenderbuffer: {
+declare const WebGLRenderbuffer: {
   prototype: WebGLRenderbuffer;
   new (): WebGLRenderbuffer;
 };
@@ -9119,7 +9171,7 @@ interface WebGLRenderingContext
   extends WebGLRenderingContextBase,
     WebGLRenderingContextOverloads {}
 
-declare var WebGLRenderingContext: {
+declare const WebGLRenderingContext: {
   prototype: WebGLRenderingContext;
   new (): WebGLRenderingContext;
   readonly DEPTH_BUFFER_BIT: 0x00000100;
@@ -9593,11 +9645,11 @@ interface WebGLRenderingContextBase {
     index: GLuint,
   ): WebGLActiveInfo | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getAttachedShaders) */
-  getAttachedShaders(program: WebGLProgram): WebGLShader[] | null;
+  getAttachedShaders(program: WebGLProgram): readonly WebGLShader[] | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getAttribLocation) */
   getAttribLocation(program: WebGLProgram, name: string): GLint;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getBufferParameter) */
-  getBufferParameter(target: GLenum, pname: GLenum): any;
+  getBufferParameter(target: GLenum, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getContextAttributes) */
   getContextAttributes(): WebGLContextAttributes | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getError) */
@@ -9687,25 +9739,25 @@ interface WebGLRenderingContextBase {
   getExtension(extensionName: 'WEBGL_draw_buffers'): WEBGL_draw_buffers | null;
   getExtension(extensionName: 'WEBGL_lose_context'): WEBGL_lose_context | null;
   getExtension(extensionName: 'WEBGL_multi_draw'): WEBGL_multi_draw | null;
-  getExtension(name: string): any;
+  getExtension(name: string): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getFramebufferAttachmentParameter) */
   getFramebufferAttachmentParameter(
     target: GLenum,
     attachment: GLenum,
     pname: GLenum,
-  ): any;
+  ): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getParameter) */
-  getParameter(pname: GLenum): any;
+  getParameter(pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getProgramInfoLog) */
   getProgramInfoLog(program: WebGLProgram): string | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getProgramParameter) */
-  getProgramParameter(program: WebGLProgram, pname: GLenum): any;
+  getProgramParameter(program: WebGLProgram, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getRenderbufferParameter) */
-  getRenderbufferParameter(target: GLenum, pname: GLenum): any;
+  getRenderbufferParameter(target: GLenum, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderInfoLog) */
   getShaderInfoLog(shader: WebGLShader): string | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderParameter) */
-  getShaderParameter(shader: WebGLShader, pname: GLenum): any;
+  getShaderParameter(shader: WebGLShader, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderPrecisionFormat) */
   getShaderPrecisionFormat(
     shadertype: GLenum,
@@ -9714,18 +9766,18 @@ interface WebGLRenderingContextBase {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderSource) */
   getShaderSource(shader: WebGLShader): string | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getSupportedExtensions) */
-  getSupportedExtensions(): string[] | null;
+  getSupportedExtensions(): readonly string[] | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getTexParameter) */
-  getTexParameter(target: GLenum, pname: GLenum): any;
+  getTexParameter(target: GLenum, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getUniform) */
-  getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;
+  getUniform(program: WebGLProgram, location: WebGLUniformLocation): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getUniformLocation) */
   getUniformLocation(
     program: WebGLProgram,
     name: string,
   ): WebGLUniformLocation | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getVertexAttrib) */
-  getVertexAttrib(index: GLuint, pname: GLenum): any;
+  getVertexAttrib(index: GLuint, pname: GLenum): unknown;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getVertexAttribOffset) */
   getVertexAttribOffset(index: GLuint, pname: GLenum): GLintptr;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/hint) */
@@ -10295,7 +10347,7 @@ interface WebGLRenderingContextOverloads {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLSampler) */
 interface WebGLSampler {}
 
-declare var WebGLSampler: {
+declare const WebGLSampler: {
   prototype: WebGLSampler;
   new (): WebGLSampler;
 };
@@ -10307,7 +10359,7 @@ declare var WebGLSampler: {
  */
 interface WebGLShader {}
 
-declare var WebGLShader: {
+declare const WebGLShader: {
   prototype: WebGLShader;
   new (): WebGLShader;
 };
@@ -10326,7 +10378,7 @@ interface WebGLShaderPrecisionFormat {
   readonly rangeMin: GLint;
 }
 
-declare var WebGLShaderPrecisionFormat: {
+declare const WebGLShaderPrecisionFormat: {
   prototype: WebGLShaderPrecisionFormat;
   new (): WebGLShaderPrecisionFormat;
 };
@@ -10334,7 +10386,7 @@ declare var WebGLShaderPrecisionFormat: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLSync) */
 interface WebGLSync {}
 
-declare var WebGLSync: {
+declare const WebGLSync: {
   prototype: WebGLSync;
   new (): WebGLSync;
 };
@@ -10346,7 +10398,7 @@ declare var WebGLSync: {
  */
 interface WebGLTexture {}
 
-declare var WebGLTexture: {
+declare const WebGLTexture: {
   prototype: WebGLTexture;
   new (): WebGLTexture;
 };
@@ -10354,7 +10406,7 @@ declare var WebGLTexture: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLTransformFeedback) */
 interface WebGLTransformFeedback {}
 
-declare var WebGLTransformFeedback: {
+declare const WebGLTransformFeedback: {
   prototype: WebGLTransformFeedback;
   new (): WebGLTransformFeedback;
 };
@@ -10366,7 +10418,7 @@ declare var WebGLTransformFeedback: {
  */
 interface WebGLUniformLocation {}
 
-declare var WebGLUniformLocation: {
+declare const WebGLUniformLocation: {
   prototype: WebGLUniformLocation;
   new (): WebGLUniformLocation;
 };
@@ -10374,7 +10426,7 @@ declare var WebGLUniformLocation: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLVertexArrayObject) */
 interface WebGLVertexArrayObject {}
 
-declare var WebGLVertexArrayObject: {
+declare const WebGLVertexArrayObject: {
   prototype: WebGLVertexArrayObject;
   new (): WebGLVertexArrayObject;
 };
@@ -10418,13 +10470,13 @@ interface WebSocket extends EventTarget {
    */
   readonly extensions: string;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/close_event) */
-  onclose: ((this: WebSocket, ev: CloseEvent) => any) | null;
+  onclose: ((this: WebSocket, ev: CloseEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/error_event) */
-  onerror: ((this: WebSocket, ev: Event) => any) | null;
+  onerror: ((this: WebSocket, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/message_event) */
-  onmessage: ((this: WebSocket, ev: MessageEvent) => any) | null;
+  onmessage: ((this: WebSocket, ev: MessageEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/open_event) */
-  onopen: ((this: WebSocket, ev: Event) => any) | null;
+  onopen: ((this: WebSocket, ev: Event) => unknown) | null;
   /**
    * Returns the subprotocol selected by the server, if any. It can be used in conjunction with the array form of the constructor's second argument to perform subprotocol negotiation.
    *
@@ -10461,7 +10513,7 @@ interface WebSocket extends EventTarget {
   readonly CLOSED: 3;
   addEventListener<K extends keyof WebSocketEventMap>(
     type: K,
-    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any,
+    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -10471,7 +10523,7 @@ interface WebSocket extends EventTarget {
   ): void;
   removeEventListener<K extends keyof WebSocketEventMap>(
     type: K,
-    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any,
+    listener: (this: WebSocket, ev: WebSocketEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -10481,9 +10533,9 @@ interface WebSocket extends EventTarget {
   ): void;
 }
 
-declare var WebSocket: {
+declare const WebSocket: {
   prototype: WebSocket;
-  new (url: string | URL, protocols?: string | string[]): WebSocket;
+  new (url: string | URL, protocols?: string | readonly string[]): WebSocket;
   readonly CONNECTING: 0;
   readonly OPEN: 1;
   readonly CLOSING: 2;
@@ -10518,7 +10570,7 @@ interface WebTransport {
   ): Promise<WritableStream>;
 }
 
-declare var WebTransport: {
+declare const WebTransport: {
   prototype: WebTransport;
   new (url: string | URL, options?: WebTransportOptions): WebTransport;
 };
@@ -10535,7 +10587,7 @@ interface WebTransportBidirectionalStream {
   readonly writable: WritableStream;
 }
 
-declare var WebTransportBidirectionalStream: {
+declare const WebTransportBidirectionalStream: {
   prototype: WebTransportBidirectionalStream;
   new (): WebTransportBidirectionalStream;
 };
@@ -10562,7 +10614,7 @@ interface WebTransportDatagramDuplexStream {
   readonly writable: WritableStream;
 }
 
-declare var WebTransportDatagramDuplexStream: {
+declare const WebTransportDatagramDuplexStream: {
   prototype: WebTransportDatagramDuplexStream;
   new (): WebTransportDatagramDuplexStream;
 };
@@ -10579,7 +10631,7 @@ interface WebTransportError extends DOMException {
   readonly streamErrorCode: number | null;
 }
 
-declare var WebTransportError: {
+declare const WebTransportError: {
   prototype: WebTransportError;
   new (message?: string, options?: WebTransportErrorOptions): WebTransportError;
 };
@@ -10600,7 +10652,7 @@ interface WindowClient extends Client {
   navigate(url: string | URL): Promise<WindowClient | null>;
 }
 
-declare var WindowClient: {
+declare const WindowClient: {
   prototype: WindowClient;
   new (): WindowClient;
 };
@@ -10650,21 +10702,24 @@ interface WindowOrWorkerGlobalScope {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/queueMicrotask) */
   queueMicrotask(callback: VoidFunction): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/reportError) */
-  reportError(e: any): void;
+  reportError(e: unknown): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/setInterval) */
   setInterval(
     handler: TimerHandler,
     timeout?: number,
-    ...arguments: any[]
+    ...arguments: readonly unknown[]
   ): number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/setTimeout) */
   setTimeout(
     handler: TimerHandler,
     timeout?: number,
-    ...arguments: any[]
+    ...arguments: readonly unknown[]
   ): number;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/structuredClone) */
-  structuredClone<T = any>(value: T, options?: StructuredSerializeOptions): T;
+  structuredClone<T = unknown>(
+    value: T,
+    options?: StructuredSerializeOptions,
+  ): T;
 }
 
 interface WorkerEventMap extends AbstractWorkerEventMap {
@@ -10679,16 +10734,16 @@ interface WorkerEventMap extends AbstractWorkerEventMap {
  */
 interface Worker extends EventTarget, AbstractWorker {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Worker/message_event) */
-  onmessage: ((this: Worker, ev: MessageEvent) => any) | null;
+  onmessage: ((this: Worker, ev: MessageEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Worker/messageerror_event) */
-  onmessageerror: ((this: Worker, ev: MessageEvent) => any) | null;
+  onmessageerror: ((this: Worker, ev: MessageEvent) => unknown) | null;
   /**
    * Clones message and transmits it to worker's global environment. transfer can be passed as a list of objects that are to be transferred rather than cloned.
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Worker/postMessage)
    */
-  postMessage(message: any, transfer: Transferable[]): void;
-  postMessage(message: any, options?: StructuredSerializeOptions): void;
+  postMessage(message: unknown, transfer: readonly Transferable[]): void;
+  postMessage(message: unknown, options?: StructuredSerializeOptions): void;
   /**
    * Aborts worker's associated global environment.
    *
@@ -10697,7 +10752,7 @@ interface Worker extends EventTarget, AbstractWorker {
   terminate(): void;
   addEventListener<K extends keyof WorkerEventMap>(
     type: K,
-    listener: (this: Worker, ev: WorkerEventMap[K]) => any,
+    listener: (this: Worker, ev: WorkerEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -10707,7 +10762,7 @@ interface Worker extends EventTarget, AbstractWorker {
   ): void;
   removeEventListener<K extends keyof WorkerEventMap>(
     type: K,
-    listener: (this: Worker, ev: WorkerEventMap[K]) => any,
+    listener: (this: Worker, ev: WorkerEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -10717,7 +10772,7 @@ interface Worker extends EventTarget, AbstractWorker {
   ): void;
 }
 
-declare var Worker: {
+declare const Worker: {
   prototype: Worker;
   new (scriptURL: string | URL, options?: WorkerOptions): Worker;
 };
@@ -10753,20 +10808,20 @@ interface WorkerGlobalScope
    */
   readonly navigator: WorkerNavigator;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/error_event) */
-  onerror: ((this: WorkerGlobalScope, ev: ErrorEvent) => any) | null;
+  onerror: ((this: WorkerGlobalScope, ev: ErrorEvent) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/languagechange_event) */
-  onlanguagechange: ((this: WorkerGlobalScope, ev: Event) => any) | null;
+  onlanguagechange: ((this: WorkerGlobalScope, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/offline_event) */
-  onoffline: ((this: WorkerGlobalScope, ev: Event) => any) | null;
+  onoffline: ((this: WorkerGlobalScope, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/online_event) */
-  ononline: ((this: WorkerGlobalScope, ev: Event) => any) | null;
+  ononline: ((this: WorkerGlobalScope, ev: Event) => unknown) | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/rejectionhandled_event) */
   onrejectionhandled:
-    | ((this: WorkerGlobalScope, ev: PromiseRejectionEvent) => any)
+    | ((this: WorkerGlobalScope, ev: PromiseRejectionEvent) => unknown)
     | null;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/unhandledrejection_event) */
   onunhandledrejection:
-    | ((this: WorkerGlobalScope, ev: PromiseRejectionEvent) => any)
+    | ((this: WorkerGlobalScope, ev: PromiseRejectionEvent) => unknown)
     | null;
   /**
    * Returns workerGlobal.
@@ -10785,7 +10840,7 @@ interface WorkerGlobalScope
     listener: (
       this: WorkerGlobalScope,
       ev: WorkerGlobalScopeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -10798,7 +10853,7 @@ interface WorkerGlobalScope
     listener: (
       this: WorkerGlobalScope,
       ev: WorkerGlobalScopeEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -10808,7 +10863,7 @@ interface WorkerGlobalScope
   ): void;
 }
 
-declare var WorkerGlobalScope: {
+declare const WorkerGlobalScope: {
   prototype: WorkerGlobalScope;
   new (): WorkerGlobalScope;
 };
@@ -10840,7 +10895,7 @@ interface WorkerLocation {
   readonly search: string;
 }
 
-declare var WorkerLocation: {
+declare const WorkerLocation: {
   prototype: WorkerLocation;
   new (): WorkerLocation;
 };
@@ -10864,7 +10919,7 @@ interface WorkerNavigator
   readonly permissions: Permissions;
 }
 
-declare var WorkerNavigator: {
+declare const WorkerNavigator: {
   prototype: WorkerNavigator;
   new (): WorkerNavigator;
 };
@@ -10874,20 +10929,20 @@ declare var WorkerNavigator: {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream)
  */
-interface WritableStream<W = any> {
+interface WritableStream<W = unknown> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/locked) */
   readonly locked: boolean;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/abort) */
-  abort(reason?: any): Promise<void>;
+  abort(reason?: unknown): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/close) */
   close(): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/getWriter) */
   getWriter(): WritableStreamDefaultWriter<W>;
 }
 
-declare var WritableStream: {
+declare const WritableStream: {
   prototype: WritableStream;
-  new <W = any>(
+  new <W = unknown>(
     underlyingSink?: UnderlyingSink<W>,
     strategy?: QueuingStrategy<W>,
   ): WritableStream<W>;
@@ -10902,10 +10957,10 @@ interface WritableStreamDefaultController {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultController/signal) */
   readonly signal: AbortSignal;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultController/error) */
-  error(e?: any): void;
+  error(e?: unknown): void;
 }
 
-declare var WritableStreamDefaultController: {
+declare const WritableStreamDefaultController: {
   prototype: WritableStreamDefaultController;
   new (): WritableStreamDefaultController;
 };
@@ -10915,7 +10970,7 @@ declare var WritableStreamDefaultController: {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter)
  */
-interface WritableStreamDefaultWriter<W = any> {
+interface WritableStreamDefaultWriter<W = unknown> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/closed) */
   readonly closed: Promise<undefined>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/desiredSize) */
@@ -10923,7 +10978,7 @@ interface WritableStreamDefaultWriter<W = any> {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/ready) */
   readonly ready: Promise<undefined>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/abort) */
-  abort(reason?: any): Promise<void>;
+  abort(reason?: unknown): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/close) */
   close(): Promise<void>;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/releaseLock) */
@@ -10932,9 +10987,9 @@ interface WritableStreamDefaultWriter<W = any> {
   write(chunk?: W): Promise<void>;
 }
 
-declare var WritableStreamDefaultWriter: {
+declare const WritableStreamDefaultWriter: {
   prototype: WritableStreamDefaultWriter;
-  new <W = any>(stream: WritableStream<W>): WritableStreamDefaultWriter<W>;
+  new <W = unknown>(stream: WritableStream<W>): WritableStreamDefaultWriter<W>;
 };
 
 interface XMLHttpRequestEventMap extends XMLHttpRequestEventTargetEventMap {
@@ -10948,7 +11003,7 @@ interface XMLHttpRequestEventMap extends XMLHttpRequestEventTargetEventMap {
  */
 interface XMLHttpRequest extends XMLHttpRequestEventTarget {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/readystatechange_event) */
-  onreadystatechange: ((this: XMLHttpRequest, ev: Event) => any) | null;
+  onreadystatechange: ((this: XMLHttpRequest, ev: Event) => unknown) | null;
   /**
    * Returns client's state.
    *
@@ -10960,7 +11015,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/response)
    */
-  readonly response: any;
+  readonly response: unknown;
   /**
    * Returns response as text.
    *
@@ -11032,9 +11087,9 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
    *
    * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/open)
    */
-  open(method: string, url: string | URL): void;
+  open(method: 'post' | 'get' | 'dialog', url: string | URL): void;
   open(
-    method: string,
+    method: 'post' | 'get' | 'dialog',
     url: string | URL,
     async: boolean,
     username?: string | null,
@@ -11073,7 +11128,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
   readonly DONE: 4;
   addEventListener<K extends keyof XMLHttpRequestEventMap>(
     type: K,
-    listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any,
+    listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11083,7 +11138,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
   ): void;
   removeEventListener<K extends keyof XMLHttpRequestEventMap>(
     type: K,
-    listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any,
+    listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11093,7 +11148,7 @@ interface XMLHttpRequest extends XMLHttpRequestEventTarget {
   ): void;
 }
 
-declare var XMLHttpRequest: {
+declare const XMLHttpRequest: {
   prototype: XMLHttpRequest;
   new (): XMLHttpRequest;
   readonly UNSENT: 0;
@@ -11115,19 +11170,19 @@ interface XMLHttpRequestEventTargetEventMap {
 
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequestEventTarget) */
 interface XMLHttpRequestEventTarget extends EventTarget {
-  onabort: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onerror: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onload: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onloadstart: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
-  ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;
+  onabort: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onerror: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onload: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onloadstart: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
+  ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => unknown) | null;
   addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(
     type: K,
     listener: (
       this: XMLHttpRequestEventTarget,
       ev: XMLHttpRequestEventTargetEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11140,7 +11195,7 @@ interface XMLHttpRequestEventTarget extends EventTarget {
     listener: (
       this: XMLHttpRequestEventTarget,
       ev: XMLHttpRequestEventTargetEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11150,7 +11205,7 @@ interface XMLHttpRequestEventTarget extends EventTarget {
   ): void;
 }
 
-declare var XMLHttpRequestEventTarget: {
+declare const XMLHttpRequestEventTarget: {
   prototype: XMLHttpRequestEventTarget;
   new (): XMLHttpRequestEventTarget;
 };
@@ -11162,7 +11217,7 @@ interface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {
     listener: (
       this: XMLHttpRequestUpload,
       ev: XMLHttpRequestEventTargetEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | AddEventListenerOptions,
   ): void;
   addEventListener(
@@ -11175,7 +11230,7 @@ interface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {
     listener: (
       this: XMLHttpRequestUpload,
       ev: XMLHttpRequestEventTargetEventMap[K],
-    ) => any,
+    ) => unknown,
     options?: boolean | EventListenerOptions,
   ): void;
   removeEventListener(
@@ -11185,7 +11240,7 @@ interface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {
   ): void;
 }
 
-declare var XMLHttpRequestUpload: {
+declare const XMLHttpRequestUpload: {
   prototype: XMLHttpRequestUpload;
   new (): XMLHttpRequestUpload;
 };
@@ -11193,7 +11248,7 @@ declare var XMLHttpRequestUpload: {
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console) */
 interface Console {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/assert_static) */
-  assert(condition?: boolean, ...data: any[]): void;
+  assert(condition?: boolean, ...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/clear_static) */
   clear(): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/count_static) */
@@ -11201,44 +11256,44 @@ interface Console {
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/countReset_static) */
   countReset(label?: string): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/debug_static) */
-  debug(...data: any[]): void;
+  debug(...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/dir_static) */
-  dir(item?: any, options?: any): void;
+  dir(item?: unknown, options?: unknown): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/dirxml_static) */
-  dirxml(...data: any[]): void;
+  dirxml(...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/error_static) */
-  error(...data: any[]): void;
+  error(...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/group_static) */
-  group(...data: any[]): void;
+  group(...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/groupCollapsed_static) */
-  groupCollapsed(...data: any[]): void;
+  groupCollapsed(...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/groupEnd_static) */
   groupEnd(): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/info_static) */
-  info(...data: any[]): void;
+  info(...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/log_static) */
-  log(...data: any[]): void;
+  log(...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/table_static) */
-  table(tabularData?: any, properties?: string[]): void;
+  table(tabularData?: unknown, properties?: readonly string[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/time_static) */
   time(label?: string): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/timeEnd_static) */
   timeEnd(label?: string): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/timeLog_static) */
-  timeLog(label?: string, ...data: any[]): void;
+  timeLog(label?: string, ...data: readonly unknown[]): void;
   timeStamp(label?: string): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/trace_static) */
-  trace(...data: any[]): void;
+  trace(...data: readonly unknown[]): void;
   /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/warn_static) */
-  warn(...data: any[]): void;
+  warn(...data: readonly unknown[]): void;
 }
 
-declare var console: Console;
+declare const console: Console;
 
 declare namespace WebAssembly {
   interface CompileError extends Error {}
 
-  var CompileError: {
+  const CompileError: {
     prototype: CompileError;
     new (message?: string): CompileError;
     (message?: string): CompileError;
@@ -11250,7 +11305,7 @@ declare namespace WebAssembly {
     valueOf(): ValueTypeMap[T];
   }
 
-  var Global: {
+  const Global: {
     prototype: Global;
     new <T extends ValueType = ValueType>(
       descriptor: GlobalDescriptor<T>,
@@ -11264,14 +11319,14 @@ declare namespace WebAssembly {
     readonly exports: Exports;
   }
 
-  var Instance: {
+  const Instance: {
     prototype: Instance;
     new (module: Module, importObject?: Imports): Instance;
   };
 
   interface LinkError extends Error {}
 
-  var LinkError: {
+  const LinkError: {
     prototype: LinkError;
     new (message?: string): LinkError;
     (message?: string): LinkError;
@@ -11285,7 +11340,7 @@ declare namespace WebAssembly {
     grow(delta: number): number;
   }
 
-  var Memory: {
+  const Memory: {
     prototype: Memory;
     new (descriptor: MemoryDescriptor): Memory;
   };
@@ -11293,20 +11348,23 @@ declare namespace WebAssembly {
   /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module) */
   interface Module {}
 
-  var Module: {
+  const Module: {
     prototype: Module;
     new (bytes: BufferSource): Module;
     /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module/customSections_static) */
-    customSections(moduleObject: Module, sectionName: string): ArrayBuffer[];
+    customSections(
+      moduleObject: Module,
+      sectionName: string,
+    ): readonly ArrayBuffer[];
     /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module/exports_static) */
-    exports(moduleObject: Module): ModuleExportDescriptor[];
+    exports(moduleObject: Module): readonly ModuleExportDescriptor[];
     /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module/imports_static) */
-    imports(moduleObject: Module): ModuleImportDescriptor[];
+    imports(moduleObject: Module): readonly ModuleImportDescriptor[];
   };
 
   interface RuntimeError extends Error {}
 
-  var RuntimeError: {
+  const RuntimeError: {
     prototype: RuntimeError;
     new (message?: string): RuntimeError;
     (message?: string): RuntimeError;
@@ -11317,16 +11375,16 @@ declare namespace WebAssembly {
     /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/length) */
     readonly length: number;
     /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/get) */
-    get(index: number): any;
+    get(index: number): unknown;
     /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/grow) */
-    grow(delta: number, value?: any): number;
+    grow(delta: number, value?: unknown): number;
     /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/set) */
-    set(index: number, value?: any): void;
+    set(index: number, value?: unknown): void;
   }
 
-  var Table: {
+  const Table: {
     prototype: Table;
-    new (descriptor: TableDescriptor, value?: any): Table;
+    new (descriptor: TableDescriptor, value?: unknown): Table;
   };
 
   interface GlobalDescriptor<T extends ValueType = ValueType> {
@@ -11359,7 +11417,7 @@ declare namespace WebAssembly {
 
   interface ValueTypeMap {
     anyfunc: Function;
-    externref: any;
+    externref: unknown;
     f32: number;
     f64: number;
     i32: number;
@@ -11421,7 +11479,7 @@ interface FrameRequestCallback {
 }
 
 interface LockGrantedCallback {
-  (lock: Lock | null): any;
+  (lock: Lock | null): unknown;
 }
 
 interface OnErrorEventHandlerNonNull {
@@ -11431,19 +11489,19 @@ interface OnErrorEventHandlerNonNull {
     lineno?: number,
     colno?: number,
     error?: Error,
-  ): any;
+  ): unknown;
 }
 
 interface PerformanceObserverCallback {
   (entries: PerformanceObserverEntryList, observer: PerformanceObserver): void;
 }
 
-interface QueuingStrategySize<T = any> {
+interface QueuingStrategySize<T = unknown> {
   (chunk: T): number;
 }
 
 interface ReportingObserverCallback {
-  (reports: Report[], observer: ReportingObserver): void;
+  (reports: readonly Report[], observer: ReportingObserver): void;
 }
 
 interface TransformerFlushCallback<O> {
@@ -11451,7 +11509,7 @@ interface TransformerFlushCallback<O> {
 }
 
 interface TransformerStartCallback<O> {
-  (controller: TransformStreamDefaultController<O>): any;
+  (controller: TransformStreamDefaultController<O>): unknown;
 }
 
 interface TransformerTransformCallback<I, O> {
@@ -11462,7 +11520,7 @@ interface TransformerTransformCallback<I, O> {
 }
 
 interface UnderlyingSinkAbortCallback {
-  (reason?: any): void | PromiseLike<void>;
+  (reason?: unknown): void | PromiseLike<void>;
 }
 
 interface UnderlyingSinkCloseCallback {
@@ -11470,7 +11528,7 @@ interface UnderlyingSinkCloseCallback {
 }
 
 interface UnderlyingSinkStartCallback {
-  (controller: WritableStreamDefaultController): any;
+  (controller: WritableStreamDefaultController): unknown;
 }
 
 interface UnderlyingSinkWriteCallback<W> {
@@ -11481,7 +11539,7 @@ interface UnderlyingSinkWriteCallback<W> {
 }
 
 interface UnderlyingSourceCancelCallback {
-  (reason?: any): void | PromiseLike<void>;
+  (reason?: unknown): void | PromiseLike<void>;
 }
 
 interface UnderlyingSourcePullCallback<R> {
@@ -11489,7 +11547,7 @@ interface UnderlyingSourcePullCallback<R> {
 }
 
 interface UnderlyingSourceStartCallback<R> {
-  (controller: ReadableStreamController<R>): any;
+  (controller: ReadableStreamController<R>): unknown;
 }
 
 interface VideoFrameOutputCallback {
@@ -11509,18 +11567,18 @@ interface WebCodecsErrorCallback {
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/name)
  */
-declare var name: string;
+declare const name: string;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/message_event) */
-declare var onmessage:
-  | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any)
+declare const onmessage:
+  | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/messageerror_event) */
-declare var onmessageerror:
-  | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any)
+declare const onmessageerror:
+  | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/rtctransform_event) */
-declare var onrtctransform:
-  | ((this: DedicatedWorkerGlobalScope, ev: RTCTransformEvent) => any)
+declare const onrtctransform:
+  | ((this: DedicatedWorkerGlobalScope, ev: RTCTransformEvent) => unknown)
   | null;
 /**
  * Aborts dedicatedWorkerGlobal.
@@ -11533,9 +11591,12 @@ declare function close(): void;
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/postMessage)
  */
-declare function postMessage(message: any, transfer: Transferable[]): void;
 declare function postMessage(
-  message: any,
+  message: unknown,
+  transfer: readonly Transferable[],
+): void;
+declare function postMessage(
+  message: unknown,
   options?: StructuredSerializeOptions,
 ): void;
 /**
@@ -11549,43 +11610,43 @@ declare function dispatchEvent(event: Event): boolean;
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/location)
  */
-declare var location: WorkerLocation;
+declare const location: WorkerLocation;
 /**
  * Returns workerGlobal's WorkerNavigator object.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/navigator)
  */
-declare var navigator: WorkerNavigator;
+declare const navigator: WorkerNavigator;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/error_event) */
-declare var onerror:
-  | ((this: DedicatedWorkerGlobalScope, ev: ErrorEvent) => any)
+declare const onerror:
+  | ((this: DedicatedWorkerGlobalScope, ev: ErrorEvent) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/languagechange_event) */
-declare var onlanguagechange:
-  | ((this: DedicatedWorkerGlobalScope, ev: Event) => any)
+declare const onlanguagechange:
+  | ((this: DedicatedWorkerGlobalScope, ev: Event) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/offline_event) */
-declare var onoffline:
-  | ((this: DedicatedWorkerGlobalScope, ev: Event) => any)
+declare const onoffline:
+  | ((this: DedicatedWorkerGlobalScope, ev: Event) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/online_event) */
-declare var ononline:
-  | ((this: DedicatedWorkerGlobalScope, ev: Event) => any)
+declare const ononline:
+  | ((this: DedicatedWorkerGlobalScope, ev: Event) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/rejectionhandled_event) */
-declare var onrejectionhandled:
-  | ((this: DedicatedWorkerGlobalScope, ev: PromiseRejectionEvent) => any)
+declare const onrejectionhandled:
+  | ((this: DedicatedWorkerGlobalScope, ev: PromiseRejectionEvent) => unknown)
   | null;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/unhandledrejection_event) */
-declare var onunhandledrejection:
-  | ((this: DedicatedWorkerGlobalScope, ev: PromiseRejectionEvent) => any)
+declare const onunhandledrejection:
+  | ((this: DedicatedWorkerGlobalScope, ev: PromiseRejectionEvent) => unknown)
   | null;
 /**
  * Returns workerGlobal.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/self)
  */
-declare var self: WorkerGlobalScope & typeof globalThis;
+declare const self: WorkerGlobalScope & typeof globalThis;
 /**
  * Fetches each URL in urls, executes them one-by-one in the order they are passed, and then returns (or throws if something went amiss).
  *
@@ -11599,25 +11660,25 @@ declare function importScripts(...urls: (string | URL)[]): void;
  */
 declare function dispatchEvent(event: Event): boolean;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fonts) */
-declare var fonts: FontFaceSet;
+declare const fonts: FontFaceSet;
 /**
  * Available only in secure contexts.
  *
  * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/caches)
  */
-declare var caches: CacheStorage;
+declare const caches: CacheStorage;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/crossOriginIsolated) */
-declare var crossOriginIsolated: boolean;
+declare const crossOriginIsolated: boolean;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/crypto) */
-declare var crypto: Crypto;
+declare const crypto: Crypto;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/indexedDB) */
-declare var indexedDB: IDBFactory;
+declare const indexedDB: IDBFactory;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/isSecureContext) */
-declare var isSecureContext: boolean;
+declare const isSecureContext: boolean;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/origin) */
-declare var origin: string;
+declare const origin: string;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/performance) */
-declare var performance: Performance;
+declare const performance: Performance;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/atob) */
 declare function atob(data: string): string;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/btoa) */
@@ -11647,21 +11708,21 @@ declare function fetch(
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/queueMicrotask) */
 declare function queueMicrotask(callback: VoidFunction): void;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/reportError) */
-declare function reportError(e: any): void;
+declare function reportError(e: unknown): void;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/setInterval) */
 declare function setInterval(
   handler: TimerHandler,
   timeout?: number,
-  ...arguments: any[]
+  ...arguments: readonly unknown[]
 ): number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/setTimeout) */
 declare function setTimeout(
   handler: TimerHandler,
   timeout?: number,
-  ...arguments: any[]
+  ...arguments: readonly unknown[]
 ): number;
 /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/structuredClone) */
-declare function structuredClone<T = any>(
+declare function structuredClone<T = unknown>(
   value: T,
   options?: StructuredSerializeOptions,
 ): T;
@@ -11676,7 +11737,7 @@ declare function addEventListener<
   listener: (
     this: DedicatedWorkerGlobalScope,
     ev: DedicatedWorkerGlobalScopeEventMap[K],
-  ) => any,
+  ) => unknown,
   options?: boolean | AddEventListenerOptions,
 ): void;
 declare function addEventListener(
@@ -11691,7 +11752,7 @@ declare function removeEventListener<
   listener: (
     this: DedicatedWorkerGlobalScope,
     ev: DedicatedWorkerGlobalScopeEventMap[K],
-  ) => any,
+  ) => unknown,
   options?: boolean | EventListenerOptions,
 ): void;
 declare function removeEventListener(
@@ -11714,7 +11775,7 @@ type DOMHighResTimeStamp = number;
 type EpochTimeStamp = number;
 type EventListenerOrEventListenerObject = EventListener | EventListenerObject;
 type FileSystemWriteChunkType = BufferSource | Blob | string | WriteParams;
-type Float32List = Float32Array | GLfloat[];
+type Float32List = Float32Array | readonly GLfloat[];
 type FormDataEntryValue = File | string;
 type GLbitfield = number;
 type GLboolean = boolean;
@@ -11729,10 +11790,18 @@ type GLsizeiptr = number;
 type GLuint = number;
 type GLuint64 = number;
 type HashAlgorithmIdentifier = AlgorithmIdentifier;
-type HeadersInit = [string, string][] | Record<string, string> | Headers;
-type IDBValidKey = number | string | Date | BufferSource | IDBValidKey[];
+type HeadersInit =
+  | readonly (readonly [string, string])[]
+  | Record<string, string>
+  | Headers;
+type IDBValidKey =
+  | number
+  | string
+  | Date
+  | BufferSource
+  | readonly IDBValidKey[];
 type ImageBitmapSource = CanvasImageSource | Blob | ImageData;
-type Int32List = Int32Array | GLint[];
+type Int32List = Int32Array | readonly GLint[];
 type MessageEventSource = MessagePort | ServiceWorker;
 type NamedCurve = string;
 type OffscreenRenderingContext =
@@ -11741,7 +11810,7 @@ type OffscreenRenderingContext =
   | WebGLRenderingContext
   | WebGL2RenderingContext;
 type OnErrorEventHandler = OnErrorEventHandlerNonNull | null;
-type PerformanceEntryList = PerformanceEntry[];
+type PerformanceEntryList = readonly PerformanceEntry[];
 type PushMessageDataInit = BufferSource | string;
 type ReadableStreamController<T> =
   | ReadableStreamDefaultController<T>
@@ -11752,7 +11821,7 @@ type ReadableStreamReadResult<T> =
 type ReadableStreamReader<T> =
   | ReadableStreamDefaultReader<T>
   | ReadableStreamBYOBReader;
-type ReportList = Report[];
+type ReportList = readonly Report[];
 type RequestInfo = Request | string;
 type TexImageSource = ImageBitmap | ImageData | OffscreenCanvas | VideoFrame;
 type TimerHandler = string | Function;
@@ -11767,7 +11836,7 @@ type Transferable =
   | AudioData
   | VideoFrame
   | ArrayBuffer;
-type Uint32List = Uint32Array | GLuint[];
+type Uint32List = Uint32Array | readonly GLuint[];
 type XMLHttpRequestBodyInit =
   | Blob
   | BufferSource
