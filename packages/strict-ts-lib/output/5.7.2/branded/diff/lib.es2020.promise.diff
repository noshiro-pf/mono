@@ -1,28 +1,14 @@
-/*! *****************************************************************************
-Copyright (c) Microsoft Corporation. All rights reserved.
-Licensed under the Apache License, Version 2.0 (the "License"); you may not use
-this file except in compliance with the License. You may obtain a copy of the
-License at http://www.apache.org/licenses/LICENSE-2.0
-
-THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
-WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
-MERCHANTABLITY OR NON-INFRINGEMENT.
-
-See the Apache Version 2.0 License for specific language governing permissions
-and limitations under the License.
-***************************************************************************** */
-
 /// <reference no-default-lib="true"/>
+/// <reference types="@noshiro/ts-type-utils" />
 
 interface PromiseFulfilledResult<T> {
-  status: 'fulfilled';
-  value: T;
+  readonly status: 'fulfilled';
+  readonly value: T;
 }
 
 interface PromiseRejectedResult {
-  status: 'rejected';
-  reason: any;
+  readonly status: 'rejected';
+  readonly reason: unknown;
 }
 
 type PromiseSettledResult<T> =
@@ -36,9 +22,9 @@ interface PromiseConstructor {
    * @param values An array of Promises.
    * @returns A new Promise.
    */
-  allSettled<T extends readonly unknown[] | []>(
+  allSettled<T extends readonly unknown[] | readonly []>(
     values: T,
-  ): Promise<{ -readonly [P in keyof T]: PromiseSettledResult<Awaited<T[P]>> }>;
+  ): Promise<{ readonly [P in keyof T]: PromiseSettledResult<Awaited<T[P]>> }>;
 
   /**
    * Creates a Promise that is resolved with an array of results when all
@@ -48,5 +34,5 @@ interface PromiseConstructor {
    */
   allSettled<T>(
     values: Iterable<T | PromiseLike<T>>,
-  ): Promise<PromiseSettledResult<Awaited<T>>[]>;
+  ): Promise<readonly PromiseSettledResult<Awaited<T>>[]>;
 }
