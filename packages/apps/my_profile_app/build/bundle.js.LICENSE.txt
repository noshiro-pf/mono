/*
   * Flattens a rule set into valid CSS
   * Hashes it, wraps the whole chunk in a .hash1234 {}
   * Returns the hash to be injected on render()
   * */

/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/

/*
 ComponentStyle is all the CSS-specific stuff, not
 the React-specific stuff.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

/* 0 */

/* 0-9 */

/* 1 */

/* 10 */

/* 100 */

/* 101 */

/* 102 */

/* 103 */

/* 104 */

/* 105 */

/* 106 */

/* 107 */

/* 108 */

/* 109 */

/* 11 */

/* 110 */

/* 111 */

/* 112 */

/* 113 */

/* 114 */

/* 115 */

/* 116 */

/* 117 */

/* 118 */

/* 119 */

/* 12 */

/* 120 */

/* 121 */

/* 122 */

/* 123 */

/* 124 */

/* 125 */

/* 126 */

/* 127 */

/* 128 */

/* 129 */

/* 13 */

/* 130 */

/* 131 */

/* 132 */

/* 133 */

/* 134 */

/* 135 */

/* 136 */

/* 137 */

/* 138 */

/* 139 */

/* 14 */

/* 140 */

/* 141 */

/* 142 */

/* 143 */

/* 144 */

/* 15 */

/* 16 */

/* 17 */

/* 18 */

/* 19 */

/* 2 */

/* 20 */

/* 21 */

/* 22 */

/* 23 */

/* 24 */

/* 25 */

/* 26 */

/* 27 */

/* 28 */

/* 29 */

/* 3 */

/* 30 */

/* 31 */

/* 32 */

/* 33 */

/* 34 */

/* 35 */

/* 36 */

/* 37 */

/* 38 */

/* 39 */

/* 4 */

/* 40 */

/* 41 */

/* 42 */

/* 43 */

/* 44 */

/* 45 */

/* 46 */

/* 47 */

/* 48 */

/* 49 */

/* 5 */

/* 50 */

/* 51 */

/* 52 */

/* 53 */

/* 54 */

/* 55 */

/* 56 */

/* 57 */

/* 58 */

/* 59 */

/* 6 */

/* 60 */

/* 61 */

/* 62 */

/* 63 */

/* 64 */

/* 65 */

/* 66 */

/* 67 */

/* 68 */

/* 69 */

/* 7 */

/* 70 */

/* 71 */

/* 72 */

/* 73 */

/* 74 */

/* 75 */

/* 76 */

/* 77 */

/* 78 */

/* 79 */

/* 8 */

/* 80 */

/* 81 */

/* 82 */

/* 83 */

/* 84 */

/* 85 */

/* 86 */

/* 87 */

/* 88 */

/* 89 */

/* 9 */

/* 90 */

/* 91 */

/* 92 */

/* 93 */

/* 94 */

/* 95 */

/* 96 */

/* 97 */

/* 98 */

/* 99 */

/* ? */

/* A */

/* A simple replacer which removed all matches,
   * and adds their length to `offset`. */

/* A-Z */

/* API. */

/* Access basename (`index.min.js`). */

/* Access extname (`.js`). */

/* Access full path (`~/index.min.js`). */

/* Access parent path (`~`). */

/* Access stem (`index.min`). */

/* Add `node` to `parent`s children or to `tokens`.
     * Performs merges where possible. */

/* Add the given arguments, add `position` to
       * the returned node, and return the node. */

/* Add the newline to `subvalue` if its the first
     * character.  Otherwise, add it to the `closing`
     * queue. */

/* Add the position to a node. */

/* Allow brackets to be escaped. */

/* Allow white-space between content and
         * url in GFM mode. */

/* Assert `node` is a Unist node. */

/* Assert `path` exists. */

/* Assert a compiler is available. */

/* Assert a parser is available. */

/* Assert that `complete` is `true`. */

/* Assert that `part` is not a path (i.e., does
 * not contain `path.sep`). */

/* Assert that `part` is not empty. */

/* Assert the processor is not frozen. */

/* Brackets cannot be inside the identifier. */

/* Break if the following line starts a list, when
     * already in a list, or when in commonmark, or when
     * in gfm mode and the bullet is *not* numeric. */

/* Capture stack-trace. */

/* Check if `character` can be inside an enclosed URI. */

/* Check if `character` can be inside an unclosed URI. */

/* Check if `func` is a constructor. */

/* Check if `value` is an object with keys. */

/* Check if the following code contains a possible
     * block. */

/* Check whether a node is mergeable with adjacent nodes. */

/* Check whether we’re eating a footnote. */

/* Check whether we’re eating an image. */

/* Clean non-unix newlines: `\r\n` and `\r` are all
   * changed to `\n`.  This should not affect positional
   * information. */

/* Construct a new file. */

/* Construct a tokenizer.  This creates both
 * `tokenizeInline` and `tokenizeBlock`. */

/* Create a list-item using overly simple mechanics. */

/* Create a list-item using sane mechanics. */

/* Create a message with `reason` at `position`.
 * When an error is passed in as `reason`, copies the stack. */

/* Create a new processor based on the processor
   * in the current scope. */

/* Data management.
   * Getter / setter for processor-specific informtion. */

/* Data management. */

/* De-escape a string using the expression at `key`
   * in `ctx`. */

/* Decode `value` (at `position`) into a string. */

/* Decode `value` (at `position`) into text-nodes. */

/* Dependencies. */

/* Detect whether this is an image. */

/* Done.  Called when the last character is
       * eaten to retrieve the range’s offsets. */

/* Eat Setext-line. */

/* Eat a newline character when this is not the
     * first row. */

/* Eat content. */

/* Eat everything if there’s no following newline. */

/* Eat flag. */

/* Eat hashes. */

/* Eat initial indentation. */

/* Eat initial spacing. */

/* Eat intermediate white-space. */

/* Eat spacing before flag. */

/* Eat the URL. */

/* Eat the alignment row. */

/* Eat the content closing. */

/* Eat the content. */

/* Eat the fence. */

/* Eat the opening. */

/* Eat the row. */

/* Eat the text. */

/* Eat the title. */

/* Eat white-space. */

/* Either execute or defer the function */

/* Ensure the content is followed by a newline and a
   * valid marker. */

/* Enter and exit helpers. */

/* Exit if `![^` is found, so the `!` will be seen as text after this,
     * and we’ll enter this function again when `[^` is found. */

/* Exit when not in gfm-mode. */

/* Exit when not in pedantic mode without spacing. */

/* Exit when this is a link and we’re already inside
   * a link. */

/* Exit when without enough columns. */

/* Expose `defaults`. */

/* Expose a frozen processor. */

/* Expose core. */

/* Expose on `eat`. */

/* Expose precedence. */

/* Expose. */

/* Factory to create an entity decoder. */

/* Factory to de-escape a value, based on a list at `key`
 * in `ctx`. */

/* Fail. Creates a vmessage, associates it with the file,
 * and throws it. */

/* Freeze: used to signal a processor that has finished
   * configuration.
   *
   * For example, take unified itself.  It’s frozen.
   * Plug-ins should not be added to it.  Rather, it should
   * be extended, by invoking it, before modifying it.
   *
   * In essence, always invoke this when exporting a
   * processor. */

/* Function to create the first processor. */

/* Functions just like apply, but resets the
       * content:  the line and column are reversed,
       * and the eaten value is re-added.
       * This is useful for nodes with a single
       * type of content, such as lists and tables.
       * See `apply` above for what parameters are
       * expected. */

/* Get `key`. */

/* Get all keys in `value`. */

/* Get offset.  Called before the first character is
     * eaten to retrieve the range's offsets. */

/* Get space. */

/* Get the current position. */

/* Get the rows.
   * Detecting tables soon is hard, so there are some
   * checks for performance here, such as the minimum
   * number of rows, and allowed characters in the
   * alignment row. */

/* Get the value of the file. */

/* Gets indentation information for a line. */

/* Handle a warning.
   * See https://github.com/wooorm/parse-entities
   * for the warnings. */

/* Handle objects */

/* Handle other components */

/* Handlers. */

/* If config methods are called, wrap up a new template function and merge options */

/* If the following character is not a valid escape,
       * add the slash. */

/* If there was already a `position`, this
         * node was merged.  Fixing `start` wasn’t
         * hard, but the indent is different.
         * Especially because some information, the
         * indent between `n` and `l` wasn’t
         * tracked.  Luckily, that space is
         * (should be?) empty, so we can safely
         * check for it now. */

/* In commonmark-mode, following indented lines
     * are part of the paragraph. */

/* In commonmark-mode, things are pretty easy: the
     * marker cannot occur inside the title.
     *
     * Non-commonmark does, however, support nested
     * delimiters. */

/* Info. Creates a vmessage, associates it with the file,
 * and marks the fatality as null. */

/* Inline footnotes cannot have an identifier. */

/* Inline-code in link content. */

/* Iterate over `value`, and iterate over all
     * tokenizers.  When one eats something, re-iterate
     * with the remaining value.  If no tokenizer eats,
     * something failed (should not happen) and an
     * exception is thrown. */

/* Link can never be `-1` if an image is found, so we don’t need
   * to check for that :) */

/* Lock. */

/* Make sure that the first nine numbered list items
     * can indent with an extra space.  That is, when
     * the bullet did not receive an extra final space. */

/* Map of characters, and their column length,
 * which can be used as indentation. */

/* Mark position and patch `node.position`. */

/* Merge two blockquotes: `node` into `prev`, unless in
 * CommonMark mode. */

/* Merge two text nodes: `node` into `prev`. */

/* Modify/inject new props at runtime */

/* Node. */

/* Node.ELEMENT_TYPE */

/* Nodes that can interupt a blockquote:
 *
 * ```markdown
 * > A paragraph.
 * ___
 * ```
 *
 * In the above example, the thematic break “interupts”
 * the blockquote. */

/* Nodes that can interupt a list:
 *
 * ```markdown
 * - One
 * ___
 * ```
 *
 * In the above example, the thematic break “interupts”
 * the list. */

/* Nodes that can interupt a paragraph:
 *
 * ```markdown
 * A paragraph, followed by a thematic break.
 * ___
 * ```
 *
 * In the above example, the thematic break “interupts”
 * the paragraph. */

/* Normalize `position` to add an `indent`. */

/* Normalize an identifier.  Collapses multiple white space
 * characters into a single space, and removes casing. */

/* Nothing. */

/* Order of setting (least specific to most), we need this because
 * otherwise `{stem: 'a', path: '~/b.js'}` would throw, as a path
 * is needed before a stem can be set. */

/* Parse a file (in string or VFile representation)
   * into a Unist node using the `Parser` on the
   * processor. */

/* Parse a file (in string or VFile representation)
   * into a Unist node using the `Parser` on the processor,
   * then run transforms on that node, and compile the
   * resulting node using the `Compiler` on the processor,
   * and store that result on the VFile. */

/* Parse the alignment row. */

/* Parse the bound file. */

/* Parse the rows. */

/* Plug-in management.
   *
   * Pass it:
   * *   an attacher and options,
   * *   a preset,
   * *   a list of presets, attachers, and arguments (list
   *     of attachers and options). */

/* Plug-ins. */

/* Point. */

/* Position. */

/* Process pipeline. */

/* Process the given document (in string or VFile
   * representation), sync. */

/* Pseudo-class applied to the root element if `disabled={true}` (controlled by the Tabs component). */

/* Pseudo-class applied to the root element if `disabled={true}`. */

/* Pseudo-class applied to the root element if `selected={true}` (controlled by the Tabs component). */

/* Pseudo-class applied to the root element if keyboard focused. */

/* Remove `subvalue` from `value`.
     * `subvalue` must be at the start of `value`. */

/* Remove the list-item’s bullet. */

/* Remove the minimum indent from every line in `value`.
 * Supports both tab, spaced, and mixed indentation (as
 * well as possible). */

/* Run transforms on a Unist node representation of a file
   * (in string or VFile representation), async. */

/* Run transforms on a Unist node representation of a file
   * (in string or VFile representation), sync. */

/* Set `key`. */

/* Set non-path related properties. */

/* Set path related properties in the correct order. */

/* Set space. */

/* Slight backwards compatibility.  Remove in the future. */

/* Stop if the next character is NEWLINE. */

/* Store position information for a node. */

/* Stringify a Unist node representation of a file
   * (in string or VFile representation) into a string
   * using the `Compiler` on the processor. */

/* Styles applied to the `ScrollButtonComponent` component if `scrollButtons="auto"` or scrollButtons="desktop"`. */

/* Styles applied to the `ScrollButtonComponent` component. */

/* Styles applied to the `TabIndicator` component. */

/* Styles applied to the `icon` and `label`'s wrapper element. */

/* Styles applied to the flex container element if `centered={true}` & `!variant="scrollable"`. */

/* Styles applied to the flex container element if `orientation="vertical"`. */

/* Styles applied to the flex container element. */

/* Styles applied to the internal `Ripple` components `childLeaving` class. */

/* Styles applied to the internal `Ripple` components `childPulsate` class. */

/* Styles applied to the internal `Ripple` components `child` class. */

/* Styles applied to the internal `Ripple` components `ripplePulsate` class. */

/* Styles applied to the internal `Ripple` components `rippleVisible` class. */

/* Styles applied to the internal `Ripple` components `ripple` class. */

/* Styles applied to the root element if `absolute={true}`. */

/* Styles applied to the root element if `align="center"`. */

/* Styles applied to the root element if `align="justify"`. */

/* Styles applied to the root element if `align="left"`. */

/* Styles applied to the root element if `align="right"`. */

/* Styles applied to the root element if `color="action"`. */

/* Styles applied to the root element if `color="default"`. */

/* Styles applied to the root element if `color="disabled"`. */

/* Styles applied to the root element if `color="error"`. */

/* Styles applied to the root element if `color="inherit"`. */

/* Styles applied to the root element if `color="primary"`. */

/* Styles applied to the root element if `color="secondary"`. */

/* Styles applied to the root element if `color="textPrimary"`. */

/* Styles applied to the root element if `color="textSecondary"`. */

/* Styles applied to the root element if `color="transparent"`. */

/* Styles applied to the root element if `display="block"`. */

/* Styles applied to the root element if `display="inline"`. */

/* Styles applied to the root element if `flexItem={true}`. */

/* Styles applied to the root element if `fontSize="inherit"`. */

/* Styles applied to the root element if `fontSize="large"`. */

/* Styles applied to the root element if `fontSize="small"`. */

/* Styles applied to the root element if `fullWidth={true}` (controlled by the Tabs component). */

/* Styles applied to the root element if `gutterBottom={true}`. */

/* Styles applied to the root element if `light={true}`. */

/* Styles applied to the root element if `nowrap={true}`. */

/* Styles applied to the root element if `orientation="vertical"`. */

/* Styles applied to the root element if `paragraph={true}`. */

/* Styles applied to the root element if `position="absolute"`. */

/* Styles applied to the root element if `position="fixed"`. */

/* Styles applied to the root element if `position="relative"`. */

/* Styles applied to the root element if `position="static"`. */

/* Styles applied to the root element if `position="sticky"`. */

/* Styles applied to the root element if `square={false}`. */

/* Styles applied to the root element if `variant="body1"`. */

/* Styles applied to the root element if `variant="body2"`. */

/* Styles applied to the root element if `variant="button"`. */

/* Styles applied to the root element if `variant="caption"`. */

/* Styles applied to the root element if `variant="h1"`. */

/* Styles applied to the root element if `variant="h2"`. */

/* Styles applied to the root element if `variant="h3"`. */

/* Styles applied to the root element if `variant="h4"`. */

/* Styles applied to the root element if `variant="h5"`. */

/* Styles applied to the root element if `variant="h6"`. */

/* Styles applied to the root element if `variant="inset"`. */

/* Styles applied to the root element if `variant="middle"`. */

/* Styles applied to the root element if `variant="outlined"`. */

/* Styles applied to the root element if `variant="overline"`. */

/* Styles applied to the root element if `variant="srOnly"`. Only accessible to screen readers. */

/* Styles applied to the root element if `variant="subtitle1"`. */

/* Styles applied to the root element if `variant="subtitle2"`. */

/* Styles applied to the root element if `wrapped={true}`. */

/* Styles applied to the root element if both `icon` and `label` are provided. */

/* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="inherit"`. */

/* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="primary"`. */

/* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="secondary"`. */

/* Styles applied to the root element. */

/* Styles applied to the tablist element if `!variant="scrollable"`. */

/* Styles applied to the tablist element if `variant="scrollable"`. */

/* Styles applied to the tablist element. */

/* Sync initial offset. */

/* Temporarily remove all tokenizers except text in autolinks. */

/* Test the position, after eating, and reverse
       * to a not-eaten state. */

/* The initial line was also matched by the below, so
   * we reset the `line`. */

/* This is callable directly as a template function */

/* This is the "capacity" of our alphabet i.e. 2x26 for all letters plus their capitalised
 * counterparts */

/* Throw when a value is incorrectly eaten.
     * This shouldn’t happen but will throw on new,
     * incorrect rules. */

/* Tokenise a blockquote. */

/* Tokenise a link. */

/* Tokenise indented code. */

/* Tokenise inline code. */

/* Tokenise newline. */

/* Tokenise paragraph. */

/* Tokenizer for a bound `type`. */

/* Tokenizers. */

/* TouchRipple is only needed client-side, x2 boost on the server. */

/* Trim white space only lines. */

/* Update line, column, and offset based on
     * `value`. */

/* Visit a single node. */

/* Visit children in `parent`. */

/* Visit. */

/* WEBPACK VAR INJECTION */

/* We depend on components having unique IDs */

/* We replaced the initial bullet with something
   * else above, which was used to trick
   * `removeIndentation` into removing some more
   * characters when possible.  However, that could
   * result in the initial line to be stripped more
   * than it should be. */

/* Z */

/* Z+1 */

/* a */

/* a-z */

/* eslint-disable */

/* eslint-disable guard-for-in */

/* eslint-disable import/prefer-default-export */

/* eslint-disable max-params */

/* eslint-disable no-bitwise */

/* eslint-disable no-restricted-syntax */

/* eslint-disable no-unused-vars */

/* eslint-disable no-use-before-define */

/* eslint-disable no-var, prefer-template */

/* eslint-disable prefer-template */

/* eslint-disable react/prop-types, react/no-multi-comp */

/* eslint-disable-next-line jsx-a11y/anchor-has-content */

/* eslint-enable guard-for-in */

/* eslint-enable prefer-template */

/* eslint-env browser */

/* get a char and divide by alphabet-length */

/* global $Call */

/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */

/* harmony default export */

/* harmony export (binding) */

/* harmony import */

/* input a number, usually a hash and convert it to base-52 */

/* istanbul ignore if  */

/* istanbul ignore if */

/* istanbul ignore if - never used (yet) */

/* istanbul ignore if - not used yet. */

/* istanbul ignore next  */

/* istanbul ignore next */

/* n */

/* o */

/* unused harmony export ServerStyleSheet */

/* unused harmony export StyleSheetConsumer */

/* unused harmony export StyleSheetContext */

/* unused harmony export StyleSheetManager */

/* unused harmony export ThemeConsumer */

/* unused harmony export ThemeContext */

/* unused harmony export ThemeProvider */

/* unused harmony export __PRIVATE__ */

/* unused harmony export createGlobalStyle */

/* unused harmony export css */

/* unused harmony export isStyledComponent */

/* unused harmony export keyframes */

/* unused harmony export unregister */

/* unused harmony export useTheme */

/* unused harmony export version */

/* unused harmony export withTheme */

/* z */

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

/*!
 * repeat-string <https://github.com/jonschlinkert/repeat-string>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */

/*#__PURE__*/

/**
     * Current highest index number.
     */

/**
     * Get selector string.
     */

/**
   * Add a rule to the current stylesheet.
   * Will insert a rule also after the stylesheet has been rendered first time.
   */

/**
   * Apply rule to an element inline.
   */

/**
   * Attach renderable to the render tree.
   */

/**
   * Call `onChangeValue` hooks.
   */

/**
   * Call `onCreateRule` hooks and return an object if returned by a hook.
   */

/**
   * Call `onProcessRule` hooks.
   */

/**
   * Call `onProcessSheet` hooks.
   */

/**
   * Call `onProcessStyle` hooks.
   */

/**
   * Call `onUpdate` hooks.
   */

/**
   * Contains rules objects and allows adding/removing etc.
   * Is used for e.g. by `StyleSheet` or `ConditionalRule`.
   */

/**
   * Convert all attached sheets to a CSS string.
   */

/**
   * Convert rules to a CSS string.
   */

/**
   * Create a Style Sheet.
   */

/**
   * Create a rule without a Style Sheet.
   * [Deprecated] will be removed in the next major version.
   */

/**
   * Create and add rules.
   * Will render also after Style Sheet was rendered the first time.
   */

/**
   * Create and register rule, run plugins.
   */

/**
   * Create and register rule.
   *
   * Will not render after Style Sheet was rendered the first time.
   */

/**
   * Delete a rule by name.
   * Returns `true`: if rule has been deleted from the DOM.
   */

/**
   * Delete a rule.
   */

/**
   * Deploy pure CSS string to a renderable.
   */

/**
   * Detach the Style Sheet and remove it from the registry.
   */

/**
   * Execute plugins, update rule props.
   */

/**
   * Generate a new CSS rule and replace the existing one.
   *
   * Only used for some old browsers because they can't set a selector.
   */

/**
   * Generates a CSS string.
   */

/**
   * Get a rule by name.
   */

/**
   * Get a rule.
   */

/**
   * Get all rules elements.
   */

/**
   * Get index of a CSS Rule.
   */

/**
   * Get index of a rule.
   */

/**
   * Get or set a style property.
   */

/**
   * Inject CSS string into element.
   */

/**
   * Insert RuleList into an element.
   */

/**
   * Insert a rule into element.
   */

/**
   * Insert rule into the StyleSheet
   */

/**
   * Insert style element into render tree.
   */

/**
   * Prepares various options, applies plugins.
   * Should not be used twice on the same instance, because there is no plugins
   * deduplication logic.
   */

/**
   * Register a Style Sheet.
   */

/**
   * Register a plugin.
   */

/**
   * Register a rule in `.map`, `.classes` and `.keyframes` maps.
   */

/**
   * Register plugin. Passed function will be invoked with a rule instance.
   */

/**
   * Remove a Style Sheet.
   */

/**
   * Remove renderable from render tree.
   */

/**
   * Remove style element from render tree.
   */

/**
   * Reset the registry.
   */

/**
   * Returns JSON representation of the rule.
   * Fallbacks are not supported.
   * Useful for inline styles.
   */

/**
   * Run `onProcessRule()` plugins on every rule.
   */

/**
   * Set selector string.
   * Attention: use this with caution. Most browsers didn't implement
   * selectorText setter, so this may result in rerendering of entire Style Sheet.
   */

/**
   * This will create a new function if the ref props change and are defined.
   * This means react will call the old forkRef with `null` and the new forkRef
   * with the ref. Cleanup naturally emerges from this behavior
   */

/**
   * Unregister a rule.
   */

/**
   * Update the function values with a new data.
   */

/**
   * Updates a single rule.
   */

/**
   * forwardRef creates a new interim component, which we'll take advantage of
   * instead of extending ParentComponent to create _another_ interim class
   */

/**
  mixin-deep; https://github.com/jonschlinkert/mixin-deep
  Inlined such that it will be consistently transpiled to an IE-compatible syntax.

  The MIT License (MIT)

  Copyright (c) 2014-present, Jon Schlinkert.

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
*/

/**
 * @ignore - internal component.
 * The component originates from https://github.com/STORIS/react-scrollbar-size.
 * It has been moved into the core in order to minimize the bundle size.
 */

/**
 * @ignore - internal component.
 */

/**
 * @param {string|Array} props
 * @param {object} param
 * @param {string} param.prop
 * @param {number} param.duration
 * @param {string} param.easing
 * @param {number} param.delay
 */

/**
 * @see @link{https://material.io/design/typography/the-type-system.html}
 * @see @link{https://material.io/design/typography/understanding-typography.html}
 */

/**
 * A <Link> wrapper that knows if it's "active" or not.
 */

/**
 * A better abstraction over CSS.
 *
 * @copyright Oleg Isonen (Slobodskoi) / Isonen 2014-present
 * @website https://github.com/cssinjs/jss
 * @license MIT
 */

/**
 * Add unit to numeric values.
 */

/**
 * Add vendor prefix to a property name when needed.
 *
 * @api public
 */

/**
 * Allow camel cased property names by converting them back to dasherized.
 *
 * @param {Rule} rule
 */

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */

/**
 * Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type
 *
 * Types of scrollLeft, assiming scrollWidth=100 and direction is rtl.
 *
 * Browser        | Type          | <- Most Left | Most Right -> | Initial
 * -------------- | ------------- | ------------ | ------------- | -------
 * WebKit         | default       | 0            | 100           | 100
 * Firefox/Opera  | negative      | -100         | 0             | 0
 * IE/Edge        | reverse       | 100          | 0             | 0
 */

/**
 * Calculates the contrast ratio between two colors.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 *
 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} A contrast ratio value in the range 0 - 21.
 */

/**
 * Clones the object and adds a camel cased property version.
 */

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */

/**
 * Convenience function for joining strings to form className chains
 */

/**
 * Convert camel cased property names to dash separated.
 *
 * @param {Object} style
 * @return {Object}
 */

/**
 * Convert dash separated strings to camel-cased.
 *
 * @param {String} str
 * @return {String}
 * @api private
 */

/**
 * Convert dash separated strings to pascal cased.
 *
 * @param {String} str
 * @return {String}
 * @api private
 */

/**
 * Convert nested rules to separate, remove them from original styles.
 *
 * @param {Rule} rule
 * @api public
 */

/**
 * Converts a Rule to CSS string.
 */

/**
 * Converts a color from CSS hex format to CSS rgb format.
 *
 * @param {string} color - Hex color, i.e. #nnn or #nnnnnn
 * @returns {string} A CSS rgb color string
 */

/**
 * Converts a color from hsl format to rgb format.
 *
 * @param {string} color - HSL color values
 * @returns {string} rgb color values
 */

/**
 * Converts a color object with type and values to a string.
 *
 * @param {object} color - Decomposed color
 * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'
 * @param {array} color.values - [n,n,n] or [n,n,n,n]
 * @returns {string} A CSS color string
 */

/**
 * Converts array values to string.
 *
 * `margin: [['5px', '10px']]` > `margin: 5px 10px;`
 * `border: ['1px', '2px']` > `border: 1px, 2px;`
 * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`
 * `color: ['red', !important]` > `color: red !important;`
 */

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */

/**
 * Create a rule instance.
 */

/**
 * Create an error file out of errors.md for development and a simple web link to the full errors
 * in production mode.
 */

/**
 * Creates a history object that stores locations in memory.
 */

/**
 * Creates a history object that uses the HTML5 history API including
 * pushState, replaceState, and the popstate event.
 */

/**
 * Darken or lighten a color, depending on its luminance.
 * Light colors are darkened, dark colors are lightened.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

/**
 * Darkens a color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */

/**
 * Export a constant indicating if this browser has CSSTOM support.
 * https://developers.google.com/web/updates/2018/03/cssom
 */

/**
 * Expose `pathToRegexp`.
 */

/**
 * Expose `repeat`
 */

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */

/**
 * Expose a method for transforming tokens into the path function.
 */

/**
 * Extracts a styles object with only props that contain function values.
 */

/**
 * Find a comment with "jss" inside.
 */

/**
 * Find a node before which we can insert the sheet.
 */

/**
 * Find attached sheet with an index higher than the passed one.
 */

/**
 * Find attached sheet with the highest index.
 */

/**
 * Get a style property value.
 */

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */

/**
 * Gets the `head` element upon the first call and caches it.
 * We assume it can't be null.
 */

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */

/**
 * If at any point a user clicks with a pointing device, ensure that we change
 * the modality away from keyboard.
 * This avoids the situation where a user presses a key on an already focused
 * element, and then clicks on a different element, focusing it with a
 * pointing device, while we still think we're in keyboard modality.
 */

/**
 * Indent a string.
 * http://jsperf.com/array-join-vs-for
 */

/**
 * Insert style element into the DOM.
 */

/**
 * It's falsish not falsy because 0 is allowed.
 */

/**
 * Keep track of our keyboard modality state with `hadKeyboardEvent`.
 * If the most recent user interaction was via the keyboard;
 * and the key press did not include a meta, alt/option, or control key;
 * then the modality is keyboard. Otherwise, the modality is not keyboard.
 * @param {KeyboardEvent} event
 */

/**
 * Lightens a color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

/**
 * MIT License
 *
 * Copyright (c) 2016 Sultan Tarimo
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/**
 * Naive, simple plugin to match inline nodes without attributes
 * This allows say <strong>foo</strong>, but not <strong class="very">foo</strong>
 * For proper HTML support, you'll want a different plugin
 **/

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */

/**
 * Private module reserved for @material-ui/x packages.
 */

/**
 * Public API for generating a URL pathname from a path and parameters.
 */

/**
 * Public API for matching a URL pathname to a path.
 */

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */

/**
 * Read jss nonce setting from the page if the user has set it.
 */

/**
 * Recursive deep style passing function
 */

/**
 * Remove a style property.
 */

/**
 * Repeat the given `string` the specified `number`
 * of times.
 *
 * **Example:**
 *
 * ```js
 * var repeat = require('repeat-string');
 * repeat('A', 5);
 * //=> AAAAA
 * ```
 *
 * @param {String} `string` The string to repeat
 * @param {Number} `number` The number of times to repeat the string
 * @return {String} Repeated string
 * @api public
 */

/**
 * Replaces the letter with the capital letter
 *
 * @param {String} match
 * @param {String} c
 * @return {String}
 * @api private
 */

/**
 * Results cache
 */

/**
 * Returns a number whose value is limited to the given range.
 *
 * @param {number} value The value to be clamped
 * @param {number} min The lower boundary of the output range
 * @param {number} max The upper boundary of the output range
 * @returns {number} A number in the range [min, max]
 */

/**
 * Returns an object with the type and values of a color.
 *
 * Note: Does not support rgb % values.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {object} - A MUI color object: {type: string, values: number[]}
 */

/**
 * Returns prefixed value if needed. Returns `false` if value is not supported.
 *
 * @param {String} property
 * @param {String} value
 * @return {String|Boolean}
 * @api public
 */

/**
 * Returns prefixed value transition/transform if needed.
 *
 * @param {String} match
 * @param {String} p1
 * @param {String} p2
 * @return {String}
 * @api private
 */

/**
 * Returns true if a given popstate event is an extraneous WebKit event.
 * Accounts for the fact that Chrome on iOS fires real popstate events
 * containing undefined state when pressing the back button.
 */

/**
 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
 *
 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
 */

/**
 * Set a style property.
 */

/**
 * Set the absolute transparency of a color.
 * Any existing alpha values are overwritten.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} value - value to set the alpha channel to in the range 0 -1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

/**
 * Set the selector.
 */

/**
 * SheetsManager is like a WeakMap which is designed to count StyleSheet
 * instances and attach/detach automatically.
 */

/**
 * Should be called if a blur event is fired on a focus-visible element
 */

/**
 * Sort props by length.
 */

/**
 * TODO: Explore using CSS.escape when it becomes more available
 * in evergreen browsers.
 */

/**
 * Test if a keyframe at-rule should be prefixed or not
 *
 * @param {String} vendor prefix string for the current browser.
 * @return {String}
 * @api public
 */

/**
 * Test if a property is supported, returns supported property with vendor
 * prefix if required. Returns `false` if not supported.
 *
 * @param {String} prop dash separated
 * @param {Object} [options]
 * @return {String|Boolean}
 * @api public
 */

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */

/**
 * The public API for a <Router> that stores location in memory.
 */

/**
 * The public API for a <Router> that uses HTML5 history.
 */

/**
 * The public API for a <Router> that uses window.location.hash.
 */

/**
 * The public API for matching a single path and rendering.
 */

/**
 * The public API for navigating programmatically with a component.
 */

/**
 * The public API for prompting the user before navigating away from a screen.
 */

/**
 * The public API for rendering a history-aware <a>.
 */

/**
 * The public API for rendering the first <Route> that matches.
 */

/**
 * The public top-level API for a "static" <Router>, so-called because it
 * can't actually change the current location. Instead, it just records
 * location changes in a context object. Useful mainly in testing and
 * server-rendering scenarios.
 */

/**
 * The relative brightness of any point in a color space,
 * normalized to 0 for darkest black and 1 for lightest white.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} The relative brightness of the color in the range 0 - 1
 */

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */

/**
 * Unwraps an object of queries, if it was originally passed as a single query.
 */

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

/**
 * Vendor prefix string for the current browser.
 *
 * @type {{js: String, css: String, vendor: String, browser: String}}
 * @api public
 */

/**
 * WARNING: Don't import this directly.
 * Use `MuiError` from `@material-ui/utils/macros/MuiError.macro` instead.
 * @param {number} code
 */

/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */

/**
 * Wraps a single query in an object. This is used to provide backward compatibility with
 * the old `query` prop (as opposed to `queries`). If only a single query is passed, the object
 * will be unpacked down the line, but this allows our internals to assume an object of queries
 * at all times.
 */

/**
 * https://github.com/facebook/react/issues/14099#issuecomment-440013892
 *
 * @param {function} fn
 */

/**
 * inlined version of
 * https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/hyphenateStyleName.js
 */

/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @type {!Array} */

/** @type {!Object} */

/** @type {string} */

/** Check whether a name is known for caching */

/** Clears all cached names for a given group ID */

/** Clears all rules for a given group ID */

/** Clears the entire tag which deletes all rules but not its names */

/** Find last style element if any inside target */

/** Insert new rules which also marks the name as known */

/** Lazily initialises a GroupedTag for when it's actually needed */

/** Mark a group's name as known for caching */

/** Outputs the current sheet as a CSS string with markers for SSR */

/** Register a group ID to give it an index */

/************************************************************************/

/******/

/***/

/*.*/

/*/*/

/*return*/

/*yield*/

//

// 

//           'Material-UI: Theme.mixins.gutters() is deprecated.',

//           'You can use the source of the mixin directly:',

//           `

//         [

//         ].join('\n'),

//         false,

//       );

//       warning(

//   paddingLeft: theme.spacing(3),

//   paddingRight: theme.spacing(3),

//  ';'

// "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]

// "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]

// "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]

// "Software"), to deal in the Software without restriction, including

// "the first render", or "memo dropped the value"

// $FlowFixMe

// $FlowFixMe this is a forced cast to merge it StyledComponentWrapperProperties

// $FlowFixMe: Not typed to avoid destructuring arguments

// $FlowIgnore

// (so also no leading and trailing slashes - it does not distinguish

// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,

// 127.0.0.1/8 is considered localhost for IPv4.

// @font-face, @page

// @import

// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805

// @see https://github.com/webpack-contrib/style-loader/issues/177

// @todo find a better way than this

// A collection of common colors.

// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.

// A hashchange doesn't always == location change.

// A strict capitalization should uppercase the first letter of each word a the sentence.

// ASCII digits.

// ASCII hex digits.

// About 1.5x faster than the two-arg version of Array#splice()

// Adapted from convert-source-map (MIT)

// Add !important, because it was ignored.

// Add `fn` to the list.

// Add iOS momentum scrolling.

// Add px to dimension features

// Add some additional logging to localhost, pointing developers to the

// Alignment properties

// All non-terminated numeric entities are not rendered, and trigger a

// Allow empty style in this case, because properties will be added dynamically.

// Already transformed.

// An ampersand followed by anything unknown, and not terminated, is

// An empty (possible) entity is valid, unless it’s numeric (thus an

// Animation name ref replacer.

// Animation properties

// Apply babel-plugin-transform-template-literals in loose mode

// Apply fallbacks first.

// Array syntax {fallbacks: [{prop: value}]}

// At this point the path should be resolved to a full absolute path, but

// Avoid Edge bug where empty style elements don't create sheets

// Avoid Firefox quirk where the style element might not have a sheet property

// Avoid IE11 quirk where cssText is inaccessible on some invalid rules

// Avoid failures from read-only properties

// Avoid prototype pollution

// Avoids applying same plugin twice, at least based on ref.

// Background properties

// Backward compatibility, to remove in v5.

// Based on https://stackoverflow.com/a/24394376

// Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59

// Border Properties

// Bundle may contain multiple JSS versions at the same time. In order to identify

// By explicitly using `prop-types` you are opting into new production behavior.

// CONCATENATED MODULE: ./src/index.tsx

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@babel/runtime/helpers/esm/createClass.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@babel/runtime/helpers/esm/defineProperty.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@babel/runtime/helpers/esm/extends.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@babel/runtime/helpers/esm/slicedToArray.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@emotion/memoize/dist/memoize.browser.esm.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/ButtonBase/Ripple.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/ButtonBase/TouchRipple.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/Paper/Paper.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/Tabs/ScrollbarSize.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/Tabs/TabIndicator.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/Tabs/Tabs.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/colors/common.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/internal/animate.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/styles/colorManipulator.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/styles/createMixins.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/styles/createMuiTheme.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/styles/createPalette.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/styles/createTypography.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/styles/defaultTheme.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/styles/shadows.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/styles/transitions.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/styles/withStyles.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/styles/zIndex.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/utils/capitalize.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/utils/createSvgIcon.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/utils/debounce.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/utils/ownerDocument.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/utils/ownerWindow.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/utils/scrollLeft.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/utils/setRef.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/utils/useEventCallback.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/utils/useForkRef.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/core/esm/utils/useIsFocusVisible.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/styles/esm/StylesProvider/StylesProvider.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/styles/esm/ThemeProvider/nested.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/styles/esm/getStylesCreator/getStylesCreator.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/styles/esm/getStylesCreator/noopTheme.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/styles/esm/getThemeProps/getThemeProps.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/styles/esm/jssPreset/jssPreset.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/styles/esm/makeStyles/makeStyles.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/styles/esm/makeStyles/multiKeyStore.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/styles/esm/mergeClasses/mergeClasses.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/styles/esm/useTheme/useTheme.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/styles/esm/withStyles/withStyles.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/system/esm/breakpoints.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/system/esm/memoize.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/system/esm/merge.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/system/esm/spacing.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/utils/esm/deepmerge.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@material-ui/utils/esm/formatMuiErrorMessage.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/clsx/dist/clsx.m.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/css-vendor/dist/css-vendor.esm.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/history/esm/history.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/hyphenate-style-name/index.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/is-in-browser/dist/module.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/jss-plugin-default-unit/dist/jss-plugin-default-unit.esm.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/jss-plugin-props-sort/dist/jss-plugin-props-sort.esm.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/jss-plugin-rule-value-function/dist/jss-plugin-rule-value-function.esm.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/jss/dist/jss.esm.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/react-router-dom/esm/react-router-dom.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/react-transition-group/esm/TransitionGroup.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/react-transition-group/esm/TransitionGroupContext.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/react-transition-group/esm/utils/ChildMapping.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/resolve-pathname/esm/resolve-pathname.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/tiny-invariant/dist/tiny-invariant.esm.js

// CONCATENATED MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/value-equal/esm/value-equal.js

// Cache for the finalized classes value.

// Cache for the last used classes prop pointer.

// Cache for the last used rendered classes pointer.

// Cache the current point.

// Can be sync or async; return a promise, receive a completion handler, return

// Check if 'transition' or 'transform' natively supported in browser.

// Check if `character` is disallowed.

// Check if `character` is outside the permissible unicode range.

// Check if key is already down to avoid repeats being counted as multiple activations

// Check if module is in cache

// Check if the given character code, or the character code at the first

// Check if the service worker can be found. If it can't reload the page.

// Check if we can match a legacy named reference.

// Clone values.

// Column properties

// Compile all the patterns before compilation.

// Compile all the tokens into regexps.

// Consistency between these values is important.

// Construct a new VMessage.

// Construct a state `toggler`: a function which inverses `property` in context

// Constructor accepting a single argument, which itself is an `arguments`

// Constructor accepting variadic arguments.

// Copy non-nully input into values.

// Copyright Joyent, Inc. and other Node contributors.

// Correctly detect the Edge browser.

// Correctly detect the Safari browser.

// Corresponds to 10 frames at 60 Hz.

// Create a custom constructor which can be modified without affecting the

// Create a new module (and put it into the cache)

// Create cache key for current value.

// Create new middleware.

// Currently works in chrome only.

// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR

// DCE check should happen before ReactDOM bundle executes so that

// Default JSS instance.

// Delay the execution of the ripple effect.

// Details: https://github.com/ReactTraining/react-media/issues/81

// Detect buggy property enumeration order in older V8 versions.

// DevTools can report bad minification during injection.

// Disable link interactions

// Disable the vendor prefixer server-side, it does nothing.

// Disabled text have even lower visual prominence.

// Does nothing when `queue` is empty.

// Don't do anything if the value has not changed.

// Don't insert rule directly if there is no stringified version yet.

// Don't pass through non HTML tags through to HTML elements

// E.g. rules inside of @media container

// E.g., shift from Red 500 to Red 300 or Red 700.

// ESM COMPAT FLAG

// EXTERNAL MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js

// EXTERNAL MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js

// EXTERNAL MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js

// EXTERNAL MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@babel/runtime/helpers/esm/iterableToArray.js

// EXTERNAL MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js

// EXTERNAL MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@babel/runtime/helpers/esm/typeof.js

// EXTERNAL MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js

// EXTERNAL MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js

// EXTERNAL MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/mini-create-react-context/dist/esm/index.js

// EXTERNAL MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/prop-types/index.js

// EXTERNAL MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/react-router/node_modules/path-to-regexp/index.js

// EXTERNAL MODULE: /home/noshiro/repos/noshiro_pf/mono/node_modules/react/index.js

// Empty object will remove all currently defined props

// Enable rule without name for inline styles.

// Ensure service worker exists, and that we really are getting a JS file.

// Ensure that no displayName can lead to duplicate componentIds

// Ensure the algorithm walks over the first character and the end (inclusive).

// Ensure the hash is encoded properly before doing anything else.

// Ensure we always have a properly-encoded hash.

// Execute callback

// Execute the module function

// Export javascript style and css style vendor prefixes.

// Exports

// Extend the base object

// Factory to get the `offset` for a line and column-based `position` in the

// Factory to get the line and column-based `position` for `offset` in the bound

// Finally, add the keys which didn't appear before any key in `next`

// Find a plugin for current prefix property.

// Find a position.

// Firefox

// Firefox can even throw an error for invalid properties, e.g., "0".

// First eat the queued characters as normal text, then eat an entity.

// Fix for Edge

// Fix for https://github.com/facebook/react/issues/7769

// Flag the module as loaded

// Flush `queue` (normal text).

// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves

// Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations

// Font and text properties

// For Node v0.10 support. Remove this eventually.

// For each key of `next`, the list of keys to insert before that key in

// For instance with the first breakpoint xs: [xs, sm[.

// For old IE

// For server-side rendering.

// For some reason the animation is broken on Mobile Chrome if the size if even.

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>

// Found it!

// Generate a rich color object.

// Get a function to be used for $ref replacement.

// Get current position.

// Get indices of line-breaks in `value`.

// Get markdown escapes.

// Get the `offset` for a line and column-based `position` in the bound

// Get the line and column-based `position` for `offset` in the bound indices.

// Global index counter to preserve source order.

// Grid properties

// HTMLStyleElement needs fixing https://github.com/facebook/flow/issues/2696

// Handle a deep copy situation

// Handle anything other than an ampersand, including newlines and EOF.

// Handle rules like @font-face, which can have multiple styles in an array

// Handling array of media queries

// Hardcode test to convert "flex" to "-ms-flexbox" for IE10.

// Having an active flag to make sure the listener is not called

// Hide dimensionless scrollbar on MacOS

// IE 11 sometimes throws when accessing window.history.state

// IE can even throw an error in some cases, for e.g. style.content = 'bar'.

// IE keeps the CSSStyleSheet after style node has been reattached,

// IE may throw if property is unknown.

// Idempotent

// If 'transition' or 'transition-property' property.

// If `includeNodeIndex` is true, pass node index info to all non-tag renderers

// If props.defaultMatches has been set, ensure we trigger a two-pass render.

// If selector setter is not implemented, rerender the rule.

// If so, we cache that as the last viable named reference.

// If the decoded string is equal to the input, the entity was not valid

// If the path exists, push it onto the end.

// If the previous character was a newline.

// If the reference is not terminated, warn.

// If theres something after an entity name which is not known, cap

// If this is our first dot, mark it as the start of our extension

// If user specifies an insertion point and it can't be found in the document -

// If we could not find a reference, queue the checked characters (as

// If we don't see a visibility change within 100ms, it's probably a

// If we have a fn values map, it is a rule with function values.

// If we have a style function, the entire rule is dynamic and style object

// If we reached a path separator that was not part of a set of path

// If you want your app to work offline and load faster, you can change

// Ignore already escaped sequences.

// Ignore extraneous popstate events in WebKit.

// Ignore this change; we already setState in push/replace.

// Important!

// In case previous insertion fails, passed index might be wrong

// In early versions of node, obj['__proto__'] is buggy when obj has

// In non-strict mode we allow a slash at the end of match. If the path to

// In order to preserve the right order, we need to queue all `.addRule` calls,

// In the case the element node is external and it is already in the DOM.

// In the documentation, we are using `autoprefixer` to solve this problem.

// Inherit from `Error#`.

// Initial children should all be entering, dependent on appear

// Inject custom styles

// Instead of calling this.updateMatches, we manually set the initial state to prevent

// Instead, we just default to 0 for keys we don't know.

// Instead, we just default to 0 for paths we don't know.

// Invoke `done` with one value.

// Invoke `next`, only once.

// Is a global static MUI style?

// Is not localhost. Just register service worker

// It can't be configured as it's used statically for propTypes.

// It contains the same rule registered by name and by selector.

// It does not modify the component passed to it;

// It is a problem though when a parent passes a className

// It is a rules container like for e.g. ConditionalRule.

// It is a string or a number as a string like '1'.

// It is an at-rule and it has no instance.

// It seems to kick-off the source order specificity algorithm.

// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.

// It will be inserted all together when .attach is called.

// It's a getter.

// It's inspired by

// It's much safer to use the same counter everywhere.

// It's not a shorthand notation.

// Iterate over the tokens and create our regexp string.

// Keep in mind that @media is inclusive by the CSS specification.

// Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.

// Key might contain a unique suffix in case the `name` passed by user was duplicate.

// Keyboard accessibility for non interactive elements

// Keyboard navigation assumes that [role="tab"] are siblings

// Keyframes is already prefixed. e.g. key = '@-webkit-keyframes a'

// Lazily create the ref replacer function just once for

// Learn more about service workers: https://bit.ly/CRA-PWA

// Link a style sheet with a component.

// Load entry module and return exports

// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN

// Macro invoked before each entity and at the end of `value`.

// Margin properties

// Mask properties

// Match Express-style parameters and un-named parameters with a prefix

// Match any characters still remaining.

// Match escaped characters that would otherwise appear in future matches.

// Material Design layouts are visually balanced. Most measurements align to an 8dp grid applied, which aligns both spacing and the overall layout.

// Message properties.

// Mimic the behavior of DOM histories by

// Module

// Motion properties

// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,

// NOTE: It's easier to collect rules and have the marker

// NOTE: This does not clear the names, since it's only used during SSR

// NOTE: This registers the componentId, which ensures a consistent order

// NOTE: can't memoize this

// NOTE: the non-hooks version only subscribes to this when !componentStyle.isStatic,

// Named entity.

// Never move original objects, clone them

// Next or done.

// No characters are consumed, and nothing is returned.

// No need to render an empty rule.

// No service worker found. Probably a different app. Reload the page.

// Node.

// Normalize the path

// Not a character reference.

// Not existing properties.

// Not own constructor property must be Object

// Note: We cannot invoke `Error` on the created context, as that adds readonly

// Numerical entity.

// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF

// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

// Object syntax {fallbacks: {prop: value}}

// Object.prototype.constructor. Remove this eventually

// Object.prototype.hasOwnProperty.call

// Objects enter the screen at full velocity from off-screen and

// Objects leave the screen at full velocity. They do not decelerate when off-screen.

// Once tested, result is cached. It gives us up to 70% perf boost.

// One-arg form: push(location)

// Only convert the first 3 values to int (i.e. not alpha)

// Only deal with non-null/undefined values

// Options has been already created, now we only increase index.

// Order is important, because we can't use insertRule API if style element is not attached.

// Order matters. We need to check Webkit the last one because

// Original styles object.

// Otherwise insert after the last attached.

// Otherwise, if either of them == null they are not equal.

// Our service worker won't work if PUBLIC_URL is on a different origin

// Outline properties

// Own properties are enumerated firstly, so to speed up,

// Padding properties

// Parse entities.

// Parse the number.

// Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior

// Permission is hereby granted, free of charge, to any person obtaining a

// Perspective properties

// Place conditional right after the parent rule to ensure right ordering.

// Plugins can create rules.

// Point.

// Position properties

// Position.

// Preact uses an empty array as children by

// Prefill cache with known css properties to reduce amount of

// Prepare the ripple effect.

// Prepend partial segment prefixes.

// Prevent never-ending loop

// Prevent padding issue with the Modal and fixed positioned AppBar.

// Prevent the app bar to be visible on each printed page.

// Properties that cannot be correctly detected using the

// Provide default props

// Provide the theme to the wrapped component.

// Public interface

// Push the current path onto the tokens.

// React 15 compat

// React v16.11 and below

// React v16.12 and above

// Recurse if we're merging plain objects or arrays

// Rehydrate componentId to group index mapping

// Rehydrate names and rules

// Remove cache for benchmark tests or return property from the cache.

// Remove cache for benchmark tests or return value from cache.

// Remove final newline characters from `value`.

// Remove props.

// Remove the margin in Safari

// Remove the padding in Firefox

// Renderable is defined if StyleSheet option `link` is true.

// Replace all $refs.

// Replace all & by the parent or prefix & with the parent.

// Reset

// Reset browser default style.

// Reset default value

// Reset styles for current property.

// Resolve default props, code borrow from React source.

// Resolve incomplete/relative pathname relative to current location.

// Return already prefixed value without prefixing.

// Return custom CSS variable without prefixing.

// Return false from a transition hook to cancel the transition.

// Return false if setter was not successful.

// Return false if value not supported.

// Return the exports of the module

// Return the modified object

// Return the reduced nodes, and any possible warnings.

// Returns a function which generates unique class names based on counters.

// Ripple is used for user feedback (e.g. click or press) so we want to apply styles with the highest priority

// Rules registry for access by .get() method.

// Run `fns`.  Last argument must be a completion handler.

// Run the next `fn`, if any.

// SVG

// SVG-related properties

// Safari doesn't clear up listener with removeListener

// Secondary text.

// See https://github.com/ReactTraining/history/pull/289

// Service worker found. Proceed as normal.

// Shadow properties

// Shorthands for all valid HTML Elements

// Skip empty and invalid entries

// Smaller components, such as icons and type, can align to a 4dp grid.

// So copying it here would give us the same result in the wrapper as well.

// So our solution is to render sheets them in the reverse order child->sheet, so

// So we don't have to use the `withTheme()` Higher-order Component.

// So we take precedent over the style of a native <a /> element.

// Some entities do not require the closing semicolon (`&not` - for instance),

// Some random properties

// Some versions of I.E. have different rules for clearTimeout vs setTimeout

// Sorted ASC by size. That's important.

// Source from https://github.com/alitaheri/normalize-scroll-left

// Special case to return head of iframe instead of iframe itself

// String.prototype.substr - negative index don't work in IE8

// Stringify the number.

// StyleSheet of the child has a higher specificity, because of the source order.

// Subset of jss-preset-default with only the plugins the Material-UI components are using.

// Support CSSTOM.

// Support space separated values via `[['5px', '10px']]`.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS

// TODO v5: consider to make it private

// TODO v5: remove

// TODO: If another transition starts while we're still confirming

// TODO: We could probably make this more reliable by

// Takes a background color and returns the text color that maximizes the contrast.

// Test for A's keys different from B.

// Test for IE <= 9 as proposed by Browserhacks

// Test for strict equality first.

// Test prefixed value.

// Test value as it is.

// Tests for existence of standard globals is to allow style-loader

// Text hints.

// Thanks to ReactDOMFactories for this handy list!

// The (right-most) trimmed path component is exactly '..'

// The _isBuffer check is for Safari 5-7 support, because it's missing

// The above copyright notice and this permission notice shall be included

// The background color of a disabled action.

// The background colors used to style the surfaces.

// The behaviour depends on the identity of the next character.

// The behaviour further depends on the next character.

// The breakpoint **start** at this value.

// The by `toggler` returned function restores that value.

// The color of a disabled action.

// The color of a selected action.

// The color of an active action like an icon button.

// The color of an hovered action.

// The color used to divide different elements.

// The colors used to indicate the successful completion of an action that user triggered.

// The colors used to present information to the user that is neutral and not necessarily important.

// The colors used to represent interface elements that the user should be made aware of.

// The colors used to represent potentially dangerous actions or important messages.

// The colors used to represent primary interface elements for a user.

// The colors used to represent secondary interface elements for a user.

// The colors used to style the action elements.

// The colors used to style the text.

// The counter-based approach doesn't tolerate any mistake.

// The grey colors.

// The module cache

// The most important text.

// The palette type, can be light or dark.

// The require function

// The sharp curve is used by objects that may return to the screen at any time.

// The touch interaction occurs too quickly.

// The wrapper receives only user supplied props, which could be a subset of

// There is no sheet when the renderer is used from a standalone StyleRule.

// There was no camel case in place

// This allows the user to escape special characters that won't transform.

// This ensures we do not need to walk backwards later.

// This implementation is based heavily on node's url.parse

// This is a bit of a hack. We have to start listening for location

// This is not an error, either.

// This is possible because we can be certain neither newlines nor

// This is running on localhost. Let's check if a service worker still exists or not.

// This is the most common easing curve.

// This is useful for SSR with mismatching defaultMatches vs actual matches from window.matchMedia

// This lets the app load faster on subsequent visits in production, and gives

// This optional code is used to register a service worker.

// This way, we can get a performance boost.

// This will throw an exception if access to iframe is blocked

// This works if eval is allowed (see CSP)

// This works if the window reference is available

// This works in non-strict mode

// To deprecate in v4.1

// To detect a tab/window switch, we look for a blur event followed

// To learn more about the benefits of this model and instructions on how to

// Touche devices

// Tracks if an error is passed, too.

// Tracks if either the rendered classes or classes prop has changed,

// Transform properties

// Transition properties

// Trigger a warning when the parsed number is disallowed, and replace

// Trigger a warning when the parsed number is prohibited, and replace

// Trigger a warning when the parsed number should not be used.

// Truncate at 3 digits

// Try to find a comment placeholder if registry is empty.

// Try to insert before the next higher sheet.

// Try webkit fallback.

// Two-arg form: push(path, state)

// USE OR OTHER DEALINGS IN THE SOFTWARE.

// Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/

// Update and add props.

// Use a negative lookahead to match only capturing groups.

// Use a singleton or the provided one by the context.

// Use the same logic as

// Used by `getContrastText()` to maximize the contrast between

// Used by the functions below to shift a color's luminance by approximately

// Used https://github.com/thinkloop/multi-key-cache as inspiration

// Used to avoid issues with jss-plugin-expand integration.

// Used to ensure correct rules order.

// Used to filter out mouse emulated events on mobile.

// Uses a mixed approach for backwards-compatibility, as ext behavior changed

// Using a hash computation over an array iteration could be faster, but with only 28 items,

// Utility assert each property in `test` is represented in `node`, and each

// Utility to convert a string into a function which checks a given node’s type

// Utility to return true.

// Value is empty and wasn't defined before.

// Value with a vendor prefix.

// Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss

// Verify that the code above has been dead code eliminated (DCE'd).

// Visit a single node.

// Visit children in `parent`.

// Warning types.

// We are going to remove this value.

// We can use a shorthand class name, we never use the keys to style the components.

// We can't add rules to a detached style node.

// We can't use window.location.hash here because it's not

// We cannot tell if a hashchange was caused by a PUSH, so we'd

// We cannot tell if a hashchange was caused by a REPLACE, so we'd

// We create the style sheet during the creation of the component,

// We disable the focus ring for mouse, touch and keyboard users.

// We do this comparison to avoid unneeded `rule.prop()` calls, since we have the old `style` object here.

// We don't expect any of the above to throw, but better to be safe.

// We don't need to extract functions on each style update, since this can happen only once.

// We don't support function values inside of function rules.

// We don't want to display the ripple for touch scroll events.

// We have to check whether child is a composite component or not to decide should we

// We need to centralize the zIndex definitions as they work

// We need to clone array because if we modify the index somewhere else during a loop

// We need to do that only once.

// We need to extract function values from the declaration, so that we can keep core unaware of them.

// We need to render the container without children first.

// We need to reset the rule counter for SSR for each request.

// We need to run the plugins in case new `style` relies on syntax plugins.

// We need to save the original decl before creating the rule

// We need to use `force: true` because `rule.style` has been updated during onUpdate hook, so `rule.prop()` will not update the CSSOM rule.

// We only handle the first word.

// We rehydrate only once and use the sheet that is created first

// We rely on a new `style` ref in case it was mutated during onUpdate hook.

// We return undefined, instead of nothing here, so it's

// We saw a non-dot and non-path separator before our dot, so we should

// We saw a non-dot character immediately before the dot

// We saw the first non-path separator

// We saw the first non-path separator, mark this as the end of our

// We should not do anything if required serverside.

// We still want to show ripple effect.

// We test every property on vendor prefix requirement.

// We use React.Children.forEach instead of React.Children.toArray().find()

// We use a timer in order to only show the ripples for touch "click" like events.

// We use the same empty object to ref count the styles that don't need a theme object.

// We want only prefixable values here.

// We will redeploy the sheet once user will attach it.

// Well, this is quite the pickle.

// We’re not about to restart the pipeline again, so the only thing left

// When new generator function is created, rule counter is reset.

// When rendering in a static context,

// When rule is being stringified before selector was defined.

// When rules are inserted using `insertRule` API, after `sheet.detach().attach()`

// When terminated and number, parse as either hexadecimal or decimal.

// When there is no prior location and pathname is empty, set it to /

// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally

// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally

// Width and height properties

// Without it, IE will have a broken source order specificity if we

// Works with iframes and any node types.

// Wrap `fn`.

// Wrap `handleWarning`.

// Wrap to ensure clean parameters are given to `parse`.

// Write current value to cache.

// [::1] is the IPv6 localhost address.

// [theme.breakpoints.up('sm')]: {

// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.

// __webpack_public_path__

// `,

// `collapse(' \t\nbar \nbaz\t') // ' bar baz '`

// `fn` received a callback and invoked it (thus continuing the pipeline),

// `line` and `column` attributes on Safari 9, thus throwing and failing the

// `sourcePos` is true if the user wants source information (line/column info from markdown source)

// after the actual rules to simplify the rehydration

// after we removeListener.

// all SC-specific things should not be hoisted

// all nested rules within the sheet.

// ampersand followed by an octothorp).

// ampersands are included.

// and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54

// and optional suffixes. Matches appear as:

// are running

// as a a11y violation

// assume that the matching was incomplete

// at-rule

// backported and transplited with Babel, with backwards-compat fixes

// bad specificity issues may appear.

// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js

// based on its current value.

// because cache plugin needs to use it as a key to return a cached rule.

// best way to handle this.

// bound indices.

// browsers not implementing :focus-visible will throw a SyntaxError

// but later also threw an error.

// but since JS is single=threaded, we can rely on that to ensure

// but that'd be against the rules-of-hooks. We could be naughty and do it anyway as it

// but we can use a longhand property instead.

// by an alternative.

// cache prefill method.

// cached from whatever global is present so that test runners that stub it

// calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed

// calling setState, which could trigger an unnecessary second render

// causing a render after a cancelled POP.

// changes here in the constructor in case there are any <Redirect>s

// character, is a whitespace character.

// character, is a word character.

// character, is alphabetical.

// character, is alphanumerical.

// character, is decimal.

// character, is hexadecimal.

// check that this isn't another touchstart due to multitouch

// children are handled after the parents, so the order of style elements would be parent->child.

// component at different URLs.

// compose nested shouldForwardProp calls

// consistent across browsers - Firefox will pre-decode it!

// console.log('entering', key)

// console.log('leaving', key)

// console.log('unchanged', key)

// copy of this software and associated documentation files (the

// copy over the last transition props;

// cover common, quick use cases

// create a fake namespace object

// create a new object with ClientRect class props + scrollLeft

// css base code, injected by the css-loader

// data.

// default, so use null if that's the case.

// define __esModule on exports

// define getter function for harmony exports

// distribute, sublicense, and/or sell copies of the Software, and to permit

// don't break things.  But we need to wrap it in a try catch in case it is

// don't hoist over string (html) components

// due to cross-origin restrictions

// easier to handle this case. if(!global) { ...}

// empty string to avoid regexp issues

// eslint-disable-line new-cap

// eslint-disable-line no-alert

// eslint-disable-line no-new-wrappers

// eslint-disable-line react-hooks/exhaustive-deps

// eslint-disable-next-line

// eslint-disable-next-line @typescript-eslint/no-floating-promises

// eslint-disable-next-line complexity

// eslint-disable-next-line consistent-this

// eslint-disable-next-line func-names

// eslint-disable-next-line guard-for-in

// eslint-disable-next-line max-params, complexity

// eslint-disable-next-line no-param-reassign

// eslint-disable-next-line no-restricted-globals

// eslint-disable-next-line no-unused-vars

// eslint-disable-next-line prefer-destructuring

// eslint-disable-next-line prefer-rest-params

// eslint-disable-next-line prefer-spread

// eslint-disable-next-line react-hooks/rules-of-hooks

// existing tabs open on the page have been closed, since previously cached

// expose the module cache

// expose the modules object (__webpack_modules__)

// extension

// focusable events only

// fold the underlying StyledComponent rules up (implicit extend)

// fold the underlying StyledComponent target up since we folded the styles

// following conditions:

// for said string.

// for this component's styles compared to others

// force dynamic classnames if user-supplied stylis plugins are in use

// from what our page is served on. This might happen if a CDN is used to

// function because try/catches deoptimize in certain engines.

// functions are allowed to be static if they're just being

// g can still be undefined, but nothing to do about it...

// get a new location before the <Router> is mounted.

// getDefaultExport function for compatibility with non-harmony modules

// handle relative paths to be safe (might happen when process.cwd() fails)

// have a good chance at having a non-empty extension

// here because toArray adds keys to all child elements and we do not want

// http://davidwalsh.name/vendor-prefix

// http://fb.me/prop-types-in-prod

// http://jsperf.com/element-style-object-access-vs-plain-object

// https://bugs.chromium.org/p/v8/issues/detail?id=3056

// https://bugs.chromium.org/p/v8/issues/detail?id=4118

// https://caniuse.com/#search=appearance

// https://caniuse.com/#search=color-adjust

// https://caniuse.com/#search=mask

// https://caniuse.com/#search=text-orientation

// https://codesandbox.io/s/button-keyup-preventdefault-dn7f0

// https://github.com/amilajack/eslint-plugin-flowtype-errors/issues/133

// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js

// https://github.com/facebook/react/blob/15a8f031838a553e41c0b66eb1bcf1da8448104d/packages/react/src/ReactElement.js#L221

// https://material.io/design/layout/understanding-layout.html#usage

// https://stackoverflow.com/questions/41328728/force-casting-in-flow

// https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10

// if (Array.isArray(data)) return [];

// if (data == null) return [];

// if (typeof data !== 'object') return [];

// if clearTimeout wasn't available but was latter defined

// if last one is own, then all properties are own.

// if setTimeout wasn't available but was latter defined

// if the path is allowed to go above the root, restore leading ..s

// if the path tries to go above the root, `up` ends up > 0

// ignore everything but left clicks

// implementation from standard node.js 'util' module

// import a list of modules into the list

// in all copies or substantial portions of the Software.

// in case function rule returns a falsy value.

// in new Node.js versions, so only basename() above is backported here

// in non-ending mode, where "/test/" shouldn't match "/test//route".

// indices.

// insert rules after we insert the style tag.

// instead, it returns a new component, with a `classes` property.

// invalid.

// is that other hash histories in the page will consider it a POP.

// is valid at the end of a path match, not in the middle. This is important

// istanbul ignore if

// istanbul ignore next

// it offline capabilities. However, it also means that developers (and users)

// it's doesn't worth the bundle size.

// item hasn't changed transition states

// item is new (entering)

// item is old (exiting)

// keeping a list of keys we've seen in sessionStorage.

// keeping a list of paths we've seen in sessionStorage.

// left side of button is out of view

// like global values in the browser.

// looks like: data-styled.g11[id="idA"]{content:"nameA,"}

// loose mode is safe iff we're concatenating primitives

// match already ends with a slash, we remove it for consistency. The slash

// mode & 1: value is a module id, require it

// mode & 2: merge all properties of value into the ns

// mode & 4: return value when already ns object

// mode & 8|1: behave like require

// most basic recommended timing

// most browsers create a new CSSStyleSheet, except of all IEs.

// much of the code after this point will attempt to access properties of the node.position

// must be no slashes, empty elements, or device names (c:\) in the array

// name and withTheme are invariant in the outer scope

// new values and errors.

// no consecutive self refs (.b.b); that is a precedence boost and treated differently

// no need for validFocusTarget check. the user does that by attaching it to

// node is `undefined` when user provided `nodeRef` prop

// nodes generated by plugins may not have position data

// normal characters), and move the pointer to their end.

// normalized

// object.

// old school shim for old browsers

// on the initial render. If there are, they will replace/push when

// onClick prevented default

// opt-in, read https://bit.ly/CRA-PWA

// original class.

// other vendors use to add Webkit prefixes to some properties

// otherwise we will only clear a single timer when unmounting while two

// paddingLeft: theme.spacing(2),

// paddingRight: theme.spacing(2),

// parsing and the entity to decode was not a semicolon (`&semi;`), we can

// path component

// path.normalize(path)

// path.relative(from, to)

// path.resolve([from ...], to)

// persons to whom the Software is furnished to do so, subject to the

// posix version

// properties we need to feature test at runtime.

// property

// provide `matches` as a prop or not

// purposes; this is especially important with usage of the css prop

// rapidly by a visibility change.

// rather setState here and ignore the hashchange. The caveat here

// react-transition-group#onExit

// react-transition-group#onExited

// recommended when something is entering screen

// recommended when something is leaving screen

// register() is not called by default.

// regular focus change.

// relative and absolute paths)

// requiring the generation of a new finalized classes object.

// rerender those rules.

// resolves . and .. elements in a path array with directory names there

// resources are updated in the background.

// rest params over-transpile for this case

// result in the string `¬it;`.  When we encounter a trailing semicolon after

// rethrow might be better if it's not the expected error but do we really

// return result;

// return the list of modules as css string

// returns [context, resolvedAttrs]

// right side of button is out of view

// run the map function here instead so that the key is the computed one

// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error

// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.

// see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose

// selector

// separators at the end of the string, stop now

// serve assets; see https://github.com/facebook/create-react-app/issues/2374

// service worker/PWA documentation.

// set the new location immediately.

// shim for using process in browser

// should be an immutable value, but behave for now.

// skip the boolean and the target

// slowly decelerate to a resting point.

// so that we can continuously output only new rules

// so we need to check if the `renderable` reference the right style sheet and not

// stylis has no concept of state to be passed to plugins

// swap previousItemKey with nextItemKey

// tags it will allow on a page

// that parent has a higher specificity.

// the actual props Component might receive due to merging with defaultProps.

// the background and the text.

// the combined list

// the current version with just one short number and use it for classes generation

// the first self-ref is always untouched

// the matched portion of the URL

// the module.

// the path used to match

// the previous one, we may end up in a weird state. Figure out the

// the reference.

// there should be at least two self-refs to do a replacement (.b > .b)

// these properties stay in sync with the current stylis run

// they mount and since cDM fires in children before parents, we may

// this is to be used in complex animations

// this static is used to preserve the cascade of static classes for component selector

// this will set the node position to the parent node's position to prevent errors

// though we might warn in the future about nested, interactive elements

// to do is to throw the thing instead.

// to is absolute

// to is relative, drop the filename

// to learn the context in which each easing should be used.

// to learn when use what timing

// to operate correctly into non-standard environments

// to trigger an unmount/remount for two <Route>s that render the same

// two indexes within its tonal palette.

// unregister() to register() below. Note this comes with some pitfalls.

// use 1 for the potential rounding error with browser zooms.

// used to get the classname of a nested styled component

// v8 likes predictible objects

// values are strictly equal.

// want to crash if focus-visible malfunctioned?

// warning.

// we don't care about invariant's own frame

// we end up with very hard-to-track-down side effects.

// we use a counter. Also it is more accurate, because user can manually reevaluate

// we use our own heuristic for those browsers

// webpackBootstrap

// when the listener is already waiting in the event queue.

// when when somebody has screwed with setTimeout but no I.E. maddness

// where resolvedAttrs is only the things injected by the attrs themselves

// whether or not we matched exactly

// which happen after the first `rules.add()` call.

// which leads to situations where parsing the assumed entity of &notit; will

// which needs to override any child's styles.

// will be returned from that function.

// will only see deployed updates on subsequent visits to a page, after all the

// with replacement character.

// without limitation the rights to use, copy, modify, merge, publish,

// wrapped in strict mode code which doesn't define any globals.  It's inside a

// },

// “Throw” a parse-error: a warning.

// ⚠️ sticky is not supported by IE 11.

//normal enviroments in sane situations
