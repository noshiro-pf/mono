{
  "name": "@noshiro/slack-app-functions",
  "version": "0.1.0",
  "private": false,
  "license": "MIT",
  "author": "noshiro",
  "type": "module",
  "scripts": {
    "build": "wireit",
    "clean": "run-p clean:**",
    "clean:build": "rimraf dist",
    "clean:eslintcache": "rimraf .eslintcache",
    "clean:firebase": "rimraf .firebase",
    "clean:wireit": "rimraf .wireit/**",
    "fb:config:get": "firebase functions:config:get",
    "fb:config:set": "firebase functions:config:set",
    "fb:config:setapikey": "firebase functions:config:set slack.apikey=",
    "fb:deploy": "firebase deploy --only functions",
    "fb:logs": "firebase functions:log",
    "fb:shell": "firebase functions:shell",
    "fb:showlog": "firebase functions:log",
    "fmt": "yarn zz:cmd:prettier .",
    "gi": "wireit",
    "lint": "wireit",
    "lint:fix": "wireit",
    "start:emulators": "firebase emulators:start --only functions",
    "start:shell": "yarn shell",
    "tsc": "yarn z:type-check:wireit",
    "tscw": "tsc --noEmit --watch",
    "type-check": "wireit",
    "watch": "tsc --watch --incremental --pretty --project tsconfig.json",
    "z:fb:deploy:impl": "firebase deploy",
    "z:fb:deploy:wireit": "wireit",
    "zz:cmd:eslint": "ESLINT_USE_FLAT_CONFIG=true eslint",
    "zz:cmd:eslint:src": "yarn zz:cmd:eslint --config ./eslint.config.js src --cache --cache-location ./.eslintcache",
    "zz:cmd:gi": "bash ../../../../scripts/bash/index_ts_generator.sh",
    "zz:cmd:prettier": "prettier --cache --cache-strategy content --ignore-path ../../../../.prettierignore --write"
  },
  "dependencies": {
    "@noshiro/io-ts": "*",
    "@noshiro/ts-utils": "*",
    "firebase-admin": "^11.11.1",
    "firebase-functions": "^3.21.0"
  },
  "devDependencies": {
    "@noshiro/eslint-utils": "*",
    "@noshiro/mono-scripts": "*",
    "@noshiro/ts-type-utils-no-stdlib": "*"
  },
  "engines": {
    "node": ">=16"
  },
  "wireit": {
    "build": {
      "command": "tsc --project tsconfig.json",
      "clean": "if-file-deleted",
      "files": [
        "src/**/*.ts",
        "src/**/*.mts",
        "tsconfig.json",
        "../../../../config/tsconfig/**",
        "../../../utils/stdlib/stdlib.d.ts",
        "../../../utils/ts-type-utils/ts-type-utils.d.mts"
      ],
      "output": [
        "esm/**",
        ".tsbuildinfo"
      ]
    },
    "z:fb:deploy:wireit": {
      "command": "yarn z:fb:deploy:impl",
      "dependencies": [
        "build"
      ]
    },
    "gi": {
      "command": "bash ../../../../scripts/bash/index_ts_generator.sh ./src --min-depth 1",
      "clean": false,
      "files": [
        "../../../../scripts/bash/index_ts_generator.sh",
        "src/**"
      ],
      "output": [
        "src/*/**/index.ts"
      ],
      "packageLocks": []
    },
    "lint": {
      "command": "yarn zz:cmd:eslint:src",
      "files": [
        "src/**/*.ts",
        "src/**/*.mts",
        "eslint.config.js",
        "package.json",
        "tsconfig.json",
        "../../../../package.json",
        "../../../../config/tsconfig/**",
        "../../../../config/eslint/**",
        "../../../utils/stdlib/stdlib.d.ts",
        "../../../utils/ts-type-utils/ts-type-utils.d.mts"
      ],
      "output": []
    },
    "lint:fix": {
      "command": "yarn zz:cmd:eslint:src --fix",
      "files": [
        "src/**/*.ts",
        "src/**/*.mts",
        "eslint.config.js",
        "package.json",
        "tsconfig.json",
        "../../../../package.json",
        "../../../../config/tsconfig/**",
        "../../../../config/eslint/**",
        "../../../utils/stdlib/stdlib.d.ts",
        "../../../utils/ts-type-utils/ts-type-utils.d.mts"
      ],
      "clean": false,
      "output": [
        "src/**/*.ts"
      ]
    },
    "type-check": {
      "command": "tsc --noEmit --project tsconfig.json",
      "files": [
        "src/**/*.ts",
        "src/**/*.mts",
        "tsconfig.json",
        "../../../../config/tsconfig/**",
        "../../../utils/stdlib/stdlib.d.ts",
        "../../../utils/ts-type-utils/ts-type-utils.d.mts"
      ],
      "output": []
    }
  }
}
