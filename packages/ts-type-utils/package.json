{
  "name": "@noshiro/ts-type-utils",
  "version": "1.1.0",
  "private": false,
  "license": "MIT",
  "author": "noshiro",
  "sideEffects": false,
  "type": "module",
  "exports": {
    ".": {
      "import": {
        "types": "./ts-type-utils.d.mts"
      }
    }
  },
  "types": "./ts-type-utils.d.mts",
  "scripts": {
    "build": "yarn zz:cmd:build:seq",
    "clean": "run-p clean:**",
    "clean:eslintcache": "rimraf .eslintcache",
    "clean:wireit": "rimraf .wireit/**",
    "fmt": "yarn zz:cmd:prettier .",
    "lint": "wireit",
    "lint:fix": "wireit",
    "pub": "yarn zz:cmd:publish",
    "tsc": "yarn type-check",
    "tscw": "yarn type-check --watch",
    "type-check": "tsc --noEmit",
    "zz:cmd:build:seq": "run-s zz:cmd:build:step1",
    "zz:cmd:build:step1": "ls src/*.d.mts | sed -E 's@(^.*$)@/// <reference path=\"./\\1\" />@g' > ./ts-type-utils.d.mts",
    "zz:cmd:eslint": "ESLINT_USE_FLAT_CONFIG=true eslint",
    "zz:cmd:eslint:src-and-test": "yarn zz:cmd:eslint \"./{src,test}/**\" --cache --cache-location ./.eslintcache",
    "zz:cmd:prettier": "prettier --cache --cache-strategy content --ignore-path ../../.prettierignore --write",
    "zz:cmd:publish": "yarn publish --no-git-tag-version --access=public"
  },
  "devDependencies": {
    "@noshiro/eslint-utils": "*",
    "@noshiro/mono-scripts": "*"
  },
  "wireit": {
    "lint": {
      "command": "yarn zz:cmd:eslint:src-and-test",
      "files": [
        "./src/**/*.{mjs,mts,js,ts,jsx,tsx,d.mts,d.ts}",
        "eslint.config.js",
        "package.json",
        "tsconfig.json",
        "../../package.json",
        "../../config/tsconfig/**"
      ],
      "output": []
    },
    "lint:fix": {
      "command": "yarn zz:cmd:eslint:src-and-test --fix",
      "files": [
        "./src/**/*.{mjs,mts,js,ts,jsx,tsx,d.mts,d.ts}",
        "eslint.config.js",
        "package.json",
        "tsconfig.json",
        "../../package.json",
        "../../config/tsconfig/**"
      ],
      "clean": false,
      "output": [
        "src/**/*.mts"
      ]
    }
  }
}
