settings:
  - scope: storage.modifier, storage.type, keyword.control, keyword.other, keyword.operator.expression, keyword.operator.new, keyword.generator.asterisk, punctuation.definition.template-expression
    settings: { vsclassificationtype: keyword }
  - scope: support.type, constant.language, variable.language, variable.language variable.parameter
    settings: { vsclassificationtype: keyword }

  - scope: string, punctuation.definition.string, constant.character
    settings: { vsclassificationtype: string }
  - scope: keyword.control.anchor.regexp, keyword.other.back-reference.regexp, keyword.operator.quantifier.regexp, keyword.operator.or.regexp, keyword.operator.negation.regexp, punctuation.definition.group.regexp, punctuation.definition.group.assertion.regexp, meta.assertion.look-ahead.regexp, meta.assertion.negative-look-ahead.regexp, punctuation.definition.group.capture.regexp, punctuation.definition.character-class.regexp, constant.other.character-class.range.regexp
    settings: { vsclassificationtype: string }

  - scope: constant.numeric, meta.delimiter.decimal.period.ts, constant.language.nan.ts, constant.language.infinity.ts
    settings: { vsclassificationtype: number }

  - scope: keyword.operator, storage.type.function.arrow.ts
    settings: { vsclassificationtype: operator }

  - scope: meta.brace.angle.ts, meta.brace.round.ts, meta.brace.square.ts, punctuation, constant.language.import-export-all.ts, meta.delimiter.object.comma.ts
    settings: { vsclassificationtype: punctuation }

  - scope: comment, comment.block.ts, comment.line.double-slash.ts, punctuation.definition.comment.ts
    settings: { vsclassificationtype: comment }
  - scope: comment.block.documentation.ts, other.meta.jsdoc, other.description.jsdoc
    settings: { vsclassificationtype: comment }
  - scope: entity.name.type.instance.jsdoc, variable.other.jsdoc
    settings: { vsclassificationtype: identifier }
  - scope: storage.type.class.jsdoc
    settings: { vsclassificationtype: xml doc comment - name }

  - scope: entity.name.type.class.ts
    settings: { vsclassificationtype: class name }

  - scope: entity.name.type.module.ts
    settings: { vsclassificationtype: module name }

  - scope: entity.name.type.enum.ts
    settings: { vsclassificationtype: enum name }

  - scope: entity.name.function, entity.name.type, meta.template.expression.ts, variable, entity.other.inherited-class.ts
    settings: { vsclassificationtype: identifier }

  - scope: constant.language.undefined.ts, variable.language.arguments.ts, support.type.object
    settings: { vsclassificationtype: identifier }

  - scope: entity.name.tag
    settings: { vsclassificationtype: HTML Element Name }

  - scope: entity.other.attribute-name
    settings: { vsclassificationtype: HTML Attribute Name }

  - scope: meta.tag string.quoted, meta.tag string.quoted punctuation.definition.string, meta.tag string.quoted constant.character.escape
    settings: { vsclassificationtype: HTML Attribute Value }
